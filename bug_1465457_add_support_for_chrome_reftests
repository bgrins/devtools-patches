# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1550706986 28800
#      Wed Feb 20 15:56:26 2019 -0800
# Node ID b1b785ce48d12028efacae32f65f5ef89549ac0a
# Parent  bf3951daded0b4fefd0fc81ee22ce5d536df2099
Bug 1465457 - Add support for chrome reftests

Differential Revision: https://phabricator.services.mozilla.com/D20585

diff --git a/layout/tools/reftest/manifest.jsm b/layout/tools/reftest/manifest.jsm
--- a/layout/tools/reftest/manifest.jsm
+++ b/layout/tools/reftest/manifest.jsm
@@ -639,28 +639,29 @@ function ServeTestBase(aURL, depth) {
     return testbase;
 }
 
 function CreateUrls(test) {
     let secMan = Cc[NS_SCRIPTSECURITYMANAGER_CONTRACTID]
                     .getService(Ci.nsIScriptSecurityManager);
 
     let manifestURL = g.ioService.newURI(test.manifest);
-    let principal = secMan.createCodebasePrincipal(manifestURL, {});
 
     let testbase = manifestURL;
     if (test.runHttp)
         testbase = ServeTestBase(manifestURL, test.httpDepth)
 
     function FileToURI(file)
     {
         if (file === null)
             return file;
 
         var testURI = g.ioService.newURI(file, null, testbase);
+        let principal = testURI.scheme == "chrome" ? secMan.getSystemPrincipal() :
+                                                     secMan.createCodebasePrincipal(manifestURL, {});
         secMan.checkLoadURIWithPrincipal(principal, testURI,
                                          Ci.nsIScriptSecurityManager.DISALLOW_SCRIPT);
         return testURI;
     }
 
     let files = [test.url1, test.url2];
     [test.url1, test.url2] = files.map(FileToURI);
 
diff --git a/layout/tools/reftest/reftest-content.js b/layout/tools/reftest/reftest-content.js
--- a/layout/tools/reftest/reftest-content.js
+++ b/layout/tools/reftest/reftest-content.js
@@ -15,16 +15,19 @@ const IO_SERVICE_CONTRACTID = "@mozilla.
 
 // "<!--CLEAR-->"
 const BLANK_URL_FOR_CLEARING = "data:text/html;charset=UTF-8,%3C%21%2D%2DCLEAR%2D%2D%3E";
 
 Cu.import("resource://gre/modules/Timer.jsm");
 Cu.import("resource://reftest/AsyncSpellCheckTestHelper.jsm");
 Cu.import("resource://gre/modules/Services.jsm");
 
+// Load that rely on chrome Custom Elements in chrome documents:
+ChromeUtils.import("resource://gre/modules/CustomElementsListener.jsm", null);
+
 var gBrowserIsRemote;
 var gIsWebRenderEnabled;
 var gHaveCanvasSnapshot = false;
 // Plugin layers can be updated asynchronously, so to make sure that all
 // layer surfaces have the right content, we need to listen for explicit
 // "MozPaintWait" and "MozPaintWaitFinished" events that signal when it's OK
 // to take snapshots. We cannot take a snapshot while the number of
 // "MozPaintWait" events fired exceeds the number of "MozPaintWaitFinished"
diff --git a/layout/tools/reftest/reftest/__init__.py b/layout/tools/reftest/reftest/__init__.py
--- a/layout/tools/reftest/reftest/__init__.py
+++ b/layout/tools/reftest/reftest/__init__.py
@@ -116,17 +116,17 @@ class ReftestManifest(object):
                     tests.append(items[i+1])
                     break
 
                 if item == '==' or item == '!=' or item == 'print':
                     tests.extend(items[i+1:i+3])
                     break
 
             for f in tests:
-                # We can't package about: or data: URIs.
+                # We can't package about:, data:, or chrome: URIs.
                 # Discarding data isn't correct for a parser. But retaining
                 # all data isn't currently a requirement.
                 if RE_PROTOCOL.match(f):
                     continue
 
                 test = os.path.normpath(os.path.join(mdir, urlprefix + f))
                 self.files.add(test)
                 self.dirs.add(os.path.dirname(test))
