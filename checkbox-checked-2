# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  07deabd0ae95061e7e045e9f54b82f4091b86046

diff --git a/toolkit/content/widgets/popupnotification.js b/toolkit/content/widgets/popupnotification.js
--- a/toolkit/content/widgets/popupnotification.js
+++ b/toolkit/content/widgets/popupnotification.js
@@ -9,17 +9,16 @@
 {
 class MozPopupNotification extends MozXULElement {
   static get observedAttributes() {
     return [
       "buttonaccesskey",
       "buttoncommand",
       "buttonhighlight",
       "buttonlabel",
-      "checkboxchecked",
       "checkboxcommand",
       "checkboxhidden",
       "checkboxlabel",
       "closebuttoncommand",
       "closebuttonhidden",
       "dropmarkerhidden",
       "dropmarkerpopupshown",
       "endlabel",
@@ -93,17 +92,17 @@ class MozPopupNotification extends MozXU
               <!-- These need to be on the same line to avoid creating
                   whitespace between them (whitespace is added in the
                   localization file, if necessary). -->
               <description class="popup-notification-description" inherits="popupid"><html:span inherits="text=label,popupid"></html:span><html:b inherits="text=name,popupid"></html:b><html:span inherits="text=endlabel,popupid"></html:span><html:b inherits="text=secondname,popupid"></html:b><html:span inherits="text=secondendlabel,popupid"></html:span></description>
             </vbox>
             <toolbarbutton class="messageCloseButton close-icon popup-notification-closebutton tabbable" inherits="oncommand=closebuttoncommand,hidden=closebuttonhidden" tooltiptext="&closeNotification.tooltip;"></toolbarbutton>
           </hbox>
           <label class="text-link popup-notification-learnmore-link" inherits="onclick=learnmoreclick,href=learnmoreurl">&learnMore;</label>
-          <checkbox class="popup-notification-checkbox" inherits="hidden=checkboxhidden,checked=checkboxchecked,label=checkboxlabel,oncommand=checkboxcommand"></checkbox>
+          <checkbox class="popup-notification-checkbox" inherits="hidden=checkboxhidden,label=checkboxlabel,oncommand=checkboxcommand"></checkbox>
           <description class="popup-notification-warning" inherits="hidden=warninghidden,text=warninglabel"></description>
         </vbox>
       </hbox>
       <hbox class="popup-notification-footer-container"></hbox>
       <hbox class="popup-notification-button-container panel-footer">
         <button class="popup-notification-button popup-notification-secondary-button" inherits="oncommand=secondarybuttoncommand,label=secondarybuttonlabel,accesskey=secondarybuttonaccesskey,hidden=secondarybuttonhidden"></button>
         <toolbarseparator inherits="hidden=dropmarkerhidden"></toolbarseparator>
         <button type="menu" class="popup-notification-button popup-notification-dropmarker" aria-label="&moreActionsButton.accessibleLabel;" inherits="onpopupshown=dropmarkerpopupshown,hidden=dropmarkerhidden">
diff --git a/toolkit/modules/PopupNotifications.jsm b/toolkit/modules/PopupNotifications.jsm
--- a/toolkit/modules/PopupNotifications.jsm
+++ b/toolkit/modules/PopupNotifications.jsm
@@ -922,17 +922,16 @@ PopupNotifications.prototype = {
         popupnotification.setAttribute("dropmarkerhidden", "true");
       }
 
       let checkbox = n.options.checkbox;
       if (checkbox && checkbox.label) {
         let checked = n._checkboxChecked != null ? n._checkboxChecked : !!checkbox.checked;
 
         popupnotification.setAttribute("checkboxhidden", "false");
-        popupnotification.setAttribute("checkboxchecked", checked);
         popupnotification.setAttribute("checkboxlabel", checkbox.label);
 
         popupnotification.setAttribute("checkboxcommand", "PopupNotifications._onCheckboxCommand(event);");
 
         if (checked) {
           this._setNotificationUIState(popupnotification, checkbox.checkedState);
         } else {
           this._setNotificationUIState(popupnotification, checkbox.uncheckedState);
@@ -942,16 +941,20 @@ PopupNotifications.prototype = {
         popupnotification.setAttribute("warninghidden", "true");
       }
 
       this.panel.appendChild(popupnotification);
 
       // The popupnotification may be hidden if we got it from the chrome
       // document rather than creating it ad hoc.
       popupnotification.show();
+      if (checkbox && checkbox.label) {
+        let checked = n._checkboxChecked != null ? n._checkboxChecked : !!checkbox.checked;
+        popupnotification.checkbox.checked = checked;
+      }
 
       popupnotification.menupopup.textContent = "";
       popupnotification.menupopup.append(...menuitems);
     }, this);
   },
 
   _setNotificationUIState(notification, state = {}) {
     if (state.disableMainAction ||
