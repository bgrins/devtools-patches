# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  689dfd954b59b917f97c6a7780b07e9602b4dcb9

diff --git a/toolkit/content/widgets/findbar.js b/toolkit/content/widgets/findbar.js
--- a/toolkit/content/widgets/findbar.js
+++ b/toolkit/content/widgets/findbar.js
@@ -8,17 +8,28 @@
 // Wrap to prevent accidentally leaking to window scope:
 {
 
 ChromeUtils.import("resource://gre/modules/Services.jsm");
 
 class MozFindbar extends XULElement {
   constructor() {
     super();
-    this.destroyOnUnload = this.destroyOnUnload.bind(this);
+    this.destroy = this.destroy.bind(this);
+
+    // We have to guard against `this.close` being |null| due to an unknown
+    // issue, which is tracked in bug 957999.
+    this.addEventListener("keypress", (event) => {
+      if (event.keyCode == event.DOM_VK_ESCAPE) {
+        if (this.close)
+          this.close();
+        event.preventDefault();
+      }
+    }, true);
+
     this.content = MozXULElement.parseXULToFragment(`
       <hbox anonid="findbar-container" class="findbar-container" flex="1" align="center">
         <hbox anonid="findbar-textbox-wrapper" align="stretch">
           <textbox anonid="findbar-textbox" class="findbar-textbox findbar-find-fast" />
           <toolbarbutton anonid="find-previous" class="findbar-find-previous tabbable" data-l10n-attrs="tooltiptext" data-l10n-id="findbar-previous" oncommand="onFindAgainCommand(true);" disabled="true" />
           <toolbarbutton anonid="find-next" class="findbar-find-next tabbable" data-l10n-id="findbar-next" oncommand="onFindAgainCommand(false);" disabled="true" />
         </hbox>
         <toolbarbutton anonid="highlight" class="findbar-highlight findbar-button tabbable" data-l10n-id="findbar-highlight-all" oncommand="toggleHighlight(this.checked);" type="checkbox" />
@@ -29,22 +40,16 @@ class MozFindbar extends XULElement {
         <label anonid="found-matches" class="findbar-find-fast found-matches" hidden="true" />
         <image anonid="find-status-icon" class="findbar-find-fast find-status-icon" />
         <description anonid="find-status" control="findbar-textbox" class="findbar-find-fast findbar-find-status" />
       </hbox>
       <toolbarbutton anonid="find-closebutton" class="findbar-closebutton close-icon" data-l10n-id="findbar-find-button-close" oncommand="close();" />
     `);
   }
 
-  destroyOnUnload(event) {
-    if (event.originalTarget == document) {
-      this.destroy();
-    }
-  }
-
   connectedCallback() {
     this.appendChild(document.importNode(this.content, true));
 
     this.hidden = true;
 
     /**
      * Please keep in sync with toolkit/modules/FindBarChild.jsm
      */
@@ -170,27 +175,17 @@ class MozFindbar extends XULElement {
 
     // Make sure the FAYT keypress listener is attached by initializing the
     // browser property
     if (this.getAttribute("browserid")) {
       // eslint-disable-next-line no-self-assign
       setTimeout(function(aSelf) { aSelf.browser = aSelf.browser; }, 0, this);
     }
 
-    // We have to guard against `this.close` being |null| due to an unknown
-    // issue, which is tracked in bug 957999.
-    this.addEventListener("keypress", (event) => {
-      if (event.keyCode == event.DOM_VK_ESCAPE) {
-        if (this.close)
-          this.close();
-        event.preventDefault();
-      }
-    }, true);
-
-    window.addEventListener("unload", this.destroyOnUnload);
+    window.addEventListener("unload", this.destroy);
   }
 
   set _findMode(val) {
     this.__findMode = val;
     this._updateBrowserWithState();
     return val;
   }
 
@@ -282,17 +277,17 @@ class MozFindbar extends XULElement {
   /**
    * This is necessary because the destructor isn't called when
    * we are removed from a document that is not destroyed. This
    * needs to be explicitly called in this case
    */
   destroy() {
     if (this._destroyed)
       return;
-    window.removeEventListener("unload", this.destroyOnUnload);
+    window.removeEventListener("unload", this.destroy);
     this._destroyed = true;
 
     if (this.browser && this.browser.finder)
       this.browser.finder.destroy();
 
     this.browser = null;
 
     let prefsvc = this._prefsvc;
