# HG changeset patch
# Parent 075a42c831f60a8fd152f461c696aa33b9e68e16
# User Brian Grinstead <bgrinstead@mozilla.com>
Bug 938616 - webconsole UI updates while in split mode with other panels

diff --git a/browser/app/profile/firefox.js b/browser/app/profile/firefox.js
--- a/browser/app/profile/firefox.js
+++ b/browser/app/profile/firefox.js
@@ -1092,17 +1092,17 @@ pref("devtools.appmanager.enabled", true
 pref("devtools.appmanager.lastTab", "help");
 pref("devtools.appmanager.manifestEditor.enabled", false);
 
 // Toolbox preferences
 pref("devtools.toolbox.footer.height", 250);
 pref("devtools.toolbox.sidebar.width", 500);
 pref("devtools.toolbox.host", "bottom");
 pref("devtools.toolbox.selectedTool", "webconsole");
-pref("devtools.toolbox.toolbarSpec", '["paintflashing toggle","tilt toggle","scratchpad","resize toggle"]');
+pref("devtools.toolbox.toolbarSpec", '["splitconsole toggle", "paintflashing toggle","tilt toggle","scratchpad","resize toggle"]');
 pref("devtools.toolbox.sideEnabled", true);
 pref("devtools.toolbox.zoomValue", "1");
 
 // Enable the Inspector
 pref("devtools.inspector.enabled", true);
 pref("devtools.inspector.activeSidebar", "ruleview");
 pref("devtools.inspector.markupPreview", false);
 pref("devtools.inspector.remote", false);
diff --git a/browser/devtools/commandline/BuiltinCommands.jsm b/browser/devtools/commandline/BuiltinCommands.jsm
--- a/browser/devtools/commandline/BuiltinCommands.jsm
+++ b/browser/devtools/commandline/BuiltinCommands.jsm
@@ -1989,16 +1989,17 @@ gcli.addCommand({
 
   gcli.addCommand({
     name: 'paintflashing toggle',
     hidden: true,
     buttonId: "command-button-paintflashing",
     buttonClass: "command-button",
     state: {
       isChecked: function(aTarget) {
+        console.log("Checking paint flashing checked")
         if (aTarget.isLocalTab) {
           let window = aTarget.tab.linkedBrowser.contentWindow;
           let wUtils = window.QueryInterface(Ci.nsIInterfaceRequestor).
                               getInterface(Ci.nsIDOMWindowUtils);
           return wUtils.paintFlashing;
         } else {
           throw new Error("Unsupported target");
         }
@@ -2267,8 +2268,86 @@ gcli.addCommand({
     manual: gcli.lookup("mediaEmulateManual"),
     exec: function(args, context) {
       let markupDocumentViewer = context.environment.chromeWindow
                                         .gBrowser.markupDocumentViewer;
       markupDocumentViewer.stopEmulatingMedium();
     }
   });
 }(this));
+
+/* CmdSplitConsole ------------------------------------------------------- */
+
+(function(module) {
+  /**
+   * 'splitconsole' command
+   */
+  gcli.addCommand({
+    name: 'splitconsole',
+    description: gcli.lookup('paintflashingDesc')
+  });
+
+  gcli.addCommand({
+    name: 'splitconsole on',
+    description: gcli.lookup('paintflashingOnDesc'),
+    manual: gcli.lookup('paintflashingManual'),
+    exec: function(args, context) {
+
+    }
+  });
+
+  gcli.addCommand({
+    name: 'splitconsole off',
+    description: gcli.lookup('paintflashingOffDesc'),
+    manual: gcli.lookup('paintflashingManual'),
+    exec: function(args, context) {
+
+    }
+  });
+
+  gcli.addCommand({
+    name: 'splitconsole toggle',
+    buttonId: "command-button-console",
+    buttonClass: "command-button",
+    state: {
+      isChecked: function(aTarget) {
+        let toolbox = gDevTools.getToolbox(aTarget);
+        return toolbox && toolbox._splitConsole
+      },
+      onChange: function(aTarget, aChangeHandler) {
+        eventEmitter.on("changed", aChangeHandler);
+      },
+      offChange: function(aTarget, aChangeHandler) {
+        eventEmitter.off("changed", aChangeHandler);
+      },
+    },
+    tooltipText: gcli.lookup("paintflashingTooltip"),
+    description: gcli.lookup('paintflashingToggleDesc'),
+    manual: gcli.lookup('paintflashingManual'),
+    exec: function(args, context) {
+      let gBrowser = context.environment.chromeDocument.defaultView.gBrowser;
+      let target = devtools.TargetFactory.forTab(gBrowser.selectedTab);
+      let toolbox = gDevTools.getToolbox(target);
+
+      if (!toolbox) {
+        gDevTools.showToolbox(target, "inspector").then((toolbox) => {
+          toolbox.toggleSplitConsole();
+        });
+      } else {
+        toolbox.toggleSplitConsole();
+      }
+      onPaintFlashingChanged(context);
+    }
+  });
+
+  let eventEmitter = new EventEmitter();
+  function onPaintFlashingChanged(context) {
+    var gBrowser = context.environment.chromeDocument.defaultView.gBrowser;
+    var tab = gBrowser.selectedTab;
+    eventEmitter.emit("changed", tab);
+    function fireChange() {
+      eventEmitter.emit("changed", tab);
+    }
+    var target = devtools.TargetFactory.forTab(tab);
+    target.off("navigate", fireChange);
+    target.once("navigate", fireChange);
+  }
+}(this));
diff --git a/browser/themes/osx/devtools/command-console.png b/browser/themes/osx/devtools/command-console.png
new file mode 100644
index 0000000000000000000000000000000000000000..c7abe05eb1db354f1d2a3c812b56baaef88f96a1
GIT binary patch
literal 715
zc$@*t0yO=JP)<h;3K|Lk000e1NJLTq002M$000mO1^@s6rssJn0000PbVXQnQ*UN;
zcVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBU!ZAnByRCwBA`Tzev!%zn5p))Ab&jKRY
zx%tR8;OEy*1FB!as|!Sl0kJNWCKkK`;>#>B-p3E`=a6bSzkpy0lKyjK=r=;r|A`F!
zu#nT`Hdo(6s{XGhZ@RD`@&5n~EG1Sm(81kkLVtn!ok-BX4^8MFP`@k*`X3{4#lC#~
z&hYc_k#pZaJibdvFQ<U4GP|vf5hG9^asd1T;?E=m;6E&UO7#CFQU70L4&%Rn3><=T
zJwUvi2)&UE|NbolF_`c;h@1dmpfCU!$PEC7za(mhsvkZ9@Q+08|1bl9G6ztu{||}!
zQPea3B~3d_J<FhpK`I0Qutnocq+VyJdXxb83oKdt$aMfHK!E!9QxJfEfco!{Z9gzi
z^Qns@16j$$Xa?09=qUhHjWvT9FP=XOC0Lbka;jpf1_MBhmoHva64KAX!ES=?A)tOU
za0}(-i(W$d+1c4`(Nn;iv)69^`T6-Rw~~?`A^l8T96T6>ATS1MKvj{1q||aoMyCJx
zFt$PvsDCX;zqo`%GZPczKYSQl76R%&0n#rfE|Jf~#Pk;*##RW5>Z_=82`jgMyZ2xl
zGc(g)d>C6H2x^G5KpPpMPzMsi=na`*sQz*w^`8L#hb0ABK=pSKVK+uK`1<0Vn?RP6
zsE(FB!(X5hy!bC>Aqcd%0%jaAiIQ9m0`;$ivj4NOv5{Pe0`(t;$+5Dsl2VAi0yTuh
zv=r1q{i7d0elW1GGvhBn{(!VIzG6XYSNBlTs{-neq)@*-1==saIJ#p2GY20x(N)lo
xPhUkeJuf4tfX@t+fq~Tj3h0?cax?-27yyz|P3aVTJ{$l5002ovPDHLkV1mY5I)(rM

diff --git a/browser/themes/osx/devtools/toolbox.css b/browser/themes/osx/devtools/toolbox.css
--- a/browser/themes/osx/devtools/toolbox.css
+++ b/browser/themes/osx/devtools/toolbox.css
@@ -92,16 +92,32 @@
 #command-button-tilt:hover:active {
   -moz-image-region: rect(0px, 48px, 16px, 32px);
 }
 
 #command-button-tilt[checked=true] {
   -moz-image-region: rect(0px, 64px, 16px, 48px);
 }
 
+#command-button-console {
+  list-style-image: url("chrome://browser/skin/devtools/command-console.png");
+  -moz-image-region: rect(0px, 16px, 16px, 0px);
+}
+#command-button-console:hover {
+  -moz-image-region: rect(0px, 32px, 16px, 16px);
+}
+
+#command-button-console:hover:active {
+  -moz-image-region: rect(0px, 48px, 16px, 32px);
+}
+
+#command-button-console[checked=true] {
+  -moz-image-region: rect(0px, 64px, 16px, 48px);
+}
+
 #command-button-scratchpad {
   list-style-image: url("chrome://browser/skin/devtools/command-scratchpad.png");
   -moz-image-region: rect(0px, 16px, 16px, 0px);
 }
 
 #command-button-scratchpad:hover {
   -moz-image-region: rect(0px, 32px, 16px, 16px);
 }
diff --git a/browser/themes/osx/jar.mn b/browser/themes/osx/jar.mn
--- a/browser/themes/osx/jar.mn
+++ b/browser/themes/osx/jar.mn
@@ -253,16 +253,17 @@ browser.jar:
   skin/classic/browser/devtools/light-theme.css             (../shared/devtools/light-theme.css)
   skin/classic/browser/devtools/controls.png                (../shared/devtools/controls.png)
 * skin/classic/browser/devtools/widgets.css                 (devtools/widgets.css)
   skin/classic/browser/devtools/commandline-icon.png        (devtools/commandline-icon.png)
   skin/classic/browser/devtools/command-paintflashing.png   (devtools/command-paintflashing.png)
   skin/classic/browser/devtools/command-responsivemode.png  (devtools/command-responsivemode.png)
   skin/classic/browser/devtools/command-scratchpad.png      (devtools/command-scratchpad.png)
   skin/classic/browser/devtools/command-tilt.png            (devtools/command-tilt.png)
+  skin/classic/browser/devtools/command-console.png         (devtools/command-console.png)
   skin/classic/browser/devtools/alerticon-warning.png       (devtools/alerticon-warning.png)
   skin/classic/browser/devtools/ruleview.css                (devtools/ruleview.css)
   skin/classic/browser/devtools/commandline.css             (devtools/commandline.css)
   skin/classic/browser/devtools/markup-view.css             (../shared/devtools/markup-view.css)
   skin/classic/browser/devtools/editor-error.png             (devtools/editor-error.png)
   skin/classic/browser/devtools/editor-breakpoint.png        (devtools/editor-breakpoint.png)
   skin/classic/browser/devtools/editor-debug-location.png    (devtools/editor-debug-location.png)
 * skin/classic/browser/devtools/webconsole.css                  (devtools/webconsole.css)
