# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  34b343ca6c2a44e1fd4402a0d7eb247cc2c6df2e
Bug 1549931 -

diff --git a/toolkit/content/widgets/tree.js b/toolkit/content/widgets/tree.js
--- a/toolkit/content/widgets/tree.js
+++ b/toolkit/content/widgets/tree.js
@@ -173,23 +173,24 @@
       this.addEventListener("command", (event) => {
         if (event.originalTarget == this) {
           var popup = this.querySelector("[anonid=\"popup\"]");
           this.buildPopup(popup);
           popup.openPopup(this, "after_end");
         } else {
           var tree = this.parentNode.parentNode;
           tree.stopEditing(true);
+          var menuitemTarget = event.originalTarget.closest("menuitem");
           var menuitem = this.querySelector("[anonid=\"menuitem\"]");
-          if (event.originalTarget == menuitem) {
+          if (menuitemTarget == menuitem) {
             tree.columns.restoreNaturalOrder();
             this.removeAttribute("ordinal");
             tree._ensureColumnOrder();
           } else {
-            var colindex = event.originalTarget.getAttribute("colindex");
+            var colindex = menuitemTarget.getAttribute("colindex");
             var column = tree.columns[colindex];
             if (column) {
               var element = column.element;
               if (element.getAttribute("hidden") == "true")
                 element.setAttribute("hidden", "false");
               else
                 element.setAttribute("hidden", "true");
             }
@@ -236,17 +237,17 @@
             popupChild.setAttribute("checked", "true");
           if (currCol.primary)
             popupChild.setAttribute("disabled", "true");
           aPopup.insertBefore(popupChild, refChild);
         }
       }
 
       var hidden = !tree.enableColumnDrag;
-      aPopup.querySelectorAll(":not([colindex])").forEach((e) => { e.hidden = hidden; });
+      aPopup.querySelectorAll(":scope > :not([colindex])").forEach((e) => { e.hidden = hidden; });
     }
   }
 
   customElements.define("treecolpicker", MozTreecolPicker);
 
   class MozTreecol extends MozElements.BaseControl {
     static get inheritedAttributes() {
       return {
