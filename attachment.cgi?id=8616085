# vim: se ft=diff :
# HG changeset patch
# User Gabriel Luong <gabriel.luong@gmail.com>
# Date 2015-04-23 21:35
# Parent  ec9aa7541e4a28185074d3376da5d5e46f45e81c
Bug 987365 - Add pseudo-class lock options to rule view r=bgrins

diff --git a/browser/devtools/fontinspector/font-inspector.css b/browser/devtools/fontinspector/font-inspector.css
--- a/browser/devtools/fontinspector/font-inspector.css
+++ b/browser/devtools/fontinspector/font-inspector.css
@@ -20,31 +20,31 @@
   content: "(";
 }
 
 .font-format::after {
   content: ")";
 }
 
 .preview-input-toolbar {
-  display: -moz-box;
+  display: flex;
   width: 100%;
 }
 
 .font-preview-container {
   overflow-x: auto;
 }
 
 #preview-text-input {
   font: inherit;
   margin-top: 1px;
   margin-bottom: 1px;
   padding-top: 0;
   padding-bottom: 0;
-  -moz-box-flex: 1;
+  flex: 1;
 }
 
 :root {
   height: 100%;
 }
 
 #root {
   overflow: auto;
diff --git a/browser/devtools/styleinspector/cssruleview.xhtml b/browser/devtools/styleinspector/cssruleview.xhtml
--- a/browser/devtools/styleinspector/cssruleview.xhtml
+++ b/browser/devtools/styleinspector/cssruleview.xhtml
@@ -33,25 +33,31 @@
           this.ruleview.destroy();
         }
       }
     </script>
   </head>
   <body>
 
     <div id="root" class="devtools-monospace">
-      <div class="devtools-toolbar">
+      <div id="ruleview-toolbar" class="devtools-toolbar">
         <div class="devtools-searchbox">
           <input id="ruleview-searchbox"
                  class="devtools-searchinput devtools-rule-searchbox"
                  type="search" placeholder="&filterStylesPlaceholder;"/>
           <button id="ruleview-searchinput-clear" class="devtools-searchinput-clear"></button>
         </div>
         <!-- TODO : Bug 1165122 : Show this button by default -->
         <button hidden="true" id="ruleview-add-rule-button" title="&addRuleButtonTooltip;" class="devtools-button"></button>
+        <button id="pseudo-class-panel-toggle" class="devtools-button"></button>
+      </div>
+      <div id="pseudo-class-panel" class="devtools-toolbar" hidden="true">
+        <label><input id="pseudo-hover-toggle" type="checkbox" value=":hover" />:hover</label>
+        <label><input id="pseudo-active-toggle" type="checkbox" value=":active" />:active</label>
+        <label><input id="pseudo-focus-toggle" type="checkbox" value=":focus" />:focus</label>
       </div>
     </div>
 
     <div id="ruleview-container" class="ruleview devtools-monospace">
     </div>
 
   </body>
 </html>
diff --git a/browser/devtools/styleinspector/rule-view.js b/browser/devtools/styleinspector/rule-view.js
--- a/browser/devtools/styleinspector/rule-view.js
+++ b/browser/devtools/styleinspector/rule-view.js
@@ -1125,31 +1125,42 @@
   this._onCopyColor = this._onCopyColor.bind(this);
   this._onCopyImageDataUrl = this._onCopyImageDataUrl.bind(this);
   this._onToggleOrigSources = this._onToggleOrigSources.bind(this);
   this._onShowMdnDocs = this._onShowMdnDocs.bind(this);
   this._onFilterStyles = this._onFilterStyles.bind(this);
   this._onFilterKeyPress = this._onFilterKeyPress.bind(this);
   this._onClearSearch = this._onClearSearch.bind(this);
   this._onFilterTextboxContextMenu = this._onFilterTextboxContextMenu.bind(this);
+  this._onTogglePseudoClassPanel = this._onTogglePseudoClassPanel.bind(this);
+  this._onTogglePseudoClass = this._onTogglePseudoClass.bind(this);
 
   this.element = this.doc.getElementById("ruleview-container");
   this.addRuleButton = this.doc.getElementById("ruleview-add-rule-button");
   this.searchField = this.doc.getElementById("ruleview-searchbox");
   this.searchClearButton = this.doc.getElementById("ruleview-searchinput-clear");
+  this.pseudoClassPanel = this.doc.getElementById("pseudo-class-panel");
+  this.pseudoClassToggle = this.doc.getElementById("pseudo-class-panel-toggle");
+  this.hoverCheckbox = this.doc.getElementById("pseudo-hover-toggle");
+  this.activeCheckbox = this.doc.getElementById("pseudo-active-toggle");
+  this.focusCheckbox = this.doc.getElementById("pseudo-focus-toggle");
 
   this.searchClearButton.hidden = true;
 
   this.element.addEventListener("copy", this._onCopy);
   this.element.addEventListener("contextmenu", this._onContextMenu);
   this.addRuleButton.addEventListener("click", this._onAddRule);
   this.searchField.addEventListener("input", this._onFilterStyles);
   this.searchField.addEventListener("keypress", this._onFilterKeyPress);
   this.searchField.addEventListener("contextmenu", this._onFilterTextboxContextMenu);
   this.searchClearButton.addEventListener("click", this._onClearSearch);
+  this.pseudoClassToggle.addEventListener("click", this._onTogglePseudoClassPanel);
+  this.hoverCheckbox.addEventListener("click", this._onTogglePseudoClass);
+  this.activeCheckbox.addEventListener("click", this._onTogglePseudoClass);
+  this.focusCheckbox.addEventListener("click", this._onTogglePseudoClass);
 
   this._handlePrefChange = this._handlePrefChange.bind(this);
   this._onSourcePrefChanged = this._onSourcePrefChanged.bind(this);
 
   this._prefObserver = new PrefObserver("devtools.");
   this._prefObserver.on(PREF_ORIG_SOURCES, this._onSourcePrefChanged);
   this._prefObserver.on(PREF_UA_STYLES, this._handlePrefChange);
   this._prefObserver.on(PREF_DEFAULT_COLOR_UNIT, this._handlePrefChange);
@@ -1818,18 +1829,29 @@
     this.element.removeEventListener("copy", this._onCopy);
     this.element.removeEventListener("contextmenu", this._onContextMenu);
     this.addRuleButton.removeEventListener("click", this._onAddRule);
     this.searchField.removeEventListener("input", this._onFilterStyles);
     this.searchField.removeEventListener("keypress", this._onFilterKeyPress);
     this.searchField.removeEventListener("contextmenu",
       this._onFilterTextboxContextMenu);
     this.searchClearButton.removeEventListener("click", this._onClearSearch);
+    this.pseudoClassToggle.removeEventListener("click",
+      this._onTogglePseudoClassPanel);
+    this.hoverCheckbox.removeEventListener("click", this._onTogglePseudoClass);
+    this.activeCheckbox.removeEventListener("click", this._onTogglePseudoClass);
+    this.focusCheckbox.removeEventListener("click", this._onTogglePseudoClass);
+
     this.searchField = null;
     this.searchClearButton = null;
+    this.pseudoClassPanel = null;
+    this.pseudoClassToggle = null;
+    this.hoverCheckbox = null;
+    this.activeCheckbox = null;
+    this.focusCheckbox = null;
 
     if (this.element.parentNode) {
       this.element.parentNode.removeChild(this.element);
     }
 
     if (this._elementStyle) {
       this._elementStyle.destroy();
     }
@@ -1844,16 +1866,17 @@
    *        The node whose style rules we'll inspect.
    */
   selectElement: function(aElement) {
     if (this._viewedElement === aElement) {
       return promise.resolve(undefined);
     }
 
     this.clear();
+    this.clearPseudoClassPanel();
 
     this._viewedElement = aElement;
     if (!this._viewedElement) {
       this._showEmpty();
       return promise.resolve(undefined);
     }
 
     this._elementStyle = new ElementStyle(aElement, this.store,
@@ -1889,38 +1912,80 @@
       }
     }
 
     return promise.all(promises).then(() => {
       return this._populate(true);
     });
   },
 
+  /**
+   * Clear the pseudo class options panel by removing the checked and disabled
+   * attributes for each checkbox.
+   */
+  clearPseudoClassPanel: function() {
+    this.hoverCheckbox.checked = this.hoverCheckbox.disabled = false;
+    this.activeCheckbox.checked = this.activeCheckbox.disabled = false;
+    this.focusCheckbox.checked = this.focusCheckbox.disabled = false;
+  },
+
+  /**
+   * Update the pseudo class options for the currently highlighted element.
+   */
+  refreshPseudoClassPanel: function() {
+    if (!this.inspector.selection.isElementNode()) {
+      return;
+    }
+
+    for (let pseudoClassLock of this._elementStyle.element.pseudoClassLocks) {
+      switch (pseudoClassLock) {
+        case ":hover": {
+          this.hoverCheckbox.checked = true;
+          break;
+        }
+        case ":active": {
+          this.activeCheckbox.checked = true;
+          break;
+        }
+        case ":focus": {
+          this.focusCheckbox.checked = true;
+          break;
+        }
+      }
+    }
+  },
+
   _populate: function(clearRules = false) {
     let elementStyle = this._elementStyle;
     return this._elementStyle.populate().then(() => {
       if (this._elementStyle != elementStyle || this.isDestroyed) {
         return;
       }
 
       if (clearRules) {
         this._clearRules();
       }
       this._createEditors();
 
+      this.refreshPseudoClassPanel();
+
       // Notify anyone that cares that we refreshed.
       this.emit("ruleview-refreshed");
       return undefined;
     }).then(null, promiseWarn);
   },
 
   /**
    * Show the user that the rule view has no node selected.
    */
   _showEmpty: function() {
+    this.hoverCheckbox.disabled = true;
+    this.activeCheckbox.disabled = true;
+    this.focusCheckbox.disabled = true;
+
     if (this.doc.getElementById("noResults") > 0) {
       return;
     }
 
     createChild(this.element, "div", {
       id: "noResults",
       textContent: CssLogic.l10n("rule.empty")
     });
@@ -2284,17 +2349,39 @@
       element.classList.remove("ruleview-highlight");
     }
 
     for (let editor of this._editorsExpandedForFilter) {
       editor.collapseForFilter();
     }
 
     this._editorsExpandedForFilter = [];
-  }
+  },
+
+  /**
+   * Called when the pseudo class panel button is clicked and toggles
+   * the display of the pseudo class panel.
+   */
+  _onTogglePseudoClassPanel: function() {
+    if (this.pseudoClassPanel.hidden) {
+      this.pseudoClassToggle.setAttribute("checked", "true");
+    } else {
+      this.pseudoClassToggle.removeAttribute("checked");
+    }
+    this.pseudoClassPanel.hidden = !this.pseudoClassPanel.hidden;
+  },
+
+  /**
+   * Called when a pseudo class checkbox is clicked and toggles
+   * the pseudo class for the current selected element.
+   */
+  _onTogglePseudoClass: function(event) {
+    let target = event.currentTarget;
+    this.inspector.togglePseudoClass(target.value);
+   }
 };
 
 /**
  * Create a RuleEditor.
  *
  * @param {CssRuleView} aRuleView
  *        The CssRuleView containg the document holding this rule editor.
  * @param {Rule} aRule
diff --git a/browser/devtools/styleinspector/ruleview.css b/browser/devtools/styleinspector/ruleview.css
--- a/browser/devtools/styleinspector/ruleview.css
+++ b/browser/devtools/styleinspector/ruleview.css
@@ -19,19 +19,38 @@
 
 #ruleview-container {
   -moz-user-select: text;
   overflow: auto;
   min-height: 0;
   flex: 1;
 }
 
-#root .devtools-toolbar {
+.devtools-toolbar {
   width: 100%;
-  display: -moz-box;
+  display: flex;
+}
+
+#pseudo-class-panel {
+  position: relative;
+  top: -1px;
+  overflow-y: hidden;
+  max-height: 24px;
+  justify-content: space-around;
+  transition-property: max-height;
+  transition-duration: 150ms;
+  transition-timing-function: ease;
+}
+
+#pseudo-class-panel[hidden] {
+  max-height: 0px;
+}
+
+#pseudo-class-panel > label {
+  -moz-user-select: none;
 }
 
 .ruleview {
   overflow: auto;
   -moz-user-select: text;
 }
 
 .ruleview-code {
diff --git a/browser/devtools/styleinspector/test/browser.ini b/browser/devtools/styleinspector/test/browser.ini
--- a/browser/devtools/styleinspector/test/browser.ini
+++ b/browser/devtools/styleinspector/test/browser.ini
@@ -109,16 +109,17 @@
 [browser_ruleview_multiple_properties_01.js]
 [browser_ruleview_multiple_properties_02.js]
 [browser_ruleview_original-source-link.js]
 [browser_ruleview_cycle-color.js]
 [browser_ruleview_override.js]
 [browser_ruleview_pseudo-element_01.js]
 [browser_ruleview_pseudo-element_02.js]
 skip-if = e10s # Bug 1090340
+[browser_ruleview_pseudo_lock_options.js]
 [browser_ruleview_refresh-on-attribute-change_01.js]
 [browser_ruleview_refresh-on-attribute-change_02.js]
 [browser_ruleview_refresh-on-style-change.js]
 [browser_ruleview_search-filter-computed-list_01.js]
 [browser_ruleview_search-filter-computed-list_02.js]
 [browser_ruleview_search-filter-computed-list_03.js]
 [browser_ruleview_search-filter-computed-list_04.js]
 [browser_ruleview_search-filter-computed-list_05.js]
diff --git a/browser/devtools/styleinspector/test/browser_ruleview_pseudo_lock_options.js b/browser/devtools/styleinspector/test/browser_ruleview_pseudo_lock_options.js
new file mode 100644
--- /dev/null
+++ b/browser/devtools/styleinspector/test/browser_ruleview_pseudo_lock_options.js
@@ -0,0 +1,104 @@
+/* vim: set ft=javascript ts=2 et sw=2 tw=80: */
+/* Any copyright is dedicated to the Public Domain.
+ http://creativecommons.org/publicdomain/zero/1.0/ */
+
+"use strict";
+
+// Tests that the rule view pseudo lock options work properly.
+
+let TEST_URI = [
+  "<style type='text/css'>",
+  "  div {",
+  "    color: red;",
+  "  }",
+  "  div:hover {",
+  "    color: blue;",
+  "  }",
+  "  div:active {",
+  "    color: yellow;",
+  "  }",
+  "  div:focus {",
+  "    color: green;",
+  "  }",
+  "</style>",
+  "<div>test div</div>"
+].join("\n");
+
+add_task(function*() {
+  yield addTab("data:text/html;charset=utf-8," + encodeURIComponent(TEST_URI));
+  let {inspector, view} = yield openRuleView();
+  yield selectNode("div", inspector);
+
+  info("Toggle the pseudo class panel open");
+  ok(view.pseudoClassPanel.hidden, "Pseudo Class Panel Hidden");
+  view.pseudoClassToggle.click();
+  ok(!view.pseudoClassPanel.hidden, "Pseudo Class Panel Opened");
+  ok(!view.hoverCheckbox.disabled, ":hover checkbox is not disabled");
+  ok(!view.activeCheckbox.disabled, ":active checkbox is not disabled");
+  ok(!view.focusCheckbox.disabled, ":focus checkbox is not disabled");
+
+  info("Toggle each pseudo lock and check that the pseudo lock is added");
+  yield togglePseudoClass(inspector, view, view.hoverCheckbox);
+  yield assertPseudoAdded(inspector, view, ":hover", 3, 1);
+  yield togglePseudoClass(inspector, view, view.hoverCheckbox);
+  yield assertPseudoRemoved(inspector, view, 2);
+
+  yield togglePseudoClass(inspector, view, view.activeCheckbox);
+  yield assertPseudoAdded(inspector, view, ":active", 3, 1);
+  yield togglePseudoClass(inspector, view, view.activeCheckbox);
+  yield assertPseudoRemoved(inspector, view, 2);
+
+  yield togglePseudoClass(inspector, view, view.focusCheckbox);
+  yield assertPseudoAdded(inspector, view, ":focus", 3, 1);
+  yield togglePseudoClass(inspector, view, view.focusCheckbox);
+  yield assertPseudoRemoved(inspector, view, 2);
+
+  info("Toggle all pseudo lock and check that the pseudo lock is added");
+  yield togglePseudoClass(inspector, view, view.hoverCheckbox);
+  yield togglePseudoClass(inspector, view, view.activeCheckbox);
+  yield togglePseudoClass(inspector, view, view.focusCheckbox);
+  yield assertPseudoAdded(inspector, view, ":focus", 5, 1);
+  yield assertPseudoAdded(inspector, view, ":active", 5, 2);
+  yield assertPseudoAdded(inspector, view, ":hover", 5, 3);
+  yield togglePseudoClass(inspector, view, view.hoverCheckbox);
+  yield togglePseudoClass(inspector, view, view.activeCheckbox);
+  yield togglePseudoClass(inspector, view, view.focusCheckbox);
+  yield assertPseudoRemoved(inspector, view, 2);
+
+  info("Select a null element");
+  yield view.selectElement(null);
+  ok(!view.hoverCheckbox.checked && view.hoverCheckbox.disabled,
+    ":hover checkbox is unchecked and disabled");
+  ok(!view.activeCheckbox.checked && view.activeCheckbox.disabled,
+    ":active checkbox is unchecked and disabled");
+  ok(!view.focusCheckbox.checked && view.focusCheckbox.disabled,
+    ":focus checkbox is unchecked and disabled");
+
+  info("Toggle the pseudo class panel close");
+  view.pseudoClassToggle.click();
+  ok(view.pseudoClassPanel.hidden, "Pseudo Class Panel Closed");
+});
+
+function* togglePseudoClass(inspector, ruleView, pseudoClassOption) {
+  info("Toggle the pseudoclass, wait for it to be applied");
+  let onRefresh = inspector.once("rule-view-refreshed");
+  pseudoClassOption.click();
+  yield onRefresh;
+}
+
+function* assertPseudoAdded(inspector, ruleView, pseudoClass, numRules,
+    childIndex) {
+  info("Check that the ruleview contains the pseudo-class rule");
+  is(ruleView.element.children.length, numRules,
+    "Should have " + numRules + " rules.");
+  is(getRuleViewRuleEditor(ruleView, childIndex).rule.selectorText,
+    "div" + pseudoClass, "rule view is showing " + pseudoClass + " rule");
+}
+
+function* assertPseudoRemoved(inspector, ruleView, numRules) {
+  info("Check that the ruleview no longer contains the pseudo-class rule");
+  is(ruleView.element.children.length, numRules,
+    "Should have " + numRules + " rules.");
+  is(getRuleViewRuleEditor(ruleView, 1).rule.selectorText, "div",
+    "Second rule is div");
+}
diff --git a/browser/themes/linux/jar.mn b/browser/themes/linux/jar.mn
--- a/browser/themes/linux/jar.mn
+++ b/browser/themes/linux/jar.mn
@@ -253,16 +253,17 @@
   skin/classic/browser/devedition/search.svg          (../shared/devedition/search.svg)
   skin/classic/browser/devedition/urlbar-history-dropmarker.svg            (../shared/devedition/urlbar-history-dropmarker.svg)
 * skin/classic/browser/devtools/common.css            (../shared/devtools/common.css)
 * skin/classic/browser/devtools/dark-theme.css        (../shared/devtools/dark-theme.css)
 * skin/classic/browser/devtools/light-theme.css       (../shared/devtools/light-theme.css)
   skin/classic/browser/devtools/add.svg               (../shared/devtools/images/add.svg)
   skin/classic/browser/devtools/filters.svg           (../shared/devtools/filters.svg)
   skin/classic/browser/devtools/filter-swatch.svg     (../shared/devtools/images/filter-swatch.svg)
+  skin/classic/browser/devtools/pseudo-class.svg      (../shared/devtools/images/pseudo-class.svg)
   skin/classic/browser/devtools/controls.png          (../shared/devtools/images/controls.png)
   skin/classic/browser/devtools/controls@2x.png       (../shared/devtools/images/controls@2x.png)
   skin/classic/browser/devtools/performance-icons.svg  (../shared/devtools/images/performance-icons.svg)
   skin/classic/browser/devtools/newtab.png             (../shared/devtools/images/newtab.png)
   skin/classic/browser/devtools/newtab@2x.png          (../shared/devtools/images/newtab@2x.png)
   skin/classic/browser/devtools/newtab-inverted.png    (../shared/devtools/images/newtab-inverted.png)
   skin/classic/browser/devtools/newtab-inverted@2x.png (../shared/devtools/images/newtab-inverted@2x.png)
 * skin/classic/browser/devtools/widgets.css           (devtools/widgets.css)
diff --git a/browser/themes/osx/jar.mn b/browser/themes/osx/jar.mn
--- a/browser/themes/osx/jar.mn
+++ b/browser/themes/osx/jar.mn
@@ -368,16 +368,17 @@
   skin/classic/browser/devedition/search.svg                (../shared/devedition/search.svg)
   skin/classic/browser/devedition/urlbar-history-dropmarker.svg            (../shared/devedition/urlbar-history-dropmarker.svg)
 * skin/classic/browser/devtools/common.css                  (../shared/devtools/common.css)
 * skin/classic/browser/devtools/dark-theme.css              (../shared/devtools/dark-theme.css)
 * skin/classic/browser/devtools/light-theme.css             (../shared/devtools/light-theme.css)
   skin/classic/browser/devtools/add.svg                     (../shared/devtools/images/add.svg)
   skin/classic/browser/devtools/filters.svg                 (../shared/devtools/filters.svg)
   skin/classic/browser/devtools/filter-swatch.svg           (../shared/devtools/images/filter-swatch.svg)
+  skin/classic/browser/devtools/pseudo-class.svg            (../shared/devtools/images/pseudo-class.svg)
   skin/classic/browser/devtools/controls.png                (../shared/devtools/images/controls.png)
   skin/classic/browser/devtools/controls@2x.png             (../shared/devtools/images/controls@2x.png)
   skin/classic/browser/devtools/performance-icons.svg       (../shared/devtools/images/performance-icons.svg)
   skin/classic/browser/devtools/newtab.png                  (../shared/devtools/images/newtab.png)
   skin/classic/browser/devtools/newtab@2x.png               (../shared/devtools/images/newtab@2x.png)
   skin/classic/browser/devtools/newtab-inverted.png         (../shared/devtools/images/newtab-inverted.png)
   skin/classic/browser/devtools/newtab-inverted@2x.png      (../shared/devtools/images/newtab-inverted@2x.png)
 * skin/classic/browser/devtools/widgets.css                 (devtools/widgets.css)
diff --git a/browser/themes/shared/devtools/computedview.css b/browser/themes/shared/devtools/computedview.css
--- a/browser/themes/shared/devtools/computedview.css
+++ b/browser/themes/shared/devtools/computedview.css
@@ -148,17 +148,17 @@
 }
 
 .legendKey {
   margin: 0 5px;
 }
 
 #root .devtools-toolbar {
   width: 100%;
-  display: -moz-box;
+  display: flex;
 }
 
 .link {
   padding: 0 3px;
   cursor: pointer;
   float: right;
 }
 
diff --git a/browser/themes/shared/devtools/images/pseudo-class.svg b/browser/themes/shared/devtools/images/pseudo-class.svg
new file mode 100644
--- /dev/null
+++ b/browser/themes/shared/devtools/images/pseudo-class.svg
@@ -0,0 +1,26 @@
+<svg width="16" height="16" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+  <defs>
+    <style>
+      use[id^="pseudo-class"]:not(:target) {
+        display: none;
+      }
+    </style>
+    <rect id="class-block-maskBG" width="8" height="8" fill="#fff"/>
+    <rect id="class-block" width="8" height="8" rx="1" ry="1"/>
+    <mask id="mask-block-solid">
+      <use xlink:href="#class-block-maskBG"/>
+      <use xlink:href="#class-block" transform="translate(3 3)" fill="#000"/>
+    </mask>
+    <g id="pseudo-class-shape">
+      <rect x=".5" y=".5" width="7" height="7" rx="1" ry="1" mask="url(#mask-block-solid)" fill="none" stroke="currentColor" stroke-width="1"/>
+      <use xlink:href="#class-block" mask="url(#mask-block-solid)" fill="currentColor" fill-opacity=".4"/>
+      <use xlink:href="#class-block" mask="url(#mask-block-solid)" fill="currentColor" transform="translate(4 4)"/>
+      <g transform="translate(8 8)" fill="currentColor">
+        <path d="M2.5,0C2.2,0,2,0.2,2,0.5C2,0.8,2.2,1,2.5,1C2.8,1,3,0.8,3,0.5 C3,0.2,2.8,0,2.5,0z M4.5,0C4.2,0,4,0.2,4,0.5C4,0.8,4.2,1,4.5,1C4.8,1,5,0.8,5,0.5C5,0.2,4.8,0,4.5,0z M0.5,6C0.8,6,1,5.8,1,5.5 C1,5.2,0.8,5,0.5,5C0.2,5,0,5.2,0,5.5C0,5.8,0.2,6,0.5,6z M0.5,4C0.8,4,1,3.8,1,3.5C1,3.2,0.8,3,0.5,3C0.2,3,0,3.2,0,3.5 C0,3.8,0.2,4,0.5,4z M7.5,2C7.2,2,7,2.2,7,2.5C7,2.8,7.2,3,7.5,3C7.8,3,8,2.8,8,2.5C8,2.2,7.8,2,7.5,2z M7.5,4C7.2,4,7,4.2,7,4.5 C7,4.8,7.2,5,7.5,5C7.8,5,8,4.8,8,4.5C8,4.2,7.8,4,7.5,4z M5.5,7C5.2,7,5,7.2,5,7.5C5,7.8,5.2,8,5.5,8C5.8,8,6,7.8,6,7.5 C6,7.2,5.8,7,5.5,7z M3.5,7C3.2,7,3,7.2,3,7.5C3,7.8,3.2,8,3.5,8C3.8,8,4,7.8,4,7.5C4,7.2,3.8,7,3.5,7z M0.5,2C0.8,2,1,1.8,1,1.5v-1 C1,0.2,0.8,0,0.5,0C0.2,0,0,0.2,0,0.5v1C0,1.8,0.2,2,0.5,2z M8,0.5C8,0.2,7.8,0,7.5,0h-1C6.2,0,6,0.2,6,0.5C6,0.8,6.2,1,6.5,1h1 C7.8,1,8,0.8,8,0.5z M7.5,6C7.2,6,7,6.2,7,6.5v1C7,7.8,7.2,8,7.5,8C7.8,8,8,7.8,8,7.5v-1C8,6.2,7.8,6,7.5,6z M1.5,7h-1 C0.2,7,0,7.2,0,7.5C0,7.8,0.2,8,0.5,8h1C1.8,8,2,7.8,2,7.5C2,7.2,1.8,7,1.5,7z"/>
+        <use xlink:href="#class-block" fill-opacity=".2"/>
+      </g>
+    </g>
+  </defs>
+  <use xlink:href="#pseudo-class-shape" id="pseudo-class" color="#edf0f1"/>
+  <use xlink:href="#pseudo-class-shape" id="pseudo-class-checked" color="#3089C9"/>
+</svg>
diff --git a/browser/themes/shared/devtools/ruleview.css b/browser/themes/shared/devtools/ruleview.css
--- a/browser/themes/shared/devtools/ruleview.css
+++ b/browser/themes/shared/devtools/ruleview.css
@@ -268,8 +268,16 @@
 .ruleview-selectorhighlighter.highlighted {
   background-position: -16px 0;
 }
 
 #ruleview-add-rule-button::before {
   background-image: url("chrome://browser/skin/devtools/add.svg");
   background-size: cover;
 }
+
+#pseudo-class-panel-toggle::before {
+  background-image: url("chrome://browser/skin/devtools/pseudo-class.svg#pseudo-class");
+  background-size: cover;
+}
+#pseudo-class-panel-toggle[checked]::before {
+  background-image: url("chrome://browser/skin/devtools/pseudo-class.svg#pseudo-class-checked");
+}
diff --git a/browser/themes/shared/devtools/toolbars.inc.css b/browser/themes/shared/devtools/toolbars.inc.css
--- a/browser/themes/shared/devtools/toolbars.inc.css
+++ b/browser/themes/shared/devtools/toolbars.inc.css
@@ -363,18 +363,18 @@
 }
 
 .devtools-searchinput > .textbox-input-box > .textbox-search-icons > .textbox-search-icon {
   visibility: hidden;
 }
 
 /* Searchbox is a div container element for a search input element */
 .devtools-searchbox {
-  display: -moz-box;
-  -moz-box-flex: 1;
+  display: flex;
+  flex: 1;
   position: relative;
 }
 
 .devtools-rule-searchbox {
   -moz-box-flex: 1;
   padding-right: 23px;
   width: 100%;
   font: inherit;
diff --git a/browser/themes/windows/jar.mn b/browser/themes/windows/jar.mn
--- a/browser/themes/windows/jar.mn
+++ b/browser/themes/windows/jar.mn
@@ -342,16 +342,17 @@
         skin/classic/browser/devedition/search.svg                  (../shared/devedition/search.svg)
         skin/classic/browser/devedition/urlbar-history-dropmarker.svg            (../shared/devedition/urlbar-history-dropmarker.svg)
 *       skin/classic/browser/devtools/common.css                    (../shared/devtools/common.css)
 *       skin/classic/browser/devtools/dark-theme.css                (../shared/devtools/dark-theme.css)
 *       skin/classic/browser/devtools/light-theme.css               (../shared/devtools/light-theme.css)
         skin/classic/browser/devtools/add.svg                       (../shared/devtools/images/add.svg)
         skin/classic/browser/devtools/filters.svg                   (../shared/devtools/filters.svg)
         skin/classic/browser/devtools/filter-swatch.svg             (../shared/devtools/images/filter-swatch.svg)
+        skin/classic/browser/devtools/pseudo-class.svg              (../shared/devtools/images/pseudo-class.svg)
         skin/classic/browser/devtools/controls.png                  (../shared/devtools/images/controls.png)
         skin/classic/browser/devtools/controls@2x.png               (../shared/devtools/images/controls@2x.png)
         skin/classic/browser/devtools/performance-icons.svg         (../shared/devtools/images/performance-icons.svg)
         skin/classic/browser/devtools/newtab.png                    (../shared/devtools/images/newtab.png)
         skin/classic/browser/devtools/newtab@2x.png                 (../shared/devtools/images/newtab@2x.png)
         skin/classic/browser/devtools/newtab-inverted.png           (../shared/devtools/images/newtab-inverted.png)
         skin/classic/browser/devtools/newtab-inverted@2x.png        (../shared/devtools/images/newtab-inverted@2x.png)
 *       skin/classic/browser/devtools/widgets.css                   (devtools/widgets.css)
