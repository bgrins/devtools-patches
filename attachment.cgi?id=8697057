# HG changeset patch
# User Gabriel Luong <gabriel.luong@gmail.com>
# Parent  caf389bbafbcb9e1f5e37f41e8ec62a7c907025a
Bug 1198326 - Prevent event propagation on click events of the inplace editor r=bgrins

diff --git a/devtools/client/shared/inplace-editor.js b/devtools/client/shared/inplace-editor.js
--- a/devtools/client/shared/inplace-editor.js
+++ b/devtools/client/shared/inplace-editor.js
@@ -207,18 +207,19 @@ function InplaceEditor(options, event) {
   this.contentType = options.contentType || CONTENT_TYPES.PLAIN_TEXT;
   this.property = options.property;
   this.popup = options.popup;
   this.preserveTextStyles = options.preserveTextStyles === undefined
                           ? false
                           : !!options.preserveTextStyles;
 
   this._onBlur = this._onBlur.bind(this);
+  this._onClick = this._onClick.bind(this);
+  this._onInput = this._onInput.bind(this);
   this._onKeyPress = this._onKeyPress.bind(this);
-  this._onInput = this._onInput.bind(this);
   this._onKeyup = this._onKeyup.bind(this);
 
   this._createInput();
   this._autosize();
   this.inputCharWidth = this._getInputCharWidth();
 
   // Pull out character codes for advanceChars, listing the
   // characters that should trigger a blur.
@@ -246,21 +247,18 @@ function InplaceEditor(options, event) {
 
   if (this.contentType == CONTENT_TYPES.CSS_VALUE && this.input.value == "") {
     this._maybeSuggestCompletion(true);
   }
 
   this.input.addEventListener("blur", this._onBlur, false);
   this.input.addEventListener("keypress", this._onKeyPress, false);
   this.input.addEventListener("input", this._onInput, false);
-
-  this.input.addEventListener("dblclick",
-    (e) => { e.stopPropagation(); }, false);
-  this.input.addEventListener("mousedown",
-    (e) => { e.stopPropagation(); }, false);
+  this.input.addEventListener("dblclick", this._onClick, false);
+  this.input.addEventListener("click", this._onClick, false);
 
   this.validate = options.validate;
 
   if (this.validate) {
     this.input.addEventListener("keyup", this._onKeyup, false);
   }
 
   this._updateSize();
@@ -810,16 +808,23 @@ InplaceEditor.prototype = {
       let val = this.cancelled ? this.initial : this.currentInputValue;
       return this.done(val, !this.cancelled, direction);
     }
 
     return null;
   },
 
   /**
+   * Handle the input field's click and double click events.
+   */
+  _onClick: function(event) {
+    event.stopPropagation();
+  },
+
+  /**
    * Handle loss of focus by calling done if it hasn't been called yet.
    */
   _onBlur: function(event, doNotClear) {
     if (event && this.popup && this.popup.isOpen &&
         this.popup.selectedIndex >= 0) {
       let label, preLabel;
 
       if (this._selectedIndex === undefined) {
