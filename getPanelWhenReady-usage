# HG changeset patch
# Parent 142ac57ed19a45af2345db7d51725a385804caf2
# User Brian Grinstead <bgrinstead@mozilla.com>
Bug 1093730 - Use getPanelWhenReady for debugger state in browser toolbox;r=jryans

diff --git a/browser/devtools/framework/toolbox-process-window.js b/browser/devtools/framework/toolbox-process-window.js
--- a/browser/devtools/framework/toolbox-process-window.js
+++ b/browser/devtools/framework/toolbox-process-window.js
@@ -101,22 +101,20 @@ function onNewToolbox(toolbox) {
 function bindToolboxHandlers() {
   gToolbox.once("destroyed", quitApp);
   window.addEventListener("unload", onUnload);
 
 #ifdef XP_MACOSX
   // Badge the dock icon to differentiate this process from the main application process.
   updateBadgeText(false);
 
-  // Check if the debugger panel is already loaded otherwise listen for it to be.
-  if (gToolbox.getPanel("jsdebugger")) {
-    setupThreadListeners(gToolbox.getPanel("jsdebugger"));
-  } else {
-    gToolbox.once("jsdebugger-ready", (e, panel) => setupThreadListeners(panel));
-  }
+  // Once the debugger panel opens listen for thread pause / resume.
+  gToolbox.getPanelWhenReady("jsdebugger").then(panel => {
+    setupThreadListeners(panel);
+  });
 #endif
 }
 
 function setupThreadListeners(panel) {
   updateBadgeText(panel._controller.activeThread.state == "paused");
 
   let onPaused = updateBadgeText.bind(null, true);
   let onResumed = updateBadgeText.bind(null, false);
