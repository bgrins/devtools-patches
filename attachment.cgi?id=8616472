# HG changeset patch
# Parent  010ecb3b3b25616052550722940bbf9faba1cf89
Bug 1164210: $$() should return a true Array r=bgrins

diff --git a/toolkit/devtools/webconsole/test/chrome.ini b/toolkit/devtools/webconsole/test/chrome.ini
--- a/toolkit/devtools/webconsole/test/chrome.ini
+++ b/toolkit/devtools/webconsole/test/chrome.ini
@@ -14,16 +14,17 @@ support-files =
 [test_commands_registration.html]
 [test_consoleapi.html]
 [test_consoleapi_innerID.html]
 [test_file_uri.html]
 [test_reflow.html]
 [test_jsterm.html]
 [test_jsterm_cd_iframe.html]
 [test_jsterm_last_result.html]
+[test_jsterm_queryselector.html]
 [test_network_get.html]
 [test_network_longstring.html]
 [test_network_post.html]
 [test_network_security-hpkp.html]
 [test_network_security-hsts.html]
 [test_nsiconsolemessage.html]
 [test_object_actor.html]
 [test_object_actor_native_getters.html]
diff --git a/toolkit/devtools/webconsole/test/test_jsterm_queryselector.html b/toolkit/devtools/webconsole/test/test_jsterm_queryselector.html
new file mode 100644
--- /dev/null
+++ b/toolkit/devtools/webconsole/test/test_jsterm_queryselector.html
@@ -0,0 +1,77 @@
+<!DOCTYPE HTML>
+<html lang="en">
+<head>
+  <meta charset="utf8">
+  <title>Test for the querySelector / querySelectorAll helpers</title>
+  <script type="text/javascript" src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript;version=1.8" src="common.js"></script>
+  <!-- Any copyright is dedicated to the Public Domain.
+     - http://creativecommons.org/publicdomain/zero/1.0/ -->
+</head>
+<body>
+<p>Test for the querySelector / querySelectorAll helpers</p>
+
+<script class="testbody" type="text/javascript;version=1.8">
+SimpleTest.waitForExplicitFinish();
+let gState;
+
+function evaluateJS(input) {
+  return new Promise((resolve) => gState.client.evaluateJS(input, resolve));
+}
+
+function startTest() {
+  removeEventListener("load", startTest);
+  attachConsole([], state => {
+    gState = state;
+    let tests = [checkQuerySelectorAll, checkQuerySelectorAllNotExist];
+    runTests(tests, testEnd);
+  }, true);
+}
+
+let checkQuerySelectorAll = Task.async(function*() {
+  info ("$$ returns an array");
+  let response = yield evaluateJS("$$('body')");
+  basicResultCheck(response, "$$('body')", {
+    type: "object",
+    class: "Array",
+    preview: {
+      length: 1
+    }
+  });
+  nextTest();
+});
+
+let checkQuerySelectorAllNotExist = Task.async(function*() {
+  info ("$$ returns an array even if query yields no results");
+  let response = yield evaluateJS("$$('foobar')");
+  basicResultCheck(response, "$$('foobar')", {
+    type: "object",
+    class: "Array",
+    preview: {
+      length: 0
+    }
+  });
+  nextTest();
+});
+
+function basicResultCheck(response, input, output) {
+  checkObject(response, {
+    from: gState.actor,
+    input: input,
+    result: output,
+  });
+  ok(!response.exception, "no eval exception");
+  ok(!response.helperResult, "no helper result");
+}
+
+function testEnd() {
+  closeDebugger(gState, function() {
+    gState = null;
+    SimpleTest.finish();
+  });
+}
+
+addEventListener("load", startTest);
+</script>
+</body>
+</html>
diff --git a/toolkit/devtools/webconsole/utils.js b/toolkit/devtools/webconsole/utils.js
--- a/toolkit/devtools/webconsole/utils.js
+++ b/toolkit/devtools/webconsole/utils.js
@@ -1633,17 +1633,20 @@ WebConsoleCommands._registerOriginal("$"
  *
  * @param string aSelector
  *        A string that is passed to window.document.querySelectorAll.
  * @return nsIDOMNodeList
  *         Returns the result of document.querySelectorAll(aSelector).
  */
 WebConsoleCommands._registerOriginal("$$", function JSTH_$$(aOwner, aSelector)
 {
-  return aOwner.window.document.querySelectorAll(aSelector);
+  let results = aOwner.window.document.querySelectorAll(aSelector);
+  let nodes = aOwner.window.wrappedJSObject.Array.from(results);
+
+  return nodes;
 });
 
 /**
  * Returns the result of the last console input evaluation
  *
  * @return object|undefined
  * Returns last console evaluation or undefined
  */
