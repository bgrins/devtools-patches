# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  ff8505d177b9fcba44b040ccd9b6bb709e238e84
Testing top-level HTML
./mach run --chrome chrome://browser/content/minibrowser.html --jsconsole

diff --git a/browser/base/content/minibrowser.html b/browser/base/content/minibrowser.html
new file mode 100644
--- /dev/null
+++ b/browser/base/content/minibrowser.html
@@ -0,0 +1,158 @@
+<!-- This Source Code Form is subject to the terms of the Mozilla Public
+   - License, v. 2.0. If a copy of the MPL was not distributed with this
+   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
+<!DOCTYPE html>
+<html dir=""
+      windowtype="navigator:browser"
+      width="900" height="350"
+      onload="gBrowserInit.onLoad()"
+      onunload="gBrowserInit.onUnload()"
+      onclose="return WindowIsClosing();"
+      >
+<head>
+  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
+  <link rel="stylesheet" href="chrome://global/content/xul.css" />
+  <link rel="stylesheet" href="chrome://browser/skin/" />
+</head>
+<body role="application">
+  Hello
+  <div id="content">
+  </div>
+  <script>
+  Components.utils.import("resource://gre/modules/Services.jsm");
+
+  function parseXULDOM(str) {
+    const d = new DOMParser();
+    d.forceEnableXULXBL();
+    const doc = d.parseFromString(
+      `<box xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">${str}</box>`,
+      "application/xml");
+    const range = doc.createRange();
+    range.selectNodeContents(doc.firstChild);
+    return range.extractContents();
+  }
+
+  const XUL_NS = "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
+  const content = document.querySelector("#content");
+
+  // content.appendChild(parseXULDOM(`
+  //   <popupset id="mainPopupSet">
+  //   </popupset>
+
+  //   <toolbar id="TabsToolbar"
+  //            class="titlebar-color"
+  //            fullscreentoolbar="true"
+  //            customizable="true"
+  //            mode="icons"
+  //            aria-label="FROM-DTD-tabsToolbar.label;"
+  //            context="toolbar-context-menu">
+  //     <hbox class="titlebar-placeholder" type="pre-tabs"
+  //           skipintoolbarset="true"/>
+
+  //     <tabs id="tabbrowser-tabs"
+  //           flex="1"
+  //           setfocus="false"
+  //           tooltip="tabbrowser-tab-tooltip"
+  //           stopwatchid="FX_TAB_CLICK_MS">
+  //       <tab class="tabbrowser-tab" selected="true" visuallyselected="true" fadein="true"/>
+  //     </tabs>
+
+  //     <toolbarbutton id="new-tab-button"
+  //                    class="toolbarbutton-1 chromeclass-toolbar-additional"
+  //                    label="FROM-DTD-tabCmd.label;"
+  //                    command="cmd_newNavigatorTab"
+  //                    onclick="checkForMiddleClick(this, event);"
+  //                    tooltip="dynamic-shortcut-tooltip"
+  //                    ondrop="newTabButtonObserver.onDrop(event)"
+  //                    ondragover="newTabButtonObserver.onDragOver(event)"
+  //                    ondragenter="newTabButtonObserver.onDragOver(event)"
+  //                    ondragexit="newTabButtonObserver.onDragExit(event)"
+  //                    cui-areatype="toolbar"
+  //                    removable="true"/>
+
+  //     <toolbarbutton id="alltabs-button"
+  //                    class="toolbarbutton-1 chromeclass-toolbar-additional tabs-alltabs-button badged-button"
+  //                    type="menu"
+  //                    label="FROM-DTD-listAllTabs.label;"
+  //                    tooltiptext="FROM-DTD-listAllTabs.label;"
+  //                    removable="false">
+  //       <menupopup id="alltabs-popup"
+  //                  position="after_end">
+  //         <menuitem id="alltabs_undoCloseTab"
+  //                   key="key_undoCloseTab"
+  //                   label="FROM-DTD-undoCloseTab.label;"
+  //                   observes="History:UndoCloseTab"/>
+  //         <menuseparator id="alltabs-popup-separator-1"/>
+  //         <menu id="alltabs_containersTab"
+  //               label="FROM-DTD-newUserContext.label;">
+  //           <menupopup id="alltabs_containersMenuTab" />
+  //         </menu>
+  //         <menuseparator id="alltabs-popup-separator-2"/>
+  //         <menu id="alltabs_hiddenTabs"
+  //               label="FROM-DTD-hiddenTabs.label;">
+  //           <menupopup id="alltabs_hiddenTabsMenu"/>
+  //         </menu>
+  //         <menuseparator id="alltabs-popup-separator-3"/>
+  //       </menupopup>
+  //     </toolbarbutton>
+
+  //     <hbox class="titlebar-placeholder" type="post-tabs"
+  //           ordinal="1000"
+  //           skipintoolbarset="true"/>
+
+  //     <button class="accessibility-indicator" tooltiptext="FROM-DTD-accessibilityIndicator.tooltip;"
+  //             ordinal="1000"
+  //             aria-live="polite" skipintoolbarset="true"/>
+  //     <hbox class="private-browsing-indicator" skipintoolbarset="true"
+  //           ordinal="1000"/>
+  //     <hbox class="titlebar-placeholder" type="caption-buttons"
+  //           ordinal="1000"
+  //           skipintoolbarset="true"/>
+  //   </toolbar>
+  //   <vbox id="appcontent" flex="1">
+  //       <notificationbox id="high-priority-global-notificationbox" notificationside="top"/>
+  //       <tabbox id="tabbrowser-tabbox"
+  //                   flex="1" eventnode="document" tabcontainer="tabbrowser-tabs"
+  //                   onselect="if (event.target.localName == 'tabpanels') gBrowser.updateCurrentBrowser();">
+  //         <tabpanels flex="1" class="plain" selectedIndex="0" id="tabbrowser-tabpanels">
+  //           <notificationbox flex="1" notificationside="top">
+  //             <hbox flex="10000" class="browserSidebarContainer">
+  //               <vbox flex="10000" class="browserContainer">
+  //                 <stack flex="1" class="browserStack">
+  //                   <browser id="tabbrowser-initialBrowser" type="content"
+  //                            message="true" messagemanagergroup="browsers"
+  //                            primary="true" blank="true"
+  //                            tooltip="aHTMLTooltip"
+  //                            contextmenu="contentAreaContextMenu"
+  //                            autocompletepopup="PopupAutoComplete"
+  //                            selectmenulist="ContentSelectDropdown"
+  //                            datetimepicker="DateTimePickerPanel"/>
+  //                 </stack>
+  //                 <hbox id="statuspanel" inactive="true" layer="true">
+  //                   <hbox id="statuspanel-inner">
+  //                     <label id="statuspanel-label"
+  //                            role="status"
+  //                            aria-live="off"
+  //                            flex="1"
+  //                            crop="end"/>
+  //                   </hbox>
+  //                 </hbox>
+  //               </vbox>
+  //             </hbox>
+  //           </notificationbox>
+  //         </tabpanels>
+  //       </tabbox>
+  //     </vbox>
+  // `));
+
+  console.log(content);
+
+  // Services.scriptloader.loadSubScript("chrome://browser/content/browser.js", this);
+  // Services.scriptloader.loadSubScript("chrome://browser/content/tabbrowser.js", this);
+
+  content.appendChild(parseXULDOM(`<browser type="content" remote="false" clickthrough="never" primary="true"/>`));
+  const browser = content.querySelector("browser");
+  console.log("Loaded", browser);
+  </script>
+</body>
+</html>
diff --git a/browser/base/jar.mn b/browser/base/jar.mn
--- a/browser/base/jar.mn
+++ b/browser/base/jar.mn
@@ -22,16 +22,17 @@ browser.jar:
         content/browser/aboutNetError.js               (content/aboutNetError.js)
         content/browser/aboutRobots-icon.png          (content/aboutRobots-icon.png)
         content/browser/aboutRobots-widget-left.png   (content/aboutRobots-widget-left.png)
         content/browser/aboutTabCrashed.css           (content/aboutTabCrashed.css)
         content/browser/aboutTabCrashed.js            (content/aboutTabCrashed.js)
         content/browser/aboutTabCrashed.xhtml         (content/aboutTabCrashed.xhtml)
 *       content/browser/browser.css                   (content/browser.css)
         content/browser/browser.js                    (content/browser.js)
+        content/browser/minibrowser.html              (content/minibrowser.html)
 *       content/browser/browser.xul                   (content/browser.xul)
         content/browser/browser-addons.js             (content/browser-addons.js)
         content/browser/browser-captivePortal.js      (content/browser-captivePortal.js)
         content/browser/browser-ctrlTab.js            (content/browser-ctrlTab.js)
         content/browser/browser-customization.js      (content/browser-customization.js)
         content/browser/browser-data-submission-info-bar.js (content/browser-data-submission-info-bar.js)
         content/browser/browser-compacttheme.js       (content/browser-compacttheme.js)
 #ifndef MOZILLA_OFFICIAL
