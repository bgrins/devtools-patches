# HG changeset patch
# User Sami Jaktholm <sjakthol@outlook.com>
# Date 1428138087 -10800
#      Sat Apr 04 12:01:27 2015 +0300
# Node ID 584e5e0eb89f8e1d97be760c9da0cb9438fd0929
# Parent  3ce5921a213672dc3e17c4d51558e6ae213da3d4
Bug 1148893 - Clean up browser_styleeditor_sv_resize.js and make it test something useful.

diff --git a/browser/devtools/styleeditor/test/browser_styleeditor_sv_resize.js b/browser/devtools/styleeditor/test/browser_styleeditor_sv_resize.js
--- a/browser/devtools/styleeditor/test/browser_styleeditor_sv_resize.js
+++ b/browser/devtools/styleeditor/test/browser_styleeditor_sv_resize.js
@@ -1,55 +1,44 @@
 /* vim: set ts=2 et sw=2 tw=80: */
 /* Any copyright is dedicated to the Public Domain.
    http://creativecommons.org/publicdomain/zero/1.0/ */
 
+// Test that resizing the fource editor container doesn't move the caret.
+
 const TESTCASE_URI = TEST_BASE_HTTP + "simple.html";
 
-let gOriginalWidth; // these are set by runTests()
-let gOriginalHeight;
+add_task(function* () {
+  let { toolbox, ui } = yield openStyleEditorForURL(TESTCASE_URI);
 
-function test()
-{
-  waitForExplicitFinish();
+  is(ui.editors.length, 2, "there is 2 stylesheets initially");
 
-  addTabAndOpenStyleEditors(2, panel => runTests(panel.UI));
+  info("Changing toolbox host to a window.");
+  yield toolbox.switchHost(devtools.Toolbox.HostType.WINDOW);
 
-  content.location = TESTCASE_URI;
-}
+  let editor = yield ui.editors[0].getSourceEditor();
+  let originalSourceEditor = editor.sourceEditor;
 
-function runTests(aUI)
-{
-  is(aUI.editors.length, 2,
-     "there is 2 stylesheets initially");
+  let hostWindow = toolbox._host._window;
+  let originalWidth = hostWindow.outerWidth;
+  let originalHeight = hostWindow.outerHeight;
 
-  aUI.editors[0].getSourceEditor().then(aEditor => {
-    executeSoon(function () {
-      waitForFocus(function () {
-        // queue a resize to inverse aspect ratio
-        // this will trigger a detach and reattach (to workaround bug 254144)
-        let originalSourceEditor = aEditor.sourceEditor;
-        let editor = aEditor.sourceEditor;
-        editor.setCursor(editor.getPosition(4)); // to check the caret is preserved
+  // to check the caret is preserved
+  originalSourceEditor.setCursor(originalSourceEditor.getPosition(4));
 
-        gOriginalWidth = gPanelWindow.outerWidth;
-        gOriginalHeight = gPanelWindow.outerHeight;
-        gPanelWindow.resizeTo(120, 480);
+  info("Resising window.");
+  hostWindow.resizeTo(120, 480);
 
-        executeSoon(function () {
-          is(aEditor.sourceEditor, originalSourceEditor,
-             "the editor still references the same Editor instance");
-          let editor = aEditor.sourceEditor;
-          is(editor.getOffset(editor.getCursor()), 4,
-             "the caret position has been preserved");
+  let sourceEditor = ui.editors[0].sourceEditor;
+  is(sourceEditor, originalSourceEditor,
+     "the editor still references the same Editor instance");
 
-          // queue a resize to original aspect ratio
-          waitForFocus(function () {
-            gPanelWindow.resizeTo(gOriginalWidth, gOriginalHeight);
-            executeSoon(function () {
-              finish();
-            });
-          }, gPanelWindow);
-        });
-      }, gPanelWindow);
-    });
-  });
-}
+  is(sourceEditor.getOffset(sourceEditor.getCursor()), 4,
+     "the caret position has been preserved");
+
+  info("Restoring window to original size.");
+  hostWindow.resizeTo(originalWidth, originalHeight);
+});
+
+registerCleanupFunction(() => {
+  // Restore the host type for other tests.
+  Services.prefs.clearUserPref("devtools.toolbox.host");
+});
