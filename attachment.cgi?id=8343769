exporting patch:
# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1386344811 21600
#      Fri Dec 06 09:46:51 2013 -0600
# Node ID 224016b48a2056d92a1d2e2e639ec5930167511b
# Parent f9e31850d15e7d86c90d704c915fc5ca5022601d
Bug 938616 - webconsole UI updates while in split mode with other panels;r=msucan

diff --git a/browser/app/profile/firefox.js b/browser/app/profile/firefox.js
--- a/browser/app/profile/firefox.js
+++ b/browser/app/profile/firefox.js
@@ -1088,17 +1088,17 @@ pref("devtools.appmanager.enabled", true
 pref("devtools.appmanager.lastTab", "help");
 pref("devtools.appmanager.manifestEditor.enabled", true);
 
 // Toolbox preferences
 pref("devtools.toolbox.footer.height", 250);
 pref("devtools.toolbox.sidebar.width", 500);
 pref("devtools.toolbox.host", "bottom");
 pref("devtools.toolbox.selectedTool", "webconsole");
-pref("devtools.toolbox.toolbarSpec", '["paintflashing toggle","tilt toggle","scratchpad","resize toggle"]');
+pref("devtools.toolbox.toolbarSpec", '["splitconsole", "paintflashing toggle","tilt toggle","scratchpad","resize toggle"]');
 pref("devtools.toolbox.sideEnabled", true);
 pref("devtools.toolbox.zoomValue", "1");
 
 // Enable the Inspector
 pref("devtools.inspector.enabled", true);
 pref("devtools.inspector.activeSidebar", "ruleview");
 pref("devtools.inspector.markupPreview", false);
 pref("devtools.inspector.remote", false);
diff --git a/browser/devtools/commandline/BuiltinCommands.jsm b/browser/devtools/commandline/BuiltinCommands.jsm
--- a/browser/devtools/commandline/BuiltinCommands.jsm
+++ b/browser/devtools/commandline/BuiltinCommands.jsm
@@ -2267,8 +2267,73 @@ gcli.addCommand({
     manual: gcli.lookup("mediaEmulateManual"),
     exec: function(args, context) {
       let markupDocumentViewer = context.environment.chromeWindow
                                         .gBrowser.markupDocumentViewer;
       markupDocumentViewer.stopEmulatingMedium();
     }
   });
 }(this));
+
+/* CmdSplitConsole ------------------------------------------------------- */
+
+(function(module) {
+  /**
+   * 'splitconsole' command (hidden)
+   */
+
+  gcli.addCommand({
+    name: 'splitconsole',
+    hidden: true,
+    buttonId: "command-button-splitconsole",
+    buttonClass: "command-button",
+    tooltipText: gcli.lookup("splitconsoleTooltip"),
+    state: {
+      isChecked: function(aTarget) {
+        let toolbox = gDevTools.getToolbox(aTarget);
+        return toolbox &&
+          toolbox.splitConsole;
+      },
+      onChange: function(aTarget, aChangeHandler) {
+        eventEmitter.on("changed", aChangeHandler);
+      },
+      offChange: function(aTarget, aChangeHandler) {
+        eventEmitter.off("changed", aChangeHandler);
+      },
+    },
+    exec: function(args, context) {
+      toggleSplitConsole(context);
+    }
+  });
+
+  function toggleSplitConsole(context) {
+    let gBrowser = context.environment.chromeDocument.defaultView.gBrowser;
+    let target = devtools.TargetFactory.forTab(gBrowser.selectedTab);
+    let toolbox = gDevTools.getToolbox(target);
+
+    if (!toolbox) {
+      gDevTools.showToolbox(target, "inspector").then((toolbox) => {
+        toolbox.toggleSplitConsole();
+      });
+    } else {
+      toolbox.toggleSplitConsole();
+    }
+  }
+
+  let eventEmitter = new EventEmitter();
+  function fireChange(tab) {
+    eventEmitter.emit("changed", tab);
+  }
+
+  gDevTools.on("toolbox-ready", (e, toolbox) => {
+    if (!toolbox.target) {
+      return;
+    }
+    let fireChangeForTab = fireChange.bind(this, toolbox.target.tab);
+    toolbox.on("split-console", fireChangeForTab);
+    toolbox.on("select", fireChangeForTab);
+    toolbox.once("destroyed", () => {
+      toolbox.off("split-console", fireChangeForTab);
+      toolbox.off("select", fireChangeForTab);
+    });
+  });
+
+}(this));
diff --git a/browser/devtools/framework/toolbox.js b/browser/devtools/framework/toolbox.js
--- a/browser/devtools/framework/toolbox.js
+++ b/browser/devtools/framework/toolbox.js
@@ -178,16 +178,23 @@ Toolbox.prototype = {
   /**
    * Get current zoom level of toolbox
    */
   get zoomValue() {
     return parseFloat(Services.prefs.getCharPref(ZOOM_PREF));
   },
 
   /**
+   * Get the toggled state of the split console
+   */
+  get splitConsole() {
+    return this._splitConsole;
+  },
+
+  /**
    * Open the toolbox
    */
   open: function() {
     let deferred = promise.defer();
 
     return this._host.create().then(iframe => {
       let deferred = promise.defer();
 
diff --git a/browser/devtools/webconsole/test/browser_webconsole_split.js b/browser/devtools/webconsole/test/browser_webconsole_split.js
--- a/browser/devtools/webconsole/test/browser_webconsole_split.js
+++ b/browser/devtools/webconsole/test/browser_webconsole_split.js
@@ -58,32 +58,34 @@ function test()
       yield checkWebconsolePanelOpened();
       testBottomHost();
     });
   }
 
   function getCurrentUIState()
   {
     let win = toolbox.doc.defaultView;
-    let deck = toolbox.doc.getElementById("toolbox-deck");
-    let webconsolePanel = toolbox.doc.getElementById("toolbox-panel-webconsole");
-    let splitter = toolbox.doc.getElementById("toolbox-console-splitter");
+    let deck = toolbox.doc.querySelector("#toolbox-deck");
+    let webconsolePanel = toolbox.doc.querySelector("#toolbox-panel-webconsole");
+    let splitter = toolbox.doc.querySelector("#toolbox-console-splitter");
 
     let containerHeight = parseFloat(win.getComputedStyle(deck.parentNode).getPropertyValue("height"));
     let deckHeight = parseFloat(win.getComputedStyle(deck).getPropertyValue("height"));
     let webconsoleHeight = parseFloat(win.getComputedStyle(webconsolePanel).getPropertyValue("height"));
     let splitterVisibility = !splitter.getAttribute("hidden");
     let openedConsolePanel = toolbox.currentToolId === "webconsole";
+    let cmdButton = toolbox.doc.querySelector("#command-button-splitconsole");
 
     return {
       deckHeight: deckHeight,
       containerHeight: containerHeight,
       webconsoleHeight: webconsoleHeight,
       splitterVisibility: splitterVisibility,
-      openedConsolePanel: openedConsolePanel
+      openedConsolePanel: openedConsolePanel,
+      buttonSelected: cmdButton.hasAttribute("checked")
     };
   }
 
   function checkWebconsolePanelOpened()
   {
     info("About to check special cases when webconsole panel is open.");
 
     let deferred = promise.defer();
@@ -92,43 +94,47 @@ function test()
     toolbox.toggleSplitConsole();
 
     let currentUIState = getCurrentUIState();
 
     ok (currentUIState.splitterVisibility, "Splitter is visible when console is split");
     ok (currentUIState.deckHeight > 0, "Deck has a height > 0 when console is split");
     ok (currentUIState.webconsoleHeight > 0, "Web console has a height > 0 when console is split");
     ok (!currentUIState.openedConsolePanel, "The console panel is not the current tool");
+    ok (currentUIState.buttonSelected, "The command button is selected");
 
     openPanel("webconsole").then(() => {
 
       let currentUIState = getCurrentUIState();
 
       ok (!currentUIState.splitterVisibility, "Splitter is hidden when console is opened.");
       is (currentUIState.deckHeight, 0, "Deck has a height == 0 when console is opened.");
       is (currentUIState.webconsoleHeight, currentUIState.containerHeight, "Web console is full height.");
       ok (currentUIState.openedConsolePanel, "The console panel is the current tool");
+      ok (currentUIState.buttonSelected, "The command button is still selected.");
 
       // Make sure splitting console does nothing while webconsole is opened
       toolbox.toggleSplitConsole();
 
       let currentUIState = getCurrentUIState();
 
       ok (!currentUIState.splitterVisibility, "Splitter is hidden when console is opened.");
       is (currentUIState.deckHeight, 0, "Deck has a height == 0 when console is opened.");
       is (currentUIState.webconsoleHeight, currentUIState.containerHeight, "Web console is full height.");
       ok (currentUIState.openedConsolePanel, "The console panel is the current tool");
+      ok (currentUIState.buttonSelected, "The command button is still selected.");
 
       // Make sure that split state is saved after opening another panel
       openPanel("inspector").then(() => {
         let currentUIState = getCurrentUIState();
         ok (currentUIState.splitterVisibility, "Splitter is visible when console is split");
         ok (currentUIState.deckHeight > 0, "Deck has a height > 0 when console is split");
         ok (currentUIState.webconsoleHeight > 0, "Web console has a height > 0 when console is split");
         ok (!currentUIState.openedConsolePanel, "The console panel is not the current tool");
+        ok (currentUIState.buttonSelected, "The command button is still selected.");
 
         toolbox.toggleSplitConsole();
         deferred.resolve();
 
       });
     });
     return deferred.promise;
   }
@@ -158,40 +164,42 @@ function test()
   function checkToolboxUI()
   {
     let currentUIState = getCurrentUIState();
 
     ok (!currentUIState.splitterVisibility, "Splitter is hidden by default");
     is (currentUIState.deckHeight, currentUIState.containerHeight, "Deck has a height > 0 by default");
     is (currentUIState.webconsoleHeight, 0, "Web console is collapsed by default");
     ok (!currentUIState.openedConsolePanel, "The console panel is not the current tool");
+    ok (!currentUIState.buttonSelected, "The command button is not selected.");
 
     toolbox.toggleSplitConsole();
 
     let currentUIState = getCurrentUIState();
 
     ok (currentUIState.splitterVisibility, "Splitter is visible when console is split");
     ok (currentUIState.deckHeight > 0, "Deck has a height > 0 when console is split");
     ok (currentUIState.webconsoleHeight > 0, "Web console has a height > 0 when console is split");
     is (currentUIState.deckHeight + currentUIState.webconsoleHeight,
           currentUIState.containerHeight,
         "Everything adds up to container height");
     ok (!currentUIState.openedConsolePanel, "The console panel is not the current tool");
+    ok (currentUIState.buttonSelected, "The command button is selected.");
 
     toolbox.toggleSplitConsole();
 
     let currentUIState = getCurrentUIState();
 
     ok (!currentUIState.splitterVisibility, "Splitter is hidden after toggling");
     is (currentUIState.deckHeight, currentUIState.containerHeight, "Deck has a height > 0 after toggling");
     is (currentUIState.webconsoleHeight, 0, "Web console is collapsed after toggling");
     ok (!currentUIState.openedConsolePanel, "The console panel is not the current tool");
+    ok (!currentUIState.buttonSelected, "The command button is not selected.");
   }
 
-
   function testBottomHost()
   {
     checkHostType(Toolbox.HostType.BOTTOM);
 
     checkToolboxUI();
 
     toolbox.switchHost(Toolbox.HostType.SIDE).then(testSidebarHost);
   }
diff --git a/browser/locales/en-US/chrome/browser/devtools/gclicommands.properties b/browser/locales/en-US/chrome/browser/devtools/gclicommands.properties
--- a/browser/locales/en-US/chrome/browser/devtools/gclicommands.properties
+++ b/browser/locales/en-US/chrome/browser/devtools/gclicommands.properties
@@ -1182,20 +1182,24 @@ paintflashingChromeDesc=chrome frames
 # LOCALIZATION NOTE (paintflashingManual) A longer description describing the
 # set of commands that control paint flashing.
 paintflashingManual=Draw repainted areas in different colors
 
 # LOCALIZATION NOTE (paintflashingTooltip) A string displayed as the
 # tooltip of button in devtools toolbox which toggles paint flashing.
 paintflashingTooltip=Highlight painted area
 
-# LOCALIZATION NOTE (paintflashingOnDesc) A very short string used to describe the
-# function of the "paintflashing on" command.
+# LOCALIZATION NOTE (paintflashingToggleDesc) A very short string used to describe the
+# function of the "paintflashing toggle" command.
 paintflashingToggleDesc=Toggle paint flashing
 
+# LOCALIZATION NOTE (splitconsoleTooltip) A string displayed as the
+# tooltip of button in devtools toolbox which toggles the split webconsole.
+splitconsoleTooltip=Toggle split console
+
 # LOCALIZATION NOTE (appCacheDesc) A very short string used to describe the
 # function of the "appcache" command
 appCacheDesc=Application cache utilities
 
 # LOCALIZATION NOTE (appCacheValidateDesc) A very short string used to describe
 # the function of the "appcache validate" command.
 appCacheValidateDesc=Validate cache manifest
 
diff --git a/browser/themes/linux/devtools/command-console.png b/browser/themes/linux/devtools/command-console.png
new file mode 100644
index 0000000000000000000000000000000000000000..265ab5c7b1968f393fb91c99d85bd1868e790685
GIT binary patch
literal 695
zc$@*Z0!aOdP)<h;3K|Lk000e1NJLTq002M$000mO1^@s6rssJn0000PbVXQnQ*UN;
zcVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBU!SxH1eRCwBA`Tzev!%zn5p))Ab&jKRY
zx%tR8;OEy*1FB!as|!Sl0kJNWCKkK`;>#>B-p3E`=a6bSzkpy0lKyjK=r=;r|A`F!
zu#nT`Hdo(6s{XGhZ@RD`@&5n~EG1Sm(81kkLVtn!ok-BX4^8MFP`@k*`X3{4#lC#~
z&hYc_k#pZaJibdvFQ<U4GP|vf5hG9^asd1T;?E=m;6E(<0n^X;?;it)pj;0SFDF88
zB*VXd%Rme!JPsnq1C;3hOQL>M_5Vn;9;$vA1ptZKq3Q=y0Q@0QKZ<(Bzoco0sUJQm
z;4g{Vq3T(v<^am|Q<egNNgCLsb0$)+GgLiF0Q>`1ExqJA0IGi<B`E-?|2Fw4;12_z
zns73Zl}wE0FJHf5qySJo+yG*{c>XMuU|q_|sfwi@4+Jq@zIahdNIwS$y9s)L0`;4N
zn`kdz^bpd|&dzR&ny3FVyg7IM=AWOR-*PJ|=@HV;#Kq2oQ3e2GpaxVIOGrvBXJlmh
zj}K!j1AzM1g7k|^NHjAsG5*7caioCbApK(E5(P|5On>oVY_))>p0YZZuyXsi`wzA;
zGc*3hhq2ZIz!+$Owz5K@4kU!pQ$R3Oe>sr)PXPbJ(vq}<>hC1NZj5%o>q~cU0$EO?
zI$HJ&|A1ED#s4s~0MOzJm}7uRl;m0fsDCAt{hy7EjU4@lVQf}bR#No80<{Fiv=r1q
z9mF3$elW1GGvhD7{(!=d@f8bF$D)UU0szz>Nuhpw3bbE-adgK5W)41XqD#;ppT3G{
ddR_(yFaXq#Q#&@V%y|F+002ovPDHLkV1i|uIRO9w

diff --git a/browser/themes/linux/jar.mn b/browser/themes/linux/jar.mn
--- a/browser/themes/linux/jar.mn
+++ b/browser/themes/linux/jar.mn
@@ -151,16 +151,17 @@ browser.jar:
 * skin/classic/browser/devtools/light-theme.css       (../shared/devtools/light-theme.css)
   skin/classic/browser/devtools/controls.png          (../shared/devtools/controls.png)
 * skin/classic/browser/devtools/widgets.css           (devtools/widgets.css)
   skin/classic/browser/devtools/commandline-icon.png  (devtools/commandline-icon.png)
   skin/classic/browser/devtools/command-paintflashing.png  (devtools/command-paintflashing.png)
   skin/classic/browser/devtools/command-responsivemode.png (devtools/command-responsivemode.png)
   skin/classic/browser/devtools/command-scratchpad.png (devtools/command-scratchpad.png)
   skin/classic/browser/devtools/command-tilt.png      (devtools/command-tilt.png)
+  skin/classic/browser/devtools/command-console.png   (devtools/command-console.png)
   skin/classic/browser/devtools/alerticon-warning.png (devtools/alerticon-warning.png)
   skin/classic/browser/devtools/ruleview.css          (devtools/ruleview.css)
 * skin/classic/browser/devtools/webconsole.css                  (devtools/webconsole.css)
   skin/classic/browser/devtools/webconsole_networkpanel.css     (devtools/webconsole_networkpanel.css)
   skin/classic/browser/devtools/webconsole.png                  (devtools/webconsole.png)
   skin/classic/browser/devtools/commandline.css              (devtools/commandline.css)
   skin/classic/browser/devtools/markup-view.css       (../shared/devtools/markup-view.css)
   skin/classic/browser/devtools/editor-error.png       (devtools/editor-error.png)
diff --git a/browser/themes/osx/devtools/command-console.png b/browser/themes/osx/devtools/command-console.png
new file mode 100644
index 0000000000000000000000000000000000000000..265ab5c7b1968f393fb91c99d85bd1868e790685
GIT binary patch
literal 695
zc$@*Z0!aOdP)<h;3K|Lk000e1NJLTq002M$000mO1^@s6rssJn0000PbVXQnQ*UN;
zcVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBU!SxH1eRCwBA`Tzev!%zn5p))Ab&jKRY
zx%tR8;OEy*1FB!as|!Sl0kJNWCKkK`;>#>B-p3E`=a6bSzkpy0lKyjK=r=;r|A`F!
zu#nT`Hdo(6s{XGhZ@RD`@&5n~EG1Sm(81kkLVtn!ok-BX4^8MFP`@k*`X3{4#lC#~
z&hYc_k#pZaJibdvFQ<U4GP|vf5hG9^asd1T;?E=m;6E(<0n^X;?;it)pj;0SFDF88
zB*VXd%Rme!JPsnq1C;3hOQL>M_5Vn;9;$vA1ptZKq3Q=y0Q@0QKZ<(Bzoco0sUJQm
z;4g{Vq3T(v<^am|Q<egNNgCLsb0$)+GgLiF0Q>`1ExqJA0IGi<B`E-?|2Fw4;12_z
zns73Zl}wE0FJHf5qySJo+yG*{c>XMuU|q_|sfwi@4+Jq@zIahdNIwS$y9s)L0`;4N
zn`kdz^bpd|&dzR&ny3FVyg7IM=AWOR-*PJ|=@HV;#Kq2oQ3e2GpaxVIOGrvBXJlmh
zj}K!j1AzM1g7k|^NHjAsG5*7caioCbApK(E5(P|5On>oVY_))>p0YZZuyXsi`wzA;
zGc*3hhq2ZIz!+$Owz5K@4kU!pQ$R3Oe>sr)PXPbJ(vq}<>hC1NZj5%o>q~cU0$EO?
zI$HJ&|A1ED#s4s~0MOzJm}7uRl;m0fsDCAt{hy7EjU4@lVQf}bR#No80<{Fiv=r1q
z9mF3$elW1GGvhD7{(!=d@f8bF$D)UU0szz>Nuhpw3bbE-adgK5W)41XqD#;ppT3G{
ddR_(yFaXq#Q#&@V%y|F+002ovPDHLkV1i|uIRO9w

diff --git a/browser/themes/osx/jar.mn b/browser/themes/osx/jar.mn
--- a/browser/themes/osx/jar.mn
+++ b/browser/themes/osx/jar.mn
@@ -253,16 +253,17 @@ browser.jar:
 * skin/classic/browser/devtools/light-theme.css             (../shared/devtools/light-theme.css)
   skin/classic/browser/devtools/controls.png                (../shared/devtools/controls.png)
 * skin/classic/browser/devtools/widgets.css                 (devtools/widgets.css)
   skin/classic/browser/devtools/commandline-icon.png        (devtools/commandline-icon.png)
   skin/classic/browser/devtools/command-paintflashing.png   (devtools/command-paintflashing.png)
   skin/classic/browser/devtools/command-responsivemode.png  (devtools/command-responsivemode.png)
   skin/classic/browser/devtools/command-scratchpad.png      (devtools/command-scratchpad.png)
   skin/classic/browser/devtools/command-tilt.png            (devtools/command-tilt.png)
+  skin/classic/browser/devtools/command-console.png         (devtools/command-console.png)
   skin/classic/browser/devtools/alerticon-warning.png       (devtools/alerticon-warning.png)
   skin/classic/browser/devtools/ruleview.css                (devtools/ruleview.css)
   skin/classic/browser/devtools/commandline.css             (devtools/commandline.css)
   skin/classic/browser/devtools/markup-view.css             (../shared/devtools/markup-view.css)
   skin/classic/browser/devtools/editor-error.png             (devtools/editor-error.png)
   skin/classic/browser/devtools/editor-breakpoint.png        (devtools/editor-breakpoint.png)
   skin/classic/browser/devtools/editor-debug-location.png    (devtools/editor-debug-location.png)
 * skin/classic/browser/devtools/webconsole.css                  (devtools/webconsole.css)
diff --git a/browser/themes/shared/devtools/toolbars.inc.css b/browser/themes/shared/devtools/toolbars.inc.css
--- a/browser/themes/shared/devtools/toolbars.inc.css
+++ b/browser/themes/shared/devtools/toolbars.inc.css
@@ -436,16 +436,33 @@
 #command-button-scratchpad:hover {
   -moz-image-region: rect(0px, 32px, 16px, 16px);
 }
 
 #command-button-scratchpad:hover:active {
   -moz-image-region: rect(0px, 48px, 16px, 32px);
 }
 
+#command-button-splitconsole {
+  list-style-image: url("chrome://browser/skin/devtools/command-console.png");
+  -moz-image-region: rect(0px, 16px, 16px, 0px);
+}
+
+#command-button-splitconsole:hover {
+  -moz-image-region: rect(0px, 32px, 16px, 16px);
+}
+
+#command-button-splitconsole:hover:active {
+  -moz-image-region: rect(0px, 48px, 16px, 32px);
+}
+
+#command-button-splitconsole[checked=true] {
+  -moz-image-region: rect(0px, 64px, 16px, 48px);
+}
+
 /* Tabs */
 
 .devtools-tabbar {
   -moz-appearance: none;
   background-image: url("background-noise-toolbar.png"),
                     linear-gradient(#303840, #2d3640);
   border-color: #060a0d;
   border-style: solid;
diff --git a/browser/themes/windows/devtools/command-console.png b/browser/themes/windows/devtools/command-console.png
new file mode 100644
index 0000000000000000000000000000000000000000..265ab5c7b1968f393fb91c99d85bd1868e790685
GIT binary patch
literal 695
zc$@*Z0!aOdP)<h;3K|Lk000e1NJLTq002M$000mO1^@s6rssJn0000PbVXQnQ*UN;
zcVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBU!SxH1eRCwBA`Tzev!%zn5p))Ab&jKRY
zx%tR8;OEy*1FB!as|!Sl0kJNWCKkK`;>#>B-p3E`=a6bSzkpy0lKyjK=r=;r|A`F!
zu#nT`Hdo(6s{XGhZ@RD`@&5n~EG1Sm(81kkLVtn!ok-BX4^8MFP`@k*`X3{4#lC#~
z&hYc_k#pZaJibdvFQ<U4GP|vf5hG9^asd1T;?E=m;6E(<0n^X;?;it)pj;0SFDF88
zB*VXd%Rme!JPsnq1C;3hOQL>M_5Vn;9;$vA1ptZKq3Q=y0Q@0QKZ<(Bzoco0sUJQm
z;4g{Vq3T(v<^am|Q<egNNgCLsb0$)+GgLiF0Q>`1ExqJA0IGi<B`E-?|2Fw4;12_z
zns73Zl}wE0FJHf5qySJo+yG*{c>XMuU|q_|sfwi@4+Jq@zIahdNIwS$y9s)L0`;4N
zn`kdz^bpd|&dzR&ny3FVyg7IM=AWOR-*PJ|=@HV;#Kq2oQ3e2GpaxVIOGrvBXJlmh
zj}K!j1AzM1g7k|^NHjAsG5*7caioCbApK(E5(P|5On>oVY_))>p0YZZuyXsi`wzA;
zGc*3hhq2ZIz!+$Owz5K@4kU!pQ$R3Oe>sr)PXPbJ(vq}<>hC1NZj5%o>q~cU0$EO?
zI$HJ&|A1ED#s4s~0MOzJm}7uRl;m0fsDCAt{hy7EjU4@lVQf}bR#No80<{Fiv=r1q
z9mF3$elW1GGvhD7{(!=d@f8bF$D)UU0szz>Nuhpw3bbE-adgK5W)41XqD#;ppT3G{
ddR_(yFaXq#Q#&@V%y|F+002ovPDHLkV1i|uIRO9w

diff --git a/browser/themes/windows/jar.mn b/browser/themes/windows/jar.mn
--- a/browser/themes/windows/jar.mn
+++ b/browser/themes/windows/jar.mn
@@ -181,16 +181,17 @@ browser.jar:
         skin/classic/browser/devtools/commandline-icon.png          (devtools/commandline-icon.png)
         skin/classic/browser/devtools/alerticon-warning.png         (devtools/alerticon-warning.png)
         skin/classic/browser/devtools/ruleview.css                  (devtools/ruleview.css)
         skin/classic/browser/devtools/commandline.css               (devtools/commandline.css)
         skin/classic/browser/devtools/command-paintflashing.png     (devtools/command-paintflashing.png)
         skin/classic/browser/devtools/command-responsivemode.png    (devtools/command-responsivemode.png)
         skin/classic/browser/devtools/command-scratchpad.png        (devtools/command-scratchpad.png)
         skin/classic/browser/devtools/command-tilt.png              (devtools/command-tilt.png)
+        skin/classic/browser/devtools/command-console.png           (devtools/command-console.png)
         skin/classic/browser/devtools/markup-view.css               (../shared/devtools/markup-view.css)
         skin/classic/browser/devtools/editor-error.png               (devtools/editor-error.png)
         skin/classic/browser/devtools/editor-breakpoint.png          (devtools/editor-breakpoint.png)
         skin/classic/browser/devtools/editor-debug-location.png      (devtools/editor-debug-location.png)
 *       skin/classic/browser/devtools/webconsole.css                  (devtools/webconsole.css)
         skin/classic/browser/devtools/webconsole_networkpanel.css     (devtools/webconsole_networkpanel.css)
         skin/classic/browser/devtools/webconsole.png                  (devtools/webconsole.png)
         skin/classic/browser/devtools/breadcrumbs-scrollbutton.png                 (devtools/breadcrumbs-scrollbutton.png)
@@ -482,16 +483,17 @@ browser.jar:
 *       skin/classic/aero/browser/devtools/light-theme.css           (../shared/devtools/light-theme.css)
         skin/classic/aero/browser/devtools/controls.png              (../shared/devtools/controls.png)
 *       skin/classic/aero/browser/devtools/widgets.css               (devtools/widgets.css)
         skin/classic/aero/browser/devtools/commandline-icon.png      (devtools/commandline-icon.png)
         skin/classic/aero/browser/devtools/command-paintflashing.png  (devtools/command-paintflashing.png)
         skin/classic/aero/browser/devtools/command-responsivemode.png (devtools/command-responsivemode.png)
         skin/classic/aero/browser/devtools/command-scratchpad.png    (devtools/command-scratchpad.png)
         skin/classic/aero/browser/devtools/command-tilt.png          (devtools/command-tilt.png)
+        skin/classic/aero/browser/devtools/command-console.png       (devtools/command-console.png)
         skin/classic/aero/browser/devtools/alerticon-warning.png     (devtools/alerticon-warning.png)
         skin/classic/aero/browser/devtools/ruleview.css              (devtools/ruleview.css)
         skin/classic/aero/browser/devtools/commandline.css           (devtools/commandline.css)
         skin/classic/aero/browser/devtools/markup-view.css           (../shared/devtools/markup-view.css)
         skin/classic/aero/browser/devtools/editor-error.png           (devtools/editor-error.png)
         skin/classic/aero/browser/devtools/editor-breakpoint.png      (devtools/editor-breakpoint.png)
         skin/classic/aero/browser/devtools/editor-debug-location.png  (devtools/editor-debug-location.png)
 *       skin/classic/aero/browser/devtools/webconsole.css                  (devtools/webconsole.css)
