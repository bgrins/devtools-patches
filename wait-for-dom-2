# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  95301d8052055fc5d5f131e123c0c35eef359978
Allow a CE to wait for DOMContentLoaded before initialization

diff --git a/toolkit/content/customElements.js b/toolkit/content/customElements.js
--- a/toolkit/content/customElements.js
+++ b/toolkit/content/customElements.js
@@ -11,17 +11,51 @@
 {
 
 ChromeUtils.import("resource://gre/modules/Services.jsm");
 ChromeUtils.import("resource://gre/modules/AppConstants.jsm");
 
 const gXULDOMParser = new DOMParser();
 gXULDOMParser.forceEnableXULXBL();
 
+// We can't just check document.readyState in connectedCallback, because
+// in XUL documents document.readyState is still unitialized during the
+// DOMContentLoaded listeners (so we would incorrectly miss firing the
+// connectedCallbacks for elements inserted during a page's handler).
+let hasDOMContentLoaded = false;
+const lazyConnectedElements = new Set();
+window.addEventListener("DOMContentLoaded", (e) => {
+  if (e.originalTarget != document) {
+    return;
+  }
+
+  hasDOMContentLoaded = true;
+  for (let el of lazyConnectedElements) {
+    if (el.isConnected) {
+      el.connectedCallback();
+    }
+  }
+  lazyConnectedElements.clear();
+}, true);
+
 class MozXULElement extends XULElement {
+
+  /**
+   * If a Custom Element requests it, then don't fire connectedCallback until after
+   * DOMContentLoaded fires
+   **/
+  scheduleConnectedCallbackOnDOMContentLoaded() {
+    if (hasDOMContentLoaded) {
+      return false;
+    }
+
+    lazyConnectedElements.add(this);
+    return true;
+  }
+
   /**
    * Allows eager deterministic construction of XUL elements with XBL attached, by
    * parsing an element tree and returning a DOM fragment to be inserted in the
    * document before any of the inner elements is referenced by JavaScript.
    *
    * This process is required instead of calling the createElement method directly
    * because bindings get attached when:
    *
