diff --git a/devtools/client/framework/ToolboxProcess.jsm b/devtools/client/framework/ToolboxProcess.jsm
--- a/devtools/client/framework/ToolboxProcess.jsm
+++ b/devtools/client/framework/ToolboxProcess.jsm
@@ -6,7 +6,7 @@
 
 "use strict";
 
-const DBG_XUL = "chrome://devtools/content/framework/toolbox-process-window.xul";
+const DBG_XUL = "chrome://devtools/content/framework/toolbox-process-window.html";
 const CHROME_DEBUGGER_PROFILE_NAME = "chrome_debugger_profile";
 
 const { require, DevToolsLoader } = ChromeUtils.import("resource://devtools/shared/Loader.jsm", {});
diff --git a/devtools/client/framework/toolbox-process-window.xul b/devtools/client/framework/toolbox-process-window.html
rename from devtools/client/framework/toolbox-process-window.xul
rename to devtools/client/framework/toolbox-process-window.html
--- a/devtools/client/framework/toolbox-process-window.xul
+++ b/devtools/client/framework/toolbox-process-window.html
@@ -1,49 +1,26 @@
-<?xml version="1.0" encoding="utf-8"?>
 <!-- This Source Code Form is subject to the terms of the Mozilla Public
    - License, v. 2.0. If a copy of the MPL was not distributed with this
    - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
-<!DOCTYPE window [
-<!ENTITY % toolboxDTD SYSTEM "chrome://devtools/locale/toolbox.dtd" >
- %toolboxDTD;
-]>
-
-<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
-
-<!-- minwidth=50 is sum width of chevron and meatball menu button. -->
-<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
-        id="devtools-toolbox-window"
-        macanimationtype="document"
-        fullscreenbutton="true"
-        windowtype="devtools:toolbox"
-        width="900" height="600"
-        persist="screenX screenY width height sizemode"
-        minwidth="50">
-
-  <script type="text/javascript" src="chrome://global/content/globalOverlay.js"/>
-  <script type="text/javascript" src="toolbox-process-window.js"/>
-  <script type="text/javascript" src="chrome://global/content/viewSourceUtils.js"/>
-  <script type="text/javascript" src="chrome://browser/content/utilityOverlay.js"/>
-
-  <commandset id="toolbox-commandset">
-    <command id="toolbox-cmd-close"/>
-  </commandset>
-
-  <keyset id="toolbox-keyset">
-    <key id="toolbox-key-close"
-         key="&closeCmd.key;"
-         command="toolbox-cmd-close"
-         modifiers="accel"/>
-  </keyset>
-
-  <!-- This will be used by the Web Console to hold any popups it may create,
-       for example when viewing network request details. -->
-  <popupset id="mainPopupSet"></popupset>
-
-  <vbox id="status-message-container" hidden="true" flex="1">
-    <box>&browserToolboxStatusMessage;</box>
-    <textbox multiline="true" id="status-message" flex="1"></textbox>
-  </vbox>
-
-  <tooltip id="aHTMLTooltip" page="true"/>
-  <iframe id="toolbox-iframe" flex="1" tooltip="aHTMLTooltip"></iframe>
-</window>
+<!DOCTYPE html>
+<html id="devtools-toolbox-window"
+      windowtype="devtools:toolbox"
+      width="900" height="350"
+      persist="screenX screenY width height sizemode"
+      minwidth="50">
+  <head>
+    <link rel="stylesheet" href="chrome://global/skin/"/>
+    <link rel="stylesheet" href="resource://devtools/client/themes/common.css"/>
+    <link rel="stylesheet" href="chrome://devtools/content/framework/toolbox-process-window.css"/>
+    <script type="text/javascript" src="chrome://global/content/globalOverlay.js"/>
+    <script type="text/javascript" src="toolbox-process-window.js"/>
+    <script type="text/javascript" src="chrome://global/content/viewSourceUtils.js"/>
+    <script type="text/javascript" src="chrome://browser/content/utilityOverlay.js"/>
+  </head>
+  <body>
+    <div id="status-message-container" hidden="true">
+      <div id="status-message-title"></div>
+      <pre id="status-message"></pre>
+    </div>
+    <iframe id="toolbox-iframe"></iframe>
+  </body>
+</html>
diff --git a/devtools/client/framework/toolbox-process-window.css b/devtools/client/framework/toolbox-process-window.css
new file mode 100644
--- /dev/null
+++ b/devtools/client/framework/toolbox-process-window.css
@@ -0,0 +1,47 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+body {
+  padding: 0;
+  margin: 0;
+  display: flex;
+  height: 100vh;
+}
+
+/**
+ * The main content of the BrowserToolbox runs within an iframe.
+ */
+#toolbox-iframe {
+  border: 0;
+  width: 100%;
+  flex: 1;
+}
+
+/**
+ * Status message shows connection (to the backend) info messages.
+ */
+#status-message-container {
+  width: calc(100% - 10px);
+  font-family: var(--monospace-font-family);
+  padding: 5px;
+}
+
+/**
+ * Helper for hiding/showing the status message.
+ */
+#status-message-container[hidden="true"] {
+  display: none;
+}
+
+#status-message-title {
+  font-size: 14px;
+  font-weight: bold;
+}
+
+#status-message {
+  font-size: 12px;
+  width: 100%;
+  height: 200px;
+  overflow: auto;
+}
diff --git a/devtools/client/framework/toolbox-process-window.js b/devtools/client/framework/toolbox-process-window.js
--- a/devtools/client/framework/toolbox-process-window.js
+++ b/devtools/client/framework/toolbox-process-window.js
@@ -7,6 +7,7 @@
 "use strict";
 
 var { loader, require } = ChromeUtils.import("resource://devtools/shared/Loader.jsm", {});
+
 // Require this module to setup core modules
 loader.require("devtools/client/framework/devtools-browser");
 
@@ -16,6 +17,9 @@
 var Services = require("Services");
 var { DebuggerClient } = require("devtools/shared/client/debugger-client");
 var { PrefsHelper } = require("devtools/client/shared/prefs");
+const KeyShortcuts = require("devtools/client/shared/key-shortcuts");
+const { LocalizationHelper } = require("devtools/shared/l10n");
+const L10N = new LocalizationHelper("devtools/client/locales/toolbox.properties");
 
 // Timeout to wait before we assume that a connect() timed out without an error.
 // In milliseconds. (With the Debugger pane open, this has been reported to last
@@ -30,19 +34,23 @@
   chromeDebuggingWebSocket: ["Bool", "chrome-debugging-websocket"],
 });
 
-var gToolbox, gClient;
+var gToolbox, gClient, gShortcuts;
 
 function appendStatusMessage(msg) {
   const statusMessage = document.getElementById("status-message");
-  statusMessage.value += msg + "\n";
+  statusMessage.textContent += msg + "\n";
   if (msg.stack) {
-    statusMessage.value += msg.stack + "\n";
+    statusMessage.textContent += msg.stack + "\n";
   }
 }
 
 function toggleStatusMessage(visible = true) {
   const statusMessageContainer = document.getElementById("status-message-container");
-  statusMessageContainer.hidden = !visible;
+  if (visible) {
+    statusMessageContainer.removeAttribute("hidden");
+  } else {
+    statusMessageContainer.setAttribute("hidden", "true");
+  }
 }
 
 function revealStatusMessage() {
@@ -62,7 +70,7 @@
 
   // A port needs to be passed in from the environment, for instance:
   //    MOZ_BROWSER_TOOLBOX_PORT=6080 ./mach run -chrome \
-  //      chrome://devtools/content/framework/toolbox-process-window.xul
+  //      chrome://devtools/content/framework/toolbox-process-window.html
   if (!port) {
     throw new Error("Must pass a port in an env variable with MOZ_BROWSER_TOOLBOX_PORT");
   }
@@ -108,9 +116,14 @@
 }
 
 window.addEventListener("load", async function() {
-  const cmdClose = document.getElementById("toolbox-cmd-close");
-  cmdClose.addEventListener("command", onCloseCommand);
+  gShortcuts = new KeyShortcuts({window});
+  gShortcuts.on("CmdOrCtrl+W", onCloseCommand);
+
+  const statusMessageContainer = document.getElementById("status-message-title");
+  statusMessageContainer.textContent = L10N.getStr("browserToolbox.statusMessage");
+
   setPrefDefaults();
+
   // Reveal status message if connecting is slow or if an error occurs.
   const delayedStatusReveal = setTimeout(revealStatusMessage, STATUS_REVEAL_TIME);
   try {
@@ -222,8 +235,6 @@
 function onUnload() {
   window.removeEventListener("unload", onUnload);
   window.removeEventListener("message", onMessage);
-  const cmdClose = document.getElementById("toolbox-cmd-close");
-  cmdClose.removeEventListener("command", onCloseCommand);
   gToolbox.destroy();
 }
 
diff --git a/devtools/client/jar.mn b/devtools/client/jar.mn
--- a/devtools/client/jar.mn
+++ b/devtools/client/jar.mn
@@ -77,7 +77,8 @@
 *   content/framework/toolbox.xul (framework/toolbox.xul)
     content/framework/toolbox-init.js (framework/toolbox-init.js)
     content/framework/options-panel.css (framework/options-panel.css)
-    content/framework/toolbox-process-window.xul (framework/toolbox-process-window.xul)
+    content/framework/toolbox-process-window.html (framework/toolbox-process-window.html)
+    content/framework/toolbox-process-window.css (framework/toolbox-process-window.css)
     content/framework/toolbox-process-window.js (framework/toolbox-process-window.js)
     content/inspector/index.xhtml (inspector/index.xhtml)
     content/framework/connect/connect.xhtml (framework/connect/connect.xhtml)
diff --git a/devtools/client/locales/en-US/toolbox.dtd b/devtools/client/locales/en-US/toolbox.dtd
--- a/devtools/client/locales/en-US/toolbox.dtd
+++ b/devtools/client/locales/en-US/toolbox.dtd
@@ -10,11 +10,6 @@
 <!ENTITY toggleToolboxF12.keycode          "VK_F12">
 <!ENTITY toggleToolboxF12.keytext          "F12">
 
-<!-- LOCALIZATION NOTE (browserToolboxStatusMessage): This is the label
-  -  shown next to status details when the Browser Toolbox fails to connect or
-  -  appears to be taking a while to do so. -->
-<!ENTITY browserToolboxStatusMessage "Browser Toolbox connection status:">
-
 <!-- LOCALIZATION NOTE (options.context.advancedSettings): This is the label for
   -  the heading of the advanced settings group in the options panel. -->
 <!ENTITY options.context.advancedSettings "Advanced settings">
diff --git a/devtools/client/locales/en-US/toolbox.properties b/devtools/client/locales/en-US/toolbox.properties
--- a/devtools/client/locales/en-US/toolbox.properties
+++ b/devtools/client/locales/en-US/toolbox.properties
@@ -184,3 +184,8 @@
 # checkbox to enable the new debugger frontend. Displayed only in Nightly and local
 # builds.
 toolbox.options.enableNewDebugger.label=Enable new debugger frontend
+
+# LOCALIZATION NOTE (browserToolbox.statusMessage): This is the label
+# shown next to status details when the Browser Toolbox fails to connect or
+# appears to be taking a while to do so.
+browserToolbox.statusMessage=Browser Toolbox connection status:
\ No newline at end of file
diff --git a/devtools/client/webconsole/webconsole.js b/devtools/client/webconsole/webconsole.js
--- a/devtools/client/webconsole/webconsole.js
+++ b/devtools/client/webconsole/webconsole.js
@@ -84,14 +84,6 @@
   },
 
   /**
-   * Getter for the xul:popupset that holds any popups we open.
-   * @type Element
-   */
-  get mainPopupSet() {
-    return this.chromeUtilsWindow.document.getElementById("mainPopupSet");
-  },
-
-  /**
    * Getter for the output element that holds messages we display.
    * @type Element
    */
@@ -286,15 +278,6 @@
     this._destroyer = (async () => {
       this.hudService.consoles.delete(this.hudId);
 
-      // The document may already be removed
-      if (this.chromeUtilsWindow && this.mainPopupSet) {
-        const popupset = this.mainPopupSet;
-        const panels = popupset.querySelectorAll("panel[hudId=" + this.hudId + "]");
-        for (const panel of panels) {
-          panel.hidePopup();
-        }
-      }
-
       if (this.ui) {
         await this.ui.destroy();
       }

