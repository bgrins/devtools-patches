# HG changeset patch
# Parent 3644435f935b5bf78d1ded1940ea63a63a70e0e0
# User Brian Grinstead <bgrinstead@mozilla.com>
more leak checks

diff --git a/browser/base/content/browser-devedition.js b/browser/base/content/browser-devedition.js
--- a/browser/base/content/browser-devedition.js
+++ b/browser/base/content/browser-devedition.js
@@ -76,35 +76,41 @@ let DevEdition = {
     } catch(e) {}
 
     let deveditionThemeEnabled = Services.prefs.getBoolPref(this._prefName) &&
       !lightweightThemeSelected && defaultThemeSelected && devtoolsIsDark;
 
     this._toggleStyleSheet(deveditionThemeEnabled);
   },
 
+  handleEvent: function() {
+    this.styleSheet.removeEventListener("load", this);
+    gBrowser.tabContainer._positionPinnedTabs();
+    ToolbarIconColor.inferFromText();
+  },
+
   _toggleStyleSheet: function(deveditionThemeEnabled) {
     if (deveditionThemeEnabled && !this.styleSheet) {
       let styleSheetAttr = `href="${this.styleSheetLocation}" type="text/css"`;
-      let styleSheet = this.styleSheet = document.createProcessingInstruction(
+      this.styleSheet = document.createProcessingInstruction(
         'xml-stylesheet', styleSheetAttr);
-      this.styleSheet.addEventListener("load", function onLoad() {
-        styleSheet.removeEventListener("load", onLoad);
-        gBrowser.tabContainer._positionPinnedTabs();
-        ToolbarIconColor.inferFromText();
-      });
+      this.styleSheet.addEventListener("load", this);
       document.insertBefore(this.styleSheet, document.documentElement);
     } else if (!deveditionThemeEnabled && this.styleSheet) {
+      this.styleSheet.removeEventListener("load", this);
       this.styleSheet.remove();
       this.styleSheet = null;
       gBrowser.tabContainer._positionPinnedTabs();
       ToolbarIconColor.inferFromText();
     }
   },
 
   uninit: function () {
     Services.prefs.removeObserver(this._lwThemePrefName, this);
     Services.prefs.removeObserver(this._prefName, this);
     Services.prefs.removeObserver(this._devtoolsThemePrefName, this);
     Services.obs.removeObserver(this, "lightweight-theme-styling-update", false);
+    if (this.styleSheet) {
+      this.styleSheet.removeEventListener("load", this);
+    }
     this.styleSheet = null;
   }
 };
diff --git a/browser/base/content/test/general/browser_devedition.js b/browser/base/content/test/general/browser_devedition.js
--- a/browser/base/content/test/general/browser_devedition.js
+++ b/browser/base/content/test/general/browser_devedition.js
@@ -103,16 +103,17 @@ function dummyLightweightTheme(id) {
 function testLightweightThemePreview() {
   let {LightweightThemeManager} = Components.utils.import("resource://gre/modules/LightweightThemeManager.jsm", {});
 
   info ("Turning the pref on, then previewing lightweight themes");
   Services.prefs.setBoolPref(PREF_DEVEDITION_THEME, true);
   ok (DevEdition.styleSheet, "The devedition stylesheet is enabled.");
   LightweightThemeManager.previewTheme(dummyLightweightTheme("preview0"));
   ok (!DevEdition.styleSheet, "The devedition stylesheet is not enabled after a lightweight theme preview.");
+  LightweightThemeManager.resetPreview();
   LightweightThemeManager.previewTheme(dummyLightweightTheme("preview1"));
   ok (!DevEdition.styleSheet, "The devedition stylesheet is not enabled after a second lightweight theme preview.");
   LightweightThemeManager.resetPreview();
   ok (DevEdition.styleSheet, "The devedition stylesheet is enabled again after resetting the preview.");
 
   info ("Turning the pref on, then previewing a theme, turning it off and resetting the preview");
   Services.prefs.setBoolPref(PREF_DEVEDITION_THEME, true);
   ok (DevEdition.styleSheet, "The devedition stylesheet is enabled.");
