# HG changeset patch
# Parent fb0c8a1ce9a17b91187d309bf9bd8c255f71e7bb
# User Brian Grinstead <bgrinstead@mozilla.com>
more leak checks

diff --git a/browser/base/content/browser-devedition.js b/browser/base/content/browser-devedition.js
--- a/browser/base/content/browser-devedition.js
+++ b/browser/base/content/browser-devedition.js
@@ -14,16 +14,17 @@ let DevEdition = {
 
   styleSheetLocation: "chrome://browser/skin/devedition.css",
   styleSheet: null,
   defaultThemeID: "{972ce4c6-7e08-4474-a285-3208198ce6fd}",
 
   init: function () {
     this._updateDevtoolsThemeAttribute();
     this._updateStyleSheetFromPrefs();
+    this._onStyleSheetLoad = this._onStyleSheetLoad.bind(this);
 
     // Listen for changes to all prefs except for complete themes.
     // No need for this since changing a complete theme requires a
     // restart.
     Services.prefs.addObserver(this._lwThemePrefName, this, false);
     Services.prefs.addObserver(this._prefName, this, false);
     Services.prefs.addObserver(this._devtoolsThemePrefName, this, false);
     Services.obs.addObserver(this, "lightweight-theme-styling-update", false);
@@ -76,35 +77,39 @@ let DevEdition = {
     } catch(e) {}
 
     let deveditionThemeEnabled = Services.prefs.getBoolPref(this._prefName) &&
       !lightweightThemeSelected && defaultThemeSelected && devtoolsIsDark;
 
     this._toggleStyleSheet(deveditionThemeEnabled);
   },
 
+  _onStyleSheetLoad: function() {
+    this.styleSheet.removeEventListener("load", this._onStyleSheetLoad);
+    gBrowser.tabContainer._positionPinnedTabs();
+    ToolbarIconColor.inferFromText();
+  },
+
   _toggleStyleSheet: function(deveditionThemeEnabled) {
     if (deveditionThemeEnabled && !this.styleSheet) {
       let styleSheetAttr = `href="${this.styleSheetLocation}" type="text/css"`;
-      let styleSheet = this.styleSheet = document.createProcessingInstruction(
+      this.styleSheet = document.createProcessingInstruction(
         'xml-stylesheet', styleSheetAttr);
-      this.styleSheet.addEventListener("load", function onLoad() {
-        styleSheet.removeEventListener("load", onLoad);
-        gBrowser.tabContainer._positionPinnedTabs();
-        ToolbarIconColor.inferFromText();
-      });
+      this.styleSheet.addEventListener("load", this._onStyleSheetLoad);
       document.insertBefore(this.styleSheet, document.documentElement);
     } else if (!deveditionThemeEnabled && this.styleSheet) {
+      this.styleSheet.removeEventListener("load", this._onStyleSheetLoad);
       this.styleSheet.remove();
       this.styleSheet = null;
       gBrowser.tabContainer._positionPinnedTabs();
       ToolbarIconColor.inferFromText();
     }
   },
 
   uninit: function () {
     Services.prefs.removeObserver(this._lwThemePrefName, this);
     Services.prefs.removeObserver(this._prefName, this);
     Services.prefs.removeObserver(this._devtoolsThemePrefName, this);
     Services.obs.removeObserver(this, "lightweight-theme-styling-update", false);
+    this.styleSheet.removeEventListener("load", this._onStyleSheetLoad);
     this.styleSheet = null;
   }
 };
