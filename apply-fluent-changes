# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  0afac2a9761fdd1ba4529a6c8b5f3896707c9d4e

diff --git a/browser/base/content/browser.xul b/browser/base/content/browser.xul
--- a/browser/base/content/browser.xul
+++ b/browser/base/content/browser.xul
@@ -57,19 +57,16 @@
         windowtype="navigator:browser"
         macanimationtype="document"
         screenX="4" screenY="4"
         fullscreenbutton="true"
         sizemode="normal"
         retargetdocumentfocus="urlbar"
         persist="screenX screenY width height sizemode">
 
-<link rel="localization" href="toolkit/main-window/findbar.ftl"/>
-<script type="application/javascript" src="chrome://global/content/l10n.js"></script>
-
 # All JS files which are needed by browser.xul and other top level windows to
 # support MacOS specific features *must* go into the global-scripts.inc file so
 # that they can be shared with macWindow.inc.xul.
 #include global-scripts.inc
 
 <script type="application/javascript">
   Services.scriptloader.loadSubScript("chrome://global/content/contentAreaUtils.js", this);
   Services.scriptloader.loadSubScript("chrome://browser/content/tabbrowser.js", this);
diff --git a/toolkit/content/customElements.js b/toolkit/content/customElements.js
--- a/toolkit/content/customElements.js
+++ b/toolkit/content/customElements.js
@@ -53,16 +53,44 @@ class MozXULElement extends XULElement {
       currentNode = nodeIterator.nextNode();
     }
     // We use a range here so that we don't access the inner DOM elements from
     // JavaScript before they are imported and inserted into a document.
     let range = doc.createRange();
     range.selectNodeContents(doc.firstChild);
     return range.extractContents();
   }
+
+  static appendFluentLink(url) {
+    const HTML_NS = "http://www.w3.org/1999/xhtml";
+    let linkset = document.querySelector("linkset");
+    if (!linkset) {
+      linkset = document.createElement("linkset");
+      document.documentElement.prepend(linkset);
+    }
+
+    let link = null;
+    for (let i = 0; i < linkset.children.length; i++) {
+      console.log("LOOKING AT", linkset.children[i].getAttribute("href"), url)
+      if (linkset.children[i].getAttribute("href") === url) {
+        link = linkset.children[i];
+        console.log("Matched");
+        break;
+      }
+    }
+
+    if (!link) {
+      link = document.createElementNS(HTML_NS, "link");
+      link.setAttribute("href", url);
+      link.setAttribute("rel", "localization");
+      linkset.appendChild(link);
+    }
+
+    return link;
+  }
 }
 
 // Attach the base class to the window so other scripts can use it:
 window.MozXULElement = MozXULElement;
 
 for (let script of [
   "chrome://global/content/elements/general.js",
 ]) {
diff --git a/toolkit/content/widgets/findbar.js b/toolkit/content/widgets/findbar.js
--- a/toolkit/content/widgets/findbar.js
+++ b/toolkit/content/widgets/findbar.js
@@ -4,19 +4,20 @@
 
 "use strict";
 
 // Wrap to prevent accidentally leaking to window scope:
 {
 
 ChromeUtils.import("resource://gre/modules/Services.jsm");
 
-class MozFindbar extends XULElement {
+class MozFindbar extends MozXULElement {
   constructor() {
     super();
+    MozXULElement.appendFluentLink("toolkit/main-window/findbar.ftl");
     this.content = MozXULElement.parseXULToFragment(`
       <hbox anonid="findbar-container" class="findbar-container" flex="1" align="center">
         <hbox anonid="findbar-textbox-wrapper" align="stretch">
           <textbox anonid="findbar-textbox" class="findbar-textbox findbar-find-fast" />
           <toolbarbutton anonid="find-previous" class="findbar-find-previous tabbable" data-l10n-attrs="tooltiptext" data-l10n-id="findbar-previous" oncommand="onFindAgainCommand(true);" disabled="true" />
           <toolbarbutton anonid="find-next" class="findbar-find-next tabbable" data-l10n-id="findbar-next" oncommand="onFindAgainCommand(false);" disabled="true" />
         </hbox>
         <toolbarbutton anonid="highlight" class="findbar-highlight findbar-button tabbable" data-l10n-id="findbar-highlight-all" oncommand="toggleHighlight(this.checked);" type="checkbox" />
