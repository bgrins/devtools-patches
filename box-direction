# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  57d791e4f0003d14c7dac82ac4ed1b099800d619
Bug 1355331 - Create an option to move sidebar between the left and right sides of the window;r=mikedeboer

MozReview-Commit-ID: 79ts9djMC3e

diff --git a/browser/app/profile/firefox.js b/browser/app/profile/firefox.js
--- a/browser/app/profile/firefox.js
+++ b/browser/app/profile/firefox.js
@@ -1269,16 +1269,19 @@ pref("pdfjs.previousHandler.alwaysAskBef
 
 // The maximum amount of decoded image data we'll willingly keep around (we
 // might keep around more than this, but we'll try to get down to this value).
 // (This is intentionally on the high side; see bug 746055.)
 pref("image.mem.max_decoded_image_kb", 256000);
 
 pref("social.sidebar.unload_timeout_ms", 10000);
 
+// Is the sidebar is moved into the reversed position (default = end, reversed = start).
+pref("sidebar.reverse_position", false);
+
 // Activation from inside of share panel is possible if activationPanelEnabled
 // is true. Pref'd off for release while usage testing is done through beta.
 pref("social.share.activationPanelEnabled", true);
 pref("social.shareDirectory", "https://activations.cdn.mozilla.net/sharePanel.html");
 
 // Block insecure active content on https pages
 pref("security.mixed_content.block_active_content", true);
 
diff --git a/browser/base/content/browser-sidebar.js b/browser/base/content/browser-sidebar.js
--- a/browser/base/content/browser-sidebar.js
+++ b/browser/base/content/browser-sidebar.js
@@ -16,37 +16,42 @@
  *                 display on the sidebar.
  *  - checked      indicates whether the sidebar is currently displayed.
  *                 Note that toggleSidebar updates this attribute when
  *                 it changes the sidebar's visibility.
  *  - group        this attribute must be set to "sidebar".
  */
 var SidebarUI = {
   browser: null,
+  REVERSE_POSITION_PREF: "sidebar.reverse_position",
 
   _box: null,
   _title: null,
   _splitter: null,
 
   init() {
     this._box = document.getElementById("sidebar-box");
     this.browser = document.getElementById("sidebar");
     this._title = document.getElementById("sidebar-title");
     this._splitter = document.getElementById("sidebar-splitter");
     this._icon = document.getElementById("sidebar-icon");
+    this._reversePositionButton = document.getElementById("sidebar-reverse-position");
     this._switcherPanel = document.getElementById("sidebarMenu-popup");
     this._switcherTarget = document.getElementById("sidebar-switcher-target");
     this._switcherArrow = document.getElementById("sidebar-switcher-arrow");
 
     this._switcherTarget.addEventListener("command", () => {
       this.toggleSwitcherPanel();
     });
   },
 
   uninit() {
+    if (this._addedPositionObserver) {
+      Services.prefs.removeObserver(this.REVERSE_POSITION_PREF, this.setSidebarPosition);
+    }
     let enumerator = Services.wm.getEnumerator(null);
     enumerator.getNext();
     if (!enumerator.hasMoreElements()) {
       document.persist("sidebar-box", "sidebarcommand");
       document.persist("sidebar-box", "width");
       document.persist("sidebar-box", "src");
       document.persist("sidebar-title", "value");
     }
@@ -88,16 +93,57 @@ var SidebarUI = {
       let key = document.getElementById(keyId);
       if (!key) {
         continue;
       }
       button.setAttribute("shortcut", ShortcutUtils.prettifyShortcut(key));
     }
   },
 
+  _addedPositionObserver: false,
+  _ensurePositionSet() {
+    if (this._addedPositionObserver) {
+      return;
+    }
+    this._addedPositionObserver = true;
+    this.setSidebarPosition = this.setSidebarPosition.bind(this);
+    this.setSidebarPosition();
+    Services.prefs.addObserver(this.REVERSE_POSITION_PREF, this.setSidebarPosition);
+  },
+
+  /**
+   * Change the pref that will trigger a call to setSidebarPosition
+   */
+  reversePosition() {
+    Services.prefs.setBoolPref(this.REVERSE_POSITION_PREF,
+      !Services.prefs.getBoolPref(this.REVERSE_POSITION_PREF));
+  },
+
+  /**
+   * Read the position pref and alternate the sidebar position from left to
+   * right. Combine normal/reversed position with ltr/rtl to set the label
+   * in the popup appropriately.
+   */
+  setSidebarPosition() {
+    let browser = document.getElementById("browser");
+    let isRTL = getComputedStyle(browser).direction == "rtl";
+    let label;
+    if (Services.prefs.getBoolPref(this.REVERSE_POSITION_PREF)) {
+      label = isRTL ? gNavigatorBundle.getString("sidebar.moveToRight") :
+                      gNavigatorBundle.getString("sidebar.moveToLeft");
+      browser.setAttribute("dir", "reverse");
+    } else {
+      label = isRTL ? gNavigatorBundle.getString("sidebar.moveToLeft") :
+                      gNavigatorBundle.getString("sidebar.moveToRight");
+      browser.removeAttribute("dir");
+    }
+    this._reversePositionButton.setAttribute("label", label);
+    this.hideSwitcherPanel();
+  },
+
   /**
    * Try and adopt the status of the sidebar from another window.
    * @param {Window} sourceWindow - Window to use as a source for sidebar status.
    * @return true if we adopted the state, or false if the caller should
    * initialize the state itself.
    */
   adoptFromWindow(sourceWindow) {
     // If the opener had a sidebar, open the same sidebar in our window.
@@ -142,16 +188,17 @@ var SidebarUI = {
   windowPrivacyMatches(w1, w2) {
     return PrivateBrowsingUtils.isWindowPrivate(w1) === PrivateBrowsingUtils.isWindowPrivate(w2);
   },
 
   /**
    * If loading a sidebar was delayed on startup, start the load now.
    */
   startDelayedLoad() {
+    this._ensurePositionSet();
     let sourceWindow = window.opener;
     // No source window means this is the initial window.  If we're being
     // opened from another window, check that it is one we might open a sidebar
     // for.
     if (sourceWindow) {
       if (sourceWindow.closed || sourceWindow.location.protocol != "chrome:" ||
         !this.windowPrivacyMatches(sourceWindow, window)) {
         return;
@@ -238,16 +285,17 @@ var SidebarUI = {
   /**
    * Show the sidebar, using the parameters from the specified broadcaster.
    * @see SidebarUI note.
    *
    * @param {string} commandID ID of the xul:broadcaster element to use.
    */
   show(commandID) {
     return new Promise((resolve, reject) => {
+      this._ensurePositionSet();
       let sidebarBroadcaster = document.getElementById(commandID);
       if (!sidebarBroadcaster || sidebarBroadcaster.localName != "broadcaster") {
         reject(new Error("Invalid sidebar broadcaster specified: " + commandID));
         return;
       }
 
       if (this.isOpen && commandID != this.currentID) {
         BrowserUITelemetry.countSidebarEvent(this.currentID, "hide");
diff --git a/browser/base/content/browser.xul b/browser/base/content/browser.xul
--- a/browser/base/content/browser.xul
+++ b/browser/base/content/browser.xul
@@ -315,16 +315,20 @@
       <toolbarbutton id="sidebar-switcher-tabs"
                      label="&syncedTabs.sidebar.label;"
                      class="subviewbutton subviewbutton-iconic"
                      observes="viewTabsSidebar"
                      oncommand="SidebarUI.show('viewTabsSidebar');">
          <observes element="viewTabsSidebar" attribute="checked"/>
        </toolbarbutton>
       <toolbarseparator/>
+      <toolbarbutton id="sidebar-reverse-position"
+                     class="subviewbutton"
+                     oncommand="SidebarUI.reversePosition()"/>
+      <toolbarseparator/>
       <toolbarbutton label="&sidebarCloseButton.tooltip;"
                      class="subviewbutton"
                      oncommand="SidebarUI.hide()"/>
     </panel>
 
     <menupopup id="toolbar-context-menu"
                onpopupshowing="onViewToolbarsPopupShowing(event, document.getElementById('viewToolbarsMenuSeparator'));">
       <menuitem oncommand="gCustomizeMode.addToPanel(document.popupNode)"
diff --git a/browser/base/content/test/sidebar/browser.ini b/browser/base/content/test/sidebar/browser.ini
--- a/browser/base/content/test/sidebar/browser.ini
+++ b/browser/base/content/test/sidebar/browser.ini
@@ -1,4 +1,5 @@
 [DEFAULT]
 
 [browser_bug409481.js]
+[browser_sidebar_move.js]
 [browser_sidebar_switcher.js]
diff --git a/browser/base/content/test/sidebar/browser_sidebar_move.js b/browser/base/content/test/sidebar/browser_sidebar_move.js
new file mode 100644
--- /dev/null
+++ b/browser/base/content/test/sidebar/browser_sidebar_move.js
@@ -0,0 +1,23 @@
+
+registerCleanupFunction(() => {
+  Services.prefs.clearUserPref("sidebar.reverse_position");
+});
+
+add_task(function* () {
+  let browser = document.getElementById("browser");
+  let reversePositionButton = document.getElementById("sidebar-reverse-position");
+  let originalLabel = reversePositionButton.getAttribute("label");
+
+  // Default (position: right)
+  ok(!browser.hasAttribute("dir"), "No direction change by default");
+
+  // Moved to left
+  SidebarUI.reversePosition();
+  is(browser.getAttribute("dir"), "reverse", "Direction changed");
+  isnot(reversePositionButton.getAttribute("label"), originalLabel, "Label changed");
+
+  // Moved to right
+  SidebarUI.reversePosition();
+  ok(!browser.hasAttribute("dir"), "Direction back to normal");
+  is(reversePositionButton.getAttribute("label"), originalLabel, "Label is back to normal");
+});
diff --git a/browser/base/content/test/sidebar/browser_sidebar_switcher.js b/browser/base/content/test/sidebar/browser_sidebar_switcher.js
--- a/browser/base/content/test/sidebar/browser_sidebar_switcher.js
+++ b/browser/base/content/test/sidebar/browser_sidebar_switcher.js
@@ -1,8 +1,12 @@
+
+registerCleanupFunction(() => {
+  SidebarUI.hide();
+});
 
 function showSwitcherPanelPromise() {
   return new Promise(resolve => {
     SidebarUI._switcherPanel.addEventListener("popupshown", () => {
       resolve();
     }, {once: true});
     SidebarUI.showSwitcherPanel();
   });
diff --git a/browser/locales/en-US/chrome/browser/browser.properties b/browser/locales/en-US/chrome/browser/browser.properties
--- a/browser/locales/en-US/chrome/browser/browser.properties
+++ b/browser/locales/en-US/chrome/browser/browser.properties
@@ -574,16 +574,20 @@ fullscreenButton.tooltip=Display the win
 service.toolbarbutton.label=Services
 service.toolbarbutton.tooltiptext=Services
 
 # LOCALIZATION NOTE (social.install.description): %1$S is the hostname of the social provider, %2$S is brandShortName (e.g. Firefox)
 service.install.description=Would you like to enable services from %1$S to display in your %2$S toolbar and sidebar?
 service.install.ok.label=Enable Services
 service.install.ok.accesskey=E
 
+# Visible when opening the popup inside the bookmarks sidebar
+sidebar.moveToLeft=Move sidebar to left
+sidebar.moveToRight=Move sidebar to right
+
 # LOCALIZATION NOTE (social.markpageMenu.label): %S is the name of the social provider
 social.markpageMenu.label=Save Page to %S
 # LOCALIZATION NOTE (social.marklinkMenu.label): %S is the name of the social provider
 social.marklinkMenu.label=Save Link to %S
 
 # LOCALIZATION NOTE (social.error.message): %1$S is brandShortName (e.g. Firefox), %2$S is the name of the social provider
 social.error.message=%1$S is unable to connect with %2$S right now.
 social.error.tryAgain.label=Try Again
