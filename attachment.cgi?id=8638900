# HG changeset patch
# User Simon Lindholm <simon.lindholm10@gmail.com>

Bug 1187578: Avoid infinite loop when creating breadcrumbs. r=bgrins

---
 browser/devtools/inspector/breadcrumbs.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/browser/devtools/inspector/breadcrumbs.js b/browser/devtools/inspector/breadcrumbs.js
index dcd98c9..d4cbdb3 100644
--- a/browser/devtools/inspector/breadcrumbs.js
+++ b/browser/devtools/inspector/breadcrumbs.js
@@ -543,31 +543,33 @@ HTMLBreadcrumbs.prototype = {
    * probably visible. See LOW_PRIORITY_ELEMENTS.
    * @param {NodeFront} node The parent node.
    * @return {Promise} Resolves to the NodeFront.
    */
   getInterestingFirstNode: function(node) {
     let deferred = promise.defer();
 
     let fallback = null;
+    let lastNode = null;
 
     let moreChildren = () => {
       this.walker.children(node, {
-        start: fallback,
+        start: lastNode,
         maxNodes: 10,
         whatToShow: Ci.nsIDOMNodeFilter.SHOW_ELEMENT
       }).then(this.selectionGuard()).then(response => {
         for (let node of response.nodes) {
           if (!(node.tagName in LOW_PRIORITY_ELEMENTS)) {
             deferred.resolve(node);
             return;
           }
           if (!fallback) {
             fallback = node;
           }
+          lastNode = node;
         }
         if (response.hasLast) {
           deferred.resolve(fallback);
           return;
         }
         moreChildren();
       }).then(null, this.selectionGuardEnd);
     };

