# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  c4280fa46aa5bfe3aa04362051b4b3000e214ac1
Bug 851695 - Add a |console| object to every JSM global

diff --git a/js/xpconnect/loader/mozJSComponentLoader.cpp b/js/xpconnect/loader/mozJSComponentLoader.cpp
--- a/js/xpconnect/loader/mozJSComponentLoader.cpp
+++ b/js/xpconnect/loader/mozJSComponentLoader.cpp
@@ -551,16 +551,23 @@ mozJSComponentLoader::PrepareObjectForLo
         backstagePass->SetGlobalObject(global);
 
         JSAutoCompartment ac(aCx, global);
         if (!JS_DefineFunctions(aCx, global, gGlobalFun) ||
             !JS_DefineProfilingFunctions(aCx, global)) {
             return nullptr;
         }
 
+        nsAutoCString cautoStr;
+        aURI->GetSpec(cautoStr);
+        // nsACString myString;
+        // myString.Assign("resource://gre/modules/devtools/Console.jsm");
+        printf("Prepare object for location %s\n", cautoStr.get());
+        nsresult rv2 = ImportInto(NS_LITERAL_CSTRING("resource://gre/modules/devtools/Console.jsm"), global, aCx, &global);
+        // resource://gre/modules/devtools/Console.jsm
         if (aReuseLoaderGlobal) {
             mLoaderGlobal = holder;
         }
     }
 
     RootedObject obj(aCx, holder->GetJSObject());
     NS_ENSURE_TRUE(obj, nullptr);
 
@@ -1086,16 +1093,18 @@ mozJSComponentLoader::IsModuleLoaded(con
 nsresult
 mozJSComponentLoader::ImportInto(const nsACString& aLocation,
                                  HandleObject targetObj,
                                  JSContext* callercx,
                                  MutableHandleObject vp)
 {
     vp.set(nullptr);
 
+    printf ("Importing %s\n", PromiseFlatCString(aLocation).get());
+
     nsresult rv;
     if (!mInitialized) {
         rv = ReallyInit();
         NS_ENSURE_SUCCESS(rv, rv);
     }
 
     ComponentLoaderInfo info(aLocation);
     rv = info.EnsureResolvedURI();
diff --git a/toolkit/modules/LightweightThemeConsumer.jsm b/toolkit/modules/LightweightThemeConsumer.jsm
--- a/toolkit/modules/LightweightThemeConsumer.jsm
+++ b/toolkit/modules/LightweightThemeConsumer.jsm
@@ -5,16 +5,17 @@
 this.EXPORTED_SYMBOLS = ["LightweightThemeConsumer"];
 
 const {utils: Cu} = Components;
 
 Cu.import("resource://gre/modules/XPCOMUtils.jsm");
 Cu.import("resource://gre/modules/Services.jsm");
 Cu.import("resource://gre/modules/AppConstants.jsm");
 
+console.log("Hi");
 XPCOMUtils.defineLazyModuleGetter(this, "LightweightThemeImageOptimizer",
   "resource://gre/modules/addons/LightweightThemeImageOptimizer.jsm");
 
 XPCOMUtils.defineLazyModuleGetter(this, "PrivateBrowsingUtils",
   "resource://gre/modules/PrivateBrowsingUtils.jsm");
 
 this.LightweightThemeConsumer =
  function LightweightThemeConsumer(aDocument) {
diff --git a/toolkit/mozapps/extensions/LightweightThemeManager.jsm b/toolkit/mozapps/extensions/LightweightThemeManager.jsm
--- a/toolkit/mozapps/extensions/LightweightThemeManager.jsm
+++ b/toolkit/mozapps/extensions/LightweightThemeManager.jsm
@@ -4,20 +4,24 @@
 
 "use strict";
 
 this.EXPORTED_SYMBOLS = ["LightweightThemeManager"];
 
 const Cc = Components.classes;
 const Ci = Components.interfaces;
 
+Components.utils.import("resource://gre/modules/devtools/Console.jsm");
 Components.utils.import("resource://gre/modules/XPCOMUtils.jsm");
 Components.utils.import("resource://gre/modules/AddonManager.jsm");
 Components.utils.import("resource://gre/modules/Services.jsm");
 
+
+console.log("FOOBAR!!");
+
 const ID_SUFFIX              = "@personas.mozilla.org";
 const PREF_LWTHEME_TO_SELECT = "extensions.lwThemeToSelect";
 const PREF_GENERAL_SKINS_SELECTEDSKIN = "general.skins.selectedSkin";
 const PREF_EM_DSS_ENABLED    = "extensions.dss.enabled";
 const ADDON_TYPE             = "theme";
 
 const URI_EXTENSION_STRINGS  = "chrome://mozapps/locale/extensions/extensions.properties";
 
