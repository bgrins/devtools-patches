# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  56b5c1a87dcb2c0391e7f642f99e6638dcf235c0

diff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml
--- a/browser/base/content/tabbrowser.xml
+++ b/browser/base/content/tabbrowser.xml
@@ -5008,16 +5008,17 @@
               this.warmingTabs.add(tab);
               this.setTabState(tab, this.STATE_LOADING);
               this.suppressDisplayPortAndQueueUnload(tab,
                 this.tabbrowser.tabWarmingUnloadDelay);
             },
 
             // Called when the user asks to switch to a given tab.
             requestTab(tab) {
+              console.log("TAB", tab)
               if (tab === this.requestedTab) {
                 return;
               }
 
               if (this.tabbrowser.tabWarmingEnabled) {
                 let warmingState = "disqualified";
 
                 if (this.warmingTabs.has(tab)) {
@@ -8525,16 +8526,17 @@
         ]]>
         </getter>
 
         <setter>
         <![CDATA[
           if (val < 0 || val >= this.childNodes.length)
             return val;
 
+            console.log(this.childNodes, val, this.childNodes[val]);
           let toTab = this.getRelatedElement(this.childNodes[val]);
 
           gBrowser._getSwitcher().requestTab(toTab);
 
           var panel = this._selectedPanel;
           var newPanel = this.childNodes[val];
           this._selectedPanel = newPanel;
           if (this._selectedPanel != panel) {
diff --git a/browser/base/content/test/permissions/browser_temporary_permissions.js b/browser/base/content/test/permissions/browser_temporary_permissions.js
--- a/browser/base/content/test/permissions/browser_temporary_permissions.js
+++ b/browser/base/content/test/permissions/browser_temporary_permissions.js
@@ -21,16 +21,17 @@ add_task(async function testTempPermissi
       state: SitePermissions.BLOCK,
       scope: SitePermissions.SCOPE_TEMPORARY,
     });
 
     let geoIcon = document.querySelector(".blocked-permission-icon[data-permission-id=geo]");
 
     Assert.notEqual(geoIcon.boxObject.width, 0, "geo anchor should be visible");
 
+    return new Promise(r=>r);
     SitePermissions.remove(uri, id, browser);
 
     Assert.equal(geoIcon.boxObject.width, 0, "geo anchor should not be visible");
   });
 });
 
 // Test that temp blocked permissions requested by subframes (with a different URI) affect the whole page.
 add_task(async function testTempPermissionSubframes() {
diff --git a/devtools/client/themes/webconsole.css b/devtools/client/themes/webconsole.css
--- a/devtools/client/themes/webconsole.css
+++ b/devtools/client/themes/webconsole.css
@@ -917,19 +917,25 @@ a.learn-more-link.webconsole-learn-more-
 .theme-dark .webconsole-output-wrapper .message.warn .arrayRightBracket {
   color: var(--theme-body-color);
 }
 .theme-dark .webconsole-output-wrapper .message.error .tree.object-inspector,
 .theme-dark .webconsole-output-wrapper .message.warn .tree.object-inspector {
   --tree-indent-border-color: var(--theme-body-color);
 }
 
-.webconsole-output-wrapper .message-flex-body > .message-body {
+.webconsole-output-wrapper .message-body-wrapper {
   display: flex;
-  flex-wrap: wrap;
+}
+
+.webconsole-output-wrapper .message-body {
+  display: block;
+  flex: auto;
+  /*display: flex;
+  flex-wrap: wrap;*/
   max-width: 100%;
 }
 
 .webconsole-output-wrapper .message-body > * {
   flex-shrink: 0;
 }
 
 .message.startGroup .message-body > .objectBox-string,
diff --git a/devtools/client/webconsole/new-console-output/components/Message.js b/devtools/client/webconsole/new-console-output/components/Message.js
--- a/devtools/client/webconsole/new-console-output/components/Message.js
+++ b/devtools/client/webconsole/new-console-output/components/Message.js
@@ -237,27 +237,25 @@ const Message = createClass({
         this.messageNode = node;
       }
     },
       timestampEl,
       MessageIndent({indent}),
       icon,
       collapse,
       dom.span({ className: "message-body-wrapper" },
-        dom.span({ className: "message-flex-body" },
-          // Add whitespaces for formatting when copying to the clipboard.
-          timestampEl ? " " : null,
-          dom.span({ className: "message-body devtools-monospace" },
-            ...bodyElements,
-            learnMore
-          ),
-          repeat ? " " : null,
-          repeat,
-          " ", location
+        // Add whitespaces for formatting when copying to the clipboard.
+        timestampEl ? " " : null,
+        dom.span({ className: "message-body devtools-monospace" },
+          ...bodyElements,
+          learnMore
         ),
+        repeat ? " " : null,
+        repeat,
+        " ", location,
         // Add a newline for formatting when copying to the clipboard.
         "\n",
         // If an attachment is displayed, the final newline is handled by the attachment.
         attachment,
         ...notesNodes
       )
     );
   }
diff --git a/toolkit/content/widgets/tabbox.xml b/toolkit/content/widgets/tabbox.xml
--- a/toolkit/content/widgets/tabbox.xml
+++ b/toolkit/content/widgets/tabbox.xml
@@ -284,27 +284,31 @@
       ]]>
       </constructor>
 
       <!-- nsIDOMXULRelatedElement -->
       <method name="getRelatedElement">
         <parameter name="aTabElm"/>
         <body>
         <![CDATA[
+          console.log("getRelatedElement", aTabElm)
           if (!aTabElm)
             return null;
 
           let tabboxElm = this.tabbox;
+          console.log("getRelatedElement", tabboxElm)
           if (!tabboxElm)
             return null;
 
           let tabpanelsElm = tabboxElm.tabpanels;
+          console.log("getRelatedElement", tabpanelsElm)
           if (!tabpanelsElm)
             return null;
 
+          console.log(tabboxElm, tabpanelsElm, aTabElm.linkedPanel)
           // Get linked tab panel by 'linkedpanel' attribute on the given tab
           // element.
           let linkedPanelId = aTabElm.linkedPanel;
           if (linkedPanelId) {
             let ownerDoc = this.ownerDocument;
 
             // XXX bug 565858: if XUL tab element is anonymous element then
             // suppose linked tab panel is hosted within the same XBL binding
