# vim: se ft=diff :
# HG changeset patch
# User Gabriel Luong <gabriel.luong@gmail.com>
# Date 2015-09-25 03:12
Bug 1132557 - Part 12: Stylesheet Editor should always batch up updates r=bgrins

diff --git a/devtools/client/styleeditor/StyleSheetEditor.jsm b/devtools/client/styleeditor/StyleSheetEditor.jsm
--- a/devtools/client/styleeditor/StyleSheetEditor.jsm
+++ b/devtools/client/styleeditor/StyleSheetEditor.jsm
@@ -25,17 +25,17 @@ Cu.import("resource://gre/modules/Task.j
 Cu.import("resource://gre/modules/devtools/shared/event-emitter.js");
 Cu.import("resource:///modules/devtools/client/styleeditor/StyleEditorUtil.jsm");
 
 const LOAD_ERROR = "error-load";
 const SAVE_ERROR = "error-save";
 
 // max update frequency in ms (avoid potential typing lag and/or flicker)
 // @see StyleEditor.updateStylesheet
-const UPDATE_STYLESHEET_THROTTLE_DELAY = 500;
+const UPDATE_STYLESHEET_DELAY = 500;
 
 // Pref which decides if CSS autocompletion is enabled in Style Editor or not.
 const AUTOCOMPLETION_PREF = "devtools.styleeditor.autocompletion-enabled";
 
 // Pref which decides whether updates to the stylesheet use transitions
 const TRANSITION_PREF = "devtools.styleeditor.transitions";
 
 // How long to wait to update linked CSS file after original source was saved
@@ -103,16 +103,17 @@ function StyleSheetEditor(styleSheet, wi
   this._onPropertyChange = this._onPropertyChange.bind(this);
   this._onError = this._onError.bind(this);
   this._onMediaRuleMatchesChange = this._onMediaRuleMatchesChange.bind(this);
   this._onMediaRulesChanged = this._onMediaRulesChanged.bind(this)
   this.checkLinkedFileForChanges = this.checkLinkedFileForChanges.bind(this);
   this.markLinkedFileBroken = this.markLinkedFileBroken.bind(this);
   this.saveToFile = this.saveToFile.bind(this);
   this.updateStyleSheet = this.updateStyleSheet.bind(this);
+  this._updateStyleSheet = this._updateStyleSheet.bind(this);
   this._onMouseMove = this._onMouseMove.bind(this);
 
   this._focusOnSourceEditorReady = false;
   this.cssSheet.on("property-change", this._onPropertyChange);
   this.styleSheet.on("error", this._onError);
   this.mediaRules = [];
   if (this.cssSheet.getMediaRules) {
     this.cssSheet.getMediaRules().then(this._onMediaRulesChanged, Cu.reportError);
@@ -464,32 +465,25 @@ StyleSheetEditor.prototype = {
    * Toggled the disabled state of the underlying stylesheet.
    */
   toggleDisabled: function() {
     this.styleSheet.toggleDisabled().then(null, Cu.reportError);
   },
 
   /**
    * Queue a throttled task to update the live style sheet.
-   *
-   * @param boolean immediate
-   *        Optional. If true the update is performed immediately.
    */
-  updateStyleSheet: function(immediate) {
+  updateStyleSheet: function() {
     if (this._updateTask) {
       // cancel previous queued task not executed within throttle delay
       this._window.clearTimeout(this._updateTask);
     }
 
-    if (immediate) {
-      this._updateStyleSheet();
-    } else {
-      this._updateTask = this._window.setTimeout(this._updateStyleSheet.bind(this),
-                                           UPDATE_STYLESHEET_THROTTLE_DELAY);
-    }
+    this._updateTask = this._window.setTimeout(this._updateStyleSheet,
+                                               UPDATE_STYLESHEET_DELAY);
   },
 
   /**
    * Update live style sheet according to modifications.
    */
   _updateStyleSheet: function() {
     if (this.styleSheet.disabled) {
       return;  // TODO: do we want to do this?
