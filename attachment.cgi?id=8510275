# HG changeset patch
# User Simon Lindholm <simon.lindholm10@gmail.com>

Bug 1075444 - Handle "(" when parsing CSS for the Style Inspector


diff --git a/browser/devtools/styleinspector/css-parsing-utils.js b/browser/devtools/styleinspector/css-parsing-utils.js
index 8d4dae0..a1e670c 100644
--- a/browser/devtools/styleinspector/css-parsing-utils.js
+++ b/browser/devtools/styleinspector/css-parsing-utils.js
@@ -87,16 +87,17 @@ function parseDeclarations(inputString) {
           current += "#" + token.value;
           break;
         case "URL":
           current += "url(" + quoteString(token.value) + ")";
           break;
         case "FUNCTION":
           current += token.value + "(";
           break;
+        case "(":
         case ")":
           current += token.tokenType;
           break;
         case "EOF":
           break;
         case "DELIM":
           if (token.value === "!") {
             hasBang = true;
diff --git a/browser/devtools/styleinspector/test/unit/test_parseDeclarations.js b/browser/devtools/styleinspector/test/unit/test_parseDeclarations.js
index d5ab782..9e33d3f 100644
--- a/browser/devtools/styleinspector/test/unit/test_parseDeclarations.js
+++ b/browser/devtools/styleinspector/test/unit/test_parseDeclarations.js
@@ -158,17 +158,19 @@ const TEST_DATA = [
   {input: "content: 'this \\' is a \" really strange string'", expected: [{name: "content", value: '"this \' is a \" really strange string"', priority: ""}]},
   {
     input: "content: \"a not s\\\
           o very long title\"",
     expected: [
       {name: "content", value: '"a not s\
           o very long title"', priority: ""}
     ]
-  }
+  },
+  // Test calc with nested parentheses
+  {input: "width: calc((100% - 3em) / 2)", expected: [{name: "width", value: "calc((100% - 3em) / 2)", priority: ""}]},
 ];
 
 function run_test() {
   for (let test of TEST_DATA) {
     do_print("Test input string " + test.input);
     let output;
     try {
       output = parseDeclarations(test.input);

