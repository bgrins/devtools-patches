# HG changeset patch
# Parent ffce62394d0e11b821afb6b20c4aa45e26aac8f8
# User Brian Grinstead <bgrinstead@mozilla.com>
addressing review changes

diff --git a/browser/devtools/itchpad/chrome/content/itchpad-loader.xul b/browser/devtools/itchpad/chrome/content/itchpad-loader.xul
--- a/browser/devtools/itchpad/chrome/content/itchpad-loader.xul
+++ b/browser/devtools/itchpad/chrome/content/itchpad-loader.xul
@@ -2,24 +2,17 @@
 <!-- This Source Code Form is subject to the terms of the Mozilla Public
    - License, v. 2.0. If a copy of the MPL was not distributed with this
    - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
 <!DOCTYPE window [
 <!ENTITY % toolboxDTD SYSTEM "chrome://browser/locale/devtools/toolbox.dtd" >
  %toolboxDTD;
 ]>
 
-<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
-        id="devtools-itchpad-window"
-        macanimationtype="document"
-        fullscreenbutton="true"
-        windowtype="devtools:itchpad"
-        width="900" height="320"
-        persist="screenX screenY width height sizemode"
-        windowtitle="itchpad window">
+<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
 
 <script type="application/javascript;version=1.8" src="chrome://browser/content/devtools/itchpad-loader.js"></script>
 
   <commandset id="toolbox-commandset">
     <command id="itchpad-cmd-close" oncommand="window.close();"/>
   </commandset>
 
   <keyset id="itchpad-keyset">
diff --git a/browser/devtools/itchpad/chrome/content/itchpad.xul b/browser/devtools/itchpad/chrome/content/itchpad.xul
--- a/browser/devtools/itchpad/chrome/content/itchpad.xul
+++ b/browser/devtools/itchpad/chrome/content/itchpad.xul
@@ -1,12 +1,13 @@
 <?xml version="1.0"?>
 <!-- This Source Code Form is subject to the terms of the Mozilla Public
    - License, v. 2.0. If a copy of the MPL was not distributed with this
    - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
+<?xml-stylesheet href="chrome://browser/skin/devtools/light-theme.css" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/skin/devtools/itchpad/itchpad.css" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/content/devtools/widgets.css" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/content/devtools/debugger.css" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/skin/devtools/common.css" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/skin/devtools/widgets.css" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/skin/devtools/debugger.css" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/content/devtools/markup-view.css" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/skin/devtools/markup-view.css" type="text/css"?>
@@ -17,25 +18,17 @@
 <!ENTITY % scratchpadDTD SYSTEM "chrome://browser/locale/devtools/scratchpad.dtd" >
  %scratchpadDTD;
 <!ENTITY % editMenuStrings SYSTEM "chrome://global/locale/editMenuOverlay.dtd">
 %editMenuStrings;
 <!ENTITY % sourceEditorStrings SYSTEM "chrome://browser/locale/devtools/sourceeditor.dtd">
 %sourceEditorStrings;
 ]>
 
-<window id="itchpad-window"
-        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" class="theme-body"
-        title="Itchpad"
-        windowtype="devtools:itchpad"
-        macanimcationtype="document"
-        fullscreenbutton="true"
-        screenX="4" screenY="4"
-        width="640" height="480"
-        persist="screenX screenY width height sizemode">
+<page xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" class="theme-body">
 
   <commandset id="itchpad-commandset" />
   <commandset id="editMenuCommands"/>
   <keyset id="itchpad-keyset" />
   <keyset id="editMenuKeys"/>
 
   <!-- XXX: Let plugins declare their own menu items -->
   <menubar id="itchpad-menubar">
@@ -63,17 +56,16 @@
 
 
   <popupset>
     <menupopup id="directory-menu-popup">
     </menupopup>
   </popupset>
 
   <script type="application/javascript" src="chrome://global/content/globalOverlay.js"/>
-  <script type="application/javascript;version=1.8" src="chrome://browser/content/devtools/theme-switching.js"></script>
 
   <deck id="main-deck" flex="1">
     <vbox flex="1" id="source-deckitem">
       <hbox id="sources-body" flex="1">
         <vbox width="250">
           <vbox id="sources" flex="1">
           </vbox>
           <toolbar id="project-toolbar" class="devtools-toolbar" hidden="true"></toolbar>
@@ -95,9 +87,9 @@
                   flex="1">
             <tabs hidden="true"/>
             <tabpanels flex="1"/>
           </tabbox>
         </vbox>
       </hbox>
     </vbox>
   </deck>
-</window>
+</page>
diff --git a/browser/devtools/itchpad/lib/event/scope.js b/browser/devtools/itchpad/lib/event/scope.js
--- a/browser/devtools/itchpad/lib/event/scope.js
+++ b/browser/devtools/itchpad/lib/event/scope.js
@@ -1,16 +1,15 @@
 /* -*- Mode: Javascript; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* vim: set ft=javascript ts=2 et sw=2 tw=80: */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 const { Class } = require("sdk/core/heritage");
-const { EventTarget } = require("sdk/event/target");
 
 var Scope = Class({
   initialize: function(owner) {
     this.owner = owner;
   },
 
   on: function(target, event, handler) {
     this.listeners = this.listeners || [];
@@ -56,27 +55,27 @@ function scope(owner) {
     let scope = new Scope(owner);
     scopes.set(owner, scope);
     return scope;
   }
   return scopes.get(owner);
 }
 exports.scope = scope;
 
-exports.on = function(owner, target, event, handler) {
+exports.on = function on(owner, target, event, handler) {
   if (!target) return;
   scope(owner).on(target, event, handler);
 }
 
-exports.off = function(owner, target, event, handler) {
+exports.off = function off(owner, target, event, handler) {
   if (!target) return;
   scope(owner).off(target, event, handler);
 }
 
-exports.forget = function(owner, target) {
+exports.forget = function forget(owner, target) {
   scope(owner).clear(target);
 }
 
-exports.done = function(owner) {
+exports.done = function done(owner) {
   scope(owner).destroy();
   scopes.delete(owner);
 }
 
diff --git a/browser/devtools/itchpad/lib/helpers/file-picker.js b/browser/devtools/itchpad/lib/helpers/file-picker.js
--- a/browser/devtools/itchpad/lib/helpers/file-picker.js
+++ b/browser/devtools/itchpad/lib/helpers/file-picker.js
@@ -1,19 +1,44 @@
 /* -*- Mode: Javascript; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* vim: set ft=javascript ts=2 et sw=2 tw=80: */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
+/**
+ * This file contains helper functions for showing OS-specific
+ * file and folder pickers
+ */
+
 const { Cu, Cc, Ci } = require("chrome");
 const { FileUtils } = Cu.import("resource://gre/modules/FileUtils.jsm", {});
 const promise = require("itchpad/helpers/promise");
 const { merge } = require("sdk/util/object");
+const { localizedStrings } = require("itchpad/helpers/L10N");
 
+/**
+ * Show a file / folder picker.
+ * https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFilePicker
+ *
+ * @param object options
+ *        Additional options for setting the source. Supported options:
+ *          - directory: string, The path to default opening
+ *          - defaultName: string, The filename including extension that
+ *                         should be suggested to the user as a default
+ *          - window: DOMWindow, The filename including extension that
+ *                         should be suggested to the user as a default
+ *          - title: string, The filename including extension that
+ *                         should be suggested to the user as a default
+ *          - mode: int, The type of picker to open.
+ *
+ * @return promise
+ *         A promise that is resolved with the full path
+ *         after the file has been picked.
+ */
 function showPicker(options) {
   let fp = Cc["@mozilla.org/filepicker;1"].createInstance(Ci.nsIFilePicker);
   if (options.directory) {
     try {
       fp.displayDirectory = FileUtils.File(options.directory);
     } catch(ex) {
       console.warn(ex);
     }
@@ -33,31 +58,61 @@ function showPicker(options) {
         deferred.reject();
       }
     }
   });
   return deferred.promise;
 }
 exports.showPicker = showPicker;
 
+// XXX: internationalize these strings
+
+/**
+ * Show a save dialog
+ * https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFilePicker
+ *
+ * @param object options
+ *        Additional options as specified in showPicker
+ *
+ * @return promise
+ *         A promise that is resolved when the save dialog has closed
+ */
 function showSave(options) {
   return showPicker(merge({
-    title: "Select a File",
+    title: localizedStrings.selectFileLabel,
     mode: Ci.nsIFilePicker.modeSave
   }, options));
 }
 exports.showSave = showSave;
 
+/**
+ * Show a file open dialog
+ *
+ * @param object options
+ *        Additional options as specified in showPicker
+ *
+ * @return promise
+ *         A promise that is resolved when the file has been opened
+ */
 function showOpen(options) {
   return showPicker(merge({
-    title: "Open a File",
+    title: localizedStrings.openFileLabel,
     mode: Ci.nsIFilePicker.modeOpen
   }, options));
 }
 exports.showOpen = showOpen;
 
+/**
+ * Show a folder open dialog
+ *
+ * @param object options
+ *        Additional options as specified in showPicker
+ *
+ * @return promise
+ *         A promise that is resolved when the folder has been opened
+ */
 function showOpenFolder(options) {
   return showPicker(merge({
-    title: "Select a Folder",
+    title: localizedStrings.selectFolderLabel,
     mode: Ci.nsIFilePicker.modeGetFolder
   }, options));
 }
 exports.showOpenFolder = showOpenFolder;
diff --git a/browser/devtools/itchpad/lib/helpers/l10n.js b/browser/devtools/itchpad/lib/helpers/l10n.js
new file mode 100644
--- /dev/null
+++ b/browser/devtools/itchpad/lib/helpers/l10n.js
@@ -0,0 +1,32 @@
+/* -*- Mode: Javascript; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ft=javascript ts=2 et sw=2 tw=80: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+/**
+ * This file contains helper functions for internationalizing itchpad strings
+ */
+
+const { Cu, Cc, Ci } = require("chrome");
+const { ViewHelpers } = Cu.import("resource:///modules/devtools/ViewHelpers.jsm", {});
+const ITCHPAD_STRINGS_URI = "chrome://browser/locale/devtools/itchpad.properties";
+const L10N = new ViewHelpers.L10N(ITCHPAD_STRINGS_URI).stringBundle;
+
+function getLocalizedString (name) {
+  try {
+    return L10N.GetStringFromName(name);
+  } catch (ex) {
+    console.log("Error reading '" + name + "'");
+    throw new Error("l10n error with " + name);
+  }
+}
+
+exports.getLocalizedString = getLocalizedString;
+exports.localizedStrings = {
+  get deleteLabel() { return getLocalizedString("itchpad.deleteLabel"); },
+  get newLabel() { return getLocalizedString("itchpad.newLabel"); },
+  get selectFileLabel() { return getLocalizedString("itchpad.selectFileLabel"); },
+  get openFileLabel() { return getLocalizedString("itchpad.openFileLabel"); },
+  get selectFolderLabel() { return getLocalizedString("itchpad.selectFolderLabel"); },
+};
\ No newline at end of file
diff --git a/browser/devtools/itchpad/lib/helpers/osfile.js b/browser/devtools/itchpad/lib/helpers/osfile.js
deleted file mode 100644
--- a/browser/devtools/itchpad/lib/helpers/osfile.js
+++ /dev/null
@@ -1,9 +0,0 @@
-/* -*- Mode: Javascript; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* vim: set ft=javascript ts=2 et sw=2 tw=80: */
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-const { Cu } = require("chrome");
-const { OS } = Cu.import("resource://gre/modules/osfile.jsm", {});
-module.exports = OS;
diff --git a/browser/devtools/itchpad/lib/helpers/task.js b/browser/devtools/itchpad/lib/helpers/task.js
deleted file mode 100644
--- a/browser/devtools/itchpad/lib/helpers/task.js
+++ /dev/null
@@ -1,11 +0,0 @@
-/* -*- Mode: Javascript; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* vim: set ft=javascript ts=2 et sw=2 tw=80: */
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-const { Cu } = require("chrome");
-
-const { Task } = Cu.import("resource://gre/modules/Task.jsm", {});
-
-module.exports = Task;
diff --git a/browser/devtools/itchpad/lib/itchpad.js b/browser/devtools/itchpad/lib/itchpad.js
--- a/browser/devtools/itchpad/lib/itchpad.js
+++ b/browser/devtools/itchpad/lib/itchpad.js
@@ -2,17 +2,16 @@
 /* vim: set ft=javascript ts=2 et sw=2 tw=80: */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 const { Class } = require("sdk/core/heritage");
 
 const { Project } = require("itchpad/project");
-const { PageCollection } = require("itchpad/page");
 const { TreeView } = require("itchpad/tree");
 const { ShellDeck } = require("itchpad/shells");
 const { Resource } = require("itchpad/stores/base");
 const { ResourceMap, Pair } = require("itchpad/resource-map");
 const { registeredPlugins } = require("itchpad/plugins/core");
 const { EventTarget } = require("sdk/event/target");
 const { on, forget } = require("itchpad/event/scope");
 const { emit } = require("sdk/event/core");
@@ -21,18 +20,16 @@ const promise = require("itchpad/helpers
 const { ToolSidebar } = require("devtools/framework/sidebar");
 
 const { Cc, Ci, Cu } = require("chrome");
 const { ViewHelpers } = Cu.import("resource:///modules/devtools/ViewHelpers.jsm", {});
 Cu.import("resource:///modules/devtools/DOMHelpers.jsm");
 
 const {Services} = Cu.import("resource://gre/modules/Services.jsm", {});
 const ITCHPAD_URL = "chrome://browser/content/devtools/itchpad.xul";
-const ITCHPAD_STRINGS_URI = "chrome://browser/locale/devtools/itchpad.properties";
-const L10N = new ViewHelpers.L10N(ITCHPAD_STRINGS_URI).stringBundle;
 
 // Uncomment to get logging of addon events.
 require("itchpad/plugins/logging/lib/logging");
 
 require("itchpad/plugins/apply/lib/apply");
 require("itchpad/plugins/dirty/lib/dirty");
 require("itchpad/plugins/delete/lib/delete");
 require("itchpad/plugins/new/lib/new");
@@ -116,17 +113,16 @@ var Itchpad = Class({
       this.project = new Project({
         id: "Test",
         name: "App",
         directories: [],
         openFiles: []
       });
     }
     this.setProject(this.project);
-    this.setPage(new PageCollection());
 
     this._initPlugins();
   },
 
   _buildSidebar: function() {
     // Create the sources sidebar
     this.projectTree = new CollectionTree(this.document, {
       nodeVisible: this.nodeVisible.bind(this),
@@ -187,21 +183,16 @@ var Itchpad = Class({
     );
     this.project.customOpts = opts;
     this.project.projectType = "APP_MANAGER";
     this.project.removePaths(existingPaths);
     this.project.addPath(path);
     this.project.save();
   },
 
-  setPage: function(page) {
-    this.page = page;
-    this.resourceMap.setPage(page);
-  },
-
   openResource: function(resource) {
     let pair = this.resourceMap.pair(resource);
     let shell = this.shells.open(pair, resource);
 
     this.projectTree.select(resource);
   },
 
   // When a node is selected in the tree, open its associated editor.
@@ -240,25 +231,16 @@ var Itchpad = Class({
         parent = this.document.querySelector(parent);
       }
       parent.appendChild(elt);
     }
 
     return elt;
   },
 
-  getLocalizedString: function(name) {
-    try {
-      return L10N.GetStringFromName(name);
-    } catch (ex) {
-      console.log("Error reading '" + name + "'");
-      throw new Error("l10n error with " + name);
-    }
-  },
-
   addCommand: function(definition) {
     let command = this.document.createElement("command");
     command.setAttribute("id", definition.id);
     if (definition.key) {
       let key = this.document.createElement("key");
       key.id = "key_" + definition.id;
 
       let keyName = definition.key;
diff --git a/browser/devtools/itchpad/lib/page.js b/browser/devtools/itchpad/lib/page.js
deleted file mode 100644
--- a/browser/devtools/itchpad/lib/page.js
+++ /dev/null
@@ -1,31 +0,0 @@
-/* -*- Mode: Javascript; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* vim: set ft=javascript ts=2 et sw=2 tw=80: */
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-const { Class } = require("sdk/core/heritage");
-const { StoreCollection } = require("itchpad/store-collection");
-const { StylesStore } = require("itchpad/stores/styles");
-
-// This is a bad name for the collection of stores tied to the live target.
-// Target was already taken, Live didn't sound right.  A rename would be
-// welcome.
-var PageCollection = Class({
-  extends: StoreCollection,
-
-  initialize: function() {
-    StoreCollection.prototype.initialize.call(this);
-
-    this.styles = new StylesStore();
-    this.addStore(this.styles);
-  },
-
-  setTarget: function(target) {
-    for (let store of this.stores) {
-      store.setTarget(target);
-    }
-  }
-});
-
-exports.PageCollection = PageCollection;
diff --git a/browser/devtools/itchpad/lib/plugins/delete/lib/delete.js b/browser/devtools/itchpad/lib/plugins/delete/lib/delete.js
--- a/browser/devtools/itchpad/lib/plugins/delete/lib/delete.js
+++ b/browser/devtools/itchpad/lib/plugins/delete/lib/delete.js
@@ -1,27 +1,28 @@
 /* -*- Mode: Javascript; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* vim: set ft=javascript ts=2 et sw=2 tw=80: */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 const { Class } = require("sdk/core/heritage");
 const { registerPlugin, Plugin } = require("itchpad/plugins/core");
+const { localizedStrings } = require("itchpad/helpers/L10N");
 
 var DeletePlugin = Class({
   extends: Plugin,
 
   init: function(host) {
     this.host.addCommand({
       id: "cmd-delete"
     });
     this.host.createMenuItem({
       parent: "#directory-menu-popup",
-      label: this.host.getLocalizedString("itchpad.deleteLabel"),
+      label: localizedStrings.deleteLabel,
       command: "cmd-delete"
     });
   },
 
   onCommand: function(cmd) {
     if (cmd === "cmd-delete") {
       let tree = this.host.projectTree;
       let resource = tree.getSelected();
diff --git a/browser/devtools/itchpad/lib/plugins/drag-drop-new/lib/drag-drop-new.js b/browser/devtools/itchpad/lib/plugins/drag-drop-new/lib/drag-drop-new.js
--- a/browser/devtools/itchpad/lib/plugins/drag-drop-new/lib/drag-drop-new.js
+++ b/browser/devtools/itchpad/lib/plugins/drag-drop-new/lib/drag-drop-new.js
@@ -7,17 +7,17 @@
 const { Class } = require("sdk/core/heritage");
 const { registerPlugin, Plugin } = require("itchpad/plugins/core");
 const promise = require("itchpad/helpers/promise");
 const Editor  = require("devtools/sourceeditor/editor");
 const { Cu } = require("chrome");
 const { VariablesView } = Cu.import("resource:///modules/devtools/VariablesView.jsm", {});
 const { ObjectClient } = Cu.import("resource://gre/modules/devtools/dbg-client.jsm", {});
 const { EnvironmentClient } = Cu.import("resource://gre/modules/devtools/dbg-client.jsm", {});
-const OS = require("itchpad/helpers/osfile");
+const { OS } = Cu.import("resource://gre/modules/osfile.jsm", {});
 
 var DragDropNew = Class({
   extends: Plugin,
 
   init: function(host) {
     this.onDrop = this.onDrop.bind(this);
     this.onDragOver = this.onDragOver.bind(this);
     this.dropzone = host.document.querySelector("#main-deck");
diff --git a/browser/devtools/itchpad/lib/plugins/fuzzy-search/lib/plugin.js b/browser/devtools/itchpad/lib/plugins/fuzzy-search/lib/plugin.js
--- a/browser/devtools/itchpad/lib/plugins/fuzzy-search/lib/plugin.js
+++ b/browser/devtools/itchpad/lib/plugins/fuzzy-search/lib/plugin.js
@@ -24,17 +24,17 @@ var Search = Class({
       parent: "#plugin-toolbar-right",
       type: "search",
       timeout: "50",
       hidden: true,
       class: "devtools-searchinput",
     });
 
     this.panel = this.host.createElement("panel", {
-      parent: "window",
+      parent: "page",
       class: "results-panel",
       level: "top",
       noautofocus: "true",
       consumeoutsideclicks: "false",
       hidden: "true"
     });
 
     this.onSearchFocus = this.onSearchFocus.bind(this);
diff --git a/browser/devtools/itchpad/lib/plugins/new/lib/new.js b/browser/devtools/itchpad/lib/plugins/new/lib/new.js
--- a/browser/devtools/itchpad/lib/plugins/new/lib/new.js
+++ b/browser/devtools/itchpad/lib/plugins/new/lib/new.js
@@ -1,31 +1,32 @@
 /* -*- Mode: Javascript; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* vim: set ft=javascript ts=2 et sw=2 tw=80: */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 const { Class } = require("sdk/core/heritage");
 const { registerPlugin, Plugin } = require("itchpad/plugins/core");
+const { localizedStrings } = require("itchpad/helpers/L10N");
 
 // Handles the save command.
 var NewFile = Class({
   extends: Plugin,
 
   init: function(host) {
     this.host.createMenuItem({
       parent: "#file-menu-popup",
-      label: this.host.getLocalizedString("itchpad.newLabel"),
+      label: localizedStrings.newLabel,
       command: "cmd-new",
       key: "key-new"
     });
     this.host.createMenuItem({
       parent: "#directory-menu-popup",
-      label: this.host.getLocalizedString("itchpad.newLabel"),
+      label: localizedStrings.newLabel,
       command: "cmd-new"
     });
 
     this.command = this.host.addCommand({
       id: "cmd-new",
       key: "n",
       modifiers: "accel"
     });
diff --git a/browser/devtools/itchpad/lib/project.js b/browser/devtools/itchpad/lib/project.js
--- a/browser/devtools/itchpad/lib/project.js
+++ b/browser/devtools/itchpad/lib/project.js
@@ -1,22 +1,23 @@
 /* -*- Mode: Javascript; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* vim: set ft=javascript ts=2 et sw=2 tw=80: */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
+const { Cu } = require("chrome");
 const { Class } = require("sdk/core/heritage");
 const { EventTarget } = require("sdk/event/target");
 const { emit } = require("sdk/event/core");
 const { scope } = require("itchpad/event/scope");
 const prefs = require("sdk/preferences/service");
 const { LocalStore } = require("itchpad/stores/local");
-const OS = require("itchpad/helpers/osfile");
-const task = require("itchpad/helpers/task");
+const { OS } = Cu.import("resource://gre/modules/osfile.jsm", {});
+const { Task } = Cu.import("resource://gre/modules/Task.jsm", {});
 const { ProjectIndex } = require("itchpad/project-index");
 const promise = require("itchpad/helpers/promise");
 const { TextEncoder, TextDecoder } = require('sdk/io/buffer');
 const { indexedDB } = require('sdk/indexed-db');
 const url = require('sdk/url');
 const { StoreCollection } = require("itchpad/store-collection");
 
 const gDecoder = new TextDecoder();
@@ -275,17 +276,17 @@ var Project = Class({
     this.manualPattern = true;
     this.pattern = pattern;
     return this.save().then(() => {
       emit(this, "pattern-change");
     });
   },
 
   refresh: function() {
-    return task.spawn(function*() {
+    return Task.spawn(function*() {
       for (let [path, store] of this.localStores) {
         yield store.refresh();
       }
     }.bind(this));
   },
 
   resourceFor: function(path, options) {
     let store = this.storeContaining(path);
diff --git a/browser/devtools/itchpad/lib/resource-map.js b/browser/devtools/itchpad/lib/resource-map.js
--- a/browser/devtools/itchpad/lib/resource-map.js
+++ b/browser/devtools/itchpad/lib/resource-map.js
@@ -67,142 +67,63 @@ var Pair = Class({
 
 exports.Pair = Pair;
 
 // Maintains the list of pairs.
 var ResourceMap = Class({
   initialize: function() {
     this.liveStores = new Set();
     this.pairs = new Map();
-    this.manualPairs = new Map();
 
     this.scheduleRebuild = this.scheduleRebuild.bind(this);
   },
 
   setProject: function(project) {
     this.unwatchCollection(this.project);
     this.project = project;
     this.watchCollection(this.project);
     this.scheduleRebuild();
   },
 
-  setPage: function(page) {
-    this.unwatchCollection(this.page);
-    this.page = page;
-    this.watchCollection(this.page);
-    this.scheduleRebuild();
-  },
-
   watchCollection: function(collection) {
     on(this, collection, "resource-added", this.scheduleRebuild);
     on(this, collection, "resource-removed", this.scheduleRebuild);
   },
 
   unwatchCollection: function(collection) {
     forget(this, collection);
   },
 
   scheduleRebuild: function() {
     if (this._scheduledRebuild) {
       timers.clearTimeout(this._scheduledRebuild);
     }
     this._scheduledRebuild = timers.setTimeout(this.rebuild.bind(this), 100);
   },
 
-  manualPair: function(project, live) {
-    let pair;
-
-    let pair = this.pairs.get(project);
-    if (!pair) {
-      pair = this.pairs.get(live);
-    }
-    if (!pair) {
-      pair = new Pair(this, project, live);
-    }
-    pair.project = project;
-    pair.live = live;
-
-    // XXX: Manual pairs should probably be by path, otherwise
-    // they won't last through a refresh.  Will fix that later.
-    this.manualPairs.set(live, pair);
-    this.rebuild();
-  },
-
   /**
    * Rebuild the project pairings.
    */
   rebuild: function() {
     if (this._scheduledRebuild) {
       timers.clearTimeout(this._scheduledRebuild);
       this._scheduledRebuild = null;
     }
     let start = Date.now();
     // Rules:
     // - Pairs stay with the local resource if they change.
 
     let newPairs = new Map();
 
-    // Walk through all live resources...
-    for (let live of this.page.allResources()) {
-      if (live.isDir) {
-        continue;
-      }
-
-      // If there's a manual pair, just trust it.
-      if (this.manualPairs.has(live)) {
-        let manual = this.manualPairs.get(live);
-        newPairs.set(manual.project, manual);
-        newPairs.set(manual.live, manual);
-        continue;
-      }
-
-      // Find a project resource for this resource...
-      let project = this._findPair(live);
-
-      if (!project) {
-        // No paired resource, no need to save a pair, but do
-        // keep the one-sided pair around if there is one.
-        let oldPair = this.pairs.get(live);
-        if (oldPair) {
-          // Just in case.
-          oldPair.project = null;
-
-          newPairs.set(live, oldPair);
-        }
-        continue;
-      }
-
-      // We have a real pair.  Update it if it already exists.
-      // XXX: This could leave us with an empty pair, make
-      // sure editors close properly...
-      let pair = this.pairs.get(project);
-      if (pair) {
-        pair.live = live;
-      } else {
-        pair = new Pair(this, project, live);
-      }
-      newPairs.set(live, pair);
-      newPairs.set(project, pair);
-
-      // Remove the project link from the map so the next pass
-      // doesn't pick it up.
-      this.pairs.delete(project);
-    }
-
     // Now newPairs has pairs for all live resources that
     // need them (either because they already had a single-sided pair
     // in the wild or because they found a real pair)
     // Now make sure that any project resources with an outstanding pair
     // are included.
     for (let project of this.project.allResources()) {
-      let newPair = newPairs.get(project);
-      if (newPair) {
-        // Already taken care of.
-        continue;
-      }
       let oldPair = this.pairs.get(project);
       if (oldPair) {
         oldPair.live = null;
         newPairs.set(project, oldPair);
       }
     }
 
     this.pairs = newPairs;
diff --git a/browser/devtools/itchpad/lib/stores/local.js b/browser/devtools/itchpad/lib/stores/local.js
--- a/browser/devtools/itchpad/lib/stores/local.js
+++ b/browser/devtools/itchpad/lib/stores/local.js
@@ -8,29 +8,26 @@
  * Hastily-written local file backend for ItchPad
  */
 
 const { Cc, Ci, Cu, ChromeWorker } = require("chrome");
 const { Class } = require("sdk/core/heritage");
 const { TextEncoder, TextDecoder } = require('sdk/io/buffer')
 const { emit } = require("sdk/event/core");
 const { ProjectStore, Resource } = require("itchpad/stores/base");
-const task = require("itchpad/helpers/task");
+const { Task } = Cu.import("resource://gre/modules/Task.jsm", {});
 const data = require("sdk/self").data;
 const promise = require("itchpad/helpers/promise");
-const Task = require("itchpad/helpers/task");
 const URL = require("sdk/url");
-const OS = require("itchpad/helpers/osfile");
+const { OS } = Cu.import("resource://gre/modules/osfile.jsm", {});
 const { FileUtils } = Cu.import("resource://gre/modules/FileUtils.jsm", {});
 const mimeService = Cc["@mozilla.org/mime;1"].getService(Ci.nsIMIMEService);
 
-
 const CHECK_LINKED_DIRECTORY_DELAY = 5000;
 const SHOULD_LIVE_REFRESH = true;
-const spawn = Task.spawn;
 
 const gDecoder = new TextDecoder();
 const gEncoder = new TextEncoder();
 
 // XXX: Ignores should probably be handled differently.
 const IGNORE_REGEX = /(^\.)|(\~$)|(^node_modules$)/;
 
 var LocalStore = Class({
@@ -96,17 +93,17 @@ var LocalStore = Class({
     if (this.resources.has(path)) {
       return promise.resolve(this.resources.get(path));
     }
 
     if (!this.contains(path)) {
       return promise.reject(new Error(path + " does not belong to " + this.path));
     }
 
-    return spawn(function() {
+    return Task.spawn(function() {
       let parent = yield this.resourceFor(OS.Path.dirname(path));
 
       let info;
       try {
         info = yield OS.File.stat(path);
       } catch (ex if ex instanceof OS.File.Error && ex.becauseNoSuchFile) {
         if (!options.create) {
           throw ex;
@@ -308,17 +305,17 @@ var FileResource = Class({
    */
   save: function(str) {
     let buffer = gEncoder.encode(str);
     let path = this.path;
 
     // XXX: This was losing permissions on save
     // return OS.File.writeAtomic(this.path, buffer, { tmpPath: this.path + ".tmp" });
 
-    return task.spawn(function*() {
+    return Task.spawn(function*() {
         let pfh = yield OS.File.open(path, {truncate: true});
         yield pfh.write(buffer);
         yield pfh.close();
     });
   },
 
   get contentType() {
     if (this._contentType) {
diff --git a/browser/devtools/itchpad/lib/stores/styles.js b/browser/devtools/itchpad/lib/stores/styles.js
deleted file mode 100644
--- a/browser/devtools/itchpad/lib/stores/styles.js
+++ /dev/null
@@ -1,188 +0,0 @@
-/* -*- Mode: Javascript; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* vim: set ft=javascript ts=2 et sw=2 tw=80: */
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-const { Cu } = require("chrome");
-const { Class } = require("sdk/core/heritage");
-const { EventTarget } = require("sdk/event/target");
-const { emit } = require("sdk/event/core");
-const promise = require("itchpad/helpers/promise");
-const URL = require("sdk/url");
-
-const { StyleSheetsFront } = require("devtools/server/actors/stylesheets");
-const { StyleEditorFront } = require("devtools/server/actors/styleeditor");
-const {CssLogic} = require("devtools/styleinspector/css-logic");
-
-const { LiveStore, Resource } = require("itchpad/stores/base");
-
-
-var StylesStore = Class({
-  extends: LiveStore,
-
-  defaultCategory: "css",
-
-  initialize: function(target) {
-    this.initStore();
-
-    this._onStyleSheetsCleared = this._onStyleSheetsCleared.bind(this);
-    this._onNavigate = this._onNavigate.bind(this);
-
-    this.setRoot(FolderResource(this));
-
-    this.setTarget(target);
-  },
-
-  setTarget: function(target) {
-    if (this.debuggee) {
-      this.resources.clear();
-      this.debuggee.destroy();
-      this.target.off("will-navigate", this._onStyleSheetsCleared);
-      this.target.off("navigate", this._onNavigate);
-    }
-
-    this.target = target;
-
-    if (!target) {
-      return;
-    }
-
-    // XXX: Need to share style editor fronts with the style editor.
-    if (this.target.form.styleSheetsActor) {
-      this.debuggee = StyleSheetsFront(this.target.client, this.target.form);
-    } else {
-      // We're talking to a pre-firefox 29 server-side
-      this.debuggee = StyleEditorFront(this.target.client, this.target.form);
-    }
-
-    this.debuggee.getStyleSheets().then(styleSheets => {
-      if (this.target !== target) {
-        return;
-      }
-      this.root.setSheets(styleSheets);
-      this.target.on("will-navigate", this._onStyleSheetsCleared);
-      this.target.on("navigate", this._onNavigate);
-    }).then(null, console.error);
-  },
-
-  _onNavigate: function() {
-    this.debuggee.getStyleSheets().then(styleSheets => {
-      this.root.setSheets(styleSheets);
-    });
-  },
-
-  _onStyleSheetsCleared: function() {
-    this.resources.clear();
-    this.root.setSheets();
-  },
-
-  refresh: function() {
-    // This is a live source, no explicit refresh needed.
-    return promise.resolve();
-  },
-
-  forSheet: function(sheet) {
-    if (this.resources.has(sheet.actorID)) {
-      return this.resources.get(sheet.actorID);
-    }
-
-    let resource = SheetResource(this, sheet);
-    this.resources.set(sheet.actorID, resource);
-    this.notifyAdd(resource);
-    return resource;
-  }
-});
-exports.StylesStore = StylesStore;
-
-var FolderResource = Class({
-  extends: Resource,
-
-  initialize: function(store) {
-    this.store = store;
-    this.children = new Set();
-  },
-
-  get displayName() { return "Styles"; },
-  get isDir() { return true; },
-  get hasChildren() { return this.children.size > 0 },
-
-  setSheets: function(sheets=[]) {
-    let newChildren = new Set();
-    for (let sheet of sheets) {
-      newChildren.add(this.store.forSheet(sheet));
-    }
-    this.setChildren(newChildren);
-  },
-
-  createChild: function(name) {
-    if (!this.store.debuggee) {
-      console.error("Tried to create a child without a debuggee.");
-      deferred.reject(new Error("Can't create child without a target."));
-    }
-    return this.store.debuggee.addStyleSheet("").then(sheet => {
-      let resource = this.store.forSheet(sheet);
-      resource._title = name;
-      this.addChild(resource);
-      return resource;
-    }).then(null, console.error);
-  }
-});
-
-var SheetResource = Class({
-  extends: Resource,
-
-  initialize: function(store, sheet) {
-    this.store = store;
-    this.sheet = sheet;
-    this.children = new Set();
-    if (sheet.href) {
-      this.setURI(new URL.URL(sheet.href));
-    } else {
-      this.setURI(new URL.URL("#sheet-" + sheet.styleSheetIndex, sheet.nodeHref));
-    }
-  },
-
-  toString: function() {
-    return "[SheetResource:" + this.uri + "]";
-  },
-
-  get displayName() {
-    if (this._title) {
-      return this._title;
-    }
-
-    if (!this.sheet.href) {
-      this._title = "<inline style sheet " + this.sheet.styleSheetIndex + ">";
-      return this._title;
-    }
-
-    this._title = CssLogic.shortSource({ href: this.sheet.href });
-    try {
-      this._title = decodeURI(this._title);
-    } catch(ex) {
-    }
-
-    return this._title;
-  },
-
-  get isDir() { return false; },
-  get hasChildren() { return false; },
-
-  get contentType() {
-    // Good enough.
-    return "text/css";
-  },
-
-  canAutoApply: true,
-
-  load: function() {
-    return this.sheet.getText().then(longstr => {
-      return longstr.string();
-    });
-  },
-
-  apply: function(text) {
-    return this.sheet.update(text, true);
-  }
-});
diff --git a/browser/devtools/itchpad/lib/tree.js b/browser/devtools/itchpad/lib/tree.js
--- a/browser/devtools/itchpad/lib/tree.js
+++ b/browser/devtools/itchpad/lib/tree.js
@@ -1,22 +1,23 @@
 /* -*- Mode: Javascript; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* vim: set ft=javascript ts=2 et sw=2 tw=80: */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
+const { Cu } = require("chrome");
 const { Class } = require("sdk/core/heritage");
 const { emit } = require("sdk/event/core");
 const { EventTarget } = require("sdk/event/target");
 const { merge } = require("sdk/util/object");
 const promise = require("itchpad/helpers/promise");
 const { InplaceEditor } = require("devtools/shared/inplace-editor");
 const { on, forget } = require("itchpad/event/scope");
-const OS = require("itchpad/helpers/osfile");
+const { OS } = Cu.import("resource://gre/modules/osfile.jsm", {});
 
 const HTML_NS = "http://www.w3.org/1999/xhtml";
 const XUL_NS = "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
 
 var Container = Class({
   initialize: function(tree, node) {
     this.tree = tree;
     this.node = node;
diff --git a/browser/locales/en-US/chrome/browser/devtools/itchpad.properties b/browser/locales/en-US/chrome/browser/devtools/itchpad.properties
--- a/browser/locales/en-US/chrome/browser/devtools/itchpad.properties
+++ b/browser/locales/en-US/chrome/browser/devtools/itchpad.properties
@@ -16,8 +16,23 @@
 # file / folder to be deleted
 itchpad.deleteLabel=Delete
 
 # LOCALIZATION NOTE (itchpad.newLabel):
 # This string is displayed as a context menu item for adding a new file to
 # the directory
 itchpad.newLabel=New...
 
+# LOCALIZATION NOTE (itchpad.selectFileLabel):
+# This string is displayed as a context menu item for adding a new file to
+# the directory
+itchpad.selectFileLabel=Select a File
+
+# LOCALIZATION NOTE (itchpad.selectFolderLabel):
+# This string is displayed as a context menu item for adding a new file to
+# the directory
+itchpad.selectFolderLabel=Select a Folder
+
+# LOCALIZATION NOTE (itchpad.openFileLabel):
+# This string is displayed as a context menu item for adding a new file to
+# the directory
+itchpad.openFileLabel=Open a File
+
