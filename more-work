# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  ea238e439515ebf9d1be4f9772f4ca5b23685610
Bug 1291049 - Some more work towards bundling the inspector

diff --git a/addon-sdk/source/lib/sdk/lang/functional/concurrent.js b/addon-sdk/source/lib/sdk/lang/functional/concurrent.js
--- a/addon-sdk/source/lib/sdk/lang/functional/concurrent.js
+++ b/addon-sdk/source/lib/sdk/lang/functional/concurrent.js
@@ -8,27 +8,27 @@
 
 "use strict";
 
 module.metadata = {
   "stability": "unstable"
 };
 
 const { arity, name, derive, invoke } = require("./helpers");
-const { setTimeout, clearTimeout, setImmediate } = require("../../timers");
+const { setTimeout, clearTimeout, _setImmediate } = require("../../timers");
 
 /**
  * Takes a function and returns a wrapped one instead, calling which will call
  * original function in the next turn of event loop. This is basically utility
  * to do `setImmediate(function() { ... })`, with a difference that returned
  * function is reused, instead of creating a new one each time. This also allows
  * to use this functions as event listeners.
  */
 const defer = f => derive(function(...args) {
-  setImmediate(invoke, f, args, this);
+  _setImmediate(invoke, f, args, this);
 }, f);
 exports.defer = defer;
 // Exporting `remit` alias as `defer` may conflict with promises.
 exports.remit = defer;
 
 /**
  * Much like setTimeout, invokes function after wait milliseconds. If you pass
  * the optional arguments, they will be forwarded on to the function when it is
diff --git a/addon-sdk/source/lib/sdk/output/system.js b/addon-sdk/source/lib/sdk/output/system.js
--- a/addon-sdk/source/lib/sdk/output/system.js
+++ b/addon-sdk/source/lib/sdk/output/system.js
@@ -1,17 +1,17 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 "use strict";
 
 const { Cc, Ci, Cr } = require("chrome");
 const { Input, start, stop, receive, outputs } = require("../event/utils");
 const { id: addonID } = require("../self");
-const { setImmediate } = require("../timers");
+const { _setImmediate } = require("../timers");
 const { notifyObservers } = Cc['@mozilla.org/observer-service;1'].
                              getService(Ci.nsIObserverService);
 
 const NOT_AN_INPUT = "OutputPort can be used only for sending messages";
 
 // `OutputPort` creates a port to which messages can be send. Those
 // messages are actually disptached as `subject`'s of the observer
 // notifications. This is handy for communicating between different
@@ -60,12 +60,12 @@ OutputPort.receive = ({topic, sync}, mes
   // object so that observers could receive it.
   const subject = message === null ? null :
                   message instanceof Ci.nsISupports ? message :
                   message.wrappedJSObject ? message :
                   {wrappedJSObject: message};
   if (sync)
     notifyObservers(subject, topic, null);
   else
-    setImmediate(notifyObservers, subject, topic, null);
+    _setImmediate(notifyObservers, subject, topic, null);
 };
 OutputPort.prototype[receive] = OutputPort.receive;
 exports.OutputPort = OutputPort;
diff --git a/addon-sdk/source/lib/sdk/timers.js b/addon-sdk/source/lib/sdk/timers.js
--- a/addon-sdk/source/lib/sdk/timers.js
+++ b/addon-sdk/source/lib/sdk/timers.js
@@ -68,17 +68,17 @@ var dispatcher = _ => {
     if (immediate) {
       immediates.delete(id);
       try { immediate(); }
       catch (error) { console.exception(error); }
     }
   }
 }
 
-function setImmediate(callback, ...params) {
+function _setImmediate(callback, ...params) {
   let id = ++ lastID;
   // register new immediate timer with curried params.
   immediates.set(id, _ => callback.apply(callback, params));
   // if dispatch loop is not scheduled schedule one. Own scheduler
   if (!dispatcher.scheduled) {
     dispatcher.scheduled = true;
     threadManager.currentThread.dispatch(dispatcher,
                                          Ci.nsIThread.DISPATCH_NORMAL);
@@ -86,17 +86,17 @@ function setImmediate(callback, ...param
   return id;
 }
 
 function clearImmediate(id) {
   immediates.delete(id);
 }
 
 // Bind timers so that toString-ing them looks same as on native timers.
-exports.setImmediate = setImmediate.bind(null);
+exports._setImmediate = _setImmediate.bind(null);
 exports.clearImmediate = clearImmediate.bind(null);
 exports.setTimeout = setTimer.bind(null, TYPE_ONE_SHOT);
 exports.setInterval = setTimer.bind(null, TYPE_REPEATING_SLACK);
 exports.clearTimeout = unsetTimer.bind(null);
 exports.clearInterval = unsetTimer.bind(null);
 
 // all timers are cleared out on unload.
 unload(function() {
diff --git a/addon-sdk/source/lib/sdk/util/object.js b/addon-sdk/source/lib/sdk/util/object.js
--- a/addon-sdk/source/lib/sdk/util/object.js
+++ b/addon-sdk/source/lib/sdk/util/object.js
@@ -29,17 +29,17 @@ const { flatten } = require('./array');
  *    b.name    // 'b'
  */
 function merge(source) {
   let descriptor = {};
 
   // `Boolean` converts the first parameter to a boolean value. Any object is
   // converted to `true` where `null` and `undefined` becames `false`. Therefore
   // the `filter` method will keep only objects that are defined and not null.
-  Array.slice(arguments, 1).filter(Boolean).forEach(function onEach(properties) {
+  [].slice(arguments, 1).filter(Boolean).forEach(function onEach(properties) {
     getOwnPropertyIdentifiers(properties).forEach(function(name) {
       descriptor[name] = Object.getOwnPropertyDescriptor(properties, name);
     });
   });
   return Object.defineProperties(source, descriptor);
 }
 exports.merge = merge;
 
@@ -67,17 +67,17 @@ function each(obj, fn) {
 exports.each = each;
 
 /**
  * Like `merge`, except no property descriptors are manipulated, for use
  * with platform objects. Identical to underscore's `extend`. Useful for
  * merging XPCOM objects
  */
 function safeMerge(source) {
-  Array.slice(arguments, 1).forEach(function onEach (obj) {
+  [].slice(arguments, 1).forEach(function onEach (obj) {
     for (let prop in obj) source[prop] = obj[prop];
   });
   return source;
 }
 exports.safeMerge = safeMerge;
 
 /*
  * Returns a copy of the object without omitted properties
diff --git a/addon-sdk/source/lib/sdk/windows/firefox.js b/addon-sdk/source/lib/sdk/windows/firefox.js
--- a/addon-sdk/source/lib/sdk/windows/firefox.js
+++ b/addon-sdk/source/lib/sdk/windows/firefox.js
@@ -14,17 +14,16 @@ const { emit, emitOnObject, setListeners
 const { once } = require('../dom/events');
 const { EventTarget } = require('../event/target');
 const { getSelectedTab } = require('../tabs/utils');
 const { Cc, Ci } = require('chrome');
 const { Options } = require('../tabs/common');
 const system = require('../system/events');
 const { ignoreWindow, isPrivate, isWindowPBSupported } = require('../private-browsing/utils');
 const { data, isPrivateBrowsingSupported } = require('../self');
-const { setImmediate } = require('../timers');
 
 const supportPrivateWindows = isPrivateBrowsingSupported && isWindowPBSupported;
 
 const modelsFor = new WeakMap();
 const viewsFor = new WeakMap();
 
 const Window = Class({
   implements: [EventTarget],
diff --git a/addon-sdk/source/test/event/helpers.js b/addon-sdk/source/test/event/helpers.js
--- a/addon-sdk/source/test/event/helpers.js
+++ b/addon-sdk/source/test/event/helpers.js
@@ -1,17 +1,17 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 "use strict";
 
 const { on, once, off, emit, count } = require("sdk/event/core");
 
-const { setImmediate, setTimeout } = require("sdk/timers");
+const { _setImmediate, setTimeout } = require("sdk/timers");
 const { defer } = require("sdk/core/promise");
 
 /**
  * Utility function that returns a promise once the specified event's `type`
  * is emitted on the given `target`, or the delay specified is passed.
  *
  * @param {Object|Number} [target]
  *    The delay to wait, or the object that receives the event.
@@ -25,17 +25,17 @@ const { defer } = require("sdk/core/prom
  * @returns {Promise}
  *    A promise resolved once the delay given is passed, or the object
  *    receives the event specified
  */
 const wait = function(target, type, capture) {
   let { promise, resolve, reject } = defer();
 
   if (!arguments.length) {
-    setImmediate(resolve);
+    _setImmediate(resolve);
   }
   else if (typeof(target) === "number") {
     setTimeout(resolve, target);
   }
   else if (typeof(target.once) === "function") {
     target.once(type, resolve);
   }
   else if (typeof(target.addEventListener) === "function") {
diff --git a/devtools/client/inspector/inspector-panel.js b/devtools/client/inspector/inspector-panel.js
--- a/devtools/client/inspector/inspector-panel.js
+++ b/devtools/client/inspector/inspector-panel.js
@@ -30,16 +30,20 @@ const {RuleViewTool} = require("devtools
 const {ToolSidebar} = require("devtools/client/inspector/toolsidebar");
 const {ViewHelpers} = require("devtools/client/shared/widgets/view-helpers");
 const clipboardHelper = require("devtools/shared/platform/clipboard");
 
 const {LocalizationHelper} = require("devtools/shared/l10n");
 const INSPECTOR_L10N = new LocalizationHelper("devtools/locale/inspector.properties");
 const TOOLBOX_L10N = new LocalizationHelper("devtools/locale/toolbox.properties");
 
+const { Selection } = require("devtools/client/framework/selection");
+const { InspectorFront } = require("devtools/shared/fronts/inspector");
+const { getHighlighterUtils } = require("devtools/client/framework/toolbox-highlighter-utils");
+
 /**
  * Represents an open instance of the Inspector for a tab.
  * The inspector controls the breadcrumbs, the markup view, and the sidebar
  * (computed view, rule view, font view and layout view).
  *
  * Events:
  * - ready
  *      Fired when the inspector panel is opened for the first time and ready to
@@ -103,38 +107,76 @@ function InspectorPanel(iframeWindow, to
 
 exports.InspectorPanel = InspectorPanel;
 
 InspectorPanel.prototype = {
   /**
    * open is effectively an asynchronous constructor
    */
   open: Task.async(function* () {
-    this._cssPropertiesLoaded = initCssProperties(this.toolbox);
+    this._inspector = InspectorFront(this._target.client, this._target.form);
+    this._walker = yield inspector.getWalker(
+      {showAllAnonymousContent: Services.prefs.getBoolPref("devtools.inspector.showAllAnonymousContent")}
+    );
+    this._selection = new Selection(this.walker);
+    this._highlighter = yield this._inspector.getHighlighter(false);
+
+    this._cssPropertiesLoaded = Promise.resolve();
+
+    /* XXX:  initCssProperties(this.toolbox); leads to:
+    *************************
+    inspector.bundle.js:5363:11
+    A coding exception was thrown and uncaught in a Task.
+
+    inspector.bundle.js:5364:11
+    Full message: TypeError: types.getType(...).formType is not a function
+    inspector.bundle.js:5365:11
+    Full stack: Inspector</Front<.initialize@http://localhost:8000/inspector.bundle.js:6884:15
+    Inspector</CssPropertiesFront<.initialize@http://localhost:8000/inspector.bundle.js:5494:6
+    constructor@http://localhost:8000/inspector.bundle.js:7394:24
+    Inspector</initCssProperties<@http://localhost:8000/inspector.bundle.js:5595:14
+    Inspector</TaskImpl.prototype._run@http://localhost:8000/inspector.bundle.js:5240:40
+    TaskImpl@http://localhost:8000/inspector.bundle.js:5202:4
+    Inspector</createAsyncFunction/asyncFunction@http://localhost:8000/inspector.bundle.js:5176:15
+    Inspector</InspectorPanel.prototype.open<@http://localhost:8000/inspector.bundle.js:158:34
+    Inspector</TaskImpl.prototype._run@http://localhost:8000/inspector.bundle.js:5240:40
+    TaskImpl@http://localhost:8000/inspector.bundle.js:5202:4
+    Inspector</createAsyncFunction/asyncFunction@http://localhost:8000/inspector.bundle.js:5176:15
+    @http://localhost:8000/public/build/bundle.js:167:6
+    Async*@http://localhost:8000/public/build/bundle.js:157:4
+    __webpack_require__@http://localhost:8000/public/build/bundle.js:20:12
+    @http://localhost:8000/public/build/bundle.js:47:19
+    __webpack_require__@http://localhost:8000/public/build/bundle.js:20:12
+    @http://localhost:8000/public/build/bundle.js:40:18
+    @http://localhost:8000/public/build/bundle.js:1:11
+
+    inspector.bundle.js:5366:11
+    *************************/
+
     yield this._cssPropertiesLoaded;
     yield this.target.makeRemote();
     yield this._getPageStyle();
     let defaultSelection = yield this._getDefaultNodeForSelection();
     return yield this._deferredOpen(defaultSelection);
   }),
 
   get toolbox() {
     return this._toolbox;
   },
 
   get inspector() {
-    return this._toolbox.inspector;
+    return this._inspector;
   },
 
   get walker() {
-    return this._toolbox.walker;
+    return this._walker;
   },
 
   get selection() {
-    return this._toolbox.selection;
+    return this._selection;
   },
 
   get isOuterHTMLEditable() {
     return this._target.client.traits.editOuterHTML;
   },
 
   get hasUrlToImageDataResolver() {
     return this._target.client.traits.urlToImageDataResolver;
@@ -256,17 +298,17 @@ InspectorPanel.prototype = {
     this._defaultNode = null;
     this.selection.setNodeFront(null);
     this._destroyMarkup();
     this.isDirty = false;
     this._pendingSelection = null;
   },
 
   _getPageStyle: function () {
-    return this._toolbox.inspector.getPageStyle().then(pageStyle => {
+    return this.inspector.getPageStyle().then(pageStyle => {
       this.pageStyle = pageStyle;
     }, this._handleRejectionIfNotDestroyed);
   },
 
   /**
    * Return a promise that will resolve to the default node for selection.
    */
   _getDefaultNodeForSelection: function () {
diff --git a/devtools/client/webpack.config.js b/devtools/client/webpack.config.js
--- a/devtools/client/webpack.config.js
+++ b/devtools/client/webpack.config.js
@@ -18,16 +18,17 @@ const path = require("path");
 const webpack = require("webpack");
 
 module.exports = {
   bail: true,
 
   entry: './inspector/inspector-panel.js',
   output: {
     filename: './inspector/inspector.bundle.js',
+    library: 'Inspector',
   },
   module: {
     // Disable handling of unknown requires
     unknownContextRegExp: /$^/,
     unknownContextCritical: false,
 
     // Disable handling of requires with a single expression
     exprContextRegExp: /$^/,
@@ -74,23 +75,36 @@ module.exports = {
       "reportError": "console.error",
       "loader": "{ lazyRequireGetter: () => {} }",
       "dump": "console.log",
     }),
   ],
 
   externals: [
     /codemirror\//,
-    /server\//,
     {
       "promise": "var Promise",
 
       // Just trying to get build to work.  These should be removed eventually:
       "chrome": "{}",
 
+      // In case you end up in chrome-land you can use this to help track down issues.
+      // SDK for instance does a bunch of this so if you somehow end up importing an SDK
+      // dependency this might help for debugging:
+      // "chrome": `{
+      //   Cc: {
+      //     '@mozilla.org/uuid-generator;1': { getService: () => { return {} } },
+      //     '@mozilla.org/observer-service;1': { getService: () => { return {} } },
+      //   },
+      //   Ci: {},
+      //   Cr: {},
+      //   Cm: {},
+      //   components: { classesByID: () => {} , ID: () => {} }
+      // }`,
+
       "resource://gre/modules/XPCOMUtils.jsm": "{}",
       "resource://devtools/client/styleeditor/StyleEditorUI.jsm": "{}",
       "resource://devtools/client/styleeditor/StyleEditorUtil.jsm": "{}",
       "devtools/client/inspector/inspector-panel": "{}",
       "devtools/server/actors/utils/audionodes.json": "{}",
 
       "devtools/client/shared/developer-toolbar": "{}",
 
diff --git a/devtools/shared/layout/utils.js b/devtools/shared/layout/utils.js
--- a/devtools/shared/layout/utils.js
+++ b/devtools/shared/layout/utils.js
@@ -1,32 +1,29 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 "use strict";
 
 const { Ci, Cc } = require("chrome");
-const { memoize } = require("sdk/lang/functional");
 const nodeFilterConstants = require("devtools/shared/dom-node-filter-constants");
 
 loader.lazyRequireGetter(this, "setIgnoreLayoutChanges", "devtools/server/actors/layout", true);
 exports.setIgnoreLayoutChanges = (...args) =>
   this.setIgnoreLayoutChanges(...args);
 
 /**
  * Returns the `DOMWindowUtils` for the window given.
  *
  * @param {DOMWindow} win
  * @returns {DOMWindowUtils}
  */
-const utilsFor = memoize(
-  win => win.QueryInterface(Ci.nsIInterfaceRequestor)
-            .getInterface(Ci.nsIDOMWindowUtils)
-);
+const utilsFor = win => win.QueryInterface(Ci.nsIInterfaceRequestor)
+                           .getInterface(Ci.nsIDOMWindowUtils);
 
 /**
  * like win.top, but goes through mozbrowsers and mozapps iframes.
  *
  * @param {DOMWindow} win
  * @return {DOMWindow}
  */
 function getTopWindow(win) {
