diff --git a/accessible/base/ARIAMap.cpp b/accessible/base/ARIAMap.cpp
--- a/accessible/base/ARIAMap.cpp
+++ b/accessible/base/ARIAMap.cpp
@@ -1174,19 +1174,6 @@
     kGenericAccType,
     states::READONLY
   },
-  { // textbox
-    nsGkAtoms::textbox,
-    roles::ENTRY,
-    kUseMapRole,
-    eNoValue,
-    eActivateAction,
-    eNoLiveAttr,
-    kGenericAccType,
-    kNoReqStates,
-    eARIAAutoComplete,
-    eARIAMultiline,
-    eARIAReadonlyOrEditable
-  },
   { // timer
     nsGkAtoms::timer,
     roles::NOTHING,
diff --git a/accessible/base/XULMap.h b/accessible/base/XULMap.h
--- a/accessible/base/XULMap.h
+++ b/accessible/base/XULMap.h
@@ -82,15 +82,6 @@
   return CreateMenupopupAccessible(aElement, aContext);
 })
 
-XULMAP(textbox, [](Element* aElement, Accessible* aContext) -> Accessible* {
-  if (aElement->AttrValueIs(kNameSpaceID_None, nsGkAtoms::type,
-                            nsGkAtoms::autocomplete, eIgnoreCase)) {
-    return new XULComboboxAccessible(aElement, aContext->Document());
-  }
-
-  return new EnumRoleAccessible<roles::SECTION>(aElement, aContext->Document());
-})
-
 XULMAP(tree, [](Element* aElement, Accessible* aContext) -> Accessible* {
   nsIContent* child =
       nsTreeUtils::GetDescendantChild(aElement, nsGkAtoms::treechildren);
diff --git a/accessible/generic/Accessible.cpp b/accessible/generic/Accessible.cpp
--- a/accessible/generic/Accessible.cpp
+++ b/accessible/generic/Accessible.cpp
@@ -1399,12 +1399,6 @@
     return;
   }
 
-  // Value of textbox is a textified subtree.
-  if (roleMapEntry->Is(nsGkAtoms::textbox)) {
-    nsTextEquivUtils::GetTextEquivFromSubtree(this, aValue);
-    return;
-  }
-
   // Value of combobox is a text of current or selected item.
   if (roleMapEntry->Is(nsGkAtoms::combobox)) {
     Accessible* option = CurrentItem();
diff --git a/browser/components/customizableui/PanelMultiView.jsm b/browser/components/customizableui/PanelMultiView.jsm
--- a/browser/components/customizableui/PanelMultiView.jsm
+++ b/browser/components/customizableui/PanelMultiView.jsm
@@ -1519,7 +1519,6 @@
     let tag = element.localName;
     return (
       tag == "menulist" ||
-      tag == "textbox" ||
       tag == "input" ||
       tag == "textarea" ||
       // Allow tab to reach embedded documents.
diff --git a/browser/components/preferences/connection.js b/browser/components/preferences/connection.js
--- a/browser/components/preferences/connection.js
+++ b/browser/components/preferences/connection.js
@@ -370,7 +370,6 @@
     return [
       ...controlGroup.querySelectorAll(":scope > radio"),
       ...controlGroup.querySelectorAll("label"),
-      ...controlGroup.querySelectorAll("textbox"),
       ...controlGroup.querySelectorAll("checkbox"),
       ...document.querySelectorAll("#networkProxySOCKSVersion > radio"),
       ...document.querySelectorAll("#ConnectionsDialogPane > checkbox"),
diff --git a/devtools/client/debugger/.eslintrc.jsx-a11y b/devtools/client/debugger/.eslintrc.jsx-a11y
--- a/devtools/client/debugger/.eslintrc.jsx-a11y
+++ b/devtools/client/debugger/.eslintrc.jsx-a11y
@@ -24,7 +24,7 @@
     "jsx-a11y/iframe-has-title": "warn",
     "jsx-a11y/img-redundant-alt": "warn",
     "jsx-a11y/interactive-supports-focus": ["warn", {
-      "tabbable": ["button", "checkbox", "link", "searchbox", "spinbutton", "switch", "textbox"]
+      "tabbable": ["button", "checkbox", "link", "searchbox", "spinbutton", "switch"]
     }],
     "jsx-a11y/label-has-for": ["error", {
       "required": {
diff --git a/devtools/client/shared/SplitView.jsm b/devtools/client/shared/SplitView.jsm
--- a/devtools/client/shared/SplitView.jsm
+++ b/devtools/client/shared/SplitView.jsm
@@ -50,7 +50,6 @@
     if (
       aEvent.target.ownerDocument != this._nav.ownerDocument ||
       aEvent.target.tagName == "input" ||
-      aEvent.target.tagName == "textbox" ||
       aEvent.target.tagName == "textarea" ||
       aEvent.target.classList.contains("textbox")
     ) {
diff --git a/devtools/client/storage/ui.js b/devtools/client/storage/ui.js
--- a/devtools/client/storage/ui.js
+++ b/devtools/client/storage/ui.js
@@ -1261,10 +1261,7 @@
       event.keyCode == KeyCodes.DOM_VK_BACK_SPACE ||
       event.keyCode == KeyCodes.DOM_VK_DELETE
     ) {
-      if (
-        this.table.selectedRow &&
-        !["input", "textbox"].includes(event.target.localName)
-      ) {
+      if (this.table.selectedRow && event.target.localName != "input") {
         this.onRemoveItem();
         event.stopPropagation();
         event.preventDefault();
diff --git a/dom/base/nsFocusManager.cpp b/dom/base/nsFocusManager.cpp
--- a/dom/base/nsFocusManager.cpp
+++ b/dom/base/nsFocusManager.cpp
@@ -335,17 +335,12 @@
 
 #ifdef MOZ_XUL
   if (aContent->IsXULElement()) {
-    if (aContent->IsXULElement(nsGkAtoms::textbox)) {
-      return aContent->OwnerDoc()->GetAnonymousElementByAttribute(
-          aContent, nsGkAtoms::anonid, NS_LITERAL_STRING("input"));
-    } else {
-      nsCOMPtr<nsIDOMXULMenuListElement> menulist =
-          aContent->AsElement()->AsXULMenuList();
-      if (menulist) {
-        RefPtr<Element> inputField;
-        menulist->GetInputField(getter_AddRefs(inputField));
-        return inputField;
-      }
+    nsCOMPtr<nsIDOMXULMenuListElement> menulist =
+        aContent->AsElement()->AsXULMenuList();
+    if (menulist) {
+      RefPtr<Element> inputField;
+      menulist->GetInputField(getter_AddRefs(inputField));
+      return inputField;
     }
   }
 #endif
diff --git a/dom/l10n/L10nOverlays.cpp b/dom/l10n/L10nOverlays.cpp
--- a/dom/l10n/L10nOverlays.cpp
+++ b/dom/l10n/L10nOverlays.cpp
@@ -99,9 +99,6 @@
     if (elemName == nsGkAtoms::label) {
       return nameAtom == nsGkAtoms::value;
     }
-    if (elemName == nsGkAtoms::textbox) {
-      return nameAtom == nsGkAtoms::placeholder || nameAtom == nsGkAtoms::value;
-    }
   }
 
   return false;
diff --git a/dom/xul/nsXULElement.h b/dom/xul/nsXULElement.h
--- a/dom/xul/nsXULElement.h
+++ b/dom/xul/nsXULElement.h
@@ -608,11 +608,6 @@
       nsXULPrototypeElement* aPrototype, mozilla::dom::NodeInfo* aNodeInfo,
       bool aIsScriptable, bool aIsRoot);
 
-  bool IsReadWriteTextElement() const {
-    return IsAnyOfXULElements(nsGkAtoms::textbox, nsGkAtoms::textarea) &&
-           !HasAttr(kNameSpaceID_None, nsGkAtoms::readonly);
-  }
-
   virtual JSObject* WrapNode(JSContext* aCx,
                              JS::Handle<JSObject*> aGivenProto) override;
 
diff --git a/dom/xul/nsXULElement.cpp b/dom/xul/nsXULElement.cpp
--- a/dom/xul/nsXULElement.cpp
+++ b/dom/xul/nsXULElement.cpp
@@ -107,12 +107,6 @@
 nsXULElement::nsXULElement(already_AddRefed<mozilla::dom::NodeInfo>&& aNodeInfo)
     : nsStyledElement(std::move(aNodeInfo)), mBindingParent(nullptr) {
   XUL_PROTOTYPE_ATTRIBUTE_METER(gNumElements);
-
-  // We may be READWRITE by default; check.
-  if (IsReadWriteTextElement()) {
-    AddStatesSilently(NS_EVENT_STATE_MOZ_READWRITE);
-    RemoveStatesSilently(NS_EVENT_STATE_MOZ_READONLY);
-  }
 }
 
 nsXULElement::~nsXULElement() {}
@@ -523,8 +517,7 @@
         }
       }
     }
-    if (aKeyCausesActivation &&
-        !content->IsAnyOfXULElements(nsGkAtoms::textbox, nsGkAtoms::menulist)) {
+    if (aKeyCausesActivation && !content->IsXULElement(nsGkAtoms::menulist)) {
       elm->ClickWithInputSource(MouseEvent_Binding::MOZ_SOURCE_KEYBOARD,
                                 aIsTrustedEvent);
     }
@@ -1191,14 +1184,7 @@
 }
 
 EventStates nsXULElement::IntrinsicState() const {
-  EventStates state = nsStyledElement::IntrinsicState();
-
-  if (IsReadWriteTextElement()) {
-    state |= NS_EVENT_STATE_MOZ_READWRITE;
-    state &= ~NS_EVENT_STATE_MOZ_READONLY;
-  }
-
-  return state;
+  return nsStyledElement::IntrinsicState();
 }
 
 //----------------------------------------------------------------------
diff --git a/layout/xul/nsBoxFrame.cpp b/layout/xul/nsBoxFrame.cpp
--- a/layout/xul/nsBoxFrame.cpp
+++ b/layout/xul/nsBoxFrame.cpp
@@ -1145,8 +1145,8 @@
 
   // only support accesskeys for the following elements
   if (!mContent->IsAnyOfXULElements(nsGkAtoms::button, nsGkAtoms::toolbarbutton,
-                                    nsGkAtoms::checkbox, nsGkAtoms::textbox,
-                                    nsGkAtoms::tab, nsGkAtoms::radio)) {
+                                    nsGkAtoms::checkbox, nsGkAtoms::tab,
+                                    nsGkAtoms::radio)) {
     return;
   }
 
diff --git a/layout/xul/nsMenuPopupFrame.cpp b/layout/xul/nsMenuPopupFrame.cpp
--- a/layout/xul/nsMenuPopupFrame.cpp
+++ b/layout/xul/nsMenuPopupFrame.cpp
@@ -1773,14 +1773,6 @@
       return ConsumeOutsideClicks_Never;
     }
 #endif
-    if (ni->Equals(nsGkAtoms::textbox, kNameSpaceID_XUL)) {
-      // Don't consume outside clicks for autocomplete widget
-      if (parentContent->AsElement()->AttrValueIs(
-              kNameSpaceID_None, nsGkAtoms::type, nsGkAtoms::autocomplete,
-              eCaseMatters)) {
-        return ConsumeOutsideClicks_Never;
-      }
-    }
   }
 
   return ConsumeOutsideClicks_True;
diff --git a/toolkit/content/jar.mn b/toolkit/content/jar.mn
--- a/toolkit/content/jar.mn
+++ b/toolkit/content/jar.mn
@@ -69,7 +69,6 @@
    content/global/bindings/popup.xml           (widgets/popup.xml)
    content/global/bindings/scrollbox.xml       (widgets/scrollbox.xml)
    content/global/bindings/spinner.js          (widgets/spinner.js)
-   content/global/bindings/textbox.xml         (widgets/textbox.xml)
    content/global/bindings/timekeeper.js       (widgets/timekeeper.js)
    content/global/bindings/timepicker.js       (widgets/timepicker.js)
    content/global/elements/autocomplete-input.js              (widgets/autocomplete-input.js)
diff --git a/toolkit/content/preferencesBindings.js b/toolkit/content/preferencesBindings.js
--- a/toolkit/content/preferencesBindings.js
+++ b/toolkit/content/preferencesBindings.js
@@ -441,13 +441,6 @@
       }
       if (aElement.localName == "checkbox") {
         setValue(aElement, "checked", val);
-      } else if (aElement.localName == "textbox") {
-        // XXXmano Bug 303998: Avoid a caret placement issue if either the
-        // preference observer or its setter calls updateElements as a result
-        // of the input event handler.
-        if (aElement.value !== val) {
-          setValue(aElement, "value", val);
-        }
       } else {
         setValue(aElement, "value", val);
       }
@@ -499,7 +492,6 @@
         case "input":
         case "radiogroup":
         case "textarea":
-        case "textbox":
         case "menulist":
           return true;
       }
diff --git a/toolkit/content/widgets/textbox.xml b/toolkit/content/widgets/textbox.xml
deleted file mode 100644
--- a/toolkit/content/widgets/textbox.xml
+++ /dev/null
@@ -1,198 +0,0 @@
-<?xml version="1.0"?>
-<!-- This Source Code Form is subject to the terms of the Mozilla Public
-   - License, v. 2.0. If a copy of the MPL was not distributed with this
-   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
-
-<!-- This files relies on these specific Chrome/XBL globals -->
-<!-- globals ChromeWindow -->
-
-
-<!DOCTYPE bindings [
-  <!ENTITY % textcontextDTD SYSTEM "chrome://global/locale/textcontext.dtd" >
-  %textcontextDTD;
-]>
-
-<bindings id="textboxBindings"
-   xmlns="http://www.mozilla.org/xbl"
-   xmlns:html="http://www.w3.org/1999/xhtml"
-   xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
-   xmlns:xbl="http://www.mozilla.org/xbl">
-
-  <binding id="textbox">
-    <content>
-      <children/>
-      <xul:moz-input-box anonid="moz-input-box" flex="1" xbl:inherits="context,spellcheck">
-        <html:input class="textbox-input" anonid="input"
-                    xbl:inherits="value,type,maxlength,disabled,size,readonly,placeholder,tabindex,accesskey,noinitialfocus,mozactionhint,spellcheck"/>
-      </xul:moz-input-box>
-    </content>
-
-    <implementation>
-      <!-- nsIDOMXULLabeledControlElement -->
-      <field name="crop">""</field>
-      <field name="image">""</field>
-      <field name="command">""</field>
-      <field name="accessKey">""</field>
-
-      <field name="mInputField">null</field>
-      <field name="mIgnoreClick">false</field>
-      <field name="mEditor">null</field>
-
-      <property name="inputField" readonly="true">
-        <getter><![CDATA[
-          if (!this.mInputField)
-            this.mInputField = document.getAnonymousElementByAttribute(this, "anonid", "input");
-          return this.mInputField;
-        ]]></getter>
-      </property>
-
-      <property name="value"      onset="this.inputField.value = val; return val;"
-                                  onget="return this.inputField.value;"/>
-      <property name="defaultValue" onset="this.inputField.defaultValue = val; return val;"
-                                  onget="return this.inputField.defaultValue;"/>
-      <property name="label"      onset="this.setAttribute('label', val); return val;"
-                                  onget="return this.getAttribute('label') || this.placeholder;" />
-      <property name="placeholder" onset="this.inputField.placeholder = val; return val;"
-                                  onget="return this.inputField.placeholder;"/>
-      <property name="emptyText"  onset="this.placeholder = val; return val;"
-                                  onget="return this.placeholder;"/>
-      <property name="type"       onset="if (val) this.setAttribute('type', val);
-                                         else this.removeAttribute('type'); return val;"
-                                  onget="return this.getAttribute('type');"/>
-      <property name="maxLength"  onset="this.inputField.maxLength = val; return val;"
-                                  onget="return this.inputField.maxLength;"/>
-      <property name="disabled"   onset="this.inputField.disabled = val;
-                                         if (val) this.setAttribute('disabled', 'true');
-                                         else this.removeAttribute('disabled'); return val;"
-                                  onget="return this.inputField.disabled;"/>
-      <property name="tabIndex"   onget="return parseInt(this.getAttribute('tabindex'));"
-                                  onset="this.inputField.tabIndex = val;
-                                         if (val) this.setAttribute('tabindex', val);
-                                         else this.removeAttribute('tabindex'); return val;"/>
-      <property name="size"       onset="this.inputField.size = val; return val;"
-                                  onget="return this.inputField.size;"/>
-      <property name="readOnly"   onset="this.inputField.readOnly = val;
-                                         if (val) this.setAttribute('readonly', 'true');
-                                         else this.removeAttribute('readonly'); return val;"
-                                  onget="return this.inputField.readOnly;"/>
-
-      <property name="editor" readonly="true">
-        <getter><![CDATA[
-          if (!this.mEditor) {
-            this.mEditor = this.inputField.editor;
-          }
-          return this.mEditor;
-        ]]></getter>
-      </property>
-
-      <method name="reset">
-        <body><![CDATA[
-          this.value = this.defaultValue;
-          try {
-            this.editor.transactionManager.clear();
-            return true;
-          } catch (e) {}
-          return false;
-        ]]></body>
-      </method>
-
-      <method name="select">
-        <body>
-          this.inputField.select();
-        </body>
-      </method>
-
-      <method name="setUserInput">
-        <parameter name="value"/>
-        <body><![CDATA[
-          this.inputField.setUserInput(value);
-        ]]></body>
-      </method>
-
-      <property name="controllers"    readonly="true" onget="return this.inputField.controllers"/>
-      <property name="textLength"     readonly="true"
-                                      onget="return this.inputField.textLength;"/>
-      <property name="selectionStart" onset="this.inputField.selectionStart = val; return val;"
-                                      onget="return this.inputField.selectionStart;"/>
-      <property name="selectionEnd"   onset="this.inputField.selectionEnd = val; return val;"
-                                      onget="return this.inputField.selectionEnd;"/>
-
-      <method name="setSelectionRange">
-        <parameter name="aSelectionStart"/>
-        <parameter name="aSelectionEnd"/>
-        <body>
-          // According to https://html.spec.whatwg.org/#do-not-apply,
-          // setSelectionRange() is only available on a limited set of input types.
-          if (this.inputField.type == "text") {
-            this.inputField.setSelectionRange( aSelectionStart, aSelectionEnd );
-          }
-        </body>
-      </method>
-
-      <constructor><![CDATA[
-        var str = this._cachedInputFieldValue;
-        if (str) {
-          this.inputField.value = str;
-          delete this._cachedInputFieldValue;
-        }
-
-        if (this.hasAttribute("emptytext"))
-          this.placeholder = this.getAttribute("emptytext");
-      ]]></constructor>
-
-      <destructor>
-        <![CDATA[
-          var field = this.inputField;
-          if (field && field.value) {
-            this._cachedInputFieldValue = field.value;
-          }
-
-          this.mInputField = null;
-        ]]>
-      </destructor>
-
-    </implementation>
-
-    <handlers>
-      <handler event="focus" phase="capturing">
-        <![CDATA[
-          if (this.hasAttribute("focused"))
-            return;
-
-          switch (event.originalTarget) {
-            case this:
-              // Forward focus to actual HTML input
-              this.inputField.focus();
-              this.setAttribute("focused", "true");
-              break;
-            case this.inputField:
-              this.setAttribute("focused", "true");
-              break;
-            default:
-              // Otherwise, allow other children (e.g. URL bar buttons) to get focus
-              break;
-          }
-        ]]>
-      </handler>
-
-      <handler event="blur" phase="capturing">
-        <![CDATA[
-          this.removeAttribute("focused");
-        ]]>
-      </handler>
-
-      <handler event="mousedown">
-        <![CDATA[
-          this.mIgnoreClick = this.hasAttribute("focused");
-
-          if (!this.mIgnoreClick) {
-            this.setSelectionRange(0, 0);
-            if (event.originalTarget == this ||
-                event.originalTarget == this.inputField.parentNode)
-              this.inputField.focus();
-          }
-        ]]>
-      </handler>
-    </handlers>
-  </binding>
-</bindings>
diff --git a/toolkit/content/xul.css b/toolkit/content/xul.css
--- a/toolkit/content/xul.css
+++ b/toolkit/content/xul.css
@@ -440,8 +440,7 @@
 
 /********** textbox **********/
 
-textbox {
-  -moz-binding: url("chrome://global/content/bindings/textbox.xml#textbox");
+search-textbox {
   -moz-user-select: text;
   text-shadow: none;
 }
@@ -459,10 +458,6 @@
   }
 }
 
-.textbox-contextmenu:-moz-locale-dir(rtl) {
-  direction: rtl;
-}
-
 /********** autocomplete textbox **********/
 
 /* SeaMonkey uses its own autocomplete and the toolkit's autocomplete widget */
diff --git a/toolkit/themes/linux/global/textbox.css b/toolkit/themes/linux/global/textbox.css
--- a/toolkit/themes/linux/global/textbox.css
+++ b/toolkit/themes/linux/global/textbox.css
@@ -3,15 +3,14 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 /* ===== textbox.css ==================================================
-  == Styles used by the XUL textbox element.
+  == Styles used by the XUL search-textbox element.
   ======================================================================= */
 
 @namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");
 @namespace html url("http://www.w3.org/1999/xhtml");
 
-/* ::::: textbox ::::: */
+/* ::::: search textbox ::::: */
 
-textbox,
 search-textbox {
   -moz-appearance: textfield;
   cursor: text;
@@ -36,13 +35,8 @@
   text-align: inherit;
 }
 
-.textbox-contextmenu {
-  cursor: default;
-}
-
 /* ..... readonly state ..... */
 
-textbox[readonly="true"],
 search-textbox[readonly="true"] {
   background-color: -moz-Dialog;
   color: -moz-DialogText;
@@ -50,28 +44,13 @@
 
 /* ..... disabled state ..... */
 
-textbox[disabled="true"],
 search-textbox[disabled="true"] {
   cursor: default;
   background-color: -moz-Dialog;
   color: GrayText;
 }
 
-/* ::::: plain textbox ::::: */
-
-textbox.plain {
-  -moz-appearance: none !important;
-  background-color: transparent;
-  padding: 0px !important;
-  margin: 0px !important;
-  border: none !important;
-}
-
-textbox.plain html|*.textbox-input {
-  padding: 0px !important;
-}
-
-/* ::::: search textbox ::::: */
+/* ::::: icons ::::: */
 
 search-textbox:not([searchbutton]) > .textbox-search-sign {
   list-style-image: url(chrome://global/skin/icons/search-textbox.svg);
@@ -86,13 +65,7 @@
   list-style-image: url(chrome://global/skin/icons/searchfield-cancel.svg);
 }
 
-.textbox-search-icon[searchbutton]:not([disabled]) ,
+.textbox-search-icon[searchbutton]:not([disabled]),
 .textbox-search-clear:not([disabled]) {
   cursor: pointer;
 }
-
-/* ::::: textboxes inside toolbarpaletteitems ::::: */
-
-toolbarpaletteitem > toolbaritem > textbox > moz-input-box > html|*.textbox-input {
-  visibility: hidden;
-}
diff --git a/toolkit/themes/osx/global/textbox.css b/toolkit/themes/osx/global/textbox.css
--- a/toolkit/themes/osx/global/textbox.css
+++ b/toolkit/themes/osx/global/textbox.css
@@ -5,12 +5,12 @@
 @namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");
 @namespace html url("http://www.w3.org/1999/xhtml");
 
-textbox,
 search-textbox {
-  -moz-appearance: textfield;
+  -moz-appearance: searchfield;
+  font-size: 12px;
   cursor: text;
   margin: 4px;
-  padding: 0px;
+  padding: 1px;
   background-color: -moz-Field;
   color: -moz-FieldText;
 }
@@ -26,48 +26,21 @@
   text-shadow: inherit;
   box-sizing: border-box;
   -moz-box-flex: 1;
-}
-
-html|*.textbox-input {
   text-align: inherit;
 }
 
-.textbox-contextmenu {
-  cursor: default;
-}
-
-textbox[readonly="true"],
 search-textbox[readonly="true"] {
   background-color: -moz-Dialog;
   color: -moz-DialogText;
 }
 
-textbox[disabled="true"],
 search-textbox[disabled="true"] {
   cursor: default;
   background-color: -moz-Dialog;
   color: GrayText;
 }
 
-textbox.plain {
-  -moz-appearance: none !important;
-  background-color: transparent;
-  padding: 0px !important;
-  margin: 0px !important;
-  border: none !important;
-}
-
-textbox.plain html|*.textbox-input {
-  padding: 0px !important;
-}
-
-/* ::::: search box ::::: */
-
-search-textbox {
-  -moz-appearance: searchfield;
-  padding: 1px;
-  font-size: 12px;
-}
+/* ::::: icons ::::: */
 
 .textbox-search-clear {
   list-style-image: url(chrome://global/skin/icons/searchfield-cancel.svg);
diff --git a/toolkit/themes/shared/in-content/common.inc.css b/toolkit/themes/shared/in-content/common.inc.css
--- a/toolkit/themes/shared/in-content/common.inc.css
+++ b/toolkit/themes/shared/in-content/common.inc.css
@@ -464,7 +464,6 @@
 html|input[type="url"],
 html|input[type="number"],
 html|textarea,
-xul|textbox,
 xul|search-textbox {
   -moz-appearance: none;
   border: 1px solid var(--in-content-box-border-color);
@@ -475,7 +474,6 @@
   background-color: var(--in-content-box-background) !important;
 }
 
-xul|textbox,
 xul|search-textbox {
   min-height: 30px;
   padding-right: 8px;
@@ -502,7 +500,6 @@
 html|input[type="url"]:enabled:not(:focus):hover,
 html|input[type="number"]:enabled:not(:focus):hover,
 html|textarea:enabled:not(:focus):hover,
-xul|textbox:not([disabled="true"]):not([focused]):hover,
 xul|search-textbox:not([disabled="true"]):not([focused]):hover {
   border-color: var(--in-content-border-hover);
 }
@@ -514,7 +511,6 @@
 html|input[type="url"]:focus,
 html|input[type="number"]:focus,
 html|textarea:focus,
-xul|textbox[focused],
 xul|search-textbox[focused] {
   border-color: var(--in-content-border-active);
   box-shadow: 0 0 0 1px var(--in-content-border-active),
@@ -551,7 +547,6 @@
 html|input[type="url"]:disabled,
 html|input[type="number"]:disabled,
 html|textarea:disabled,
-xul|textbox[disabled="true"],
 xul|search-textbox[disabled="true"] {
   opacity: 0.4;
 }
diff --git a/toolkit/themes/windows/global/textbox.css b/toolkit/themes/windows/global/textbox.css
--- a/toolkit/themes/windows/global/textbox.css
+++ b/toolkit/themes/windows/global/textbox.css
@@ -3,15 +3,14 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 /* ===== textbox.css ==================================================
-  == Styles used by the XUL textbox element.
+  == Styles used by the XUL search-textbox element.
   ======================================================================= */
 
 @namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");
 @namespace html url("http://www.w3.org/1999/xhtml");
 
-/* ::::: textbox ::::: */
+/* ::::: search textbox ::::: */
 
-textbox,
 search-textbox {
   -moz-appearance: textfield;
   cursor: text;
@@ -36,19 +35,8 @@
   text-align: inherit;
 }
 
-@media (-moz-windows-default-theme) and (-moz-os-version: windows-win7) {
-  textbox html|*.textbox-input::placeholder {
-    font-style: italic;
-  }
-}
-
-.textbox-contextmenu {
-  cursor: default;
-}
-
 /* ..... readonly state ..... */
 
-textbox[readonly="true"],
 search-textbox[readonly="true"] {
   background-color: -moz-Dialog;
   color: -moz-DialogText;
@@ -56,28 +44,13 @@
 
 /* ..... disabled state ..... */
 
-textbox[disabled="true"],
 search-textbox[disabled="true"] {
   cursor: default;
   background-color: -moz-Dialog;
   color: GrayText;
 }
 
-/* ::::: plain textbox ::::: */
-
-textbox.plain {
-  -moz-appearance: none !important;
-  background-color: transparent;
-  padding: 0px !important;
-  margin: 0px !important;
-  border: none !important;
-}
-
-textbox.plain html|*.textbox-input {
-  padding: 0px !important;
-}
-
-/* ::::: search textbox ::::: */
+/* ::::: icons ::::: */
 
 search-textbox:not([searchbutton]) > .textbox-search-sign {
   list-style-image: url(chrome://global/skin/icons/search-textbox.svg);
@@ -104,9 +77,3 @@
 .textbox-search-clear:not([disabled]) {
   cursor: default;
 }
-
-/* ::::: textboxes inside toolbarpaletteitems ::::: */
-
-toolbarpaletteitem > toolbaritem > textbox > moz-input-box > html|*.textbox-input {
-  visibility: hidden;
-}

