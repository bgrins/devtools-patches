# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  88067aeb4340f4b7dc012138675c015550290a9d
Bug 1148996 - Remove selected lightweight theme for tests

diff --git a/browser/base/content/browser-devedition.js b/browser/base/content/browser-devedition.js
--- a/browser/base/content/browser-devedition.js
+++ b/browser/base/content/browser-devedition.js
@@ -67,16 +67,19 @@ let DevEdition = {
     if (e.type === "load") {
       this.styleSheet.removeEventListener("load", this);
       gBrowser.tabContainer._positionPinnedTabs();
       this._inferBrightness();
     }
   },
 
   _toggleStyleSheet: function(deveditionThemeEnabled) {
+    let {console} = Components.utils.import("resource://gre/modules/devtools/Console.jsm", {});
+    console.log("TOGGLING", deveditionThemeEnabled, this.styleSheet);
+    console.trace();
     if (deveditionThemeEnabled && !this.styleSheet) {
       let styleSheetAttr = `href="${this.styleSheetLocation}" type="text/css"`;
       this.styleSheet = document.createProcessingInstruction(
         'xml-stylesheet', styleSheetAttr);
       this.styleSheet.addEventListener("load", this);
       document.insertBefore(this.styleSheet, document.documentElement);
       // NB: we'll notify observers once the stylesheet has fully loaded, see
       // handleEvent above.
diff --git a/browser/base/content/test/general/browser_devedition.js b/browser/base/content/test/general/browser_devedition.js
--- a/browser/base/content/test/general/browser_devedition.js
+++ b/browser/base/content/test/general/browser_devedition.js
@@ -31,29 +31,29 @@ add_task(function* startTests() {
 
   info ("Adding a lightweight theme.");
   LightweightThemeManager.currentTheme = dummyLightweightTheme("preview0");
   ok (!DevEdition.styleSheet, "The devedition stylesheet has been removed when a lightweight theme is applied.");
 
   info ("Applying the devedition lightweight theme.");
   let onAttributeAdded = waitForBrightTitlebarAttribute();
   LightweightThemeManager.currentTheme = LightweightThemeManager.getUsedTheme("firefox-devedition@mozilla.org");
-  ok (DevEdition.styleSheet, "The devedition stylesheet has been added when the devedition lightweight theme is applied");
+  ok (DevEdition.styleSheet, "The devedition stylesheet has been added when the devedition lightweight theme is applied (1)");
   yield onAttributeAdded;
   is (document.documentElement.getAttribute("brighttitlebarforeground"), "true",
      "The brighttitlebarforeground attribute is set on the window.");
 
   info ("Unapplying all themes.");
   LightweightThemeManager.currentTheme = null;
   ok (!DevEdition.styleSheet, "There is no devedition style sheet when no lw theme is applied.");
 
   info ("Applying the devedition lightweight theme.");
   onAttributeAdded = waitForBrightTitlebarAttribute();
   LightweightThemeManager.currentTheme = LightweightThemeManager.getUsedTheme("firefox-devedition@mozilla.org");
-  ok (DevEdition.styleSheet, "The devedition stylesheet has been added when the devedition lightweight theme is applied");
+  ok (DevEdition.styleSheet, "The devedition stylesheet has been added when the devedition lightweight theme is applied (2)");
   yield onAttributeAdded;
   ok (document.documentElement.hasAttribute("brighttitlebarforeground"),
      "The brighttitlebarforeground attribute is set on the window with dark devtools theme.");
 });
 
 add_task(function* testDevtoolsTheme() {
   info ("Checking stylesheet and :root attributes based on devtools theme.");
   Services.prefs.setCharPref(PREF_DEVTOOLS_THEME, "light");
diff --git a/testing/mochitest/browser-test.js b/testing/mochitest/browser-test.js
--- a/testing/mochitest/browser-test.js
+++ b/testing/mochitest/browser-test.js
@@ -26,16 +26,25 @@ XPCOMUtils.defineLazyModuleGetter(this, 
   "resource:///modules/ContentSearch.jsm");
 
 XPCOMUtils.defineLazyModuleGetter(this, "SelfSupportBackend",
   "resource:///modules/SelfSupportBackend.jsm");
 
 const SIMPLETEST_OVERRIDES =
   ["ok", "is", "isnot", "ise", "todo", "todo_is", "todo_isnot", "info", "expectAssertions", "requestCompleteLog"];
 
+
+
+
+  let {LightweightThemeManager} = Components.utils.import("resource://gre/modules/LightweightThemeManager.jsm", {});
+
+  LightweightThemeManager.currentTheme = null;
+  LightweightThemeManager.clearBuiltInThemes();
+
+
 window.addEventListener("load", function testOnLoad() {
   window.removeEventListener("load", testOnLoad);
   window.addEventListener("MozAfterPaint", function testOnMozAfterPaint() {
     window.removeEventListener("MozAfterPaint", testOnMozAfterPaint);
     setTimeout(testInit, 0);
   });
 });
 
@@ -126,16 +135,26 @@ function testInit() {
     e10s_init();
     let globalMM = Cc["@mozilla.org/globalmessagemanager;1"]
                      .getService(Ci.nsIMessageListenerManager);
     globalMM.loadFrameScript("chrome://mochikit/content/shutdown-leaks-collector.js", true);
   } else {
     // In non-e10s, only run the ShutdownLeaksCollector in the parent process.
     Components.utils.import("chrome://mochikit/content/ShutdownLeaksCollector.jsm");
   }
+
+  // Make tests run consistently on DevEdition (which has a lightweight theme
+  // selected by default).
+  try {
+    // let prefs = Components.classes["@mozilla.org/preferences-service;1"]
+    //   .getService(Components.interfaces.nsIPrefBranch);
+
+    // prefs.deleteBranch("lightweightThemes.selectedThemeID");
+    // prefs.deleteBranch("browser.devedition.theme.enabled");
+  } catch (e) { }
 }
 
 function Tester(aTests, aDumper, aCallback) {
   this.dumper = aDumper;
   this.tests = aTests;
   this.callback = aCallback;
   this.openedWindows = {};
   this.openedURLs = {};
@@ -187,17 +206,17 @@ function Tester(aTests, aDumper, aCallba
       this._toleratedUncaughtRejections.indexOf(message) != -1;
     let name = "A promise chain failed to handle a rejection: ";
     if (tolerate) {
       name = "WARNING: (PLEASE FIX THIS AS PART OF BUG 1077403) " + name;
     }
 
     this.currentTest.addResult(
       new testResult(
-	      /*success*/tolerate,
+             /*success*/tolerate,
         /*name*/name,
         /*error*/error,
         /*known*/tolerate,
         /*stack*/stack));
     }.bind(this);
 }
 Tester.prototype = {
   EventUtils: {},
diff --git a/testing/xpcshell/head.js b/testing/xpcshell/head.js
--- a/testing/xpcshell/head.js
+++ b/testing/xpcshell/head.js
@@ -1417,8 +1417,20 @@ try {
   if (runningInParent) {
     let prefs = Components.classes["@mozilla.org/preferences-service;1"]
       .getService(Components.interfaces.nsIPrefBranch);
 
     prefs.setCharPref("media.gmp-manager.url.override", "http://%(server)s/dummy-gmp-manager.xml");
     prefs.setCharPref("browser.selfsupport.url", "https://%(server)s/selfsupport-dummy/");
   }
 } catch (e) { }
+
+// Make tests run consistently on DevEdition (which has a lightweight theme
+// selected by default).
+try {
+  if (runningInParent) {
+    let prefs = Components.classes["@mozilla.org/preferences-service;1"]
+      .getService(Components.interfaces.nsIPrefBranch);
+
+    prefs.deleteBranch("lightweightThemes.selectedThemeID");
+    prefs.deleteBranch("browser.devedition.theme.enabled");
+  }
+} catch (e) { }
diff --git a/toolkit/mozapps/extensions/LightweightThemeManager.jsm b/toolkit/mozapps/extensions/LightweightThemeManager.jsm
--- a/toolkit/mozapps/extensions/LightweightThemeManager.jsm
+++ b/toolkit/mozapps/extensions/LightweightThemeManager.jsm
@@ -294,20 +294,22 @@ this.LightweightThemeManager = {
       if (PERSIST_ENABLED) {
         LightweightThemeImageOptimizer.purge();
         _persistImages(aData, function themeChanged_persistImages() {
           _notifyWindows(this.currentThemeForDisplay);
         }.bind(this));
       }
     }
 
+    // prefs.deleteBranch("lightweightThemes.selectedThemeID");
+
     if (aData)
       _prefs.setCharPref("selectedThemeID", aData.id);
     else
-      _prefs.clearUserPref("selectedThemeID");
+      _prefs.deleteBranch("selectedThemeID");
 
     _notifyWindows(aData);
     Services.obs.notifyObservers(null, "lightweight-theme-changed", null);
   },
 
   /**
    * Starts the Addons provider and enables the new lightweight theme if
    * necessary.
