
# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1522902546 25200
# Node ID c7ea06d790c2b789885ee14e8e6b7c94e87e3bbf
# Parent  35165f43d0b97f500dafb4f0f7b9ca8d91416812
Bug 1411707 - Switch XUL deck from a XBL binding to a Custom Element;

MozReview-Commit-ID: F95i9H9FvYv

diff --git a/toolkit/components/processsingleton/MainProcessSingleton.js b/toolkit/components/processsingleton/MainProcessSingleton.js
--- a/toolkit/components/processsingleton/MainProcessSingleton.js
+++ b/toolkit/components/processsingleton/MainProcessSingleton.js
@@ -60,26 +60,47 @@ MainProcessSingleton.prototype = {
       Services.search.addEngine(engineURL.spec, null, iconURL ? iconURL.spec : null, true);
     });
   },
 
   observe(subject, topic, data) {
     switch (topic) {
     case "app-startup": {
       Services.obs.addObserver(this, "xpcom-shutdown");
+      Services.obs.addObserver(this, "document-element-inserted");
 
       // Load this script early so that console.* is initialized
       // before other frame scripts.
       Services.mm.loadFrameScript("chrome://global/content/browser-content.js", true);
       Services.ppmm.loadProcessScript("chrome://global/content/process-content.js", true);
       Services.mm.addMessageListener("Search:AddEngine", this.addSearchEngine);
       Services.ppmm.loadProcessScript("resource:///modules/ContentObservers.js", true);
       break;
     }
 
+    case "document-element-inserted":
+      // We want to load chromeGlobals.js in all chrome XUL documents before any other
+      // scripts run.
+      const doc = subject;
+      const win = doc.ownerGlobal;
+      if (doc.nodePrincipal.isSystemPrincipal &&
+          doc.contentType == "application/vnd.mozilla.xul+xml") {
+          // Set up Custom Elements for XUL windows. Anything here should be
+          // considered part of core XUL functionality. Any window-specific
+          // elements can be registered via <script> tags at the top of
+          // individual documents.
+          for (let script of [
+            "chrome://global/content/widgets/general.js",
+          ]) {
+            Services.scriptloader.loadSubScript(script, win);
+          }
+      }
+      break;
+
     case "xpcom-shutdown":
       Services.mm.removeMessageListener("Search:AddEngine", this.addSearchEngine);
+      Services.obs.removeObserver(this, "document-element-inserted");
       break;
     }
   },
 };
 
 this.NSGetFactory = XPCOMUtils.generateNSGetFactory([MainProcessSingleton]);
diff --git a/toolkit/content/jar.mn b/toolkit/content/jar.mn
--- a/toolkit/content/jar.mn
+++ b/toolkit/content/jar.mn
@@ -56,16 +56,17 @@ toolkit.jar:
    content/global/resetProfile.xul
    content/global/resetProfileProgress.xul
    content/global/TopLevelVideoDocument.js
    content/global/timepicker.xhtml
    content/global/treeUtils.js
 #ifndef MOZ_FENNEC
    content/global/viewZoomOverlay.js
 #endif
+   content/global/widgets/general.js           (widgets/general.js)
    content/global/bindings/autocomplete.xml    (widgets/autocomplete.xml)
    content/global/bindings/browser.xml         (widgets/browser.xml)
    content/global/bindings/button.xml          (widgets/button.xml)
    content/global/bindings/calendar.js         (widgets/calendar.js)
    content/global/bindings/checkbox.xml        (widgets/checkbox.xml)
    content/global/bindings/colorpicker.xml     (widgets/colorpicker.xml)
    content/global/bindings/datekeeper.js       (widgets/datekeeper.js)
    content/global/bindings/datepicker.js       (widgets/datepicker.js)
diff --git a/toolkit/content/widgets/general.js b/toolkit/content/widgets/general.js
new file mode 100644
--- /dev/null
+++ b/toolkit/content/widgets/general.js
@@ -0,0 +1,50 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+"use strict";
+
+{
+
+class MozDeck extends XULElement {
+  // XXX: We need to have either a connectedCallback or a disconnectedCallback to prevent
+  // crashes like https://treeherder.mozilla.org/#/jobs?repo=try&revision=01b88d0fa1744b015c328b14dc38c0ccf1186212&.
+  constructor() {
+    super();
+  }
+  connectedCallback() {
+    super.connectedCallback();
+  }
+
+  disconnectedCallback() {
+    super.disconnectedCallback();
+  }
+
+  set selectedIndex(val) {
+    if (this.selectedIndex == val) return val;
+    this.setAttribute("selectedIndex", val);
+    var event = document.createEvent("Events");
+    event.initEvent("select", true, true);
+    this.dispatchEvent(event);
+    return val;
+  }
+
+  get selectedIndex() {
+    return this.getAttribute("selectedIndex") || "0";
+  }
+
+  set selectedPanel(val) {
+    var selectedIndex = -1;
+    for (var panel = val; panel != null; panel = panel.previousSibling)
+      ++selectedIndex;
+    this.selectedIndex = selectedIndex;
+    return val;
+  }
+
+  get selectedPanel() {
+    return this.childNodes[this.selectedIndex];
+  }
+}
+customElements.define("deck", MozDeck);
+
+]
diff --git a/toolkit/content/widgets/general.xml b/toolkit/content/widgets/general.xml
--- a/toolkit/content/widgets/general.xml
+++ b/toolkit/content/widgets/general.xml
@@ -75,53 +75,16 @@
       <property name="webNavigation"
                 onget="return this.docShell.QueryInterface(Components.interfaces.nsIWebNavigation);"
                 readonly="true"/>
       <property name="contentDocument" readonly="true"
                 onget="return this.webNavigation.document;"/>
     </implementation>
   </binding>
 
-  <binding id="deck">
-    <implementation>
-      <property name="selectedIndex"
-                onget="return this.getAttribute('selectedIndex') || '0'">
-        <setter>
-        <![CDATA[
-          if (this.selectedIndex == val)
-            return val;
-          this.setAttribute("selectedIndex", val);
-          var event = document.createEvent("Events");
-          event.initEvent("select", true, true);
-          this.dispatchEvent(event);
-          return val;
-        ]]>
-        </setter>
-      </property>
-
-      <property name="selectedPanel">
-        <getter>
-          <![CDATA[
-            return this.childNodes[this.selectedIndex];
-          ]]>
-        </getter>
-
-        <setter>
-          <![CDATA[
-            var selectedIndex = -1;
-            for (var panel = val; panel != null; panel = panel.previousSibling)
-              ++selectedIndex;
-            this.selectedIndex = selectedIndex;
-            return val;
-          ]]>
-        </setter>
-      </property>
-    </implementation>
-  </binding>
-
   <binding id="dropmarker" extends="xul:button">
     <resources>
       <stylesheet src="chrome://global/skin/dropmarker.css"/>
     </resources>
 
     <content>
       <xul:image class="dropmarker-icon"/>
     </content>
diff --git a/toolkit/content/xul.css b/toolkit/content/xul.css
--- a/toolkit/content/xul.css
+++ b/toolkit/content/xul.css
@@ -653,17 +653,16 @@ tree:not([treelines="true"]) > treechild
 treechildren::-moz-tree-cell(ltr) {
   direction: ltr !important;
 }
 
 /********** deck & stack *********/
 
 deck {
   display: -moz-deck;
-  -moz-binding: url("chrome://global/content/bindings/general.xml#deck");
 }
 
 stack {
   display: -moz-stack;
 }
 
 /********** tabbox *********/
 
