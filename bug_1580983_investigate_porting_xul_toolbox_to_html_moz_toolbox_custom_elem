# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1572465084 25200
#      Wed Oct 30 12:51:24 2019 -0700
# Node ID 4cdaf71702d83b3cc0ae7c2ba98b26d132160a6d
# Parent  ff88b2c207a02f31e15472894c95518976c25487
Bug 1580983 - Investigate porting <xul:toolbox> to <html:moz-toolbox> custom element

This is a variation on the other patch in the bug, where we turn it into a Custom
Element in order to support common xul element properties (.flex, .hidden, etc).

This depends on the patch in Bug 1592369 which moves some of the xul flex attributes
into CSS

Differential Revision: https://phabricator.services.mozilla.com/D51168

diff --git a/accessible/tests/mochitest/states/test_controls.xhtml b/accessible/tests/mochitest/states/test_controls.xhtml
--- a/accessible/tests/mochitest/states/test_controls.xhtml
+++ b/accessible/tests/mochitest/states/test_controls.xhtml
@@ -1,14 +1,15 @@
 <?xml version="1.0"?>
 <?xml-stylesheet href="chrome://global/skin" type="text/css"?>
 <?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css"
                  type="text/css"?>
 
 <window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
+        xmlns:html="http://www.w3.org/1999/xhtml"
         title="Accessible XUL input control state tests">
 
   <script src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js" />
 
   <script type="application/javascript"
           src="../common.js" />
   <script type="application/javascript"
           src="../role.js" />
@@ -115,30 +116,30 @@
     </richlistbox>
 
     <richlistbox id="listbox-disabled" disabled="true">
       <richlistitem id="listitem-disabledlistbox">
         <label value="list item"/>
       </richlistitem>
     </richlistbox>
 
-    <toolbox>
+    <html:moz-toolbox>
       <menubar id="menubar">
         <menu id="menu" label="menu1">
           <menupopup>
             <menuitem id="menu1-item1" label="menuitem1.1"/>
           </menupopup>
         </menu>
         <menu id="menu-disabled" label="menu2" disabled="true">
           <menupopup>
             <menuitem id="menu-disabled-item1" label="menuitem2.1"/>
           </menupopup>
         </menu>
       </menubar>
-    </toolbox>
+    </html:moz-toolbox>
 
     <tabbox>
       <tabs>
         <tab id="tab" label="tab1" tooltip="tooltip"/>
         <tab id="tab-disabled" label="tab1" disabled="true"/>
       </tabs>
       <tabpanels>
         <tabpanel/>
diff --git a/browser/base/content/browser.xhtml b/browser/base/content/browser.xhtml
--- a/browser/base/content/browser.xhtml
+++ b/browser/base/content/browser.xhtml
@@ -681,17 +681,17 @@
                aria-live="off"
                flex="1"
                crop="end"/>
       </hbox>
     </hbox>
   </popupset>
   <box id="appMenu-viewCache" hidden="true"/>
 
-  <toolbox id="navigator-toolbox">
+  <html:moz-toolbox id="navigator-toolbox">
 
     <vbox id="titlebar">
       <!-- Menu -->
       <toolbar type="menubar" id="toolbar-menubar"
                class="browser-toolbar chromeclass-menubar titlebar-color"
                customizable="true"
                mode="icons"
 #ifdef MENUBAR_CAN_AUTOHIDE
@@ -1361,17 +1361,17 @@
                    align="center"
                    flex="100"
                    persist="width">
         <toolbartabstop/>
         <searchbar id="searchbar" flex="1"/>
         <toolbartabstop/>
       </toolbaritem>
     </toolbarpalette>
-  </toolbox>
+  </html:moz-toolbox>
 
   <hbox id="fullscr-toggler" hidden="true"/>
 
   <hbox flex="1" id="browser" renderroot="content">
     <vbox id="browser-border-start" hidden="true" layer="true"/>
     <vbox id="sidebar-box" hidden="true" class="chromeclass-extrachrome">
       <sidebarheader id="sidebar-header" align="center">
         <toolbarbutton id="sidebar-switcher-target" flex="1" class="tabbable">
diff --git a/browser/components/places/content/places.xul b/browser/components/places/content/places.xul
--- a/browser/components/places/content/places.xul
+++ b/browser/components/places/content/places.xul
@@ -145,17 +145,17 @@
   <popupset id="placesPopupset">
 #include placesContextMenu.inc.xul
     <menupopup id="placesColumnsContext"
                onpopupshowing="ViewMenu.fillWithColumns(event, null, null, 'checkbox', null);"
                oncommand="ViewMenu.showHideColumn(event.target); event.stopPropagation();"/>
 #include ../../downloads/content/downloadsContextMenu.inc.xul
   </popupset>
 
-  <toolbox id="placesToolbox">
+  <html:moz-toolbox id="placesToolbox">
     <toolbar class="chromeclass-toolbar" id="placesToolbar" align="center">
       <toolbarbutton id="back-button"
                      command="OrganizerCommand:Back"
                      tooltiptext="&backButton.tooltip;"
                      disabled="true"/>
 
       <toolbarbutton id="forward-button"
                      command="OrganizerCommand:Forward"
@@ -338,17 +338,17 @@
                       collection="bookmarks"/>
       <toolbarbutton id="clearDownloadsButton"
                      class="tabbable"
                      insertbefore="libraryToolbarSpacer"
                      label="&clearDownloadsButton.label;"
                      command="downloadsCmd_clearDownloads"
                      tooltiptext="&clearDownloadsButton.tooltip;"/>
     </toolbar>
-  </toolbox>
+  </html:moz-toolbox>
 
   <hbox flex="1" id="placesView">
     <tree id="placesList"
           class="plain placesTree"
           is="places-tree"
           hidecolumnpicker="true" context="placesContext"
           onselect="PlacesOrganizer.onPlaceSelected(true);"
           onclick="PlacesOrganizer.onPlacesListClick(event);"
diff --git a/layout/generic/test/test_bug632379.xul b/layout/generic/test/test_bug632379.xul
--- a/layout/generic/test/test_bug632379.xul
+++ b/layout/generic/test/test_bug632379.xul
@@ -1,21 +1,22 @@
 <?xml version="1.0"?>
 <?xml-stylesheet href="chrome://global/skin" type="text/css"?>
 <?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css" type="text/css"?>
 <!--
 https://bugzilla.mozilla.org/show_bug.cgi?id=632379
 -->
 <window title="Mozilla Bug 632379"
-  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
+        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
+        xmlns:html="http://www.w3.org/1999/xhtml">
 
   <script src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"/>
   <script src="chrome://mochikit/content/tests/SimpleTest/EventUtils.js"></script>
 
-<toolbox flex="1">
+<html:moz-toolbox flex="1">
   <menubar>
     <menu label="MENU" accesskey="m" id="mainMenu">
       <menupopup maxheight="100" onpopupshown="openSubmenu()">
         <menu label="menu1" accesskey="1" id="menu1">
           <menupopup onpopupshown="snapshot(this)">
             <menuitem label="item"/>
             <menuitem label="item"/>
             <menuitem label="item"/>
@@ -147,17 +148,17 @@ https://bugzilla.mozilla.org/show_bug.cg
             <menuitem label="item"/>
             <menuitem label="item"/>
             <menuitem label="item"/>
           </menupopup>
         </menu>
       </menupopup>
     </menu>
   </menubar>
-</toolbox>
+</html:moz-toolbox>
 
 <body  xmlns="http://www.w3.org/1999/xhtml">
   <a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id=632379">Mozilla Bug 632379</a>
 
   <p id="display"></p>
 <div id="content" style="display: none">
 </div>
 </body>
diff --git a/layout/tools/layout-debug/ui/content/layoutdebug.xul b/layout/tools/layout-debug/ui/content/layoutdebug.xul
--- a/layout/tools/layout-debug/ui/content/layoutdebug.xul
+++ b/layout/tools/layout-debug/ui/content/layoutdebug.xul
@@ -47,17 +47,17 @@
     <key id="key_open" key="O" modifiers="accel" command="cmd_open"/>
     <key id="key_close" key="W" modifiers="accel" command="cmd_close"/>
     <key id="key_focusURLBar" key="L" modifiers="accel" command="cmd_focusURLBar"/>
     <key id="key_reload" key="R" modifiers="accel" command="cmd_reload"/>
   </keyset>
 
   <vbox flex="1">
 
-    <toolbox>
+    <html:moz-toolbox>
       <toolbar type="menubar">
       <menubar id="main-menubar">
         <menu id="menu_file" label="File" accesskey="F">
           <menupopup id="menu_FilePopup">
             <menuitem id="menu_open" label="Open Fileâ€¦" accesskey="O" key="key_open" command="cmd_open"/>
             <menuitem id="menu_close" label="Close" accesskey="C" key="key_close" command="cmd_close"/>
           </menupopup>
         </menu>
@@ -112,17 +112,17 @@
                        label="&ldb.ReloadButton.label;"
                        command="cmd_reload" />
         <toolbarbutton id="stop-button" class="toolbarbutton-1"
                        label="&ldb.StopButton.label;"
                        oncommand="gBrowser.stop();" />
 
         <html:input id="urlbar" style="-moz-box-flex: 1;" onkeypress="if (event.keyCode == 13) go();"/>
       </toolbar>
-    </toolbox>
+    </html:moz-toolbox>
 
     <browser flex="1" id="browser" type="content" primary="true" remote="true" remoteType="web"/>
 
     <hbox>
       <description id="status-text" value="" />
     </hbox>
   </vbox>
 </window>
diff --git a/toolkit/content/customElements.js b/toolkit/content/customElements.js
--- a/toolkit/content/customElements.js
+++ b/toolkit/content/customElements.js
@@ -628,17 +628,133 @@
     Object.defineProperty(MozElementBase, "name", { value: `Moz${Base.name}` });
     if (instrumentedBaseClasses) {
       instrumentedBaseClasses.add(MozElementBase);
     }
     return MozElementBase;
   };
 
   const MozXULElement = MozElements.MozElementMixin(XULElement);
-  const MozHTMLElement = MozElements.MozElementMixin(HTMLElement);
+  const MozHTMLElement = class extends MozElements.MozElementMixin(
+    HTMLElement
+  ) {
+    // Support commonly used XUL element properties so that all
+    // consumers don't need to be rewritten when an element is converted
+    // to HTML.
+    get collapsed() {
+      return this.getAttribute("collapsed") === "true";
+    }
+    set collapsed(value) {
+      if (value) {
+        this.setAttribute("collapsed", "true");
+      } else {
+        this.removeAttribute("collapsed");
+      }
+    }
+    get flex() {
+      return this.getAttribute("flex");
+    }
+    set flex(value) {
+      if (value) {
+        this.setAttribute("flex", value);
+      } else {
+        this.removeAttribute("flex");
+      }
+    }
+    get hidden() {
+      return this.getAttribute("hidden") === "true";
+    }
+    set hidden(value) {
+      if (value) {
+        this.setAttribute("hidden", "true");
+      } else {
+        this.removeAttribute("hidden");
+      }
+    }
+    get orient() {
+      return this.getAttribute("orient");
+    }
+    set orient(value) {
+      if (value) {
+        this.setAttribute("orient", value);
+      } else {
+        this.removeAttribute("orient");
+      }
+    }
+    get ordinal() {
+      return this.getAttribute("ordinal");
+    }
+    set ordinal(value) {
+      if (value) {
+        this.setAttribute("ordinal", value);
+      } else {
+        this.removeAttribute("ordinal");
+      }
+    }
+    get pack() {
+      return this.getAttribute("pack");
+    }
+    set pack(value) {
+      if (value) {
+        this.setAttribute("pack", value);
+      } else {
+        this.removeAttribute("pack");
+      }
+    }
+    /* XXX: We should probably rewrite consumers to use a new
+      property name since the dir property/attribute means something
+      different in xul. Maybe `boxDir` or similar?
+    get dir() {
+      return this.getAttribute("dir");
+    }
+    set dir(value) {
+      if (value) {
+        this.setAttribute("dir", value);
+      } else {
+        this.removeAttribute("dir");
+      }
+    }
+    get align() {
+      return this.getAttribute("align");
+    }
+    set align(value) {
+      if (value) {
+        this.setAttribute("align", value);
+      } else {
+        this.removeAttribute("align");
+      }
+    }
+    */
+    setAttribute(name, val) {
+      super.setAttribute(name, val);
+      this.setFlexProperties();
+    }
+    removeAttribute(name) {
+      super.removeAttribute(name);
+      if (name == "flex") {
+        this.style.removeProperty("-moz-box-flex");
+      }
+      if (name == "ordinal") {
+        this.style.removeProperty("-moz-box-ordinal-group");
+      }
+    }
+    setFlexProperties() {
+      if (this.constructor.isMozBox) {
+        if (this.hasAttribute("flex")) {
+          this.style.MozBoxFlex = this.getAttribute("flex");
+        }
+        if (this.hasAttribute("ordinal")) {
+          this.style.MozBoxOrdinalGroup = this.getAttribute("ordinal");
+        }
+      }
+    }
+    connectedCallback() {
+      this.setFlexProperties();
+    }
+  };
 
   /**
    * Given an object, add a proxy that reflects interface implementations
    * onto the object itself.
    */
   function getInterfaceProxy(obj) {
     /* globals MozQueryInterface */
     if (!obj._customInterfaceProxy) {
diff --git a/toolkit/content/widgets/general.js b/toolkit/content/widgets/general.js
--- a/toolkit/content/widgets/general.js
+++ b/toolkit/content/widgets/general.js
@@ -2,16 +2,19 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 "use strict";
 
 // This is loaded into chrome windows with the subscript loader. Wrap in
 // a block to prevent accidentally leaking globals onto `window`.
 {
+  // MozHTMLElement gives support to commonly used properties like .collapsed
+  customElements.define("moz-toolbox", class extends MozHTMLElement {});
+
   class MozDeck extends MozXULElement {
     set selectedIndex(val) {
       if (this.selectedIndex == val) {
         return val;
       }
       this.setAttribute("selectedIndex", val);
       var event = document.createEvent("Events");
       event.initEvent("select", true, true);
diff --git a/toolkit/content/xul.css b/toolkit/content/xul.css
--- a/toolkit/content/xul.css
+++ b/toolkit/content/xul.css
@@ -17,16 +17,17 @@
  *
  * THIS FILE IS LOCKED DOWN.  YOU ARE NOT ALLOWED TO MODIFY IT WITHOUT FIRST
  * HAVING YOUR CHANGES REVIEWED BY enndeakin@gmail.com
  */
 
 @import url("chrome://global/skin/tooltip.css");
 
 @namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"); /* set default namespace to XUL */
+@namespace xul url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"); /* namespace for XUL elements */
 @namespace html url("http://www.w3.org/1999/xhtml"); /* namespace for HTML elements */
 
 :root {
   text-rendering: optimizeLegibility;
   -moz-control-character-visibility: visible;
   --animation-easing-function: cubic-bezier(.07, .95, 0, 1);
 }
 
@@ -174,17 +175,26 @@ tab,
 radio,
 splitter,
 menulist {
   -moz-window-dragging: no-drag;
 }
 
 /******* toolbar *******/
 
-toolbox {
+/* XXX: move these up in the file if we decide we want them generally */
+html|*[hidden="true"] {
+  display: none;
+}
+html|*[collapsed="true"] {
+  visibility: collapse;
+}
+
+html|moz-toolbox {
+  display: -moz-box;
   -moz-box-orient: vertical;
 }
 
 %ifdef XP_MACOSX
 toolbar[type="menubar"] {
   min-height: 0 !important;
   border: 0 !important;
 }
@@ -542,30 +552,42 @@ tabmodalprompt {
 
 .menulist-highlightable-label:not([highlightable="true"]),
 .menulist-label[highlightable="true"],
 .menu-iconic-highlightable-text:not([highlightable="true"]),
 .menu-iconic-text[highlightable="true"] {
   display: none;
 }
 
-[orient="vertical"] { -moz-box-orient: vertical !important; }
-[orient="horizontal"] { -moz-box-orient: horizontal !important; }
 
-[dir="reverse"] { -moz-box-direction: reverse !important; }
+xul|*[orient="vertical"],
+html|*[orient="vertical"] { -moz-box-orient: vertical !important; }
+xul|*[orient="horizontal"],
+html|*[orient="horizontal"] { -moz-box-orient: horizontal !important; }
+
+xul|*[dir="reverse"],
+html|*[dir="reverse"] { -moz-box-direction: reverse !important; }
 
-[align="start"] { -moz-box-align: start !important; }
-[align="center"] { -moz-box-align: center !important; }
-[align="end"] { -moz-box-align: end !important; }
-[align="baseline"] { -moz-box-align: baseline !important; }
-[align="stretch"] { -moz-box-align: stretch !important; }
+xul|*[align="start"],
+html|*[align="start"] { -moz-box-align: start !important; }
+xul|*[align="center"],
+html|*[align="center"] { -moz-box-align: center !important; }
+xul|*[align="end"],
+html|*[align="end"] { -moz-box-align: end !important; }
+xul|*[align="baseline"],
+html|*[align="baseline"] { -moz-box-align: baseline !important; }
+xul|*[align="stretch"],
+html|*[align="stretch"] { -moz-box-align: stretch !important; }
 
-[pack="start"] { -moz-box-pack: start !important; }
-[pack="center"] { -moz-box-pack: center !important; }
-[pack="end"] { -moz-box-pack: end !important; }
+xul|*[pack="start"],
+html|*[pack="start"] { -moz-box-pack: start !important; }
+xul|*[pack="center"],
+html|*[pack="center"] { -moz-box-pack: center !important; }
+xul|*[pack="end"],
+html|*[pack="end"] { -moz-box-pack: end !important; }
 
 @supports -moz-bool-pref("layout.css.emulate-moz-box-with-flex") {
   /* This isn't a real solution for [flex] and [ordinal], but it covers enough
      cases to render the browser chrome for us to test emulated flex mode without
      mass-changing existing markup and CSS.
      If we get attr() in Bug 435426 this could  work for all cases. */
   [flex="1"] { -moz-box-flex: 1; }
   [flex="2"] { -moz-box-flex: 2; }
diff --git a/toolkit/themes/linux/global/toolbar.css b/toolkit/themes/linux/global/toolbar.css
--- a/toolkit/themes/linux/global/toolbar.css
+++ b/toolkit/themes/linux/global/toolbar.css
@@ -2,18 +2,19 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 /* ===== toolbar.css ====================================================
   == Styles used by XUL toolbar-related elements.
   ======================================================================= */
 
 @namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");
+@namespace html url("http://www.w3.org/1999/xhtml");
 
-toolbox {
+html|moz-toolbox {
   -moz-appearance: toolbox;
 }
 
 toolbar {
   -moz-appearance: toolbar;
   min-width: 1px;
   min-height: 20px;
   padding: 2px 0px;
diff --git a/toolkit/themes/osx/global/toolbar.css b/toolkit/themes/osx/global/toolbar.css
--- a/toolkit/themes/osx/global/toolbar.css
+++ b/toolkit/themes/osx/global/toolbar.css
@@ -1,15 +1,16 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 @namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");
+@namespace html url("http://www.w3.org/1999/xhtml");
 
-toolbox {
+html|moz-toolbox {
   /* Setting -moz-appearance:toolbox causes sheets to attach under the
    * toolbox and has no other effects. It doesn't render anything. */
   -moz-appearance: toolbox;
 }
 
 toolbar {
   min-width: 1px;
   min-height: 20px;
diff --git a/toolkit/themes/windows/global/toolbar.css b/toolkit/themes/windows/global/toolbar.css
--- a/toolkit/themes/windows/global/toolbar.css
+++ b/toolkit/themes/windows/global/toolbar.css
@@ -2,32 +2,33 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 /* ===== toolbar.css ====================================================
   == Styles used by XUL toolbar-related elements.
   ======================================================================= */
 
 @namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");
+@namespace html url("http://www.w3.org/1999/xhtml");
 
-toolbox {
+html|moz-toolbox {
   -moz-appearance: toolbox;
 }
 
 toolbar {
   -moz-appearance: toolbar;
   min-width: 1px;
   min-height: 19px;
 }
 
 toolbar:first-child {
   min-width: 1px;
 }
 
-toolbox:-moz-lwtheme,
+html|moz-toolbox:-moz-lwtheme,
 toolbar:-moz-lwtheme {
   -moz-appearance: none;
 }
 
 toolbarseparator {
   -moz-appearance: separator;
 }
 
diff --git a/widget/tests/chrome_context_menus_win.xul b/widget/tests/chrome_context_menus_win.xul
--- a/widget/tests/chrome_context_menus_win.xul
+++ b/widget/tests/chrome_context_menus_win.xul
@@ -3,35 +3,36 @@
 <!-- This Source Code Form is subject to the terms of the Mozilla Public
    - License, v. 2.0. If a copy of the MPL was not distributed with this
    - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
 
 <?xml-stylesheet href="chrome://global/skin" type="text/css"?>
 
 <window id="ChromeContextMenuTest"
         xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
+        xmlns:html="http://www.w3.org/1999/xhtml"
         width="300"
         height="300"
         title="Chrome Context Menu Test w/Plugin Focus">
 
 <script src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js" />
 <script src="chrome://mochikit/content/tests/SimpleTest/EventUtils.js"></script>
 
 <popupset>
   <menupopup id="testmenu" onpopupshown="menuDisplayed()">
     <menuitem label="One"/>
     <menuitem label="Two"/>
     <menuitem label="Three"/>
   </menupopup>
 </popupset>
 
-<toolbox>
+<html:moz-toolbox>
   <toolbar id="nav-toolbar" style="height:30px" context="testmenu">
   </toolbar>
-</toolbox>
+</html:moz-toolbox>
 
 <script type="application/javascript"><![CDATA[
 
 function ok(condition, message) {
     window.arguments[0].SimpleTest.ok(condition, message);
 }
 
 function onTestsFinished() {
