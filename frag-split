# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  8e2831a672bdd05767fb4ed09f435b433e04fd56

diff --git a/toolkit/content/widgets/menu.js b/toolkit/content/widgets/menu.js
--- a/toolkit/content/widgets/menu.js
+++ b/toolkit/content/widgets/menu.js
@@ -160,60 +160,76 @@ class MozMenuItem extends MozMenuItemBas
       ".menu-iconic-highlightable-text": "text=label,crop,accesskey,highlightable",
       ".menu-iconic-left": "selected,_moz-menuactive,disabled,checked",
       ".menu-iconic-icon": "src=image,validate,triggeringprincipal=iconloadingprincipal",
       ".menu-iconic-accel": "value=acceltext",
       ".menu-accel": "value=acceltext",
     };
   }
 
+  static get iconicNoAccelFragment() {
+    // Add aria-hidden="true" on all DOM, since XULMenuAccessible handles accessibility here.
+    let frag = document.importNode(MozXULElement.parseXULToFragment(`
+      <hbox class="menu-iconic-left" align="center" pack="center" aria-hidden="true">
+        <image class="menu-iconic-icon"/>
+      </hbox>
+      <label class="menu-iconic-text" flex="1" crop="right" aria-hidden="true"/>
+      <label class="menu-iconic-highlightable-text" crop="right" aria-hidden="true"/>
+    `), true);
+    Object.defineProperty(this, "iconicNoAccelFragment", {value: frag});
+    return frag;
+  }
+
+  static get iconicFragment() {
+    let frag = document.importNode(MozXULElement.parseXULToFragment(`
+      <hbox class="menu-iconic-left" align="center" pack="center" aria-hidden="true">
+        <image class="menu-iconic-icon"/>
+      </hbox>
+      <label class="menu-iconic-text" flex="1" crop="right" aria-hidden="true"/>
+      <label class="menu-iconic-highlightable-text" crop="right" aria-hidden="true"/>
+      <hbox class="menu-accel-container" aria-hidden="true">
+        <label class="menu-iconic-accel"/>
+      </hbox>
+    `), true);
+    Object.defineProperty(this, "iconicFragment", {value: frag});
+    return frag;
+  }
+
+  static get plainFragment() {
+    let frag = document.importNode(MozXULElement.parseXULToFragment(`
+      <label class="menu-text" crop="right" aria-hidden="true"/>
+      <hbox class="menu-accel-container" aria-hidden="true">
+        <label class="menu-accel"/>
+      </hbox>
+    `), true);
+    Object.defineProperty(this, "plainFragment", {value: frag});
+    return frag;
+  }
+
   get isIconic() {
     let type = this.getAttribute("type");
     return type == "checkbox" || type == "radio" || this.classList.contains("menuitem-iconic");
   }
 
   get isIconicNoAccel() {
     return this.matches("menulist > menupopup > menuitem");
   }
 
   render() {
     if (this.renderedOnce) {
       return;
     }
     this.renderedOnce = true;
-    // Add role="none" on all DOM, since XULMenuitemAccessible handles accessibility here.
+    this.textContent = "";
     if (this.isIconicNoAccel) {
-      this.textContent = "";
-      this.append(MozXULElement.parseXULToFragment(`
-        <hbox class="menu-iconic-left" align="center" pack="center" role="none">
-          <image class="menu-iconic-icon" role="none"/>
-        </hbox>
-        <label class="menu-iconic-text" flex="1" crop="right" role="none"/>
-        <label class="menu-iconic-highlightable-text" crop="right" role="none"/>
-      `));
+      this.append(this.constructor.iconicNoAccelFragment.cloneNode(true));
     } else if (this.isIconic) {
-      this.textContent = "";
-      this.prepend(MozXULElement.parseXULToFragment(`
-        <hbox class="menu-iconic-left" align="center" pack="center" role="none">
-          <image class="menu-iconic-icon" role="none"/>
-        </hbox>
-        <label class="menu-iconic-text" flex="1" crop="right" role="none"/>
-        <label class="menu-iconic-highlightable-text" crop="right" role="none"/>
-        <hbox class="menu-accel-container" role="none">
-          <label class="menu-iconic-accel" role="none"/>
-        </hbox>
-      `));
+      this.append(this.constructor.iconicFragment.cloneNode(true));
     } else {
-      this.textContent = "";
-      this.append(MozXULElement.parseXULToFragment(`
-        <label class="menu-text" crop="right" role="none"/>
-        <hbox class="menu-accel-container" role="none">
-          <label class="menu-accel" role="none"/>
-        </hbox>
-      `));
+      this.append(this.constructor.plainFragment.cloneNode(true));
     }
 
     this.initializeAttributeInheritance();
   }
 }
 
 customElements.define("menuitem", MozMenuItem);
 
