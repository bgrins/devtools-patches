# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  d35ff2e038be883c17eea1639884668bb8ff72e8
Bug 1275877 - Use ContentTask.spawn to prevent intermittent test failure;r=jlongster

diff --git a/devtools/client/webconsole/test/browser_eval_in_debugger_stackframe.js b/devtools/client/webconsole/test/browser_eval_in_debugger_stackframe.js
--- a/devtools/client/webconsole/test/browser_eval_in_debugger_stackframe.js
+++ b/devtools/client/webconsole/test/browser_eval_in_debugger_stackframe.js
@@ -133,23 +133,25 @@ function onExecuteFoo23InFirstCall() {
   isnot(gWebConsole.outputNode.textContent.indexOf(expected), -1,
         "|foo + foo2 + foo3| from |firstCall()|");
 
   executeSoon(() =>
     gJSTerm.execute("foo = 'abba'; foo3 = 'bug783499'; foo + foo3").then(
                     onExecuteFooAndFoo3ChangesInFirstCall));
 }
 
-function onExecuteFooAndFoo3ChangesInFirstCall() {
+var onExecuteFooAndFoo3ChangesInFirstCall = Task.async(function*() {
   let expected = "abbabug783499";
   isnot(gWebConsole.outputNode.textContent.indexOf(expected), -1,
         "|foo + foo3| updated in |firstCall()|");
 
-  is(content.wrappedJSObject.foo, "globalFooBug783499",
-     "|foo| in content window");
-  is(content.wrappedJSObject.foo2, "newFoo", "|foo2| in content window");
-  ok(!content.wrappedJSObject.foo3,
-     "|foo3| was not added to the content window");
+  yield ContentTask.spawn(gBrowser.selectedBrowser, null, function*() {
+    is(content.wrappedJSObject.foo, "globalFooBug783499",
+       "|foo| in content window");
+    is(content.wrappedJSObject.foo2, "newFoo", "|foo2| in content window");
+    ok(!content.wrappedJSObject.foo3,
+       "|foo3| was not added to the content window");
+  });
 
   gWebConsole = gJSTerm = gDebuggerWin = gThread = gDebuggerController =
     gStackframes = null;
   executeSoon(finishTest);
-}
+});
