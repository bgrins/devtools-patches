# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1568929919 25200
#      Thu Sep 19 14:51:59 2019 -0700
# Node ID f3c776168a2ea6f1b2d370f82b0b9509c500c069
# Parent  6b93a83735ed3ab3b57b46c1b768814b1a1af5d6
Bug 1581914 - WIP append the devtools theme stylesheet sheet to document.head if it exists instead of using a PI

Otherwise, what happens in the webconsole document is the theme file gets loaded before
global.css, which makes overriding the styles from global.css difficult.

Differential Revision: https://phabricator.services.mozilla.com/D46530

diff --git a/devtools/client/shared/stylesheet-utils.js b/devtools/client/shared/stylesheet-utils.js
--- a/devtools/client/shared/stylesheet-utils.js
+++ b/devtools/client/shared/stylesheet-utils.js
@@ -3,43 +3,64 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 /* eslint-env browser */
 "use strict";
 
 /*
  * Append a stylesheet to the provided XUL document.
  *
- * @param  {Document} xulDocument
- *         The XUL document where the stylesheet should be appended.
+ * @param  {Document} doc
+ *         The chrome document where the stylesheet should be appended.
  * @param  {String} url
  *         The url of the stylesheet to load.
  * @return {Object}
  *         - styleSheet {XMLStylesheetProcessingInstruction} the instruction node created.
  *         - loadPromise {Promise} that will resolve/reject when the stylesheet finishes
  *           or fails to load.
  */
-function appendStyleSheet(xulDocument, url) {
-  const styleSheetAttr = `href="${url}" type="text/css"`;
-  const styleSheet = xulDocument.createProcessingInstruction(
-    "xml-stylesheet",
-    styleSheetAttr
-  );
+function appendStyleSheet(doc, url) {
+  let styleSheet;
+  if (doc.head) {
+    styleSheet = doc.createElement("link");
+    styleSheet.setAttribute("rel", "stylesheet");
+    styleSheet.setAttribute("href", url);
+  } else {
+    const styleSheetAttr = `href="${url}" type="text/css"`;
+    styleSheet = doc.createProcessingInstruction(
+      "xml-stylesheet",
+      styleSheetAttr
+    );
+  }
   const loadPromise = new Promise((resolve, reject) => {
     function onload() {
       styleSheet.removeEventListener("load", onload);
       styleSheet.removeEventListener("error", onerror);
       resolve();
     }
     function onerror() {
       styleSheet.removeEventListener("load", onload);
       styleSheet.removeEventListener("error", onerror);
       reject("Failed to load theme file " + url);
     }
 
     styleSheet.addEventListener("load", onload);
     styleSheet.addEventListener("error", onerror);
   });
-  xulDocument.insertBefore(styleSheet, xulDocument.documentElement);
+  if (doc.head) {
+    const existingGlobalSheet = doc.head.querySelector(
+      "link[href^='chrome://global/skin/']"
+    );
+    if (existingGlobalSheet) {
+      existingGlobalSheet.parentNode.insertBefore(
+        styleSheet,
+        existingGlobalSheet.nextSibling
+      );
+    } else {
+      doc.head.append(styleSheet);
+    }
+  } else {
+    doc.insertBefore(styleSheet, doc.documentElement);
+  }
   return { styleSheet, loadPromise };
 }
 
 exports.appendStyleSheet = appendStyleSheet;
