# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  d6c48238a4f3e74058c0b813c4656beb95523083
Bug 1326937 - Test fix - rename experimentalOutputNode to outputNode;r=me

diff --git a/devtools/client/webconsole/new-console-output/test/mochitest/browser_jsterm_inspect.js b/devtools/client/webconsole/new-console-output/test/mochitest/browser_jsterm_inspect.js
--- a/devtools/client/webconsole/new-console-output/test/mochitest/browser_jsterm_inspect.js
+++ b/devtools/client/webconsole/new-console-output/test/mochitest/browser_jsterm_inspect.js
@@ -16,17 +16,17 @@ add_task(async function () {
   let jsterm = hud.jsterm;
 
   info("Test `inspect(window)`");
   // Add a global value so we can check it later.
   await jsterm.execute("testProp = 'testValue'");
   await jsterm.execute("inspect(window)");
 
   const inspectWindowNode = await waitFor(() =>
-    findInspectResultMessage(hud.ui.experimentalOutputNode, 1));
+    findInspectResultMessage(hud.ui.outputNode, 1));
 
   let objectInspectors = [...inspectWindowNode.querySelectorAll(".tree")];
   is(objectInspectors.length, 1, "There is the expected number of object inspectors");
 
   const [windowOi] = objectInspectors;
   let windowOiNodes = windowOi.querySelectorAll(".node");
 
   // The tree can be collapsed since the properties are fetched asynchronously.
@@ -48,15 +48,15 @@ add_task(async function () {
   is(testPropertyValueNode.textContent, '"testValue"',
     "The testProp property value is displayed as expected");
 
   /* Check that a primitive value can be inspected, too */
   info("Test `inspect(1)`");
   await jsterm.execute("inspect(1)");
 
   const inspectPrimitiveNode = await waitFor(() =>
-    findInspectResultMessage(hud.ui.experimentalOutputNode, 2));
+    findInspectResultMessage(hud.ui.outputNode, 2));
   is(inspectPrimitiveNode.textContent, 1, "The primitive is displayed as expected");
 });
 
 function findInspectResultMessage(node, index) {
   return node.querySelectorAll(".message.result")[index];
 }
