# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  d03b538b6b417ba892d0a92fd693945b741246e1
Bug 1494103 - Dynamically create the "sidebar" <browser> when it's needed

diff --git a/browser/base/content/browser-sidebar.js b/browser/base/content/browser-sidebar.js
--- a/browser/base/content/browser-sidebar.js
+++ b/browser/base/content/browser-sidebar.js
@@ -35,17 +35,28 @@ var SidebarUI = {
     ]);
   },
 
   // Avoid getting the browser element from init() to avoid triggering the
   // <browser> constructor during startup if the sidebar is hidden.
   get browser() {
     if (this._browser)
       return this._browser;
-    return this._browser = document.getElementById("sidebar");
+
+    this._browser = document.createElement("browser");
+    this._browser.id = "sidebar";
+    this._browser.flex = 1;
+    this._browser.setAttribute("autoscroll", "false");
+    this._browser.setAttribute("disablehistory", "true");
+    this._browser.setAttribute("disablefullscreen", "true");
+    this._browser.setAttribute("tooltip", "aHTMLTooltip");
+    this._browser.setAttribute("style", "min-width: 14em; width: 18em; max-width: 36em;");
+    this._box.appendChild(this._browser);
+
+    return this._browser;
   },
   POSITION_START_PREF: "sidebar.position_start",
   DEFAULT_SIDEBAR_ID: "viewBookmarksSidebar",
 
   // lastOpenedId is set in show() but unlike currentID it's not cleared out on hide
   // and isn't persisted across windows
   lastOpenedId: null,
 
diff --git a/browser/base/content/browser.xul b/browser/base/content/browser.xul
--- a/browser/base/content/browser.xul
+++ b/browser/base/content/browser.xul
@@ -1277,18 +1277,16 @@ xmlns="http://www.w3.org/1999/xhtml"
           <image id="sidebar-throbber"/>
 # To ensure the button label's intrinsic width doesn't expand the sidebar
 # if the label is long, the button needs flex=1.
 # To ensure the button doesn't expand unnecessarily for short labels, the
 # spacer should significantly out-flex the button.
           <spacer flex="1000"/>
           <toolbarbutton id="sidebar-close" class="close-icon tabbable" tooltiptext="&sidebarCloseButton.tooltip;" oncommand="SidebarUI.hide();"/>
         </sidebarheader>
-        <browser id="sidebar" flex="1" autoscroll="false" disablehistory="true" disablefullscreen="true"
-                  style="min-width: 14em; width: 18em; max-width: 36em;" tooltip="aHTMLTooltip"/>
       </vbox>
 
       <splitter id="sidebar-splitter" class="chromeclass-extrachrome sidebar-splitter" hidden="true"/>
       <vbox id="appcontent" flex="1">
         <notificationbox id="high-priority-global-notificationbox" notificationside="top"/>
         <tabbox id="tabbrowser-tabbox"
                 flex="1" tabcontainer="tabbrowser-tabs">
           <tabpanels id="tabbrowser-tabpanels"
diff --git a/testing/mochitest/browser-test.js b/testing/mochitest/browser-test.js
--- a/testing/mochitest/browser-test.js
+++ b/testing/mochitest/browser-test.js
@@ -903,23 +903,23 @@ Tester.prototype = {
         if (this._coverageCollector) {
           this._coverageCollector.finalize();
         }
 
         // Uninitialize a few things explicitly so that they can clean up
         // frames and browser intentionally kept alive until shutdown to
         // eliminate false positives.
         if (gConfig.testRoot == "browser") {
-          // Skip if SeaMonkey
-          if (AppConstants.MOZ_APP_NAME != "seamonkey") {
+
+          let sidebar = document.getElementById("sidebar");
+          if (sidebar) {
             // Replace the document currently loaded in the browser's sidebar.
             // This will prevent false positives for tests that were the last
             // to touch the sidebar. They will thus not be blamed for leaking
             // a document.
-            let sidebar = document.getElementById("sidebar");
             sidebar.setAttribute("src", "data:text/html;charset=utf-8,");
             sidebar.docShell.createAboutBlankContentViewer(null);
             sidebar.setAttribute("src", "about:blank");
           }
 
           // Destroy BackgroundPageThumbs resources.
           let {BackgroundPageThumbs} =
             ChromeUtils.import("resource://gre/modules/BackgroundPageThumbs.jsm", {});
