# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1538583568 25200
#      Wed Oct 03 09:19:28 2018 -0700
# Node ID 777b07294dcf7f3315280d2d005f09cb9144f311
# Parent  1c04f6945b1688e513dc2ab0a3fd0ee2af23a542
Bug 1495946 - WIP - Defer connectedCallback until DOMContentLoaded

Differential Revision: https://phabricator.services.mozilla.com/D7621

diff --git a/toolkit/content/widgets/radio.js b/toolkit/content/widgets/radio.js
--- a/toolkit/content/widgets/radio.js
+++ b/toolkit/content/widgets/radio.js
@@ -3,16 +3,25 @@
   * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 "use strict";
 
 // This is loaded into all XUL windows. Wrap in a block to prevent
 // leaking to window scope.
 {
 
+let pendingConnections = new Set();
+let domLoaded = false;
+window.addEventListener("DOMContentLoaded", () => {
+  domLoaded = true;
+  for (let el of pendingConnections) {
+    el.connect();
+  }
+});
+
 class MozRadiogroup extends MozBaseControl {
   constructor() {
     super();
 
     this.addEventListener("mousedown", (event) => {
       if (this.disabled)
         event.preventDefault();
     });
@@ -106,17 +115,21 @@ class MozRadiogroup extends MozBaseContr
       if (event.originalTarget != this) {
         return;
       }
       this.removeAttribute("focused");
       this.focusedItem = null;
     });
   }
 
-  connectedCallback() {
+  connect() {
+    if (!domLoaded) {
+      throw new Error("element connect() called before dom loaded");
+    }
+
     this._radioChildren = null;
 
     if (this.getAttribute("disabled") == "true")
       this.disabled = true;
 
     var children = this._getRadioChildren();
     var length = children.length;
     for (var i = 0; i < length; i++) {
@@ -128,16 +141,25 @@ class MozRadiogroup extends MozBaseContr
 
     var value = this.value;
     if (value)
       this.value = value;
     else
       this.selectedIndex = 0;
   }
 
+  connectedCallback() {
+    if (!domLoaded) {
+      pendingConnections.add(this);
+      return;
+    }
+
+    this.connect();
+  }
+
   set value(val) {
     this.setAttribute("value", val);
     var children = this._getRadioChildren();
     for (var i = 0; i < children.length; i++) {
       if (String(children[i].value) == String(val)) {
         this.selectedItem = children[i];
         break;
       }
