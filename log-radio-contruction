# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  74f580c5851adee9872a775cfd2c3c91d3f43832

diff --git a/toolkit/content/widgets/radio.js b/toolkit/content/widgets/radio.js
--- a/toolkit/content/widgets/radio.js
+++ b/toolkit/content/widgets/radio.js
@@ -116,31 +116,39 @@ class MozRadiogroup extends MozElements.
     });
   }
 
   connectedCallback() {
     if (this.delayConnectedCallback()) {
       return;
     }
 
+    if (this.id == "searchBarVisibleGroup") {
+      console.trace("connected");
+      console.log([...this.querySelectorAll("radio")]
+      .filter(r => console.log(customElements.upgrade(r), r.radioGroup, r.closest("radiogroup")) || r.control == this), this.hasChildNodes());
+    }
     this.init();
     if (!this.value) {
       this.selectedIndex = 0;
     }
   }
 
   init() {
     // console.log("<radiogroup> init", this);
 
     this._radioChildren = null;
 
     if (this.getAttribute("disabled") == "true")
       this.disabled = true;
 
     var children = this._getRadioChildren();
+    if (this.id == "searchBarVisibleGroup") {
+      console.log("init", children.length);
+    }
     // console.log("_getRadioChildren from init", this.id, children);
     var length = children.length;
     for (var i = 0; i < length; i++) {
       if (children[i].getAttribute("selected") == "true") {
         this.selectedIndex = i;
         return;
       }
     }
@@ -156,16 +164,19 @@ class MozRadiogroup extends MozElements.
    * This can happen due to DOM getting appended after the <radiogroup> is created.
    * When this happens, reinitialize the UI if necessary to make sure the state is
    * consistent.
    *
    * @param {DOMNode} child
    *                  The <radio> element that got added
    */
   radioChildConstructed(child) {
+    if (this.id == "searchBarVisibleGroup") {
+      console.trace("radioChildConstructed");
+    }
     if (!this._radioChildren || !this._radioChildren.includes(child)) {
       this.init();
     }
   }
 
   set value(val) {
     this.setAttribute("value", val);
     var children = this._getRadioChildren();
