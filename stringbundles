# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  2638ae89f86fbb5f224ef0511b3f77aec5503a51
Bug 1435437 - Don't append bundle_browser using an overlay;r=Gijs

1) bundle_browser_region is unused so that's just removed.
MozReview-Commit-ID: KylUwBRNciS

diff --git a/browser/base/content/baseMenuOverlay.xul b/browser/base/content/baseMenuOverlay.xul
--- a/browser/base/content/baseMenuOverlay.xul
+++ b/browser/base/content/baseMenuOverlay.xul
@@ -98,14 +98,9 @@
         <key id="key_hideThisAppCmdMac"
              key="&hideThisAppCmdMac2.commandkey;"
              modifiers="accel"/>
         <key id="key_hideOtherAppsCmdMac"
              key="&hideOtherAppsCmdMac.commandkey;"
              modifiers="accel,alt"/>
 #endif
     </keyset>
-
-    <stringbundleset id="stringbundleset">
-        <stringbundle id="bundle_browser" src="chrome://browser/locale/browser.properties"/>
-        <stringbundle id="bundle_browser_region" src="chrome://browser-region/locale/region.properties"/>
-    </stringbundleset>
 </overlay>
diff --git a/browser/base/content/browser-sets.inc b/browser/base/content/browser-sets.inc
--- a/browser/base/content/browser-sets.inc
+++ b/browser/base/content/browser-sets.inc
@@ -5,16 +5,17 @@
 
 #ifdef XP_UNIX
 #ifndef XP_MACOSX
 #define XP_GNOME 1
 #endif
 #endif
 
   <stringbundleset id="stringbundleset">
+    <stringbundle id="bundle_browser" src="chrome://browser/locale/browser.properties"/>
     <stringbundle id="bundle_brand" src="chrome://branding/locale/brand.properties"/>
     <stringbundle id="bundle_shell" src="chrome://browser/locale/shellservice.properties"/>
     <stringbundle id="bundle_preferences" src="chrome://browser/locale/preferences/preferences.properties"/>
   </stringbundleset>
 
   <commandset id="mainCommandSet">
     <command id="cmd_newNavigator" oncommand="OpenBrowserWindow()"/>
     <command id="cmd_handleBackspace" oncommand="BrowserHandleBackspace();" />
diff --git a/browser/base/content/browserMountPoints.inc b/browser/base/content/browserMountPoints.inc
--- a/browser/base/content/browserMountPoints.inc
+++ b/browser/base/content/browserMountPoints.inc
@@ -1,10 +1,8 @@
-<stringbundleset id="stringbundleset"/>
-
 <commandset id="mainCommandSet"/>
 <commandset id="baseMenuCommandSet"/>
 <commandset id="placesCommands"/>
 
 <broadcasterset id="mainBroadcasterSet"/>
 
 <keyset id="mainKeyset"/>
 <keyset id="baseMenuKeyset"/>
diff --git a/browser/base/content/utilityOverlay.js b/browser/base/content/utilityOverlay.js
--- a/browser/base/content/utilityOverlay.js
+++ b/browser/base/content/utilityOverlay.js
@@ -542,25 +542,25 @@ function createUserContextMenu(event, {
                                         excludeUserContextId = 0,
                                         showDefaultTab = false,
                                         useAccessKeys = true
                                       } = {}) {
   while (event.target.hasChildNodes()) {
     event.target.firstChild.remove();
   }
 
-  let bundle = document.getElementById("bundle_browser");
+  let bundle = Services.strings.createBundle("chrome://browser/locale/browser.properties");
   let docfrag = document.createDocumentFragment();
 
   // If we are excluding a userContextId, we want to add a 'no-container' item.
   if (excludeUserContextId || showDefaultTab) {
     let menuitem = document.createElement("menuitem");
     menuitem.setAttribute("data-usercontextid", "0");
-    menuitem.setAttribute("label", bundle.getString("userContextNone.label"));
-    menuitem.setAttribute("accesskey", bundle.getString("userContextNone.accesskey"));
+    menuitem.setAttribute("label", bundle.GetStringFromName("userContextNone.label"));
+    menuitem.setAttribute("accesskey", bundle.GetStringFromName("userContextNone.accesskey"));
 
     // We don't set an oncommand/command attribute because if we have
     // to exclude a userContextId we are generating the contextMenu and
     // isContextMenu will be true.
 
     docfrag.appendChild(menuitem);
 
     let menuseparator = document.createElement("menuseparator");
@@ -572,17 +572,17 @@ function createUserContextMenu(event, {
       return;
     }
 
     let menuitem = document.createElement("menuitem");
     menuitem.setAttribute("data-usercontextid", identity.userContextId);
     menuitem.setAttribute("label", ContextualIdentityService.getUserContextLabel(identity.userContextId));
 
     if (identity.accessKey && useAccessKeys) {
-      menuitem.setAttribute("accesskey", bundle.getString(identity.accessKey));
+      menuitem.setAttribute("accesskey", bundle.GetStringFromName(identity.accessKey));
     }
 
     menuitem.classList.add("menuitem-iconic");
     menuitem.setAttribute("data-identity-color", identity.color);
 
     if (!isContextMenu) {
       menuitem.setAttribute("command", "Browser:NewUserContextTab");
     }
@@ -592,20 +592,20 @@ function createUserContextMenu(event, {
     docfrag.appendChild(menuitem);
   });
 
   if (!isContextMenu) {
     docfrag.appendChild(document.createElement("menuseparator"));
 
     let menuitem = document.createElement("menuitem");
     menuitem.setAttribute("label",
-                          bundle.getString("userContext.aboutPage.label"));
+                          bundle.GetStringFromName("userContext.aboutPage.label"));
     if (useAccessKeys) {
       menuitem.setAttribute("accesskey",
-                            bundle.getString("userContext.aboutPage.accesskey"));
+                            bundle.GetStringFromName("userContext.aboutPage.accesskey"));
     }
     menuitem.setAttribute("command", "Browser:OpenAboutContainers");
     docfrag.appendChild(menuitem);
   }
 
   event.target.appendChild(docfrag);
   return true;
 }
diff --git a/browser/base/content/web-panels.xul b/browser/base/content/web-panels.xul
--- a/browser/base/content/web-panels.xul
+++ b/browser/base/content/web-panels.xul
@@ -20,20 +20,16 @@
         xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
         onload="load()" onunload="unload()">
   <script type="application/javascript" src="chrome://global/content/contentAreaUtils.js"/>
   <script type="application/javascript" src="chrome://browser/content/browser.js"/>
   <script type="application/javascript" src="chrome://browser/content/browser-places.js"/>
   <script type="application/javascript" src="chrome://browser/content/web-panels.js"/>
 
-  <stringbundleset id="stringbundleset"> 
-    <stringbundle id="bundle_browser" src="chrome://browser/locale/browser.properties"/>
-  </stringbundleset>
-
   <broadcasterset id="mainBroadcasterSet">
     <broadcaster id="isFrameImage"/>
   </broadcasterset>
 
   <commandset id="mainCommandset">
     <command id="Browser:Back"
              oncommand="getPanelBrowser().webNavigation.goBack();"
              disabled="true"/>
diff --git a/browser/base/content/webext-panels.xul b/browser/base/content/webext-panels.xul
--- a/browser/base/content/webext-panels.xul
+++ b/browser/base/content/webext-panels.xul
@@ -21,20 +21,16 @@
         xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
         onload="load()">
   <script type="application/javascript" src="chrome://global/content/contentAreaUtils.js"/>
   <script type="application/javascript" src="chrome://browser/content/browser.js"/>
   <script type="application/javascript" src="chrome://browser/content/browser-places.js"/>
   <script type="application/javascript" src="chrome://browser/content/webext-panels.js"/>
 
-  <stringbundleset id="stringbundleset">
-    <stringbundle id="bundle_browser" src="chrome://browser/locale/browser.properties"/>
-  </stringbundleset>
-
   <broadcasterset id="mainBroadcasterSet">
     <broadcaster id="isFrameImage"/>
   </broadcasterset>
 
   <commandset id="mainCommandset">
     <command id="Browser:Back"
              oncommand="getPanelBrowser().webNavigation.goBack();"
              disabled="true"/>
