# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  e498ffddf0be9a1a13a8fc5d3f8beca667dcd9d6
Bug 1487065 - Build popupnotification DOM from PopupNotifications.jsm instead of XBL

diff --git a/toolkit/content/widgets/notification.xml b/toolkit/content/widgets/notification.xml
--- a/toolkit/content/widgets/notification.xml
+++ b/toolkit/content/widgets/notification.xml
@@ -11,17 +11,17 @@
 
 <bindings id="notificationBindings"
           xmlns="http://www.mozilla.org/xbl"
           xmlns:xbl="http://www.mozilla.org/xbl"
           xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
           xmlns:html = "http://www.w3.org/1999/xhtml">
 
   <binding id="popup-notification">
-    <content orient="vertical">
+    <content>
       <xul:hbox class="popup-notification-header-container">
         <children includes="popupnotificationheader"/>
       </xul:hbox>
       <xul:hbox align="start" class="popup-notification-body-container">
         <xul:image class="popup-notification-icon"
                    xbl:inherits="popupid,src=icon,class=iconclass"/>
         <xul:vbox flex="1" pack="start"
                   class="popup-notification-body" xbl:inherits="popupid">
@@ -75,29 +75,65 @@
         <xul:button anonid="button"
                     class="popup-notification-button popup-notification-primary-button"
                     label="&defaultButton.label;"
                     accesskey="&defaultButton.accesskey;"
                     xbl:inherits="oncommand=buttoncommand,label=buttonlabel,accesskey=buttonaccesskey,default=buttonhighlight,disabled=mainactiondisabled"/>
       </xul:hbox>
     </content>
     <implementation>
-      <field name="checkbox" readonly="true">
-        document.getAnonymousElementByAttribute(this, "anonid", "checkbox");
-      </field>
-      <field name="closebutton" readonly="true">
-        document.getAnonymousElementByAttribute(this, "anonid", "closebutton");
-      </field>
-      <field name="button" readonly="true">
-        document.getAnonymousElementByAttribute(this, "anonid", "button");
-      </field>
-      <field name="secondaryButton" readonly="true">
-        document.getAnonymousElementByAttribute(this, "anonid", "secondarybutton");
-      </field>
-      <field name="menubutton" readonly="true">
-        document.getAnonymousElementByAttribute(this, "anonid", "menubutton");
-      </field>
-      <field name="menupopup" readonly="true">
-        document.getAnonymousElementByAttribute(this, "anonid", "menupopup");
-      </field>
+      <property name="checkbox">
+        <getter>
+          <![CDATA[
+      console.log("XXX: Getting `checkbox`");
+      console.trace();
+        return document.getAnonymousElementByAttribute(this, "anonid", "checkbox");
+          ]]>
+        </getter>
+      </property>
+      <property name="closebutton">
+        <getter>
+          <![CDATA[
+      console.log("XXX: Getting `checkbox`");
+      console.trace();
+        return document.getAnonymousElementByAttribute(this, "anonid", "closebutton");
+          ]]>
+        </getter>
+      </property>
+      <property name="button">
+        <getter>
+          <![CDATA[
+      console.log("XXX: Getting `checkbox`");
+      console.trace();
+        return document.getAnonymousElementByAttribute(this, "anonid", "button");
+          ]]>
+        </getter>
+      </property>
+      <property name="secondaryButton">
+        <getter>
+          <![CDATA[
+      console.log("XXX: Getting `checkbox`");
+      console.trace();
+        return document.getAnonymousElementByAttribute(this, "anonid", "secondarybutton");
+          ]]>
+        </getter>
+      </property>
+      <property name="menubutton">
+        <getter>
+          <![CDATA[
+      console.log("XXX: Getting `checkbox`");
+      console.trace();
+       return  document.getAnonymousElementByAttribute(this, "anonid", "menubutton");
+          ]]>
+        </getter>
+      </property>
+      <property name="menupopup">
+        <getter>
+          <![CDATA[
+      console.log("XXX: Getting `checkbox`");
+      console.trace();
+       return  document.getAnonymousElementByAttribute(this, "anonid", "menupopup");
+          ]]>
+        </getter>
+      </property>
     </implementation>
   </binding>
 </bindings>
diff --git a/toolkit/modules/PopupNotifications.jsm b/toolkit/modules/PopupNotifications.jsm
--- a/toolkit/modules/PopupNotifications.jsm
+++ b/toolkit/modules/PopupNotifications.jsm
@@ -32,16 +32,81 @@ const TELEMETRY_STAT_DISMISSAL_CLOSE_BUT
 const TELEMETRY_STAT_OPEN_SUBMENU = 10;
 const TELEMETRY_STAT_LEARN_MORE = 11;
 
 const TELEMETRY_STAT_REOPENED_OFFSET = 20;
 
 var popupNotificationsMap = new WeakMap();
 var gNotificationParents = new WeakMap;
 
+// XXX: Move this into a Custom Element?
+const notificationTemplate = `
+<xul:hbox class="popup-notification-header-container">
+<children includes="popupnotificationheader"/>
+</xul:hbox>
+<xul:hbox align="start" class="popup-notification-body-container">
+<xul:image class="popup-notification-icon"
+           xbl:inherits="popupid,src=icon,class=iconclass"/>
+<xul:vbox flex="1" pack="start"
+          class="popup-notification-body" xbl:inherits="popupid">
+  <xul:hbox align="start">
+    <xul:vbox flex="1">
+      <xul:label class="popup-notification-origin header"
+                 xbl:inherits="value=origin,tooltiptext=origin"
+                 crop="center"/>
+      <!-- These need to be on the same line to avoid creating
+           whitespace between them (whitespace is added in the
+           localization file, if necessary). -->
+      <xul:description class="popup-notification-description" xbl:inherits="popupid"><html:span
+        xbl:inherits="xbl:text=label,popupid"/><html:b xbl:inherits="xbl:text=name,popupid"/><html:span
+      xbl:inherits="xbl:text=endlabel,popupid"/><html:b xbl:inherits="xbl:text=secondname,popupid"/><html:span
+      xbl:inherits="xbl:text=secondendlabel,popupid"/></xul:description>
+    </xul:vbox>
+    <xul:toolbarbutton anonid="closebutton"
+                       class="messageCloseButton close-icon popup-notification-closebutton tabbable"
+                       xbl:inherits="oncommand=closebuttoncommand,hidden=closebuttonhidden"
+                       tooltiptext="&closeNotification.tooltip;"/>
+  </xul:hbox>
+  <children includes="popupnotificationcontent"/>
+  <xul:label class="text-link popup-notification-learnmore-link"
+             xbl:inherits="onclick=learnmoreclick,href=learnmoreurl">&learnMore;</xul:label>
+  <xul:checkbox anonid="checkbox"
+                xbl:inherits="hidden=checkboxhidden,checked=checkboxchecked,label=checkboxlabel,oncommand=checkboxcommand" />
+  <xul:description class="popup-notification-warning" xbl:inherits="hidden=warninghidden,xbl:text=warninglabel"/>
+</xul:vbox>
+</xul:hbox>
+<xul:hbox class="popup-notification-footer-container">
+<children includes="popupnotificationfooter"/>
+</xul:hbox>
+<xul:hbox class="popup-notification-button-container panel-footer">
+<children includes="button"/>
+<xul:button anonid="secondarybutton"
+            class="popup-notification-button popup-notification-secondary-button"
+            xbl:inherits="oncommand=secondarybuttoncommand,label=secondarybuttonlabel,accesskey=secondarybuttonaccesskey,hidden=secondarybuttonhidden"/>
+<xul:toolbarseparator xbl:inherits="hidden=dropmarkerhidden"/>
+<xul:button anonid="menubutton"
+            type="menu"
+            class="popup-notification-button popup-notification-dropmarker"
+            aria-label="&moreActionsButton.accessibleLabel;"
+            xbl:inherits="onpopupshown=dropmarkerpopupshown,hidden=dropmarkerhidden">
+  <xul:menupopup anonid="menupopup"
+                 position="after_end"
+                 aria-label="&moreActionsButton.accessibleLabel;"
+                 xbl:inherits="oncommand=menucommand">
+    <children/>
+  </xul:menupopup>
+</xul:button>
+<xul:button anonid="button"
+            class="popup-notification-button popup-notification-primary-button"
+            label="&defaultButton.label;"
+            accesskey="&defaultButton.accesskey;"
+            xbl:inherits="oncommand=buttoncommand,label=buttonlabel,accesskey=buttonaccesskey,default=buttonhighlight,disabled=mainactiondisabled"/>
+</xul:hbox>
+`;
+
 function getAnchorFromBrowser(aBrowser, aAnchorID) {
   let attrPrefix = aAnchorID ? aAnchorID.replace("notification-icon", "") : "";
   let anchor = aBrowser.getAttribute(attrPrefix + ICON_ANCHOR_ATTRIBUTE) ||
                aBrowser[attrPrefix + ICON_ANCHOR_ATTRIBUTE] ||
                aBrowser.getAttribute(ICON_ANCHOR_ATTRIBUTE) ||
                aBrowser[ICON_ANCHOR_ATTRIBUTE];
   if (anchor) {
     if (ChromeUtils.getClassName(anchor) == "XULElement") {
@@ -466,16 +531,18 @@ PopupNotifications.prototype = {
    *                     An optional string formatted to look bold and used in the
    *                     notification description header text. Usually a host name or
    *                     addon name. This is similar to name, and only used in case
    *                     where message contains two "<>" placeholders.
    * @returns the Notification object corresponding to the added notification.
    */
   show: function PopupNotifications_show(browser, id, message, anchorID,
                                          mainAction, secondaryActions, options) {
+    console.log("Showing notification", browser, id);
+
     function isInvalidAction(a) {
       return !a || !(typeof(a.callback) == "function") || !a.label || !a.accessKey;
     }
 
     if (!browser)
       throw "PopupNotifications_show: invalid browser";
     if (!id)
       throw "PopupNotifications_show: invalid ID";
