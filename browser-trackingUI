# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  c171d6b6b7a612d3de76d8e0a83ee2deb4cb59cd
Bug 1175266 - Wait for the binding to be attached before proceeding in browser_trackingUI.js to fix local failures;r=MattN

diff --git a/browser/base/content/test/general/browser_trackingUI.js b/browser/base/content/test/general/browser_trackingUI.js
--- a/browser/base/content/test/general/browser_trackingUI.js
+++ b/browser/base/content/test/general/browser_trackingUI.js
@@ -53,25 +53,33 @@ function doUpdate() {
 
 function testBenignPage(gTestBrowser)
 {
   // Make sure the doorhanger does NOT appear
   var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
   is(notification, null, "Tracking Content Doorhanger did NOT appear when protection was ON and tracking was NOT present");
 }
 
-function testTrackingPage(gTestBrowser)
+function* testTrackingPage(gTestBrowser)
 {
   // Make sure the doorhanger appears
   var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
   isnot(notification, null, "Tracking Content Doorhanger did appear when protection was ON and tracking was present");
   notification.reshow();
+
+  // Wait for the method to be attached after showing the popup
+  yield promiseWaitForCondition(() => {
+    return PopupNotifications.panel.firstChild.disableTrackingContentProtection;
+  });
+
+
   // Make sure the state of the doorhanger includes blocking tracking elements
-  isnot(PopupNotifications.panel.firstChild.isTrackingContentBlocked, 0,
-    "Tracking Content is being blocked");
+  is(PopupNotifications.panel.firstChild.isTrackingContentBlocked,
+     Ci.nsIWebProgressListener.STATE_BLOCKED_TRACKING_CONTENT,
+     "Tracking Content is being blocked");
 
   // Make sure the notification has no trackingblockdisabled attribute
   ok(!PopupNotifications.panel.firstChild.hasAttribute("trackingblockdisabled"),
     "Doorhanger must have no trackingblockdisabled attribute");
 
   // Disable Tracking Content Protection for the page (which reloads the page)
   PopupNotifications.panel.firstChild.disableTrackingContentProtection();
 }
@@ -122,17 +130,17 @@ add_task(function* () {
   Services.prefs.setBoolPref(PREF, true);
 
   // Point tab to a test page NOT containing tracking elements
   yield promiseTabLoadEvent(tab, "http://tracking.example.org/browser/browser/base/content/test/general/benignPage.html");
   testBenignPage(gBrowser.getBrowserForTab(tab));
 
   // Point tab to a test page containing tracking elements
   yield promiseTabLoadEvent(tab, "http://tracking.example.org/browser/browser/base/content/test/general/trackingPage.html");
-  testTrackingPage(gBrowser.getBrowserForTab(tab));
+  yield testTrackingPage(gBrowser.getBrowserForTab(tab));
 
   // Wait for tab to reload following tracking-protection page white-listing
   yield promiseTabLoadEvent(tab);
   // Tracking content must be white-listed (NOT blocked)
   testTrackingPageWhitelisted(gBrowser.getBrowserForTab(tab));
 
   // Disable Tracking Protection
   Services.prefs.setBoolPref(PREF, false);
