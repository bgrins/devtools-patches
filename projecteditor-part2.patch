# HG changeset patch
# Parent 4128909c3fb1f1cb95553629ce0789a4882831dd
# User Paul Rouget <paul@mozilla.com>
Bug 987089 - Land ProjectEditor in browser/devtools.  Part 2 - integrate with webide;r=jryans

diff --git a/browser/devtools/webide/content/webide.js b/browser/devtools/webide/content/webide.js
--- a/browser/devtools/webide/content/webide.js
+++ b/browser/devtools/webide/content/webide.js
@@ -9,16 +9,17 @@ const Ci = Components.interfaces;
 Cu.import("resource:///modules/devtools/gDevTools.jsm");
 
 const {devtools} = Cu.import("resource://gre/modules/devtools/Loader.jsm", {});
 const {require} = devtools;
 const {Services} = Cu.import("resource://gre/modules/Services.jsm");
 const {AppProjects} = require("devtools/app-manager/app-projects");
 const {Connection} = require("devtools/client/connection-manager");
 const {AppManager} = require("devtools/app-manager");
+const ProjectEditor = require("projecteditor/projecteditor");
 
 const Strings = Services.strings.createBundle("chrome://webide/content/webide.properties");
 
 const HTML = "http://www.w3.org/1999/xhtml";
 
 window.addEventListener("load", function onLoad() {
   window.removeEventListener("load", onLoad);
   UI.init();
@@ -256,32 +257,75 @@ let UI = {
       imageNode.removeAttribute("src");
     } else {
       buttonNode.classList.remove("no-project");
       labelNode.setAttribute("value", project.name);
       imageNode.setAttribute("src", project.icon);
     }
   },
 
-  // details.xhtml
+  // ProjectEditor & details screen
+
+  getProjectEditor: function() {
+    if (this.projecteditor) {
+      return this.projecteditor.loaded;
+    }
+
+    let projecteditorIframe = document.querySelector("#projecteditor");
+    this.projecteditor = ProjectEditor.ProjectEditor(projecteditorIframe);
+    this.projecteditor.on("onEditorSave", (editor, resource) => {
+      AppManager.validateProject(AppManager.selectedProject);
+    });
+    return this.projecteditor.loaded;
+  },
+
+  isProjectEditorEnabled: function() {
+    return Services.prefs.getBoolPref("devtools.webide.showProjectEditor");
+  },
 
   openProject: function() {
-    let details = document.querySelector("#details");
+    let detailsIframe = document.querySelector("#details");
+    let projecteditorIframe = document.querySelector("#projecteditor");
+
     let project = AppManager.selectedProject;
 
+    // Nothing to show
+
     if (!project) {
-      details.setAttribute("hidden", "true");
+      detailsIframe.setAttribute("hidden", "true");
+      projecteditorIframe.setAttribute("hidden", "true");
+      document.commandDispatcher.focusedElement = document.documentElement;
       return;
     }
 
+    // Show only the details screen
+
+    if (project.type != "packaged" || !this.isProjectEditorEnabled()) {
+      detailsIframe.removeAttribute("hidden");
+      projecteditorIframe.setAttribute("hidden", "true");
+      document.commandDispatcher.focusedElement = document.documentElement;
+      return;
+    }
+
+    // Show ProjectEditor
+
+    detailsIframe.setAttribute("hidden", "true");
+    projecteditorIframe.removeAttribute("hidden");
+
+    this.getProjectEditor().then((projecteditor) => {
+      projecteditor.setProjectToAppPath(project.location, {
+        name: project.name,
+        iconUrl: project.icon,
+        projectOverviewURL: "chrome://webide/content/details.xhtml"
+      });
+    }, UI.console.error);
+
     if (project.location) {
       Services.prefs.setCharPref("devtools.webide.lastprojectlocation", project.location);
     }
-
-    details.removeAttribute("hidden");
   },
 
   /********** COMMANDS **********/
 
   updateCommands: function() {
 
     if (document.querySelector("window").classList.contains("busy")) {
       document.querySelector("#cmd_newApp").setAttribute("disabled", "true");
@@ -725,11 +769,12 @@ let Cmds = {
     }
   },
 
   removeProject: function() {
     AppManager.removeSelectedProject();
   },
 
   toggleEditors: function() {
-    // Toggle Itchpad
+    Services.prefs.setBoolPref("devtools.webide.showProjectEditor", !UI.isProjectEditorEnabled());
+    UI.openProject();
   },
 }
diff --git a/browser/devtools/webide/content/webide.xul b/browser/devtools/webide/content/webide.xul
--- a/browser/devtools/webide/content/webide.xul
+++ b/browser/devtools/webide/content/webide.xul
@@ -145,16 +145,17 @@
         </vbox>
       </vbox>
     </panel>
 
   </popupset>
 
   <vbox flex="1" id="body">
     <iframe id="details" flex="1" hidden="true" src="details.xhtml"/>
+    <iframe id="projecteditor" flex="1" hidden="true"/>
   </vbox>
 
   <splitter hidden="true" class="devtools-horizontal-splitter" orient="vertical"/>
 
   <!-- toolbox iframe will be inserted here -->
 
   <html:div id="logs-container">
     <html:pre id="logs"></html:pre>
diff --git a/browser/devtools/webide/webide-prefs.js b/browser/devtools/webide/webide-prefs.js
--- a/browser/devtools/webide/webide-prefs.js
+++ b/browser/devtools/webide/webide-prefs.js
@@ -1,6 +1,7 @@
 # -*- Mode: JavaScript; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
+pref("devtools.webide.showProjectEditor", true);
 pref("devtools.webide.templatesURL", "http://fixme/");
