# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  dead9fcddd4a25fd36d54ab7eb782d7d9b8bb7a1

diff --git a/devtools/client/webconsole/components/message-types/ConsoleCommand.js b/devtools/client/webconsole/components/message-types/ConsoleCommand.js
--- a/devtools/client/webconsole/components/message-types/ConsoleCommand.js
+++ b/devtools/client/webconsole/components/message-types/ConsoleCommand.js
@@ -2,19 +2,20 @@
 /* vim: set ft=javascript ts=2 et sw=2 tw=80: */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 "use strict";
 
 // React & Redux
-const { createFactory } = require("devtools/client/shared/vendor/react");
+const { createFactory, createElement } = require("devtools/client/shared/vendor/react");
 const PropTypes = require("devtools/client/shared/vendor/react-prop-types");
 const Message = createFactory(require("devtools/client/webconsole/components/Message"));
+const dom = require("devtools/client/shared/vendor/react-dom-factories");
 
 ConsoleCommand.displayName = "ConsoleCommand";
 
 ConsoleCommand.propTypes = {
   message: PropTypes.object.isRequired,
   timestampsVisible: PropTypes.bool.isRequired,
   serviceContainer: PropTypes.object,
 };
@@ -29,19 +30,23 @@ function ConsoleCommand(props) {
     serviceContainer,
   } = props;
 
   const {
     indent,
     source,
     type,
     level,
-    messageText: messageBody,
+    messageText,
   } = message;
 
+  const messageBody = createElement('codemirror-highlighted', {
+    is: 'foo', // Tell React to ignore changes inside the element. XXX - do we need to / how should we do this?
+  }, dom.div({}, messageText));
+
   return Message({
     source,
     type,
     level,
     topLevelClasses: [],
     messageBody,
     serviceContainer,
     indent,
diff --git a/devtools/client/webconsole/main.js b/devtools/client/webconsole/main.js
--- a/devtools/client/webconsole/main.js
+++ b/devtools/client/webconsole/main.js
@@ -12,11 +12,30 @@ this.WebConsoleOutput = function(parentN
   // Initialize module loader and load all modules of the new inline
   // preview feature. The entire code-base doesn't need any extra
   // privileges and runs entirely in content scope.
   const WebConsoleOutputWrapper = BrowserLoader({
     baseURI: "resource://devtools/client/webconsole/",
     window
   }).require("./webconsole-output-wrapper");
 
-  return new WebConsoleOutputWrapper(
+  window.tmp = new WebConsoleOutputWrapper(
     parentNode, jsterm, toolbox, owner, serviceContainer);
+  return window.tmp;
 };
+
+if (window.customElements) {
+
+customElements.define("codemirror-highlighted", class CodeMirrorHighlighted extends HTMLElement {
+  constructor() {
+    super();
+  }
+  connectedCallback() {
+    const jsterm = window.tmp.hud.jsterm;
+    if (jsterm && jsterm.editor) {
+      let div = this.querySelector("div");
+      div.classList.add("cm-s-default");
+      jsterm.editor.CodeMirror.runMode(this.textContent, "application/javascript", div);
+    }
+  }
+});
+
+}
