# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  938a862ae8e6d09953f491e6de7760ebab0a2b5d

diff --git a/toolkit/content/widgets/text.js b/toolkit/content/widgets/text.js
--- a/toolkit/content/widgets/text.js
+++ b/toolkit/content/widgets/text.js
@@ -92,33 +92,33 @@ class MozTextLabel extends MozTextBase {
     this.setupAsControlIfNeeded();
   }
 
   get isTextLink() {
     return this.classList.contains("text-link") || this.hasAttribute("onClick");
   }
 
   setupAsControlIfNeeded() {
-    let wasLabelControl = this.isLabelControl;
-    this.isLabelControl = this.hasAttribute("control") ||
-                          this.classList.contains("radio-label") ||
-                          this.classList.contains("checkbox-label") ||
-                          this.classList.contains("toolbarbutton-multiline-text");
-    if (!wasLabelControl && this.isLabelControl) {
-      this.accessKeyParens = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
-      this.accessKeyParens.setAttribute("anonid", "accessKeyParens");
-      this.mUnderlineAccesskey = !/Mac/.test(navigator.platform);
-      this.mAlwaysAppendAccessKey = false;
-      this.appendChild(this.accessKeyParens);
-      this.formatAccessKey(true);
-    }
+    // let wasLabelControl = this.isLabelControl;
+    // this.isLabelControl = this.hasAttribute("control") ||
+    //                       this.classList.contains("radio-label") ||
+    //                       this.classList.contains("checkbox-label") ||
+    //                       this.classList.contains("toolbarbutton-multiline-text");
+    // if (!wasLabelControl && this.isLabelControl) {
+    //   this.accessKeyParens = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
+    //   this.accessKeyParens.setAttribute("anonid", "accessKeyParens");
+    //   this.mUnderlineAccesskey = !/Mac/.test(navigator.platform);
+    //   this.mAlwaysAppendAccessKey = false;
+    //   this.appendChild(this.accessKeyParens);
+    //   this.formatAccessKey(true);
+    // }
 
-    if (wasLabelControl && !this.isLabelControl) {
-      this.accessKeyParens.remove();
-    }
+    // if (wasLabelControl && !this.isLabelControl) {
+    //   this.accessKeyParens.remove();
+    // }
   }
 
   set accessKey(val) {
     if (!this.isLabelControl) {
       this.setAttribute("accesskey", val);
       return val;
     }
 
