# HG changeset patch
# Parent edc0361cb6e6347013181e9322c4c5a41ba35dbd
# User Brian Grinstead <bgrinstead@mozilla.com>
set last child to document fragment for iframe

diff --git a/layout/inspector/inDeepTreeWalker.cpp b/layout/inspector/inDeepTreeWalker.cpp
--- a/layout/inspector/inDeepTreeWalker.cpp
+++ b/layout/inspector/inDeepTreeWalker.cpp
@@ -246,28 +246,36 @@ inDeepTreeWalker::LastChild(nsIDOMNode *
 {
   *_retval = nullptr;
   if (!mCurrentNode) {
     return NS_OK;
   }
 
   nsCOMPtr<nsIContent> currentAsContent = do_QueryInterface(mCurrentNode);
   nsCOMPtr<nsIDOMNode> lchild;
+
+  if (mShowSubDocuments) {
+    nsCOMPtr<nsIDOMDocument> domdoc = inLayoutUtils::GetSubDocumentFor(mCurrentNode);
+    lchild = do_QueryInterface(domdoc);
+  }
+
   nsCOMPtr<nsINodeList> children;
-  if (currentAsContent) {
-    nsCOMPtr<nsIDOMNodeList> list = currentAsContent->GetChildren(mShowAnonymousContent ?
-                                                                  nsIContent::eAllChildren :
-                                                                  nsIContent::eAllButXBL);
-    children = do_QueryInterface(list);
-    if (children && children->Length() > 0) {
-      nsIContent* childAsContent = children->Item(children->Length()-1);
-      lchild = childAsContent->AsDOMNode();
+  if (!lchild) {
+    if (currentAsContent) {
+      nsCOMPtr<nsIDOMNodeList> list = currentAsContent->GetChildren(mShowAnonymousContent ?
+                                                                    nsIContent::eAllChildren :
+                                                                    nsIContent::eAllButXBL);
+      children = do_QueryInterface(list);
+      if (children && children->Length() > 0) {
+        nsIContent* childAsContent = children->Item(children->Length()-1);
+        lchild = childAsContent->AsDOMNode();
+      }
+    } else {
+      mCurrentNode->GetLastChild(getter_AddRefs(lchild));
     }
-  } else {
-    mCurrentNode->GetLastChild(getter_AddRefs(lchild));
   }
 
   if (lchild) {
     nsresult rv = SetCurrentNode(lchild, children);
     NS_ENSURE_SUCCESS(rv, rv);
     NS_ADDREF(*_retval = mCurrentNode);
   }
   return NS_OK;
