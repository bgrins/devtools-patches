# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1539130643 25200
#      Tue Oct 09 17:17:23 2018 -0700
# Node ID 10eafba5f82db95d5dfa868dcf44d9b7db8675fe
# Parent  a9616aaeff87448588d57c295e16eb4caec420fb
Bug 1497599 - Process pending connectedCallbacks at MozBeforeInitialXULLayout when possible;r=paolo

This ensures that they run before XBL constructors that fire as a result
of initial layout. This makes it so those constructors can rely on Custom Elements
inside of their anonymous content to already have run their connectedCallbacks.

Differential Revision: https://phabricator.services.mozilla.com/D8173

diff --git a/toolkit/content/customElements.js b/toolkit/content/customElements.js
--- a/toolkit/content/customElements.js
+++ b/toolkit/content/customElements.js
@@ -12,20 +12,22 @@
 
 ChromeUtils.import("resource://gre/modules/Services.jsm");
 ChromeUtils.import("resource://gre/modules/AppConstants.jsm");
 
 // The listener of DOMContentLoaded must be set on window, rather than
 // document, because the window can go away before the event is fired.
 // In that case, we don't want to initialize anything, otherwise we
 // may be leaking things because they will never be destroyed after.
-let gIsDOMContentLoaded = false;
+let gIsReadyForConnections = false;
 const gElementsPendingConnection = new Set();
-window.addEventListener("DOMContentLoaded", () => {
-  gIsDOMContentLoaded = true;
+window.addEventListener(
+  document.contentType == "application/vnd.mozilla.xul+xml" ?
+    "MozBeforeInitialXULLayout" : "DOMContentLoaded", () => {
+  gIsReadyForConnections = true;
   for (let element of gElementsPendingConnection) {
     try {
       if (element.isConnected) {
         element.connectedCallback();
       }
     } catch (ex) { console.error(ex); }
   }
   gElementsPendingConnection.clear();
@@ -44,25 +46,25 @@ class MozXULElement extends XULElement {
    *
    *    if (this.delayConnectedCallback()) { return }
    *
    * And this at the beginning of your `attributeChangedCallback`
    *
    *    if (!this.isConnectedAndReady) { return; }
    */
   delayConnectedCallback() {
-    if (gIsDOMContentLoaded) {
+    if (gIsReadyForConnections) {
       return false;
     }
     gElementsPendingConnection.add(this);
     return true;
   }
 
   get isConnectedAndReady() {
-    return gIsDOMContentLoaded && this.isConnected;
+    return gIsReadyForConnections && this.isConnected;
   }
 
   /**
    * Allows eager deterministic construction of XUL elements with XBL attached, by
    * parsing an element tree and returning a DOM fragment to be inserted in the
    * document before any of the inner elements is referenced by JavaScript.
    *
    * This process is required instead of calling the createElement method directly
