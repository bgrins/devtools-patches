# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  11b874babc050151c35f417bb126ac1b7c584fba

diff --git a/browser/base/content/tabbrowser-tabs.js b/browser/base/content/tabbrowser-tabs.js
--- a/browser/base/content/tabbrowser-tabs.js
+++ b/browser/base/content/tabbrowser-tabs.js
@@ -28,16 +28,21 @@
       this.addEventListener("drop", this);
       this.addEventListener("dragend", this);
       this.addEventListener("dragexit", this);
     }
 
     init() {
       this.arrowScrollbox = this.querySelector("arrowscrollbox");
 
+      // Force these to have no moz-appearance because there is a default value on
+      // linux.
+      this.arrowScrollbox._scrollButtonDown.style.MozAppearance = this.arrowScrollbox._scrollButtonUp.style.MozAppearance =
+        "none";
+
       this.baseConnect();
 
       this._firstTab = null;
       this._lastTab = null;
       this._beforeSelectedTab = null;
       this._beforeHoveredTab = null;
       this._afterHoveredTab = null;
       this._hoveredTab = null;
diff --git a/browser/themes/linux/browser.css b/browser/themes/linux/browser.css
--- a/browser/themes/linux/browser.css
+++ b/browser/themes/linux/browser.css
@@ -376,22 +376,19 @@ notification[value="translation"] menuli
 .tab-drop-indicator {
   list-style-image: url(chrome://browser/skin/tabbrowser/tabDragIndicator.png);
   margin-bottom: -9px;
   z-index: 3;
 }
 
 /* Tab bar scroll arrows */
 
-/* XXX: you can't do this with parts. What's the best way to set this?
-.tabbrowser-arrowscrollbox::part(scrollbutton-up) > .toolbarbutton-icon,
-.tabbrowser-arrowscrollbox::part(scrollbutton-down) > .toolbarbutton-icon {
-  -moz-appearance: none;
+.tabbrowser-arrowscrollbox {
+  --scrollbutton-moz-appearance: none;
 }
-*/
 
 /* All tabs menupopup */
 
 .alltabs-item[selected="true"] {
   font-weight: bold;
 }
 
 /* Status panel */
diff --git a/toolkit/content/widgets/arrowscrollbox.js b/toolkit/content/widgets/arrowscrollbox.js
--- a/toolkit/content/widgets/arrowscrollbox.js
+++ b/toolkit/content/widgets/arrowscrollbox.js
@@ -345,16 +345,21 @@
         this.smoothScroll = Services.prefs.getBoolPref(
           "toolkit.scrollbox.smoothScroll",
           true
         );
       }
 
       this.setAttribute("notoverflowing", "true");
       this._updateScrollButtonsDisabledState();
+
+      if (this.classList.contains("popup-internal-box")) {
+        this._scrollButtonUp.classList.add("in-menupopup");
+        this._scrollButtonDown.classList.add("in-menupopup");
+      }
     }
 
     get _clickToScroll() {
       return this.hasAttribute("clicktoscroll");
     }
 
     get _scrollDelay() {
       if (this._clickToScroll) {
diff --git a/toolkit/themes/osx/global/scrollbox.css b/toolkit/themes/osx/global/scrollbox.css
--- a/toolkit/themes/osx/global/scrollbox.css
+++ b/toolkit/themes/osx/global/scrollbox.css
@@ -6,16 +6,21 @@
 
 arrowscrollbox[scrolledtoend=true]::part(arrowscrollbox-overflow-end-indicator),
 arrowscrollbox[scrolledtostart=true]::part(arrowscrollbox-overflow-start-indicator),
 arrowscrollbox[notoverflowing=true]::part(scrollbutton-up),
 arrowscrollbox[notoverflowing=true]::part(scrollbutton-down) {
   visibility: collapse;
 }
 
+.scrollbutton-up,
+.scrollbutton-down {
+  -moz-appearance: var(--scrollbutton-moz-appearance);
+}
+
 /* Horizontal enabled */
 .scrollbutton-up[orient="horizontal"] {
   list-style-image: url("chrome://global/skin/arrow/arrow-lft-sharp.gif");
   -moz-image-region: auto; /* cut off inheritance */
 }
 
 .scrollbutton-down[orient="horizontal"] {
   list-style-image: url("chrome://global/skin/arrow/arrow-rit-sharp.gif");
