# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  26514f25355c5f4b6fb1998e51130d84e42ba72e
Bug 943306 - Debugging persist console intermittents

diff --git a/browser/devtools/webconsole/webconsole.js b/browser/devtools/webconsole/webconsole.js
--- a/browser/devtools/webconsole/webconsole.js
+++ b/browser/devtools/webconsole/webconsole.js
@@ -445,18 +445,20 @@ WebConsoleFrame.prototype = {
 
   /**
    * Initialize the WebConsoleFrame instance.
    * @return object
    *         A promise object that resolves once the frame is ready to use.
    */
   init: function()
   {
-    this._initUI();
-    return this._initConnection();
+    return promise.all([
+      this._initUI(),
+      this._initConnection()
+    ]);
   },
 
   /**
    * Connect to the server using the remote debugging protocol.
    *
    * @private
    * @return object
    *         A promise object that is resolved/reject based on the connection
@@ -484,16 +486,18 @@ WebConsoleFrame.prototype = {
     });
 
     return this._initDefer.promise;
   },
 
   /**
    * Find the Web Console UI elements and setup event listeners as needed.
    * @private
+   * @return object
+   *         A promise object that resolved once the UI is ready.
    */
   _initUI: function WCF__initUI()
   {
     this.document = this.window.document;
     this.rootElement = this.document.documentElement;
 
     this._initDefaultFilterPrefs();
 
@@ -606,16 +610,17 @@ WebConsoleFrame.prototype = {
     gDevTools.on("pref-changed", this._onToolboxPrefChanged);
     this._onToolboxPrefChanged("pref-changed", {
       pref: PREF_MESSAGE_TIMESTAMP,
       newValue: Services.prefs.getBoolPref(PREF_MESSAGE_TIMESTAMP),
     });
 
     // focus input node
     this.jsterm.inputNode.focus();
+    return this.jsterm.historyLoaded;
   },
 
   /**
    * Sets the focus to JavaScript input field when the web console tab is
    * selected or when there is a split console present.
    * @private
    */
   _onPanelSelected: function WCF__onPanelSelected(evt, id)
@@ -3079,17 +3084,17 @@ JSTerm.prototype = {
   /**
    * Load the console history from previous sessions.
    * @private
    */
   _loadHistory: function() {
     this.history = [];
     this.historyIndex = this.historyPlaceHolder = 0;
 
-    asyncStorage.getItem("webConsoleHistory").then(value => {
+    this.historyLoaded = asyncStorage.getItem("webConsoleHistory").then(value => {
       if (Array.isArray(value)) {
         // Since it was gotten asynchronously, there could be items already in
         // the history.  It's not likely but stick them onto the end anyway.
         this.history = value.concat(this.history);
 
         // Holds the number of entries in history. This value is incremented in
         // this.execute().
         this.historyIndex = this.history.length;
