# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  464b2a3c25aa1065760d9ecbb0870bca4a66c62e
Bug 1374837 - Add some additional logging in case the Browser Toolbox fails to open;r=jryans

diff --git a/devtools/client/framework/ToolboxProcess.jsm b/devtools/client/framework/ToolboxProcess.jsm
--- a/devtools/client/framework/ToolboxProcess.jsm
+++ b/devtools/client/framework/ToolboxProcess.jsm
@@ -6,16 +6,17 @@
 
 "use strict";
 
 const { interfaces: Ci, utils: Cu, results: Cr } = Components;
 
 const DBG_XUL = "chrome://devtools/content/framework/toolbox-process-window.xul";
 const CHROME_DEBUGGER_PROFILE_NAME = "chrome_debugger_profile";
 
+const { console } = Cu.import("resource://gre/modules/Console.jsm", {});
 const { require, DevToolsLoader } = Cu.import("resource://devtools/shared/Loader.jsm", {});
 const { XPCOMUtils } = require("resource://gre/modules/XPCOMUtils.jsm");
 
 XPCOMUtils.defineLazyModuleGetter(this, "Subprocess", "resource://gre/modules/Subprocess.jsm");
 XPCOMUtils.defineLazyGetter(this, "Telemetry", function () {
   return require("devtools/client/shared/telemetry");
 });
 XPCOMUtils.defineLazyGetter(this, "EventEmitter", function () {
@@ -275,16 +276,18 @@ BrowserToolboxProcess.prototype = {
       this._telemetry.toolOpened("jsbrowserdebugger");
 
       dumpn("Chrome toolbox is now running...");
       this.emit("run", this);
 
       proc.stdin.close();
       proc.wait().then(() => this.close());
       return proc;
+    }, err => {
+      console.log(`Error loading Browser Toolbox: ${command} ${args.join(" ")}`, err);
     });
   },
 
   /**
    * Closes the remote debugging server and kills the toolbox process.
    */
   close: async function () {
     if (this.closed) {
