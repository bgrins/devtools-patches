# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1536681974 25200
#      Tue Sep 11 09:06:14 2018 -0700
# Node ID 6b5f644c539e107ab382764b46e33cc1ec464a25
# Parent  c2e3be6a1dd352b969a45f0b85e87674e24ad284
Bug 1487568 - Ignore whitespace only text nodes for XBL compatibility hack for unmatched children dropping content;r=smaug

For browser.xhtml, we have extra whitespace text nodes that appear inside of
mBoundElement, which was causing XBL content to be incorrectly dropped.

Differential Revision: https://phabricator.services.mozilla.com/D5546

diff --git a/dom/xbl/nsXBLBinding.cpp b/dom/xbl/nsXBLBinding.cpp
--- a/dom/xbl/nsXBLBinding.cpp
+++ b/dom/xbl/nsXBLBinding.cpp
@@ -341,19 +341,21 @@ nsXBLBinding::GenerateAnonymousContent()
       for (nsIContent* child = iter.GetNextChild(); child; child = iter.GetNextChild()) {
         XBLChildrenElement* point = FindInsertionPointForInternal(child);
         if (point) {
           // Pass aNotify = false because we're just setting up the whole thing.
           // (see the similar call above for more details).
           point->AppendInsertedChild(child, false);
         } else {
           NodeInfo *ni = child->NodeInfo();
-          if (ni->NamespaceID() != kNameSpaceID_XUL ||
-              (!ni->Equals(nsGkAtoms::_template) &&
-               !ni->Equals(nsGkAtoms::observes))) {
+          if (!child->TextIsOnlyWhitespace() &&
+              (ni->NamespaceID() != kNameSpaceID_XUL ||
+               (!ni->Equals(nsGkAtoms::_template) &&
+                !ni->Equals(nsGkAtoms::observes)))
+          ) {
             // Compatibility hack. For some reason the original XBL
             // implementation dropped the content of a binding if any child of
             // the bound element didn't match any of the <children> in the
             // binding. This became a pseudo-API that we have to maintain.
 
             // Undo BindAnonymousContent
             UnbindAnonymousContent(doc, mContent);
 
