# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  a874b179a4913147f505e925e66e32f05c2f9edd
Bug 1444285 - WIP - Support Custom Elements inside XBL anon content

diff --git a/dom/xbl/nsXBLService.cpp b/dom/xbl/nsXBLService.cpp
--- a/dom/xbl/nsXBLService.cpp
+++ b/dom/xbl/nsXBLService.cpp
@@ -15,16 +15,17 @@
 #include "nsIURI.h"
 #include "nsIDOMElement.h"
 #include "nsIURL.h"
 #include "nsIChannel.h"
 #include "nsString.h"
 #include "plstr.h"
 #include "nsIContent.h"
 #include "nsIDocument.h"
+#include "DocGroup.h"
 #include "nsIXMLContentSink.h"
 #include "nsContentCID.h"
 #include "mozilla/dom/XMLDocument.h"
 #include "nsGkAtoms.h"
 #include "nsIMemory.h"
 #include "nsIObserverService.h"
 #include "nsIDOMNodeList.h"
 #include "nsXBLContentSink.h"
@@ -543,16 +544,25 @@ nsXBLService::LoadBindings(Element* aEle
 
   AutoStyleElement styleElement(aElement, aResolveStyle);
 
   // We loaded a style binding.  It goes on the end.
   // Install the binding on the content node.
   aElement->SetXBLBinding(newBinding);
 
   {
+    // Support Custom Elements inside of anonymous content.
+    Maybe<AutoCEReaction> ceReaction;
+    if (XRE_IsParentProcess() && CustomElementRegistry::IsCustomElementEnabled()) {
+      DocGroup* docGroup = document->GetDocGroup();
+      if (docGroup) {
+        ceReaction.emplace(docGroup->CustomElementReactionsStack(), nullptr);
+      }
+    }
+
     nsAutoScriptBlocker scriptBlocker;
 
     // Set the binding's bound element.
     newBinding->SetBoundElement(aElement);
 
     // Tell the binding to build the anonymous content.
     newBinding->GenerateAnonymousContent();
 
