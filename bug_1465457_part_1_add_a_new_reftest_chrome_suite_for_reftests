# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1547591128 28800
#      Tue Jan 15 14:25:28 2019 -0800
# Node ID df2195ca065cad30964f8e217586cd221023ac6f
# Parent  a559b84032a8d570a64f0bb67ce917c9d696d4fc
Bug 1465457 - Part 1 - Add a new reftest-chrome suite for reftests

This is intended for reftests that cover chrome UI. As we move more
chrome into Custom Elements, we need a test that runs in the parent
process and with chrome privilege, since we can't rely on in-content
XBL to get attached to XUL docs in the content process.

This patch sets up the new suite for mach and taskcluster, and the
following will cause the files to get loaded over chrome URIs.

Differential Revision: https://phabricator.services.mozilla.com/D11573

diff --git a/layout/reftests/reftest-chrome.list b/layout/reftests/reftest-chrome.list
new file mode 100644
--- /dev/null
+++ b/layout/reftests/reftest-chrome.list
@@ -0,0 +1,6 @@
+
+# theme (osx)
+include ../../toolkit/themes/osx/reftests/reftest-chrome.list
+
+# xul/ (no XUL theme on Android)
+skip-if(Android) include xul/reftest.list
diff --git a/layout/reftests/reftest.list b/layout/reftests/reftest.list
--- a/layout/reftests/reftest.list
+++ b/layout/reftests/reftest.list
@@ -367,19 +367,16 @@ include text-indent/reftest.list
 include text-shadow/reftest.list
 
 # text-svgglyphs/
 include text-svgglyphs/reftest.list
 
 # text-transform/
 include text-transform/reftest.list
 
-# theme (osx)
-include ../../toolkit/themes/osx/reftests/reftest.list
-
 include ../../toolkit/content/tests/reftests/reftest.list
 
 # -moz-transform/
 # skipping on non-e10s windows because of assertion in bug 1401228
 skip-if(winWidget&&!browserIsRemote) include transform/reftest.list
 
 # 3d transforms
 include transform-3d/reftest.list
@@ -405,19 +402,16 @@ include webcomponents/reftest.list
 include ../../widget/reftests/reftest.list
 
 # xml-stylesheet/
 include ../../dom/tests/reftest/xml-stylesheet/reftest.list
 
 # xul-document-load/ (no XUL theme on Android)
 skip-if(Android) include xul-document-load/reftest.list
 
-# xul/ (no XUL theme on Android)
-skip-if(Android) include xul/reftest.list
-
 # xul (no XUL theme on Android)
 skip-if(Android) include ../xul/reftest/reftest.list
 
 # xul grid (no XUL theme on Android)
 skip-if(Android) include ../xul/grid/reftests/reftest.list
 
 # -webkit-box & associated properties (mapped to modern flexbox)
 include webkit-box/reftest.list
diff --git a/layout/tools/reftest/mach_commands.py b/layout/tools/reftest/mach_commands.py
--- a/layout/tools/reftest/mach_commands.py
+++ b/layout/tools/reftest/mach_commands.py
@@ -59,26 +59,30 @@ class ReftestRunner(MozbuildObject):
         if not os.path.isdir(tests):
             os.symlink(self.topsrcdir, tests)
 
     def run_desktop_test(self, **kwargs):
         """Runs a reftest, in desktop Firefox."""
         import runreftest
 
         args = Namespace(**kwargs)
-        if args.suite not in ('reftest', 'crashtest', 'jstestbrowser'):
+        if args.suite not in ('reftest', 'reftest-chrome', 'crashtest', 'jstestbrowser'):
             raise Exception('None or unrecognized reftest suite type.')
 
         default_manifest = {
             "reftest": (self.topsrcdir, "layout", "reftests", "reftest.list"),
+            "reftest-chrome": (self.topsrcdir, "layout", "reftests", "reftest-chrome.list"),
             "crashtest": (self.topsrcdir, "testing", "crashtest", "crashtests.list"),
             "jstestbrowser": (self.topobjdir, "dist", "test-stage", "jsreftest", "tests",
                               "jstests.list")
         }
 
+        if args.suite == "reftest-chrome":
+            args.e10s = False
+
         args.extraProfileFiles.append(os.path.join(self.topobjdir, "dist", "plugins"))
         args.symbolsPath = os.path.join(self.topobjdir, "crashreporter-symbols")
         args.sandboxReadWhitelist.extend([self.topsrcdir, self.topobjdir])
 
         if not args.tests:
             args.tests = [os.path.join(*default_manifest[args.suite])]
 
         if args.suite == "jstestbrowser":
@@ -202,17 +206,19 @@ def get_parser():
 
 @CommandProvider
 class MachCommands(MachCommandBase):
     @Command('reftest',
              category='testing',
              description='Run reftests (layout and graphics correctness).',
              parser=get_parser)
     def run_reftest(self, **kwargs):
-        kwargs["suite"] = "reftest"
+        if kwargs["suite"] != "reftest-chrome":
+            kwargs["suite"] = "reftest"
+        os.environ['REFTEST_SUITE'] = kwargs["suite"]
         return self._run_reftest(**kwargs)
 
     @Command('jstestbrowser',
              category='testing',
              description='Run js/src/tests in the browser.',
              parser=get_parser)
     def run_jstestbrowser(self, **kwargs):
         self._mach_context.commands.dispatch("build",
@@ -225,16 +231,20 @@ class MachCommands(MachCommandBase):
              category='testing',
              description='Run crashtests (Check if crashes on a page).',
              parser=get_parser)
     def run_crashtest(self, **kwargs):
         kwargs["suite"] = "crashtest"
         return self._run_reftest(**kwargs)
 
     def _run_reftest(self, **kwargs):
+        if kwargs["suite"] == "reftest-chrome" and conditions.is_android(self):
+            print("Not running reftest-chrome on android")
+            return
+
         kwargs["topsrcdir"] = self.topsrcdir
         process_test_objects(kwargs)
         reftest = self._spawn(ReftestRunner)
         # Unstructured logging must be enabled prior to calling
         # adb which uses an unstructured logger in its constructor.
         reftest.log_manager.enable_unstructured()
         if conditions.is_android(self):
             from mozrunner.devices.android_device import verify_android_device
diff --git a/layout/tools/reftest/reftest-content.js b/layout/tools/reftest/reftest-content.js
--- a/layout/tools/reftest/reftest-content.js
+++ b/layout/tools/reftest/reftest-content.js
@@ -1075,16 +1075,28 @@ function DoAssertionCheck()
         numAsserts = newAssertionCount - gAssertionCount;
         gAssertionCount = newAssertionCount;
     }
     SendAssertionCount(numAsserts);
 }
 
 function LoadURI(uri)
 {
+    if (uri.startsWith("chrome:")) {
+        // Register the override in the content process too.
+        let chromeReg = Cc["@mozilla.org/chrome/chrome-registry;1"]
+                          .getService(Ci.nsIChromeRegistry);
+        let ioService = Cc["@mozilla.org/network/io-service;1"]
+                         .getService(Ci.nsIIOService);
+        let chromeURI = ioService.newURI(uri);
+        let testURI = ioService.newURI("file://" +
+                      chromeURI.pathQueryRef.replace("/content/", "/"));
+        chromeReg.registerChromeURLOverrideForTest(chromeURI, testURI);
+    }
+
     let loadURIOptions = {
       triggeringPrincipal: Services.scriptSecurityManager.getSystemPrincipal(),
     };
     webNavigation().loadURI(uri, loadURIOptions);
 }
 
 function LogWarning(str)
 {
diff --git a/layout/tools/reftest/reftestcommandline.py b/layout/tools/reftest/reftestcommandline.py
--- a/layout/tools/reftest/reftestcommandline.py
+++ b/layout/tools/reftest/reftestcommandline.py
@@ -210,17 +210,17 @@ class ReftestArgumentsParser(argparse.Ar
                           help="Path to the reftest extension")
 
         self.add_argument("--special-powers-extension-path",
                           action="store",
                           dest="specialPowersExtensionPath",
                           help="Path to the special powers extension")
 
         self.add_argument("--suite",
-                          choices=["reftest", "crashtest", "jstestbrowser"],
+                          choices=["reftest", "reftest-chrome", "crashtest", "jstestbrowser"],
                           default=None,
                           help=argparse.SUPPRESS)
 
         self.add_argument("--cleanup-crashes",
                           action="store_true",
                           dest="cleanupCrashes",
                           default=False,
                           help="Delete pending crash reports before running tests.")
@@ -262,16 +262,17 @@ class ReftestArgumentsParser(argparse.Ar
             return moznetwork.get_ip()
         else:
             self.error(
                 "ERROR: you must specify a --remote-webserver=<ip address>\n")
 
     def set_default_suite(self, options):
         manifests = OrderedDict([("reftest.list", "reftest"),
                                  ("crashtests.list", "crashtest"),
+                                 ("reftest-chrome.list", "reftest-chrome"),
                                  ("jstests.list", "jstestbrowser")])
 
         for test_path in options.tests:
             file_name = os.path.basename(test_path)
             if file_name in manifests:
                 options.suite = manifests[file_name]
                 return
 
diff --git a/layout/tools/reftest/runreftest.py b/layout/tools/reftest/runreftest.py
--- a/layout/tools/reftest/runreftest.py
+++ b/layout/tools/reftest/runreftest.py
@@ -154,16 +154,17 @@ class ReftestThread(threading.Thread):
 
             if summaryHeadRegex.search(line) is None:
                 yield line
 
 
 class ReftestResolver(object):
     def defaultManifest(self, suite):
         return {"reftest": "reftest.list",
+                "reftest-chrome": "reftest-chrome.list",
                 "crashtest": "crashtests.list",
                 "jstestbrowser": "jstests.list"}[suite]
 
     def directoryManifest(self, suite, path):
         return os.path.join(path, self.defaultManifest(suite))
 
     def findManifest(self, suite, test_file, subdirs=True):
         """Return a tuple of (manifest-path, filter-string) for running test_file.
diff --git a/python/mozbuild/mozbuild/action/test_archive.py b/python/mozbuild/mozbuild/action/test_archive.py
--- a/python/mozbuild/mozbuild/action/test_archive.py
+++ b/python/mozbuild/mozbuild/action/test_archive.py
@@ -416,16 +416,17 @@ ARCHIVE_FILES = {
             'pattern': 'mozinfo.json',
             'dest': 'reftest',
         },
         {
             'source': buildconfig.topsrcdir,
             'base': '',
             'manifests': [
                 'layout/reftests/reftest.list',
+                'layout/reftests/reftest-chrome.list',
                 'testing/crashtest/crashtests.list',
             ],
             'dest': 'reftest/tests',
         },
         {
             'source': buildconfig.topobjdir,
             'base': 'dist/xpi-stage',
             'pattern': 'reftest/**',
diff --git a/python/mozbuild/mozbuild/test/frontend/test_emitter.py b/python/mozbuild/mozbuild/test/frontend/test_emitter.py
--- a/python/mozbuild/mozbuild/test/frontend/test_emitter.py
+++ b/python/mozbuild/mozbuild/test/frontend/test_emitter.py
@@ -905,16 +905,20 @@ class TestEmitterBasic(unittest.TestCase
                     'head1': False,
                     'head2': False,
                 },
             },
             'reftest.list': {
                 'flavor': 'reftest',
                 'installs': {},
             },
+            'reftest-chrome.list': {
+                'flavor': 'reftest',
+                'installs': {},
+            },
             'crashtest.list': {
                 'flavor': 'crashtest',
                 'installs': {},
             },
             'python.ini': {
                 'flavor': 'python',
                 'installs': {
                     'python.ini': False,
diff --git a/python/mozbuild/mozbuild/testing.py b/python/mozbuild/mozbuild/testing.py
--- a/python/mozbuild/mozbuild/testing.py
+++ b/python/mozbuild/mozbuild/testing.py
@@ -58,17 +58,17 @@ TEST_MANIFESTS = dict(
 
     MOCHITEST=('mochitest', 'testing/mochitest', 'tests', True),
     MOCHITEST_CHROME=('chrome', 'testing/mochitest', 'chrome', True),
     WEBRTC_SIGNALLING_TEST=('steeplechase', 'steeplechase', '.', True),
     XPCSHELL_TESTS=('xpcshell', 'xpcshell', '.', True),
 )
 
 # Reftests have their own manifest format and are processed separately.
-REFTEST_FLAVORS = ('crashtest', 'reftest')
+REFTEST_FLAVORS = ('crashtest', 'reftest', 'reftest-chrome')
 
 # Web platform tests have their own manifest format and are processed separately.
 WEB_PLATFORM_TESTS_FLAVORS = ('web-platform-tests',)
 
 def all_test_flavors():
     return ([v[0] for v in TEST_MANIFESTS.values()] +
             list(REFTEST_FLAVORS) +
             list(WEB_PLATFORM_TESTS_FLAVORS))
diff --git a/taskcluster/ci/test/reftest.yml b/taskcluster/ci/test/reftest.yml
--- a/taskcluster/ci/test/reftest.yml
+++ b/taskcluster/ci/test/reftest.yml
@@ -122,16 +122,26 @@ reftest:
     mozharness:
         chunked:
             by-test-platform:
                 android-em.*: false
                 macosx64/opt: false
                 windows10-64.*/opt: false
                 default: true
 
+reftest-chrome:
+    description: "Reftest Chrome run"
+    suite: reftest/reftest-chrome
+    treeherder-symbol: R(c)
+    run-on-projects: built-projects
+    virtualization: virtual-with-gpu
+    e10s: false
+    chunks: 1
+    max-run-time: 3600
+
 reftest-gpu:
     description: "Reftest GPU run"
     suite: reftest/reftest-gpu
     treeherder-symbol: R(Rg)
     chunks:
         by-test-platform:
             windows.*/opt: 2
             default: 4
diff --git a/taskcluster/ci/test/test-sets.yml b/taskcluster/ci/test/test-sets.yml
--- a/taskcluster/ci/test/test-sets.yml
+++ b/taskcluster/ci/test/test-sets.yml
@@ -31,16 +31,17 @@ common-tests:
     - mochitest-chrome
     - mochitest-clipboard
     - mochitest-devtools-chrome
     - mochitest-gpu
     - mochitest-media
     - mochitest-webgl1-core
     - mochitest-webgl1-ext
     - reftest
+    - reftest-chrome
     - reftest-no-accel
     - telemetry-tests-client
     - test-verify
     - test-verify-gpu
     - test-verify-wpt
     - xpcshell
 
 web-platform-tests:
@@ -180,31 +181,33 @@ linux-qr-tests:
     - jsreftest
     - mochitest
     - mochitest-a11y
     - mochitest-gpu
     - mochitest-media
     - mochitest-webgl1-core
     - mochitest-webgl1-ext
     - reftest
+    - reftest-chrome
     - xpcshell
 
 linux-talos-flex:
     - talos-flex
 
 windows-qr-tests:
     - crashtest
     - mochitest
     - mochitest-gpu
     - mochitest-media
     - mochitest-webgl1-core
     - mochitest-webgl1-ext
     - mochitest-webgl2-core
     - mochitest-webgl2-ext
     - reftest
+    - reftest-chrome
     - web-platform-tests-reftests
 
 ccov-code-coverage-tests:
     - test-coverage
     - test-coverage-wpt
 
 windows-reftest-gpu:
     - reftest-gpu
@@ -227,16 +230,17 @@ windows-tests:
     - mochitest-devtools-chrome
     - mochitest-gpu
     - mochitest-media
     - mochitest-webgl1-core
     - mochitest-webgl1-ext
     - mochitest-webgl2-core
     - mochitest-webgl2-ext
     - reftest
+    - reftest-chrome
     - reftest-no-accel
     - test-verify
     - test-verify-gpu
     - test-verify-wpt
     - xpcshell
 
 windows-talos:
     - talos-bcv
@@ -277,16 +281,17 @@ macosx64-tests:
     - mochitest-devtools-chrome
     - mochitest-gpu
     - mochitest-media
     - mochitest-webgl1-core
     - mochitest-webgl1-ext
     - mochitest-webgl2-core
     # - mochitest-webgl2-ext test timeouts
     - reftest
+    - reftest-chrome
     - test-verify
     - test-verify-gpu
     - test-verify-wpt
     - web-platform-tests
     - web-platform-tests-reftests
     - web-platform-tests-wdspec
     - xpcshell
 
@@ -306,16 +311,17 @@ macosx64-talos:
     - talos-perf-reftest-singletons
     - talos-tp6-stylo-threads
     # - talos-tps # Bug 1453007 times out
     # - talos-h1 # too long to unpack profile- Bug 1442893
 
 macosx64-qr-tests:
     - crashtest
     - reftest
+    - reftest-chrome
 
 linux32-tests:
     - cppunit
     - crashtest
     - firefox-ui-functional-local
     - firefox-ui-functional-remote
     - gtest
     - jittest
@@ -325,16 +331,17 @@ linux32-tests:
     - mochitest-a11y
     - mochitest-browser-chrome
     - mochitest-chrome
     - mochitest-clipboard
     - mochitest-gpu
     - mochitest-media
     - mochitest-webgl1-core
     - reftest
+    - reftest-chrome
     - reftest-no-accel
     - web-platform-tests
     - web-platform-tests-reftests
     - web-platform-tests-wdspec
     - xpcshell
 
 linux32-opt-tests:
     # mochitest-dt is too slow on linux32/debug
diff --git a/taskcluster/taskgraph/try_option_syntax.py b/taskcluster/taskgraph/try_option_syntax.py
--- a/taskcluster/taskgraph/try_option_syntax.py
+++ b/taskcluster/taskgraph/try_option_syntax.py
@@ -93,16 +93,17 @@ UNITTEST_ALIASES = {
     'mochitest-media': alias_prefix('mochitest-media'),
     'mochitest-media-e10s': alias_prefix('mochitest-media-e10s'),
     'mochitest-vg': alias_prefix('mochitest-valgrind'),
     'reftest': alias_matches(r'^(plain-)?reftest.*$'),
     'reftest-no-accel': alias_matches(r'^(plain-)?reftest-no-accel.*$'),
     'reftests': alias_matches(r'^(plain-)?reftest.*$'),
     'reftests-e10s': alias_matches(r'^(plain-)?reftest-e10s.*$'),
     'reftest-gpu': alias_matches(r'^(plain-)?reftest-gpu.*$'),
+    'reftest-chrome': alias_matches(r'^(plain-)?reftest-chrome.*$'),
     'robocop': alias_prefix('robocop'),
     'web-platform-test': alias_prefix('web-platform-tests'),
     'web-platform-tests': alias_prefix('web-platform-tests'),
     'web-platform-tests-e10s': alias_prefix('web-platform-tests-e10s'),
     'web-platform-tests-reftests': alias_prefix('web-platform-tests-reftests'),
     'web-platform-tests-reftests-e10s': alias_prefix('web-platform-tests-reftests-e10s'),
     'web-platform-tests-wdspec': alias_prefix('web-platform-tests-wdspec'),
     'web-platform-tests-wdspec-e10s': alias_prefix('web-platform-tests-wdspec-e10s'),
diff --git a/testing/mozharness/configs/unittests/linux_unittest.py b/testing/mozharness/configs/unittests/linux_unittest.py
--- a/testing/mozharness/configs/unittests/linux_unittest.py
+++ b/testing/mozharness/configs/unittests/linux_unittest.py
@@ -199,16 +199,20 @@ config = {
                         "--setpref=layers.acceleration.force-enabled=true"],
             "tests": ["tests/reftest/tests/layout/reftests/reftest.list"]
         },
         "reftest-no-accel": {
             "options": ["--suite=reftest",
                         "--setpref=layers.acceleration.disabled=true"],
             "tests": ["tests/reftest/tests/layout/reftests/reftest.list"]
         },
+        "reftest-chrome": {
+            'options': ["--suite=reftest-chrome"],
+            'tests': ["tests/reftest/tests/layout/reftests/reftest-chrome.list"]
+        },
     },
     "all_xpcshell_suites": {
         "xpcshell": {
             "options": ["--xpcshell=%(abs_app_dir)s/" + XPCSHELL_NAME,
                         "--manifest=tests/xpcshell/tests/xpcshell.ini"],
             "tests": []
         },
         "xpcshell-addons": {
diff --git a/testing/mozharness/configs/unittests/mac_unittest.py b/testing/mozharness/configs/unittests/mac_unittest.py
--- a/testing/mozharness/configs/unittests/mac_unittest.py
+++ b/testing/mozharness/configs/unittests/mac_unittest.py
@@ -156,16 +156,20 @@ config = {
             'options':["--extra-profile-file=tests/jsreftest/tests/user.js",
                        "--suite=jstestbrowser"],
             'tests': ["tests/jsreftest/tests/jstests.list"]
         },
         "reftest": {
             'options': ["--suite=reftest"],
             'tests': ["tests/reftest/tests/layout/reftests/reftest.list"]
         },
+        "reftest-chrome": {
+            'options': ["--suite=reftest-chrome"],
+            'tests': ["tests/reftest/tests/layout/reftests/reftest-chrome.list"]
+        },
     },
     "all_xpcshell_suites": {
         "xpcshell": {
             'options': ["--xpcshell=%(abs_app_dir)s/" + XPCSHELL_NAME,
                         "--manifest=tests/xpcshell/tests/xpcshell.ini"],
             'tests': []
         },
         "xpcshell-addons": {
diff --git a/testing/mozharness/configs/unittests/win_taskcluster_unittest.py b/testing/mozharness/configs/unittests/win_taskcluster_unittest.py
--- a/testing/mozharness/configs/unittests/win_taskcluster_unittest.py
+++ b/testing/mozharness/configs/unittests/win_taskcluster_unittest.py
@@ -184,16 +184,20 @@ config = {
             'options': ["--suite=reftest"],
             'tests': ["tests/reftest/tests/layout/reftests/reftest.list"]
         },
         "reftest-gpu": {
             'options': ["--suite=reftest",
                         "--setpref=layers.gpu-process.force-enabled=true"],
             'tests': ["tests/reftest/tests/layout/reftests/reftest.list"]
         },
+        "reftest-chrome": {
+            'options': ["--suite=reftest-chrome"],
+            'tests': ["tests/reftest/tests/layout/reftests/reftest-chrome.list"]
+        },
         "reftest-no-accel": {
             "options": ["--suite=reftest",
                         "--setpref=layers.acceleration.disabled=true"],
             "tests": ["tests/reftest/tests/layout/reftests/reftest.list"]
         },
     },
     "all_xpcshell_suites": {
         "xpcshell": {
diff --git a/testing/mozharness/configs/unittests/win_unittest.py b/testing/mozharness/configs/unittests/win_unittest.py
--- a/testing/mozharness/configs/unittests/win_unittest.py
+++ b/testing/mozharness/configs/unittests/win_unittest.py
@@ -182,16 +182,20 @@ config = {
                         "--setpref=layers.acceleration.disabled=true"],
             "tests": ["tests/reftest/tests/layout/reftests/reftest.list"]
         },
         "reftest-qr": {
             "options": ["--suite=reftest",
                         "--setpref=gfx.webrender.enabled=true"],
             "tests": ["tests/reftest/tests/layout/reftests/reftest.list"]
         },
+        "reftest-chrome": {
+            'options': ["--suite=reftest-chrome"],
+            'tests': ["tests/reftest/tests/layout/reftests/reftest-chrome.list"]
+        },
     },
     "all_xpcshell_suites": {
         "xpcshell": {
             'options': ["--xpcshell=%(abs_app_dir)s/" + XPCSHELL_NAME,
                         "--manifest=tests/xpcshell/tests/xpcshell.ini"],
             'tests': []
         },
         "xpcshell-addons": {
diff --git a/testing/mozharness/mach_commands.py b/testing/mozharness/mach_commands.py
--- a/testing/mozharness/mach_commands.py
+++ b/testing/mozharness/mach_commands.py
@@ -87,16 +87,21 @@ class MozharnessRunner(MozbuildObject):
                 "config": desktop_unittest_config + [
                     "--reftest-suite", "jsreftest"]
             },
             "reftest": {
                 "script": "desktop_unittest.py",
                 "config": desktop_unittest_config + [
                     "--reftest-suite", "reftest"]
             },
+            "reftest-chrome": {
+                "script": "desktop_unittest.py",
+                "config": desktop_unittest_config + [
+                    "--reftest-suite", "reftest-chrome"]
+            },
             "reftest-no-accel": {
                 "script": "desktop_unittest.py",
                 "config": desktop_unittest_config + [
                     "--reftest-suite", "reftest-no-accel"]
             },
             "cppunittest": {
                 "script": "desktop_unittest.py",
                 "config": desktop_unittest_config + [
diff --git a/testing/mozharness/mozharness/mozilla/testing/per_test_base.py b/testing/mozharness/mozharness/mozilla/testing/per_test_base.py
--- a/testing/mozharness/mozharness/mozilla/testing/per_test_base.py
+++ b/testing/mozharness/mozharness/mozilla/testing/per_test_base.py
@@ -70,16 +70,18 @@ class SingleTestMixin(FetchesMixin):
                 self.info("Per-test run updated with manifest %s (%d active, %d skipped)" %
                           (path, len(new_by_path), len(disabled)))
 
         ref_manifests = [
             (os.path.join(dirs['abs_reftest_dir'], 'tests', 'layout',
                           'reftests', 'reftest.list'), 'reftest', 'gpu'),  # gpu
             (os.path.join(dirs['abs_reftest_dir'], 'tests', 'testing',
                           'crashtest', 'crashtests.list'), 'crashtest', None),
+            (os.path.join(dirs['abs_reftest_dir'], 'tests', 'testing',
+                          'reftests', 'reftest-chrome.list'), 'reftest-chrome', None),
         ]
         sys.path.append(dirs['abs_reftest_dir'])
         import manifest
         self.reftest_test_dir = os.path.join(dirs['abs_reftest_dir'], 'tests')
         for (path, suite, subsuite) in ref_manifests:
             if os.path.exists(path):
                 man = manifest.ReftestManifest()
                 man.load(path)
diff --git a/testing/mozharness/scripts/desktop_unittest.py b/testing/mozharness/scripts/desktop_unittest.py
--- a/testing/mozharness/scripts/desktop_unittest.py
+++ b/testing/mozharness/scripts/desktop_unittest.py
@@ -58,17 +58,17 @@ class DesktopUnittest(TestingMixin, Merc
                     "Examples: 'all', 'plain1', 'plain5', 'chrome', or 'a11y'"}
          ],
         [['--reftest-suite', ], {
             "action": "extend",
             "dest": "specified_reftest_suites",
             "type": "string",
             "help": "Specify which reftest suite to run. "
                     "Suites are defined in the config file.\n"
-                    "Examples: 'all', 'crashplan', or 'jsreftest'"}
+                    "Examples: 'all', 'crashplan', 'jsreftest', or 'reftest-chrome'"}
          ],
         [['--xpcshell-suite', ], {
             "action": "extend",
             "dest": "specified_xpcshell_suites",
             "type": "string",
             "help": "Specify which xpcshell suite to run. "
                     "Suites are defined in the config file\n."
                     "Examples: 'xpcshell'"}
@@ -506,16 +506,17 @@ class DesktopUnittest(TestingMixin, Merc
     def _query_try_flavor(self, category, suite):
         flavors = {
             "mochitest": [("plain.*", "mochitest"),
                           ("browser-chrome.*", "browser-chrome"),
                           ("mochitest-devtools-chrome.*", "devtools-chrome"),
                           ("chrome", "chrome")],
             "xpcshell": [("xpcshell", "xpcshell")],
             "reftest": [("reftest", "reftest"),
+                        ("reftest-chrome", "reftest-chrome"),
                         ("crashtest", "crashtest")]
         }
         for suite_pattern, flavor in flavors.get(category, []):
             if re.compile(suite_pattern).match(suite):
                 return flavor
 
     def structured_output(self, suite_category, flavor=None):
         unstructured_flavors = self.config.get('unstructured_flavors')
diff --git a/testing/testsuite-targets.mk b/testing/testsuite-targets.mk
--- a/testing/testsuite-targets.mk
+++ b/testing/testsuite-targets.mk
@@ -47,16 +47,21 @@ OOP_CONTENT = --setpref=layers.async-pan
 GPU_RENDERING = --setpref=layers.acceleration.force-enabled=true
 endif #}
 
 reftest: TEST_PATH?=layout/reftests/reftest.list
 reftest:
 	$(call RUN_REFTEST,'$(topsrcdir)/$(TEST_PATH)')
 	$(CHECK_TEST_ERROR)
 
+reftest-chrome: TEST_PATH?=layout/reftests/reftest-chrome.list
+reftest-chrome:
+	$(call RUN_REFTEST,'$(topsrcdir)/$(TEST_PATH)')
+	$(CHECK_TEST_ERROR)
+
 reftest-remote: TEST_PATH?=layout/reftests/reftest.list
 reftest-remote:
 	@if [ '${MOZ_HOST_BIN}' = '' ]; then \
         echo 'environment variable MOZ_HOST_BIN must be set to a directory containing host xpcshell'; \
     elif [ ! -d ${MOZ_HOST_BIN} ]; then \
         echo 'MOZ_HOST_BIN does not specify a directory'; \
     elif [ ! -f ${MOZ_HOST_BIN}/xpcshell ]; then \
         echo 'xpcshell not found in MOZ_HOST_BIN'; \
diff --git a/toolkit/themes/osx/reftests/reftest.list b/toolkit/themes/osx/reftests/reftest-chrome.list
rename from toolkit/themes/osx/reftests/reftest.list
rename to toolkit/themes/osx/reftests/reftest-chrome.list
