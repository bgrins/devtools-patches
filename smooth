# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  9f55d547e196a6945636405c2b33afc87dd501ee
Bug 1607181 - eagerly set [smoothscroll] on arrowscrollbox instead of waiting for the getter to be called;r=dao

The XBL implementation set the attribute in the constructor if it wasn't already:
- https://hg.mozilla.org/mozilla-central/file/94eaa02e0ea1725512893cd5139b1d200fcf4fdd/toolkit/content/widgets/scrollbox.xml#l34.

In the Custom Element conversion this check was moved into the getter, which isn't called until a scrollbutton is clicked,
which meant that we'd get non-smooth scrolling if just mousewheeling the button. I can't find any reason for intentionally
changing that in the bug or review, so I think it was just an oversight.

diff --git a/toolkit/content/widgets/arrowscrollbox.js b/toolkit/content/widgets/arrowscrollbox.js
--- a/toolkit/content/widgets/arrowscrollbox.js
+++ b/toolkit/content/widgets/arrowscrollbox.js
@@ -130,16 +130,23 @@
     }
 
     connectedCallback() {
       if (this.hasConnected) {
         return;
       }
       this.hasConnected = true;
 
+      if (!this.hasAttribute("smoothscroll")) {
+        this.smoothScroll = Services.prefs.getBoolPref(
+          "toolkit.scrollbox.smoothScroll",
+          true
+        );
+      }
+
       this.setAttribute("notoverflowing", "true");
       this.initializeAttributeInheritance();
       this._updateScrollButtonsDisabledState();
     }
 
     get fragment() {
       if (!this.constructor.hasOwnProperty("_fragment")) {
         this.constructor._fragment = MozXULElement.parseXULToFragment(
@@ -176,23 +183,16 @@
     }
 
     set smoothScroll(val) {
       this.setAttribute("smoothscroll", !!val);
       return val;
     }
 
     get smoothScroll() {
-      if (!this.hasAttribute("smoothscroll")) {
-        this.smoothScroll = Services.prefs.getBoolPref(
-          "toolkit.scrollbox.smoothScroll",
-          true
-        );
-      }
-
       return this.getAttribute("smoothscroll") == "true";
     }
 
     get scrollClientRect() {
       return this.scrollbox.getBoundingClientRect();
     }
 
     get scrollClientSize() {
