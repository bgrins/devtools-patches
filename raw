diff -r c2be347c5778 -r 51006c062dd1 browser/devtools/markupview/markup-view.js
--- a/browser/devtools/markupview/markup-view.js	Fri Apr 17 11:15:16 2015 +0200
+++ b/browser/devtools/markupview/markup-view.js	Mon Apr 20 14:50:09 2015 +0200
@@ -1824,16 +1824,17 @@ MarkupContainer.prototype = {
       return;
     }
 
     // target is the MarkupContainer itself.
     this._isMouseDown = true;
     this.hovered = false;
     this.markup.navigate(this);
     event.stopPropagation();
+    event.preventDefault();
 
     // Start dragging the container after a delay.
     this.markup._dragStartEl = target;
     setTimeout(() => {
       // Make sure the mouse is still down and on target.
       if (!this._isMouseDown || this.markup._dragStartEl !== target ||
           this.node.isPseudoElement || this.node.isAnonymous ||
           !this.win.getSelection().isCollapsed) {
diff -r c2be347c5778 -r 51006c062dd1 browser/devtools/markupview/test/browser.ini
--- a/browser/devtools/markupview/test/browser.ini	Fri Apr 17 11:15:16 2015 +0200
+++ b/browser/devtools/markupview/test/browser.ini	Mon Apr 20 14:50:09 2015 +0200
@@ -69,16 +69,17 @@ skip-if = e10s # Bug 1040751 - CodeMirro
 [browser_markupview_events_jquery_2.1.1.js]
 skip-if = e10s # Bug 1040751 - CodeMirror editor.destroy() isn't e10s compatible
 [browser_markupview_html_edit_01.js]
 [browser_markupview_html_edit_02.js]
 [browser_markupview_html_edit_03.js]
 [browser_markupview_image_tooltip.js]
 [browser_markupview_keybindings_01.js]
 [browser_markupview_keybindings_02.js]
+[browser_markupview_keybindings_03.js]
 [browser_markupview_mutation_01.js]
 [browser_markupview_mutation_02.js]
 [browser_markupview_navigation.js]
 [browser_markupview_node_not_displayed_01.js]
 [browser_markupview_node_not_displayed_02.js]
 [browser_markupview_pagesize_01.js]
 [browser_markupview_pagesize_02.js]
 [browser_markupview_remove_xul_attributes.js]
diff -r c2be347c5778 -r 51006c062dd1 browser/devtools/markupview/test/browser_markupview_keybindings_03.js
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/browser/devtools/markupview/test/browser_markupview_keybindings_03.js	Mon Apr 20 14:50:09 2015 +0200
@@ -0,0 +1,34 @@
+/* vim: set ts=2 et sw=2 tw=80: */
+/* Any copyright is dedicated to the Public Domain.
+ http://creativecommons.org/publicdomain/zero/1.0/ */
+
+"use strict";
+
+// Tests that selecting a node with the mouse (by clicking on the line) focuses
+// the first focusable element in the corresponding MarkupContainer so that the
+// keyboard can be used immediately.
+
+const TEST_URL = "data:text/html;charset=utf8,<div></div>Text node";
+
+add_task(function*() {
+  let {inspector, toolbox} = yield addTab(TEST_URL).then(openInspector);
+  let {walker} = inspector;
+
+  info("Select the test node to have the 2 test containers visible");
+  yield selectNode("div", inspector);
+
+  let divFront = yield walker.querySelector(walker.rootNode, "div");
+  let textFront = yield walker.nextSibling(divFront);
+
+  info("Click on the MarkupContainer element for the text node");
+  yield clickContainer(textFront, inspector);
+  is(inspector.markup.doc.activeElement,
+     getContainerForNodeFront(textFront, inspector).editor.value,
+     "The currently focused element is the node's text content");
+
+  info("Click on the MarkupContainer element for the <div> node");
+  yield clickContainer(divFront, inspector);
+  is(inspector.markup.doc.activeElement,
+     getContainerForNodeFront(divFront, inspector).editor.tag,
+     "The currently focused element is the div's tagname");
+});
