diff -r 6f32209af61a -r f9c3d39bc84e browser/devtools/framework/toolbox-highlighter-utils.js
--- a/browser/devtools/framework/toolbox-highlighter-utils.js	Fri Apr 10 12:56:20 2015 +0100
+++ b/browser/devtools/framework/toolbox-highlighter-utils.js	Fri Apr 10 15:52:36 2015 +0200
@@ -176,20 +176,22 @@ exports.getHighlighterUtils = function(t
    * @param {Object} data Information about the picked node
    */
   function onPickerNodePicked(data) {
     toolbox.selection.setNodeFront(data.node, "picker-node-picked");
     stopPicker();
   }
 
   /**
-   * When the picker is canceled
+   * When the picker is canceled, stop the picker, and make sure the toolbox
+   * gets the focus.
    */
   function onPickerNodeCanceled() {
     stopPicker();
+    toolbox.frame.focus();
   }
 
   /**
    * Show the box model highlighter on a node in the content page.
    * The node needs to be a NodeFront, as defined by the inspector actor
    * @see toolkit/devtools/server/actors/inspector.js
    * @param {NodeFront} nodeFront The node to highlight
    * @param {Object} options
diff -r 6f32209af61a -r f9c3d39bc84e browser/devtools/inspector/test/browser.ini
--- a/browser/devtools/inspector/test/browser.ini	Fri Apr 10 12:56:20 2015 +0100
+++ b/browser/devtools/inspector/test/browser.ini	Fri Apr 10 15:52:36 2015 +0200
@@ -52,16 +52,17 @@ skip-if = e10s # GCLI isn't e10s compati
 [browser_inspector_highlighter-hover_01.js]
 [browser_inspector_highlighter-hover_02.js]
 [browser_inspector_highlighter-hover_03.js]
 [browser_inspector_highlighter-iframes.js]
 [browser_inspector_highlighter-inline.js]
 [browser_inspector_highlighter-keybinding_01.js]
 [browser_inspector_highlighter-keybinding_02.js]
 [browser_inspector_highlighter-keybinding_03.js]
+[browser_inspector_highlighter-keybinding_04.js]
 [browser_inspector_highlighter-options.js]
 [browser_inspector_highlighter-rect_01.js]
 [browser_inspector_highlighter-rect_02.js]
 [browser_inspector_highlighter-rulers_01.js]
 [browser_inspector_highlighter-rulers_02.js]
 [browser_inspector_highlighter-selector_01.js]
 [browser_inspector_highlighter-selector_02.js]
 [browser_inspector_highlighter-zoom.js]
diff -r 6f32209af61a -r f9c3d39bc84e browser/devtools/inspector/test/browser_inspector_highlighter-keybinding_04.js
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/browser/devtools/inspector/test/browser_inspector_highlighter-keybinding_04.js	Fri Apr 10 15:52:36 2015 +0200
@@ -0,0 +1,43 @@
+/* vim: set ts=2 et sw=2 tw=80: */
+/* Any copyright is dedicated to the Public Domain.
+ http://creativecommons.org/publicdomain/zero/1.0/ */
+
+"use strict";
+
+// Tests that pressing ESC twice while in picker mode first stops the picker and
+// then opens the split-console (see bug 988278).
+
+const TEST_URL = "data:text/html;charset=utf8,<div></div>";
+
+add_task(function*() {
+  let {inspector, toolbox} = yield openInspectorForURL(TEST_URL);
+
+  info("Start the element picker");
+  yield toolbox.highlighterUtils.startPicker();
+
+  info("Start using the picker by hovering over nodes");
+  let onHover = toolbox.once("picker-node-hovered");
+  executeInContent("Test:SynthesizeMouse", {
+    options: {type: "mousemove"},
+    center: true,
+    selector: "div"
+  }, null, false);
+  yield onHover;
+
+  info("Press escape and wait for the picker to stop");
+  let onPickerStopped = toolbox.once("picker-stopped");
+  executeInContent("Test:SynthesizeKey", {
+    key: "VK_ESCAPE",
+    options: {}
+  }, null, false);
+  yield onPickerStopped;
+
+  info("Press escape again and wait for the split console to open");
+  let onSplitConsole = toolbox.once("split-console");
+  executeInContent("Test:SynthesizeKey", {
+    key: "VK_ESCAPE",
+    options: {}
+  }, null, false);
+  yield onSplitConsole;
+  ok(toolbox.splitConsole, "The split console is shown.");
+});
diff -r 6f32209af61a -r f9c3d39bc84e browser/devtools/markupview/test/browser.ini
--- a/browser/devtools/markupview/test/browser.ini	Fri Apr 10 12:56:20 2015 +0100
+++ b/browser/devtools/markupview/test/browser.ini	Fri Apr 10 15:52:36 2015 +0200
@@ -68,16 +68,17 @@ skip-if = e10s # Bug 1040751 - CodeMirro
 skip-if = e10s # Bug 1040751 - CodeMirror editor.destroy() isn't e10s compatible
 [browser_markupview_events_jquery_2.1.1.js]
 skip-if = e10s # Bug 1040751 - CodeMirror editor.destroy() isn't e10s compatible
 [browser_markupview_html_edit_01.js]
 [browser_markupview_html_edit_02.js]
 [browser_markupview_html_edit_03.js]
 [browser_markupview_image_tooltip.js]
 [browser_markupview_keybindings_01.js]
+[browser_markupview_keybindings_02.js]
 [browser_markupview_mutation_01.js]
 [browser_markupview_mutation_02.js]
 [browser_markupview_navigation.js]
 [browser_markupview_node_not_displayed_01.js]
 [browser_markupview_node_not_displayed_02.js]
 [browser_markupview_pagesize_01.js]
 [browser_markupview_pagesize_02.js]
 [browser_markupview_remove_xul_attributes.js]
diff -r 6f32209af61a -r f9c3d39bc84e browser/devtools/markupview/test/browser_markupview_keybindings_02.js
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/browser/devtools/markupview/test/browser_markupview_keybindings_02.js	Fri Apr 10 15:52:36 2015 +0200
@@ -0,0 +1,30 @@
+/* vim: set ts=2 et sw=2 tw=80: */
+/* Any copyright is dedicated to the Public Domain.
+ http://creativecommons.org/publicdomain/zero/1.0/ */
+
+"use strict";
+
+// Tests that pressing ESC when a node in the markup-view is focused toggles
+// the split-console (see bug 988278)
+
+const TEST_URL = "data:text/html;charset=utf8,<div></div>";
+
+add_task(function*() {
+  let {inspector, toolbox} = yield addTab(TEST_URL).then(openInspector);
+
+  info("Focusing the tag editor of the test element");
+  let {editor} = yield getContainerForSelector("div", inspector);
+  editor.tag.focus();
+
+  info("Pressing ESC and wait for the split-console to open");
+  let onSplitConsole = toolbox.once("split-console");
+  EventUtils.synthesizeKey("VK_ESCAPE", {}, inspector.panelWin);
+  yield onSplitConsole;
+  ok(toolbox.splitConsole, "The split console is shown.");
+
+  info("Pressing ESC again and wait for the split-console to close");
+  onSplitConsole = toolbox.once("split-console");
+  EventUtils.synthesizeKey("VK_ESCAPE", {}, inspector.panelWin);
+  yield onSplitConsole;
+  ok(!toolbox.splitConsole, "The split console is hidden.");
+});
diff -r 6f32209af61a -r f9c3d39bc84e browser/devtools/shared/widgets/Tooltip.js
--- a/browser/devtools/shared/widgets/Tooltip.js	Fri Apr 10 12:56:20 2015 +0100
+++ b/browser/devtools/shared/widgets/Tooltip.js	Fri Apr 10 15:52:36 2015 +0200
@@ -207,17 +207,18 @@ function Tooltip(doc, options) {
   // Listen to keypress events to close the tooltip if configured to do so
   let win = this.doc.querySelector("window");
   this._onKeyPress = event => {
     if (this.panel.hidden) {
       return;
     }
 
     this.emit("keypress", event.keyCode);
-    if (this.options.get("closeOnKeys").indexOf(event.keyCode) !== -1) {
+    if (this.options.get("closeOnKeys").indexOf(event.keyCode) !== -1 &&
+        this.isShown()) {
       event.stopPropagation();
       this.hide();
     }
   };
   win.addEventListener("keypress", this._onKeyPress, false);
 
   // Listen to custom emitters' events to close the tooltip
   this.hide = this.hide.bind(this);
