diff --git a/browser/components/customizableui/CustomizableWidgets.jsm b/browser/components/customizableui/CustomizableWidgets.jsm
--- a/browser/components/customizableui/CustomizableWidgets.jsm
+++ b/browser/components/customizableui/CustomizableWidgets.jsm
@@ -133,16 +133,17 @@ function fillSubviewFromMenuItems(aMenuI
       subviewItem.classList.add("subviewbutton");
     }
     fragment.appendChild(subviewItem);
   }
   aSubview.appendChild(fragment);
 }
 
 function clearSubview(aSubview) {
+  return;
   let parent = aSubview.parentNode;
   // We'll take the container out of the document before cleaning it out
   // to avoid reflowing each time we remove something.
   parent.removeChild(aSubview);
 
   while (aSubview.firstChild) {
     aSubview.firstChild.remove();
   }
@@ -155,16 +156,17 @@ const CustomizableWidgets = [
     id: "history-panelmenu",
     type: "view",
     viewId: "PanelUI-history",
     shortcutId: "key_gotoHistory",
     tooltiptext: "history-panelmenu.tooltiptext2",
     defaultArea: CustomizableUI.AREA_PANEL,
     onViewShowing: function(aEvent) {
       // Populate our list of history
+      return;
       const kMaxResults = 15;
       let doc = aEvent.detail.ownerDocument;
       let win = doc.defaultView;
 
       let options = PlacesUtils.history.getNewQueryOptions();
       options.excludeQueries = true;
       options.includeHidden = false;
       options.resultType = options.RESULTS_AS_URI;
@@ -339,33 +341,38 @@ const CustomizableWidgets = [
     }
   }, {
     id: "developer-button",
     type: "view",
     viewId: "PanelUI-developer",
     shortcutId: "key_devToolboxMenuItem",
     tooltiptext: "developer-button.tooltiptext2",
     defaultArea: CustomizableUI.AREA_PANEL,
+    _dontFill: false,
     onViewShowing: function(aEvent) {
+      // if (this._dontFill) return;
+      this._dontFill = true;
       // Populate the subview with whatever menuitems are in the developer
       // menu. We skip menu elements, because the menu panel has no way
       // of dealing with those right now.
       let doc = aEvent.target.ownerDocument;
       let win = doc.defaultView;
 
       let menu = doc.getElementById("menuWebDeveloperPopup");
-
       let itemsToDisplay = [...menu.children];
+const {console} = Cu.import("resource://gre/modules/devtools/Console.jsm", {});
+console.log("FOO", itemsToDisplay);
       // Hardcode the addition of the "work offline" menuitem at the bottom:
       itemsToDisplay.push({localName: "menuseparator", getAttribute: () => {}});
       itemsToDisplay.push(doc.getElementById("goOfflineMenuitem"));
       fillSubviewFromMenuItems(itemsToDisplay, doc.getElementById("PanelUI-developerItems"));
 
     },
     onViewHiding: function(aEvent) {
+      return;
       let doc = aEvent.target.ownerDocument;
       clearSubview(doc.getElementById("PanelUI-developerItems"));
     }
   }, {
     id: "sidebar-button",
     type: "view",
     viewId: "PanelUI-sidebar",
     tooltiptext: "sidebar-button.tooltiptext2",
diff --git a/browser/themes/shared/customizableui/panelUIOverlay.inc.css b/browser/themes/shared/customizableui/panelUIOverlay.inc.css
--- a/browser/themes/shared/customizableui/panelUIOverlay.inc.css
+++ b/browser/themes/shared/customizableui/panelUIOverlay.inc.css
@@ -691,16 +691,17 @@ panelview .toolbarbutton-1,
 
 .subviewbutton.panel-subview-footer > .menu-text {
   -moz-appearance: none;
   -moz-margin-start: 0px !important;
   -moz-padding-start: 6px;
   -moz-padding-end: 6px;
   -moz-box-flex: 0;
   text-align: center;
+  color: orange !important;
 }
 
 .subviewbutton.panel-subview-footer > .toolbarbutton-icon {
   margin: 0;
 }
 
 .subviewbutton.panel-subview-footer > .toolbarbutton-text {
   text-align: center;
@@ -709,16 +710,21 @@ panelview .toolbarbutton-1,
 
 .subviewbutton.panel-subview-footer > .menu-accel-container {
   -moz-padding-start: 6px;
 }
 
 .subviewbutton:not(.panel-subview-footer) {
   margin: 0;
 }
+/*
+.toolbarbutton-text*/
+.PanelUI-subView .subviewbutton > .toolbarbutton-text {
+  color: inherit !important;
+}
 
 .subviewbutton:not(.panel-subview-footer) > .toolbarbutton-text,
 /* Bookmark items need a more specific selector. */
 .PanelUI-subView .subviewbutton:not(.panel-subview-footer) > .menu-text,
 .PanelUI-subView .subviewbutton:not(.panel-subview-footer) > .menu-iconic-text {
   font: menu;
 }
 
diff --git a/browser/themes/shared/devedition.inc.css b/browser/themes/shared/devedition.inc.css
--- a/browser/themes/shared/devedition.inc.css
+++ b/browser/themes/shared/devedition.inc.css
@@ -65,16 +65,20 @@
   --searchbar-dropmarker-2x-url: url("chrome://browser/skin/devtools/dropmarker.svg");
 
   /* Use a single border to separate the panel ui button from the rest of the toolbar */
   --panel-ui-button-background-image: linear-gradient(to bottom, #5E6670, #5E6670);
   --panel-ui-button-background-size: 1px calc(100% - 1px);
   --panel-ui-button-background-position: 0px 0px;
 }
 
+.subviewbutton {
+  /*-moz-appearance: none !important;*/
+  /*color: red !important;*/
+}
 /* Only target content actually inside a panel to avoid
    styling panel-arrowcontent in customize mode */
 panel .panel-arrowcontent,
 menupopup .panel-arrowcontent {
   --panel-arrowcontent-background: #192126;
   --panel-arrowcontent-color: #8D9194;
   --panel-arrowcontent-border: 3px solid #434850;
   --panel-footer-background-color: #151A1E;
