# HG changeset patch
# User Paolo Amadini <paolo.mozmail@amadzone.org>
# Date 1527691368 -3600
#      Wed May 30 15:42:48 2018 +0100
# Node ID 1e51b6732cd707eb41ba399cc5a8672a0dfa4295
# Parent  4efd19ac076280abf1365b0bb7fd2018ce162b38
Bug 1465457 - Part 1 - Add a function to register chrome URL overrides in test harnesses.

MozReview-Commit-ID: IgLcidpoDfq

Differential Revision: https://phabricator.services.mozilla.com/D11572

diff --git a/chrome/nsChromeRegistry.cpp b/chrome/nsChromeRegistry.cpp
--- a/chrome/nsChromeRegistry.cpp
+++ b/chrome/nsChromeRegistry.cpp
@@ -301,16 +301,29 @@ nsChromeRegistry::ConvertChromeURL(nsIUR
     LogMessage("No chrome package registered for chrome://%s/%s/%s",
                package.get(), provider.get(), path.get());
     return NS_ERROR_FILE_NOT_FOUND;
   }
 
   return NS_NewURI(aResult, path, nullptr, baseURI);
 }
 
+NS_IMETHODIMP
+nsChromeRegistry::RegisterChromeURLOverrideForTest(nsIURI* aChromeURI,
+                                                   nsIURI* aOverrideURI)
+{
+  if (NS_WARN_IF(!aChromeURI) || NS_WARN_IF(!aOverrideURI)) {
+    return NS_ERROR_INVALID_ARG;
+  }
+
+  mOverrideTable.Put(aChromeURI, aOverrideURI);
+
+  return NS_OK;
+}
+
 ////////////////////////////////////////////////////////////////////////
 
 // theme stuff
 
 
 static void FlushSkinBindingsForWindow(nsPIDOMWindowOuter* aWindow)
 {
   // Get the document.
diff --git a/chrome/nsChromeRegistry.h b/chrome/nsChromeRegistry.h
--- a/chrome/nsChromeRegistry.h
+++ b/chrome/nsChromeRegistry.h
@@ -45,16 +45,18 @@ public:
   NS_IMETHOD AllowContentToAccess(nsIURI* url,
                                   bool* _retval) override;
   NS_IMETHOD CanLoadURLRemotely(nsIURI* url,
                                 bool* _retval) override;
   NS_IMETHOD MustLoadURLRemotely(nsIURI* url,
                                  bool* _retval) override;
 
   NS_IMETHOD ConvertChromeURL(nsIURI* aChromeURI, nsIURI* *aResult) override;
+  NS_IMETHOD RegisterChromeURLOverrideForTest(nsIURI* aChromeURI,
+                                              nsIURI* aOverrideURI) override;
 
   // nsChromeRegistry methods:
   nsChromeRegistry() : mInitialized(false) { }
 
   virtual nsresult Init();
 
   static already_AddRefed<nsIChromeRegistry> GetService();
 
diff --git a/chrome/nsIChromeRegistry.idl b/chrome/nsIChromeRegistry.idl
--- a/chrome/nsIChromeRegistry.idl
+++ b/chrome/nsIChromeRegistry.idl
@@ -30,16 +30,31 @@ interface nsIChromeRegistry : nsISupport
    *   "css" for a "skin" package, and
    *   "dtd" for a "locale" package.
    *
    * @param aChromeURL the URL that is to be converted.
    */
   nsIURI convertChromeURL(in nsIURI aChromeURL);
 
   /**
+   * Registers an override. If convertChromeURL is then called with aChromeURL
+   * as the argument, aOverrideURL will be returned.
+   *
+   * This function should only be called in functional test harnesses, and not
+   * in production code, including non-test add-ons, because this may slow down
+   * the conversions, there is no way to unregister the overrides individually,
+   * and checkForNewChrome will clear the overrides added by this function.
+   *
+   * @param aChromeURL the URL that is to be converted.
+   * @param aOverrideURL the result of the conversion.
+   */
+  void registerChromeURLOverrideForTest(in nsIURI aChromeURL,
+                                        in nsIURI aOverrideURL);
+
+  /**
    * refresh the chrome list at runtime, looking for new packages/etc
    */
   void checkForNewChrome();
 };
 
 [scriptable, uuid(93251ddf-5e85-4172-ac2a-31780562974f)]
 interface nsIXULChromeRegistry : nsIChromeRegistry
 {
