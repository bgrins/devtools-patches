# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  5e024441510f6d2b460e570d0e6d2dee0dc89723
Bug 1246010 - Force a default width for sidebars even if no pref is set;r=pbrosset

diff --git a/devtools/client/framework/sidebar.js b/devtools/client/framework/sidebar.js
--- a/devtools/client/framework/sidebar.js
+++ b/devtools/client/framework/sidebar.js
@@ -9,16 +9,17 @@ const {Cu} = require("chrome");
 Cu.import("resource://gre/modules/XPCOMUtils.jsm");
 Cu.import("resource://gre/modules/Services.jsm");
 Cu.import("resource://gre/modules/Task.jsm");
 
 var EventEmitter = require("devtools/shared/event-emitter");
 var Telemetry = require("devtools/client/shared/telemetry");
 
 const XULNS = "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
+const DEFAULT_WIDTH = exports.DEFAULT_WIDTH = 400;
 
 /**
  * ToolSidebar provides methods to register tabs in the sidebar.
  * It's assumed that the sidebar contains a xul:tabbox.
  * Typically, you'll want the tabbox parameter to be a XUL tabbox like this:
  *
  * <tabbox id="inspector-sidebar" handleCtrlTab="false" class="devtools-sidebar-tabs">
  *   <tabs/>
@@ -67,17 +68,19 @@ function ToolSidebar(tabbox, panel, uid,
   this._toolPanel = panel;
   this._options = options;
 
   this._onTabBoxOverflow = this._onTabBoxOverflow.bind(this);
   this._onTabBoxUnderflow = this._onTabBoxUnderflow.bind(this);
 
   try {
     this._width = Services.prefs.getIntPref("devtools.toolsidebar-width." + this._uid);
-  } catch(e) {}
+  } catch(e) {
+    this._width = DEFAULT_WIDTH;
+  }
 
   if (!options.disableTelemetry) {
     this._telemetry = new Telemetry();
   }
 
   this._tabbox.tabpanels.addEventListener("select", this, true);
 
   this._tabs = new Map();
diff --git a/devtools/client/framework/test/browser_toolbox_sidebar.js b/devtools/client/framework/test/browser_toolbox_sidebar.js
--- a/devtools/client/framework/test/browser_toolbox_sidebar.js
+++ b/devtools/client/framework/test/browser_toolbox_sidebar.js
@@ -1,14 +1,14 @@
 /* Any copyright is dedicated to the Public Domain.
  * http://creativecommons.org/publicdomain/zero/1.0/ */
 
 function test() {
   const Cu = Components.utils;
-  let {ToolSidebar} = require("devtools/client/framework/sidebar");
+  let {ToolSidebar,DEFAULT_WIDTH} = require("devtools/client/framework/sidebar");
 
   const toolURL = "data:text/xml;charset=utf8,<?xml version='1.0'?>" +
                   "<?xml-stylesheet href='chrome://devtools/skin/common.css' type='text/css'?>" +
                   "<window xmlns='http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul'>" +
                   "<hbox flex='1'><description flex='1'>foo</description><splitter class='devtools-side-splitter'/>" +
                   "<tabbox flex='1' id='sidebar' class='devtools-sidebar-tabs'><tabs/><tabpanels flex='1'/></tabbox>" +
                   "</hbox>" +
                   "</window>";
@@ -143,16 +143,17 @@ function test() {
       testWidth(panel);
     });
 
     panel.sidebar.removeTab("tab3");
   }
 
   function testWidth(panel) {
     let tabbox = panel.panelDoc.getElementById("sidebar");
+    is(tabbox.width, DEFAULT_WIDTH, "Default width was specified");
     tabbox.width = 420;
     panel.sidebar.destroy().then(function() {
       tabbox.width = 0;
       panel.sidebar = new ToolSidebar(tabbox, panel, "testbug865688", true);
       panel.sidebar.show();
       is(panel.panelDoc.getElementById("sidebar").width, 420, "Width restored")
 
       finishUp(panel);
