# HG changeset patch
# Parent a24e89b3b20615bf67acd1da276fe29cb73f3e72
# User Michael Ratcliffe <mratcliffe@mozilla.com>
# Date 1418901949 0

Bug 1049436 - Stop showing color swatch for CSS vars r=bgrins

diff --git a/browser/devtools/shared/test/browser_outputparser.js b/browser/devtools/shared/test/browser_outputparser.js
--- a/browser/devtools/shared/test/browser_outputparser.js
+++ b/browser/devtools/shared/test/browser_outputparser.js
@@ -49,16 +49,32 @@ function testParseCssProperty() {
   target.appendChild(frag);
   is(target.innerHTML,
      'linear-gradient(to right, <span data-color="#F60"><span style="background-color:#F60" class="test-colorswatch"></span><span class="test-color">#F60</span></span> 10%, ' +
      '<span data-color="#000"><span style="background-color:rgba(0,0,0,1)" class="test-colorswatch"></span><span class="test-color">#000</span></span>)',
      "Gradient CSS property correctly parsed");
 
   target.innerHTML = "";
 
+  testParseCssVar();
+}
+
+function testParseCssVar() {
+  let frag = parser.parseCssProperty("color", "var(--some-kind-of-green)", {
+    colorSwatchClass: "test-colorswatch"
+  });
+
+  let target = doc.querySelector("div");
+  ok(target, "captain, we have the div");
+  target.appendChild(frag);
+
+  is(target.innerHTML, "var(--some-kind-of-green)", "CSS property correctly parsed");
+
+  target.innerHTML = "";
+
   testParseHTMLAttribute();
 }
 
 function testParseHTMLAttribute() {
   let attrib = "color:red; font-size: 12px; background-image: " +
                "url(chrome://branding/content/about-logo.png)";
   let frag = parser.parseHTMLAttribute(attrib, {
     urlClass: "theme-link",
diff --git a/toolkit/devtools/output-parser.js b/toolkit/devtools/output-parser.js
--- a/toolkit/devtools/output-parser.js
+++ b/toolkit/devtools/output-parser.js
@@ -7,19 +7,19 @@
 const {Cc, Ci, Cu} = require("chrome");
 const {colorUtils} = require("devtools/css-color");
 const {Services} = Cu.import("resource://gre/modules/Services.jsm", {});
 
 const HTML_NS = "http://www.w3.org/1999/xhtml";
 
 const MAX_ITERATIONS = 100;
 const REGEX_QUOTES = /^".*?"|^".*|^'.*?'|^'.*/;
+const REGEX_CSS_VAR = /\bvar\(--[a-zA-Z-]+\)/;
 const REGEX_WHITESPACE = /^\s+/;
 const REGEX_FIRST_WORD_OR_CHAR = /^\w+|^./;
-const REGEX_CSS_PROPERTY_VALUE = /(^[^;]+)/;
 const REGEX_CUBIC_BEZIER = /^linear|^ease-in-out|^ease-in|^ease-out|^ease|^cubic-bezier\(([0-9.\- ]+,){3}[0-9.\- ]+\)/;
 
 /**
  * This regex matches:
  *  - #F00
  *  - #FF0000
  *  - hsl()
  *  - hsla()
@@ -183,16 +183,25 @@ OutputParser.prototype = {
       if (matched) {
         let match = matched[0];
 
         text = this._trimMatchFromStart(text, match);
         this._appendTextNode(match);
         continue;
       }
 
+      matched = text.match(REGEX_CSS_VAR);
+      if (matched) {
+        let match = matched[0];
+
+        text = this._trimMatchFromStart(text, match);
+        this._appendTextNode(match);
+        continue;
+      }
+
       matched = text.match(REGEX_WHITESPACE);
       if (matched) {
         let match = matched[0];
 
         text = this._trimMatchFromStart(text, match);
         this._appendTextNode(match);
         continue;
       }
