# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1553896109 25200
#      Fri Mar 29 14:48:29 2019 -0700
# Node ID 66f857239dba86cd20f1085b3ec1dc652304f680
# Parent  bdaf1b36c44275dd4f027b4a4c30afed86cdfe13
Bug 1540285 - Add a test generator script into `./mach addtest`

This also changes the template files in the following ways:
- removes the bug # boilerplate
- remove some unnecessary attributes in the template
- removes the th.template
- adds the browser.template for browser-chrome tests

Instead of:
perl gen_template.pl -b=123456 --type=plain > path/to/test_bug123456.html

You can do:
./mach addtest --suite="mochitest-plain" > path/to/test_bug123456.html

But you can also pass in a new file path and let it guess the suite/doc:
```
./mach addtest js/xpconnect/tests/chrome/test_chrome.html
./mach addtest js/xpconnect/tests/chrome/test_chrome.xhtml
./mach addtest js/xpconnect/tests/chrome/test_chrome.xul

./mach addtest js/xpconnect/tests/mochitest/test_plain.html
./mach addtest js/xpconnect/tests/mochitest/test_plain.xhtml
./mach addtest js/xpconnect/tests/mochitest/test_plain.xul

./mach addtest browser/base/content/test/alerts/browser_foo.js
```

Differential Revision: https://phabricator.services.mozilla.com/D25482

diff --git a/testing/mach_commands.py b/testing/mach_commands.py
--- a/testing/mach_commands.py
+++ b/testing/mach_commands.py
@@ -20,16 +20,17 @@ from mach.decorators import (
 )
 
 from mozbuild.base import (
     BuildEnvironmentNotFoundException,
     MachCommandBase,
     MachCommandConditions as conditions,
 )
 from moztest.resolve import TEST_SUITES
+import manifestparser
 
 UNKNOWN_TEST = '''
 I was unable to find tests from the given argument(s).
 
 You should specify a test directory, filename, test suite name, or
 abbreviation. If no arguments are given, there must be local file
 changes and corresponding IMPACTED_TESTS annotations in moz.build
 files relevant to those files.
@@ -79,16 +80,163 @@ def get_test_parser():
                         help="Extra arguments to pass to the underlying test command(s). "
                              "If an underlying command doesn't recognize the argument, it "
                              "will fail.")
     add_logging_group(parser)
     return parser
 
 
 @CommandProvider
+class AddTest(MachCommandBase):
+    @Command('addtest', category='testing',
+             description='Generate tests based on templates')
+    @CommandArgument('-s', '--suite',
+                     choices=['mochitest-plain', 'mochitest-chrome', 'mochitest-browser'],
+                     help='suite for the test (currently only mochitests are supported).'
+                          'If you pass a `test` argument this will be determined'
+                          'based on the filename and the folder it is in')
+    @CommandArgument('-d', '--doc',
+                     choices=['js', 'html', 'xhtml', 'xul'],
+                     help='Document type for the test (if applicable).'
+                          'If you pass a `test` argument this will be determined'
+                          'based on the filename.')
+    @CommandArgument('test',
+                     nargs='*',
+                     help=('Test to create.'))
+    def addtest(self, suite=None, doc=None, test=None):
+        # print (TEST_SUITES)
+
+        if test and test[0]:
+            guessed_doc, guessed_suite = self.guess_test(test[0])
+            if doc is None: doc = guessed_doc
+            if suite is None: suite = guessed_suite
+        else:
+            test = None
+            if doc is None: doc = "html"
+
+        if not suite:
+            print("Error: suite not specified, and couldn't be detected from the test path.")
+            return 1
+
+        if doc not in ['js', 'html', 'xhtml', 'xul']:
+            print("Error: invalid `doc`. Either pass in a test with a valid extension"
+                  "(js|html|xhtml|xul) or pass in the `doc` argument")
+            return 1
+
+        content = self.get_template_contents(suite, doc)
+
+        if content is None:
+            print("Error: no template file")
+            return 1
+
+        if (test):
+            print("Adding a test of suite `{}` and doc type `{}`".format(type, doc))
+            # write the test to a file and attempt to insert into the appropriate manifest
+            guessed_ini = "mochitest.ini" if suite == "plain" else "{}.ini".format(suite)
+            with open(test, "w") as f:
+                f.write(content)
+
+            manifest_file = os.path.join(os.path.dirname(test), guessed_ini)
+            filename = os.path.basename(test)
+
+            if os.path.isfile(manifest_file):
+                self.add_test_to_manifest(manifest_file, filename)
+            else:
+                print('Could not open manifest file {}'.format(manifest_file))
+
+            print('Please make sure to add the new test to your commit. '
+                  'You can now run the test with:\n    ./mach mochitest {}'.format(rel_test))
+        else:
+            # write to stdout if you passed only suite and doc and not a file path
+            print(content)
+        return 0
+
+    def guess_test(self, test_path):
+        # If you pass a filename, try to detect the type based on the name
+        # and folder. This detection can be skipped if you pass the `type` arg.
+        guessed_suite = None
+        rel_test = test_path
+        abs_test = os.path.abspath(test_path)
+        if os.path.isfile(abs_test):
+            print("Error: can't generate a test that already exists:", abs_test)
+            return 1
+
+        dir = os.path.dirname(abs_test)
+        filename = os.path.basename(abs_test)
+
+        guessed_doc = os.path.splitext(filename)[1].strip(".")
+
+        if filename.startswith("browser_"):
+            guessed_suite = "mochitest-browser"
+        elif filename.startswith("test_"):
+            is_chrome = os.path.isfile(os.path.join(dir, "chrome.ini"))
+            is_plain = os.path.isfile(os.path.join(dir, "mochitest.ini"))
+            if is_chrome and is_plain:
+                print("Error: directory contains both a chrome.ini and mochitest.ini. "
+                        "Please set `chrome` or `plain` with the --type argument.")
+                return 1
+            if is_chrome:
+                guessed_suite = "mochitest-chrome"
+            elif is_plain:
+                guessed_suite = "mochitest-plain"
+
+
+        return guessed_doc, guessed_suite
+
+    def add_test_to_manifest(self, manifest_file, filename):
+        # Insert a new test in the right place within a given manifest file
+        manifest = manifestparser.TestManifest(manifests=[manifest_file])
+        insert_before = None
+        for test in manifest.tests:
+            if test.get('name') > filename:
+                insert_before = test.get('name')
+                break
+
+        with open(manifest_file, "r") as f:
+            contents = f.readlines()
+
+        filename = '[{}]\n'.format(filename)
+
+        if not insert_before:
+            contents.append(filename)
+        else:
+            insert_before = '[{}]'.format(insert_before)
+            for i in range(len(contents)):
+                if contents[i].startswith(insert_before):
+                    contents.insert(i, filename)
+                    break
+
+        with open(manifest_file, "w") as f:
+            f.write("".join(contents))
+
+    def get_template_contents(self, type, doc):
+        mochitest_templates = os.path.abspath(
+            os.path.join(os.path.dirname(__file__), 'mochitest', 'static')
+        )
+        template_file_name = None
+        if type == "browser":
+            template_file_name = 'browser.template.txt'
+
+        if type == "plain":
+            template_file_name = 'plain{}.template.txt'.format(doc)
+
+        if type == "chrome":
+            template_file_name = 'chrome{}.template.txt'.format(doc)
+
+        if template_file_name is None:
+            return None
+
+        template_file = os.path.join(mochitest_templates, template_file_name)
+        if not os.path.isfile(template_file):
+            return None
+
+        with open(template_file) as f:
+            return f.read()
+
+
 class Test(MachCommandBase):
     @Command('test', category='testing',
              description='Run tests (detects the kind of test and runs it).',
              parser=get_test_parser)
     def test(self, what, extra_args, **log_args):
         """Run tests from names or paths.
 
         mach test accepts arguments specifying which tests to run. Each argument
diff --git a/testing/mochitest/gen_template.pl b/testing/mochitest/gen_template.pl
deleted file mode 100644
--- a/testing/mochitest/gen_template.pl
+++ /dev/null
@@ -1,42 +0,0 @@
-#!/usr/bin/perl
-
-# This script makes mochitest test case templates. See
-# https://developer.mozilla.org/en-US/docs/Mochitest#Test_templates
-#
-# It takes two arguments:
-#
-#   -b:     a bugnumber
-#   -type:  template type. One of {plain|xhtml|xul|th|chrome|chromexul}.
-#           Defaults to th (testharness.js).
-#
-# For example, this command:
-#
-#  perl gen_template.pl -b 345876 -type xul
-#
-# writes a XUL test case template for bug 345876 to stdout.
-
-use FindBin;
-use Getopt::Long;
-GetOptions("b=i"=> \$bug_number,
-           "type:s"=> \$template_type);
-
-if ($template_type eq "xul") {
-  $template_type = "$FindBin::RealBin/static/xul.template.txt";
-} elsif ($template_type eq "xhtml") {
-  $template_type = "$FindBin::RealBin/static/xhtml.template.txt";
-} elsif ($template_type eq "chrome") {
-  $template_type = "$FindBin::RealBin/static/chrome.template.txt";
-} elsif ($template_type eq "chromexul") {
-  $template_type = "$FindBin::RealBin/static/chromexul.template.txt";
-} elsif ($template_type eq "plain") {
-  $template_type = "$FindBin::RealBin/static/test.template.txt";
-} else {
-  $template_type = "$FindBin::RealBin/static/th.template.txt";
-}
-
-open(IN,$template_type) or die("Failed to open myfile for reading.");
-while((defined(IN)) && ($line = <IN>)) {
-        $line =~ s/{BUGNUMBER}/$bug_number/g;
-        print STDOUT $line;
-}
-close(IN);
diff --git a/testing/mochitest/moz.build b/testing/mochitest/moz.build
--- a/testing/mochitest/moz.build
+++ b/testing/mochitest/moz.build
@@ -99,17 +99,16 @@ TEST_HARNESS_FILES.testing.mochitest += 
     '/build/valgrind/x86_64-pc-linux-gnu.sup',
     '/netwerk/test/httpserver/httpd.js',
     'bisection.py',
     'browser-harness.xul',
     'browser-test.js',
     'chrome-harness.js',
     'chunkifyTests.js',
     'favicon.ico',
-    'gen_template.pl',
     'harness.xul',
     'leaks.py',
     'mach_test_package_commands.py',
     'manifest.webapp',
     'manifestLibrary.js',
     'mochitest_options.py',
     'nested_setup.js',
     'pywebsocket_wrapper.py',
diff --git a/testing/mochitest/static/browser.template.txt b/testing/mochitest/static/browser.template.txt
new file mode 100644
--- /dev/null
+++ b/testing/mochitest/static/browser.template.txt
@@ -0,0 +1,8 @@
+/* Any copyright is dedicated to the Public Domain.
+   http://creativecommons.org/publicdomain/zero/1.0/ */
+
+"use strict";
+
+add_task(async function test_TODO() {() {
+  ok(true, "TODO: implement the test");
+});
diff --git a/testing/mochitest/static/chrome.template.txt b/testing/mochitest/static/chromehtml.template.txt
rename from testing/mochitest/static/chrome.template.txt
rename to testing/mochitest/static/chromehtml.template.txt
--- a/testing/mochitest/static/chrome.template.txt
+++ b/testing/mochitest/static/chromehtml.template.txt
@@ -1,31 +1,23 @@
 <!DOCTYPE HTML>
 <html>
-<!--
-https://bugzilla.mozilla.org/show_bug.cgi?id={BUGNUMBER}
--->
 <head>
   <meta charset="utf-8">
-  <title>Test for Bug {BUGNUMBER}</title>
-  <script type="application/javascript" src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>
-  <link rel="stylesheet" type="text/css" href="chrome://global/skin"/>
+  <title><!-- TODO: insert title here --></title>
+  <script src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>
+  <script src="chrome://mochikit/content/tests/SimpleTest/AddTask.js"></script>
   <link rel="stylesheet" type="text/css" href="chrome://mochikit/content/tests/SimpleTest/test.css"/>
-  <script type="application/javascript">
-
-  /** Test for Bug {BUGNUMBER} **/
-
-
-
-
-
+  <script>
+    add_task(async function test_TODO() {
+      ok(true, "TODO: implement the test");
+    });
   </script>
 </head>
 <body>
-<a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id={BUGNUMBER}">Mozilla Bug {BUGNUMBER}</a>
 <p id="display"></p>
 <div id="content" style="display: none">
 
 </div>
 <pre id="test">
 </pre>
 </body>
 </html>
diff --git a/testing/mochitest/static/chromexhtml.template.txt b/testing/mochitest/static/chromexhtml.template.txt
new file mode 100644
--- /dev/null
+++ b/testing/mochitest/static/chromexhtml.template.txt
@@ -0,0 +1,23 @@
+<!DOCTYPE HTML>
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+  <meta charset="utf-8" />
+  <title><!-- TODO: insert title here --></title>
+  <script src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>
+  <script src="chrome://mochikit/content/tests/SimpleTest/AddTask.js"></script>
+  <link rel="stylesheet" type="text/css" href="chrome://mochikit/content/tests/SimpleTest/test.css"/>
+  <script><![CDATA[
+    add_task(async function test_TODO() {
+      ok(true, "TODO: implement the test");
+    });
+  ]]></script>
+</head>
+<body>
+<p id="display"></p>
+<div id="content" style="display: none">
+
+</div>
+<pre id="test">
+</pre>
+</body>
+</html>
diff --git a/testing/mochitest/static/chromexul.template.txt b/testing/mochitest/static/chromexul.template.txt
--- a/testing/mochitest/static/chromexul.template.txt
+++ b/testing/mochitest/static/chromexul.template.txt
@@ -1,26 +1,18 @@
 <?xml version="1.0"?>
 <?xml-stylesheet type="text/css" href="chrome://global/skin"?>
 <?xml-stylesheet type="text/css" href="chrome://mochikit/content/tests/SimpleTest/test.css"?>
-<!--
-https://bugzilla.mozilla.org/show_bug.cgi?id={BUGNUMBER}
--->
-<window title="Mozilla Bug {BUGNUMBER}"
+<window title="TODO: Insert title here"
         xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
-  <script type="application/javascript" src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"/>
+<script type="application/javascript"
+        src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js" />
+<script type="application/javascript"
+        src="chrome://mochikit/content/tests/SimpleTest/AddTask.js" />
+  <script type="application/javascript"><![CDATA[
+    add_task(async function test_TODO() {
+      ok(true, "TODO: implement the test");
+    });
+  ]]></script>
 
-  <!-- test results are displayed in the html:body -->
   <body xmlns="http://www.w3.org/1999/xhtml">
-  <a href="https://bugzilla.mozilla.org/show_bug.cgi?id={BUGNUMBER}"
-     target="_blank">Mozilla Bug {BUGNUMBER}</a>
   </body>
-
-  <!-- test code goes here -->
-  <script type="application/javascript">
-  <![CDATA[
-  /** Test for Bug {BUGNUMBER} **/
-
-
-
-  ]]>
-  </script>
 </window>
diff --git a/testing/mochitest/static/test.template.txt b/testing/mochitest/static/plainhtml.template.txt
rename from testing/mochitest/static/test.template.txt
rename to testing/mochitest/static/plainhtml.template.txt
--- a/testing/mochitest/static/test.template.txt
+++ b/testing/mochitest/static/plainhtml.template.txt
@@ -1,30 +1,23 @@
 <!DOCTYPE HTML>
 <html>
-<!--
-https://bugzilla.mozilla.org/show_bug.cgi?id={BUGNUMBER}
--->
 <head>
   <meta charset="utf-8">
-  <title>Test for Bug {BUGNUMBER}</title>
-  <script type="application/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <title><!-- TODO: insert title here --></title>
+  <script src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script src="/tests/SimpleTest/AddTask.js"></script>
   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css"/>
-  <script type="application/javascript">
-
-  /** Test for Bug {BUGNUMBER} **/
-
-
-
-
-
+  <script>
+    add_task(async function test_TODO() {
+      ok(true, "TODO: implement the test");
+    });
   </script>
 </head>
 <body>
-<a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id={BUGNUMBER}">Mozilla Bug {BUGNUMBER}</a>
 <p id="display"></p>
 <div id="content" style="display: none">
 
 </div>
 <pre id="test">
 </pre>
 </body>
 </html>
diff --git a/testing/mochitest/static/xhtml.template.txt b/testing/mochitest/static/plainxhtml.template.txt
rename from testing/mochitest/static/xhtml.template.txt
rename to testing/mochitest/static/plainxhtml.template.txt
--- a/testing/mochitest/static/xhtml.template.txt
+++ b/testing/mochitest/static/plainxhtml.template.txt
@@ -1,29 +1,23 @@
+<!DOCTYPE HTML>
 <html xmlns="http://www.w3.org/1999/xhtml">
-<!--
-https://bugzilla.mozilla.org/show_bug.cgi?id={BUGNUMBER}
--->
 <head>
-  <title>Test for Bug {BUGNUMBER}</title>
-  <script type="application/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <meta charset="utf-8" />
+  <title><!-- TODO: insert title here --></title>
+  <script src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script src="/tests/SimpleTest/AddTask.js"></script>
   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css"/>
-  <script type="application/javascript">
-  <![CDATA[
-
-  /** Test for Bug {BUGNUMBER} **/
-
-
-
-
-  ]]>
-</script>
+  <script><![CDATA[
+    add_task(async function test_TODO() {
+      ok(true, "TODO: implement the test");
+    });
+  ]]></script>
 </head>
 <body>
-<a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id={BUGNUMBER}">Mozilla Bug {BUGNUMBER}</a>
 <p id="display"></p>
 <div id="content" style="display: none">
 
 </div>
 <pre id="test">
 </pre>
 </body>
 </html>
diff --git a/testing/mochitest/static/xul.template.txt b/testing/mochitest/static/plainxul.template.txt
rename from testing/mochitest/static/xul.template.txt
rename to testing/mochitest/static/plainxul.template.txt
--- a/testing/mochitest/static/xul.template.txt
+++ b/testing/mochitest/static/plainxul.template.txt
@@ -1,28 +1,16 @@
 <?xml version="1.0"?>
 <?xml-stylesheet type="text/css" href="chrome://global/skin"?>
 <?xml-stylesheet type="text/css" href="/tests/SimpleTest/test.css"?>
-<!--
-https://bugzilla.mozilla.org/show_bug.cgi?id={BUGNUMBER}
--->
-<window title="Mozilla Bug {BUGNUMBER}"
+<window title="TODO: Insert title here"
         xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
-  <script type="application/javascript"
-          src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"/>
-
-  <!-- test code goes here -->
-  <script type="application/javascript">
-  <![CDATA[
+<script type="application/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+<script type="application/javascript" src="/tests/SimpleTest/AddTask.js"></script>
+  <script type="application/javascript"><![CDATA[
+    add_task(async function test_TODO() {
+      ok(true, "TODO: implement the test");
+    });
+  ]]></script>
 
-  /** Test for Bug {BUGNUMBER} **/
-
-
-
-  ]]>
-  </script>
-
-  <!-- test results are displayed in the html:body -->
   <body xmlns="http://www.w3.org/1999/xhtml">
-  <a href="https://bugzilla.mozilla.org/show_bug.cgi?id={BUGNUMBER}"
-     target="_blank">Mozilla Bug {BUGNUMBER}</a>
   </body>
 </window>
diff --git a/testing/mochitest/static/th.template.txt b/testing/mochitest/static/th.template.txt
deleted file mode 100644
--- a/testing/mochitest/static/th.template.txt
+++ /dev/null
@@ -1,11 +0,0 @@
-<!DOCTYPE html>
-<meta charset=utf-8>
-<title>Test for ...</title>
-<script src="/resources/testharness.js"></script>
-<script src="/resources/testharnessreport.js"></script>
-<div id="log"></div>
-<script>
-test(function() {
-
-}, "Description");
-</script>
