# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  62b803bf989b97588d1e546c6a8f4ac4b9a65df2
Bug 1164327 - Make resizing a graph maintain the drawn selection;r=vporof

diff --git a/browser/devtools/shared/test/browser_graphs-10a.js b/browser/devtools/shared/test/browser_graphs-10a.js
--- a/browser/devtools/shared/test/browser_graphs-10a.js
+++ b/browser/devtools/shared/test/browser_graphs-10a.js
@@ -79,16 +79,17 @@ function* testGraph(host, graph) {
   yield graph.once("refresh");
   let newerBounds = host.frame.getBoundingClientRect();
 
   is(initialBounds.width - newerBounds.width, 0,
     "The window was properly resized (3).");
   is(initialBounds.height - newerBounds.height, 0,
     "The window was properly resized (4).");
 
+
   is(graph.width, newerBounds.width * window.devicePixelRatio,
     "The graph has the correct width (2).");
   is(graph.height, newerBounds.height * window.devicePixelRatio,
     "The graph has the correct height (2).");
 
   info("Making a new selection.");
 
   dragStart(graph, 200);
diff --git a/browser/devtools/shared/widgets/Graphs.jsm b/browser/devtools/shared/widgets/Graphs.jsm
--- a/browser/devtools/shared/widgets/Graphs.jsm
+++ b/browser/devtools/shared/widgets/Graphs.jsm
@@ -679,16 +679,23 @@ AbstractCanvasGraph.prototype = {
     // except if force=true.
     if (!options.force &&
         this._width == newWidth * this._pixelRatio &&
         this._height == newHeight * this._pixelRatio) {
       this.emit("refresh-cancelled");
       return;
     }
 
+    // Handle a changed size by mapping the old selection to the new width
+    if (this._width && newWidth && this.hasSelection()) {
+      let ratio = this._width / (newWidth * this._pixelRatio);
+      this._selection.start = this._selection.start / ratio;
+      this._selection.end = this._selection.end / ratio;
+    }
+
     bounds.width = newWidth;
     bounds.height = newHeight;
     this._iframe.setAttribute("width", bounds.width);
     this._iframe.setAttribute("height", bounds.height);
     this._width = this._canvas.width = bounds.width * this._pixelRatio;
     this._height = this._canvas.height = bounds.height * this._pixelRatio;
 
     if (this.hasData()) {
