# HG changeset patch
# User Ehsan Akhgari <ehsan@mozilla.com>

Bug 1119503 - Part 1: Fix the editor code to recognize a br element with no siblings as visible; r=bzbarsky

diff --git a/dom/base/nsDocumentEncoder.cpp b/dom/base/nsDocumentEncoder.cpp
index 04b94be..e058af1 100644
--- a/dom/base/nsDocumentEncoder.cpp
+++ b/dom/base/nsDocumentEncoder.cpp
@@ -319,17 +319,17 @@ bool
 nsDocumentEncoder::IncludeInContext(nsINode *aNode)
 {
   return false;
 }
 
 static
 bool
 IsInvisibleBreak(nsINode *aNode) {
-  // xxxehsan: we should probably figure out a way to determine
+  // XXXehsan: we should probably figure out a way to determine
   // if a BR node is visible without using the editor.
   Element* elt = aNode->AsElement();
   if (!elt->IsHTML(nsGkAtoms::br) ||
       !aNode->IsEditable()) {
     return false;
   }
 
   // Grab the editor associated with the document
diff --git a/editor/libeditor/nsHTMLEditor.cpp b/editor/libeditor/nsHTMLEditor.cpp
index ea1e6d9..4c15dec 100644
--- a/editor/libeditor/nsHTMLEditor.cpp
+++ b/editor/libeditor/nsHTMLEditor.cpp
@@ -934,27 +934,32 @@ nsHTMLEditor::IsVisBreak(nsINode* aNode)
   nsCOMPtr<nsINode> priorNode = GetPriorHTMLNode(aNode, true);
   if (priorNode && nsTextEditUtils::IsBreak(priorNode)) {
     return true;
   }
   nsCOMPtr<nsINode> nextNode = GetNextHTMLNode(aNode, true);
   if (nextNode && nsTextEditUtils::IsBreak(nextNode)) {
     return true;
   }
-  
+
+  // If the br is standalone, it's visible.
+  if (!nextNode && !priorNode) {
+    return true;
+  }
+
   // If we are right before block boundary, then br not visible
   if (!nextNode) {
     // This break is trailer in block, it's not visible
     return false;
   }
   if (IsBlockNode(nextNode)) {
     // Break is right before a block, it's not visible
     return false;
   }
-    
+
   // Sigh.  We have to use expensive whitespace calculation code to 
   // determine what is going on
   int32_t selOffset;
   nsCOMPtr<nsINode> selNode = GetNodeLocation(aNode, &selOffset);
   // Let's look after the break
   selOffset++;
   nsWSRunObject wsObj(this, selNode, selOffset);
   nsCOMPtr<nsINode> unused;
