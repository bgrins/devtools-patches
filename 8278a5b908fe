
# HG changeset patch
# User Jarda Snajdr <jsnajdr@gmail.com>
# Date 1471943803 -7200
# Node ID 8278a5b908fe19572899912e0df6a503d6e7958d
# Parent  24763f58772d45279a935790f732d80851924b46
Bug 1297329 - Fix opening 'url1 -> url2' source locations in console r?bgrins

MozReview-Commit-ID: AcQMHzaVi9r


diff --git a/devtools/client/shared/components/stack-trace.js b/devtools/client/shared/components/stack-trace.js
--- a/devtools/client/shared/components/stack-trace.js
+++ b/devtools/client/shared/components/stack-trace.js
@@ -50,7 +50,7 @@
       frames.push(Frame({
         frame: {
           functionDisplayName: s.functionName,
-          source: s.filename,
+          source: s.filename.split(" -> ").pop(),
           line: s.lineNumber,
           column: s.columnNumber,
         },
diff --git a/devtools/client/webconsole/webconsole.js b/devtools/client/webconsole/webconsole.js
--- a/devtools/client/webconsole/webconsole.js
+++ b/devtools/client/webconsole/webconsole.js
@@ -2532,21 +2532,15 @@
    * Creates the anchor that displays the textual location of an incoming
    * message.
    *
-   * @param {Object} aLocation
-   *        An object containing url, line and column number of the message
-   *        source (destructured).
+   * @param {Object} location
+   *        An object containing url, line and column number of the message source.
    * @return {Element}
    *         The new anchor element, ready to be added to the message node.
    */
-  createLocationNode: function ({url, line, column}) {
+  createLocationNode: function (location) {
     let locationNode = this.document.createElementNS(XHTML_NS, "div");
     locationNode.className = "message-location devtools-monospace";
 
-    if (!url) {
-      url = "";
-    }
-
-    let fullURL = url.split(" -> ").pop();
     // Make the location clickable.
     let onClick = ({ url, line }) => {
       let category = locationNode.closest(".message").category;
@@ -2585,12 +2579,11 @@
 
     const toolbox = gDevTools.getToolbox(this.owner.target);
 
+    let { url, line, column } = location;
+    let source = url ? url.split(" -> ").pop() : "";
+
     this.ReactDOM.render(this.FrameView({
-      frame: {
-        source: fullURL,
-        line,
-        column
-      },
+      frame: { source, line, column },
       showEmptyPathAsHost: true,
       onClick,
       sourceMapService: toolbox ? toolbox._sourceMapService : null,

