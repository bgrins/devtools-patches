# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1539968710 25200
#      Fri Oct 19 10:05:10 2018 -0700
# Node ID 032dfcfe401739650166f815452fc082f8f1b39f
# Parent  05331fb8f5338974b913217bc67815df25a32e86
Bug 1492582 - WIP - Use html root element in browser.html

Differential Revision: https://phabricator.services.mozilla.com/D9273

diff --git a/browser/base/content/browser.css b/browser/base/content/browser.css
--- a/browser/base/content/browser.css
+++ b/browser/base/content/browser.css
@@ -1,53 +1,73 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 @namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");
 @namespace html url("http://www.w3.org/1999/xhtml");
 
-:root {
+*|*:root {
   --panelui-subview-transition-duration: 150ms;
   --lwt-additional-images: none;
   --lwt-background-alignment: right top;
   --lwt-background-tiling: no-repeat;
 
   --toolbar-bgcolor: var(--toolbar-non-lwt-bgcolor);
   --toolbar-bgimage: var(--toolbar-non-lwt-bgimage);
   --toolbar-color: var(--toolbar-non-lwt-textcolor);
 }
 
-:root:-moz-lwtheme {
+*|*:root:-moz-lwtheme {
   --toolbar-bgcolor: rgba(255,255,255,.4);
   --toolbar-bgimage: none;
   --toolbar-color: var(--lwt-text-color, inherit);
 
   background-color: var(--lwt-accent-color);
   color: var(--lwt-text-color);
 }
 
-:root:-moz-lwtheme[lwtheme-image] {
+*|*:root:-moz-lwtheme[lwtheme-image] {
   background-image: var(--lwt-header-image) !important;
   background-repeat: no-repeat;
   background-position: right top !important;
 }
 
-:root:-moz-lwtheme:-moz-window-inactive {
+*|*:root:-moz-lwtheme:-moz-window-inactive {
   background-color: var(--lwt-accent-color-inactive, var(--lwt-accent-color));
 }
 
 /* Set additional backgrounds alignment relative to toolbox */
 
 #navigator-toolbox:-moz-lwtheme {
   background-image: var(--lwt-additional-images);
   background-position: var(--lwt-background-alignment);
   background-repeat: var(--lwt-background-tiling);
 }
 
+html|#main-window {
+  display: -moz-box;
+  overflow: -moz-hidden-unscrollable;
+  width: 100vw;
+  height: 100vh;
+  -moz-box-orient: vertical;
+  -moz-user-focus: ignore;
+  -moz-user-select: none;
+  box-sizing: border-box;
+  text-rendering: optimizeLegibility;
+  -moz-control-character-visibility: visible;
+}
+html|body {
+  margin: 0;
+}
+#xul-namespace-wrapper {
+  width: 100vw;
+  height: 100vh;
+}
+
 #main-window:not([chromehidden~="toolbar"]) {
 %ifdef XP_MACOSX
   min-width: 335px;
 %else
   min-width: 300px;
 %endif
 }
 
@@ -170,17 +190,17 @@ panelview[mainview] > .panel-header {
   -moz-box-flex: 100;
   max-width: 225px;
   min-width: var(--tab-min-width);
   width: 0;
   transition: min-width 100ms ease-out,
               max-width 100ms ease-out;
 }
 
-:root[uidensity=touch] .tabbrowser-tab:not([pinned]) {
+*|*:root[uidensity=touch] .tabbrowser-tab:not([pinned]) {
   /* Touch mode needs additional space for the close button. */
   min-width: calc(var(--tab-min-width) + 10px);
 }
 
 .tabbrowser-tab:not([pinned]):not([fadein]) {
   max-width: 0.1px;
   min-width: 0.1px;
   visibility: hidden;
@@ -399,21 +419,21 @@ toolbarpaletteitem {
   toolbar:not([brighttext]) .webextension-browser-action:-moz-lwtheme {
     list-style-image: var(--webextension-toolbar-image-dark, inherit);
   }
 
   .webextension-browser-action[cui-areatype="menu-panel"] {
     list-style-image: var(--webextension-menupanel-image, inherit);
   }
 
-  :root[lwt-popup-brighttext] .webextension-browser-action[cui-areatype="menu-panel"] {
+  *|*:root[lwt-popup-brighttext] .webextension-browser-action[cui-areatype="menu-panel"] {
     list-style-image: var(--webextension-menupanel-image-light, inherit);
   }
 
-  :root:not([lwt-popup-brighttext]) .webextension-browser-action[cui-areatype="menu-panel"]:-moz-lwtheme {
+  *|*:root:not([lwt-popup-brighttext]) .webextension-browser-action[cui-areatype="menu-panel"]:-moz-lwtheme {
     list-style-image: var(--webextension-menupanel-image-dark, inherit);
   }
 
   .webextension-menuitem {
     list-style-image: var(--webextension-menuitem-image, inherit) !important;
   }
 }
 
@@ -429,21 +449,21 @@ toolbarpaletteitem {
   toolbar:not([brighttext]) .webextension-browser-action:-moz-lwtheme {
     list-style-image: var(--webextension-toolbar-image-2x-dark, inherit);
   }
 
   .webextension-browser-action[cui-areatype="menu-panel"] {
     list-style-image: var(--webextension-menupanel-image-2x, inherit);
   }
 
-  :root[lwt-popup-brighttext] .webextension-browser-action[cui-areatype="menu-panel"] {
+  *|*:root[lwt-popup-brighttext] .webextension-browser-action[cui-areatype="menu-panel"] {
     list-style-image: var(--webextension-menupanel-image-2x-light, inherit);
   }
 
-  :root:not([lwt-popup-brighttext]) .webextension-browser-action[cui-areatype="menu-panel"]:-moz-lwtheme {
+  *|*:root:not([lwt-popup-brighttext]) .webextension-browser-action[cui-areatype="menu-panel"]:-moz-lwtheme {
     list-style-image: var(--webextension-menupanel-image-2x-dark, inherit);
   }
 
   .webextension-menuitem {
     list-style-image: var(--webextension-menuitem-image-2x, inherit) !important;
   }
 }
 
diff --git a/browser/base/content/browser.xul b/browser/base/content/browser.xul
--- a/browser/base/content/browser.xul
+++ b/browser/base/content/browser.xul
@@ -1,16 +1,17 @@
 #filter substitution
 <?xml version="1.0"?>
 # -*- Mode: HTML -*-
 #
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
+#ifndef BROWSER_XHTML
 <!-- The "global.css" stylesheet is imported first to allow other stylesheets to
      override rules using selectors with the same specificity. This applies to
      both "content" and "skin" packages, which bug 1385444 will unify later. -->
 <?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
 
 <!-- While these stylesheets are defined in Toolkit, they are only used in the
      main browser window, so we can load them here. Bug 1474241 is on file to
      consider moving these widgets to the "browser" folder. -->
@@ -25,29 +26,38 @@
 <?xml-stylesheet href="chrome://browser/skin/" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/skin/controlcenter/panel.css" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/skin/customizableui/panelUI.css" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/skin/downloads/downloads.css" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/skin/searchbar.css" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/skin/places/tree-icons.css" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/skin/places/editBookmark.css" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/skin/compacttheme.css" type="text/css" alternate="yes" title="Light/Dark"?>
+#endif
 
 # All DTD information is stored in a separate file so that it can be shared by
 # hiddenWindow.xul.
+#ifdef BROWSER_XHTML
+<!DOCTYPE html [
+#include browser-doctype.inc
+]>
+<html id="main-window"
+      xmlns="http://www.w3.org/1999/xhtml"
+      mozpersist=""
+#else
 <!DOCTYPE window [
 #include browser-doctype.inc
 ]>
-
 <window id="main-window"
+        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
+#endif
         xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
-        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
         title="&mainWindow.title;"
         title_normal="&mainWindow.title;"
 #ifdef XP_MACOSX
         title_privatebrowsing="&mainWindow.title;&mainWindow.titlemodifiermenuseparator;&mainWindow.titlePrivateBrowsingSuffix;"
         titledefault="&mainWindow.title;"
         titlemodifier=""
         titlemodifier_normal=""
         titlemodifier_privatebrowsing="&mainWindow.titlePrivateBrowsingSuffix;"
@@ -66,21 +76,52 @@
         titlemenuseparator="&mainWindow.titlemodifiermenuseparator;"
         windowtype="navigator:browser"
         macanimationtype="document"
         screenX="4" screenY="4"
         fullscreenbutton="true"
         sizemode="normal"
         retargetdocumentfocus="urlbar"
         persist="screenX screenY width height sizemode"
+        >
+
 #ifdef BROWSER_XHTML
-        hidden="true"
-        mozpersist=""
+<head>
 #endif
-        >
+
+#ifdef BROWSER_XHTML
+<html:head>
+
+<!-- The "global.css" stylesheet is imported first to allow other stylesheets to
+     override rules using selectors with the same specificity. This applies to
+     both "content" and "skin" packages, which bug 1385444 will unify later. -->
+<html:link rel="stylesheet" href="chrome://global/skin/" type="text/css" />
+
+<!-- While these stylesheets are defined in Toolkit, they are only used in the
+     main browser window, so we can load them here. Bug 1474241 is on file to
+     consider moving these widgets to the "browser" folder. -->
+<html:link rel="stylesheet" href="chrome://global/content/tabprompts.css" type="text/css" />
+<html:link rel="stylesheet" href="chrome://global/skin/tabprompts.css" type="text/css" />
+
+<html:link rel="stylesheet" href="chrome://browser/content/browser.css" type="text/css" />
+<html:link rel="stylesheet" href="chrome://browser/content/tabbrowser.css" type="text/css" />
+<html:link rel="stylesheet" href="chrome://browser/content/downloads/downloads.css" type="text/css" />
+<html:link rel="stylesheet" href="chrome://browser/content/places/places.css" type="text/css" />
+<html:link rel="stylesheet" href="chrome://browser/content/usercontext/usercontext.css" type="text/css" />
+<html:link rel="stylesheet" href="chrome://browser/skin/" type="text/css" />
+<html:link rel="stylesheet" href="chrome://browser/skin/controlcenter/panel.css" type="text/css" />
+<html:link rel="stylesheet" href="chrome://browser/skin/customizableui/panelUI.css" type="text/css" />
+<html:link rel="stylesheet" href="chrome://browser/skin/downloads/downloads.css" type="text/css" />
+<html:link rel="stylesheet" href="chrome://browser/skin/searchbar.css" type="text/css" />
+<html:link rel="stylesheet" href="chrome://browser/skin/places/tree-icons.css" type="text/css" />
+<html:link rel="stylesheet" href="chrome://browser/skin/places/editBookmark.css" type="text/css" />
+<html:link rel="stylesheet" href="chrome://browser/skin/compacttheme.css" type="text/css" alternate="yes" title="Light/Dark" />
+
+</html:head>
+#endif
 
 # All JS files which are needed by browser.xul and other top level windows to
 # support MacOS specific features *must* go into the global-scripts.inc file so
 # that they can be shared with macWindow.inc.xul.
 #include global-scripts.inc
 
 <script type="application/javascript"
 #ifdef BROWSER_XHTML
@@ -94,30 +135,41 @@ xmlns="http://www.w3.org/1999/xhtml"
   window.onunload = gBrowserInit.onUnload.bind(gBrowserInit);
   window.onclose = WindowIsClosing;
 
 #ifdef BROWSER_XHTML
   window.addEventListener("readystatechange", () => {
     // We initially hide the window to prevent layouts during parse. This lets us
     // avoid accidental XBL construction and better match browser.xul (see Bug 1497975).
     gBrowserInit.onBeforeInitialXULLayout();
-    document.documentElement.removeAttribute("hidden");
+    document.querySelector("#xul-namespace-wrapper").removeAttribute("hidden");
+  }, { once: true, capture: true });
+  window.addEventListener("DOMContentLoaded", () => {
+    gBrowserInit.onDOMContentLoaded();
   }, { once: true, capture: true });
 #else
   window.addEventListener("MozBeforeInitialXULLayout",
     gBrowserInit.onBeforeInitialXULLayout.bind(gBrowserInit), { once: true });
-#endif
   // The listener of DOMContentLoaded must be set on window, rather than
   // document, because the window can go away before the event is fired.
   // In that case, we don't want to initialize anything, otherwise we
   // may be leaking things because they will never be destroyed after.
   window.addEventListener("DOMContentLoaded",
     gBrowserInit.onDOMContentLoaded.bind(gBrowserInit), { once: true });
+#endif
 </script>
 
+#ifdef BROWSER_XHTML
+</head>
+<body>
+<vbox id="xul-namespace-wrapper"
+      hidden="true"
+      xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
+#endif
+
 # All sets except for popupsets (commands, keys, and stringbundles)
 # *must* go into the browser-sets.inc file so that they can be shared with other
 # top level windows in macWindow.inc.xul.
 #include browser-sets.inc
 
   <popupset id="mainPopupSet">
     <menupopup id="tabContextMenu"
                onpopupshowing="if (event.target == this) TabContextMenu.updateContextMenu(this);"
@@ -710,17 +762,17 @@ xmlns="http://www.w3.org/1999/xhtml"
                aria-live="off"
                flex="1"
                crop="end"/>
       </hbox>
     </hbox>
   </popupset>
   <box id="appMenu-viewCache" hidden="true"/>
 
-  <toolbox id="navigator-toolbox">
+<toolbox id="navigator-toolbox">
 
     <vbox id="titlebar">
       <!-- Menu -->
       <toolbar type="menubar" id="toolbar-menubar"
                class="browser-toolbar chromeclass-menubar titlebar-color"
                customizable="true"
                mode="icons"
 #ifdef MENUBAR_CAN_AUTOHIDE
@@ -1366,9 +1418,15 @@ xmlns="http://www.w3.org/1999/xhtml"
       &pointerlockWarning.generic.label;
     </html:div>
   </html:div>
 
   <vbox id="browser-bottombox" layer="true">
     <!-- gNotificationBox will be added here lazily. -->
   </vbox>
 
+#ifdef BROWSER_XHTML
+</vbox>
+</body>
+</html>
+#else
 </window>
+#endif
diff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml
--- a/browser/base/content/tabbrowser.xml
+++ b/browser/base/content/tabbrowser.xml
@@ -24,16 +24,17 @@
         <body><![CDATA[
           return !tab._pinnedUnscrollable && !tab.hidden;
         ]]></body>
       </method>
     </implementation>
 
     <handlers>
       <handler event="underflow" phase="capturing"><![CDATA[
+        if (!gBrowser) { return; }
         // Ignore underflow events:
         // - from nested scrollable elements
         // - for vertical orientation
         // - corresponding to an overflow event that we ignored
         let tabs = document.getBindingParent(this);
         if (event.originalTarget != this._scrollbox ||
             event.detail == 0 ||
             !tabs.hasAttribute("overflow")) {
@@ -48,16 +49,17 @@
 
         for (let tab of Array.from(gBrowser._removingTabs)) {
           gBrowser.removeTab(tab);
         }
 
         tabs._positionPinnedTabs();
       ]]></handler>
       <handler event="overflow"><![CDATA[
+        if (!gBrowser) { return; }
         // Ignore overflow events:
         // - from nested scrollable elements
         // - for vertical orientation
         if (event.originalTarget != this._scrollbox ||
             event.detail == 0) {
           return;
         }
 
diff --git a/devtools/server/tests/mochitest/test_styles-applied.html b/devtools/server/tests/mochitest/test_styles-applied.html
--- a/devtools/server/tests/mochitest/test_styles-applied.html
+++ b/devtools/server/tests/mochitest/test_styles-applied.html
@@ -77,17 +77,17 @@ addTest(function inheritedSystemStyles()
     // If our system stylesheets are prone to churn, this might be a fragile
     // test.  If you're here because of that I apologize, file a bug
     // and we can find a different way to test.
 
     ok(!applied[1].inherited, "Entry 1 should not be inherited");
     ok(!applied[1].rule.parentStyleSheet.system, "Entry 1 should be a system style");
     is(applied[1].rule.type, 1, "Entry 1 should be a rule style");
 
-    is(applied.length, 13, "Should have 13 rules.");
+    is(applied.length, 14, "Should have 14 rules.");
   }).then(runNextTest));
 });
 
 addTest(function noInheritedStyles() {
   promiseDone(gWalker.querySelector(gWalker.rootNode, "#test-node").then(node => {
     return gStyles.getApplied(node, { inherited: false, filter: "user" });
   }).then(applied => {
     ok(!applied[0].inherited, "Entry 0 should be uninherited");
diff --git a/toolkit/content/xul.css b/toolkit/content/xul.css
--- a/toolkit/content/xul.css
+++ b/toolkit/content/xul.css
@@ -20,35 +20,50 @@
  */
 
 @import url("chrome://global/skin/tooltip.css");
 
 @namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"); /* set default namespace to XUL */
 @namespace html url("http://www.w3.org/1999/xhtml"); /* namespace for HTML elements */
 @namespace xbl url("http://www.mozilla.org/xbl"); /* namespace for XBL elements */
 
-:root {
+*|*:root {
   --animation-easing-function: cubic-bezier(.07, .95, 0, 1);
 }
 
 /* ::::::::::
    :: Rules for 'hiding' portions of the chrome for special
    :: kinds of windows (not JUST browser windows) with toolbars
    ::::: */
 
-window[chromehidden~="menubar"] .chromeclass-menubar,
-window[chromehidden~="directories"] .chromeclass-directories,
-window[chromehidden~="status"] .chromeclass-status,
-window[chromehidden~="extrachrome"] .chromeclass-extrachrome,
-window[chromehidden~="location"] .chromeclass-location,
-window[chromehidden~="location"][chromehidden~="toolbar"] .chromeclass-toolbar,
-window[chromehidden~="toolbar"] .chromeclass-toolbar-additional {
+*|*:root[chromehidden~="menubar"] .chromeclass-menubar,
+*|*:root[chromehidden~="directories"] .chromeclass-directories,
+*|*:root[chromehidden~="status"] .chromeclass-status,
+*|*:root[chromehidden~="extrachrome"] .chromeclass-extrachrome,
+*|*:root[chromehidden~="location"] .chromeclass-location,
+*|*:root[chromehidden~="location"][chromehidden~="toolbar"] .chromeclass-toolbar,
+*|*:root[chromehidden~="toolbar"] .chromeclass-toolbar-additional {
   display: none;
 }
 
+/* bidi (copied from html.css) */
+
+:-moz-has-dir-attr {
+  unicode-bidi: isolate;
+}
+:-moz-dir-attr-rtl {
+  direction: rtl;
+}
+:-moz-dir-attr-ltr {
+  direction: ltr;
+}
+
+:-moz-dir-attr-like-auto:dir(ltr) { direction: ltr; }
+:-moz-dir-attr-like-auto:dir(rtl) { direction: rtl; }
+
 /* ::::::::::
    :: Rules for forcing direction for entry and display of URIs
    :: or URI elements
    ::::: */
 
 .uri-element {
   direction: ltr !important;
 }
diff --git a/toolkit/themes/linux/global/global.css b/toolkit/themes/linux/global/global.css
--- a/toolkit/themes/linux/global/global.css
+++ b/toolkit/themes/linux/global/global.css
@@ -6,43 +6,45 @@
   == Styles that apply everywhere.
   ======================================================================= */
 
 /* all localizable skin settings shall live here */
 @import url("chrome://global/locale/intl.css");
 @import url("chrome://global/content/widgets.css");
 
 @namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");
+@namespace html url("http://www.w3.org/1999/xhtml");
 
 /* ::::: XBL bindings ::::: */
 
 menulist > menupopup {
   -moz-binding: url("chrome://global/content/bindings/popup.xml#popup-scrollbars");
 }
 
 @media (-moz-menubar-drag) {
   toolbar[type="menubar"] {
     -moz-binding: url("chrome://global/content/bindings/toolbar.xml#toolbar-drag");
   }
 }
 
 /* ::::: Variables ::::: */
-:root {
+*|*:root {
   --default-arrowpanel-background: -moz-field;
   --default-arrowpanel-color: -moz-fieldText;
   --default-arrowpanel-border-color: ThreeDShadow;
   --arrowpanel-background: var(--default-arrowpanel-background);
   --arrowpanel-color: var(--default-arrowpanel-color);
   --arrowpanel-border-color: var(--default-arrowpanel-border-color);
   --arrowpanel-padding: 10px;
   --panel-disabled-color: GrayText;
 }
 
 /* ::::: root elements ::::: */
 
+html|html,
 window,
 page,
 dialog,
 wizard {
   -moz-appearance: dialog;
   background-color: -moz-Dialog;
   color: -moz-DialogText;
   font: message-box;
@@ -133,25 +135,25 @@ toolbar[mode="text"] .toolbarbutton-text
 
 #print-preview-pageNumber {
   /* 3 chars + 4px padding left + 2px padding right + 2*6px border */
   width: calc(18px + 3ch);
 }
 
 /* ::::: miscellaneous formatting ::::: */
 
-:root:-moz-lwtheme {
+*|*:root:-moz-lwtheme {
   -moz-appearance: none;
 }
 
-:root[lwtheme-image]:-moz-lwtheme-darktext {
+*|*:root[lwtheme-image]:-moz-lwtheme-darktext {
   text-shadow: 0 -0.5px 1.5px white;
 }
 
-:root[lwtheme-image]:-moz-lwtheme-brighttext {
+*|*:root[lwtheme-image]:-moz-lwtheme-brighttext {
   text-shadow: 1px 1px 1.5px black;
 }
 
 .inset {
   border: 1px solid ThreeDShadow;
   border-right-color: ThreeDHighlight;
   border-bottom-color: ThreeDHighlight;
   margin: 0 5px 5px;
diff --git a/toolkit/themes/osx/global/global.css b/toolkit/themes/osx/global/global.css
--- a/toolkit/themes/osx/global/global.css
+++ b/toolkit/themes/osx/global/global.css
@@ -3,40 +3,42 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 /* all localizable skin settings shall live here */
 @import url("chrome://global/locale/intl.css");
 @import url("chrome://global/content/widgets.css");
 
 %include shared.inc
 @namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");
+@namespace html url("http://www.w3.org/1999/xhtml");
 
 /* ::::: XBL bindings ::::: */
 
 menulist > menupopup {
   -moz-binding: url("chrome://global/content/bindings/popup.xml#popup-scrollbars");
 }
 
 /* ::::: Variables ::::: */
-:root {
+*|*:root {
   --arrowpanel-padding: 16px;
   --default-arrowpanel-background: hsla(0,0%,99%,.975);
   --default-arrowpanel-color: hsl(0,0%,10%);
   --default-arrowpanel-border-color: hsla(210,4%,10%,.05);
   --arrowpanel-background: var(--default-arrowpanel-background);
   --arrowpanel-color: var(--default-arrowpanel-color);
   --arrowpanel-border-color: var(--default-arrowpanel-border-color);
   --arrowpanel-border-radius: 3.5px;
   --panel-disabled-color: GrayText;
 
   --focus-ring-box-shadow: @focusRingShadow@;
 }
 
 /* ::::: root elements ::::: */
 
+html|html,
 window,
 page,
 dialog,
 wizard {
   -moz-appearance: dialog;
   background-color: #FFFFFF;
   color: -moz-DialogText;
   font: message-box;
@@ -100,25 +102,25 @@ iframe {
 /* ::::: miscellaneous formatting ::::: */
 
 sidebarheader {
   background-color: -moz-Dialog;
   color: -moz-dialogText;
   text-shadow: none;
 }
 
-:root:-moz-lwtheme {
+*|*:root:-moz-lwtheme {
   -moz-appearance: none;
 }
 
-:root[lwtheme-image]:-moz-lwtheme-darktext {
+*|*:root[lwtheme-image]:-moz-lwtheme-darktext {
   text-shadow: 0 -0.5px 1.5px white;
 }
 
-:root[lwtheme-image]:-moz-lwtheme-brighttext {
+*|*:root[lwtheme-image]:-moz-lwtheme-brighttext {
   text-shadow: 1px 1px 1.5px black;
 }
 
 .inset {
   border: 1px solid ThreeDShadow;
   border-right-color: ThreeDHighlight;
   border-bottom-color: ThreeDHighlight;
   margin: 0 5px 5px;
diff --git a/toolkit/themes/windows/global/global.css b/toolkit/themes/windows/global/global.css
--- a/toolkit/themes/windows/global/global.css
+++ b/toolkit/themes/windows/global/global.css
@@ -6,43 +6,45 @@
   == Styles that apply everywhere.
   ======================================================================= */
 
 /* all localizable skin settings shall live here */
 @import url("chrome://global/locale/intl.css");
 @import url("chrome://global/content/widgets.css");
 
 @namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");
+@namespace html url("http://www.w3.org/1999/xhtml");
 
 /* ::::: XBL bindings ::::: */
 
 menulist > menupopup {
   -moz-binding: url("chrome://global/content/bindings/popup.xml#popup-scrollbars");
 }
 
 /* ::::: Variables ::::: */
-:root {
+*|*:root {
   --arrowpanel-padding: 10px;
   --default-arrowpanel-background: -moz-field;
   --default-arrowpanel-color: -moz-fieldText;
   --default-arrowpanel-border-color: ThreeDShadow;
   --arrowpanel-background: var(--default-arrowpanel-background);
   --arrowpanel-color: var(--default-arrowpanel-color);
   --arrowpanel-border-color: var(--default-arrowpanel-border-color);
   --panel-disabled-color: GrayText;
 }
 
 @media (-moz-windows-default-theme) {
-  :root {
+  *|*:root {
     --arrowpanel-border-color: hsla(210,4%,10%,.2);
   }
 }
 
 /* ::::: root elements ::::: */
 
+html|html,
 window,
 page,
 dialog,
 wizard {
   background-color: -moz-Dialog;
   color: -moz-DialogText;
   font: message-box;
 }
@@ -139,21 +141,21 @@ toolbar[mode="text"] .toolbarbutton-text
 }
 
 #print-preview-pageNumber {
   width: 3ch;
 }
 
 /* ::::: miscellaneous formatting ::::: */
 
-:root[lwtheme-image]:-moz-lwtheme-darktext {
+*|*:root[lwtheme-image]:-moz-lwtheme-darktext {
   text-shadow: 0 -0.5px 1.5px white;
 }
 
-:root[lwtheme-image]:-moz-lwtheme-brighttext {
+*|*:root[lwtheme-image]:-moz-lwtheme-brighttext {
   text-shadow: 1px 1px 1.5px black;
 }
 
 .inset {
   border: 1px solid ThreeDShadow;
   border-right-color: ThreeDHighlight;
   border-bottom-color: ThreeDHighlight;
   margin: 0 5px 5px;
