# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  c02888af0ecb02bdfbee0be464079dafcc35e49b
Two %c

diff --git a/dom/base/Console.cpp b/dom/base/Console.cpp
--- a/dom/base/Console.cpp
+++ b/dom/base/Console.cpp
@@ -1514,16 +1514,17 @@ Console::ProcessArguments(JSContext* aCx
         if (index < aData.Length()) {
           JS::Rooted<JS::Value> v(aCx, aData[index++]);
           JS::Rooted<JSString*> jsString(aCx, JS::ToString(aCx, v));
           if (!jsString) {
             return false;
           }
 
           int32_t diff = aSequence.Length() - aStyles.Length();
+          printf("Index: %d aData.Length: %d diff: %d\n", index, aData.Length(), diff);
           if (diff > 0) {
             for (int32_t i = 0; i < diff; i++) {
               if (!aStyles.AppendElement(JS::NullValue(), fallible)) {
                 return false;
               }
             }
           }
 
@@ -1588,19 +1589,19 @@ Console::ProcessArguments(JSContext* aCx
     }
   }
 
   if (!FlushOutput(aCx, aSequence, output)) {
     return false;
   }
 
   // Discard trailing style element if there is no output to apply it to.
-  if (aStyles.Length() > aSequence.Length()) {
-    aStyles.TruncateLength(aSequence.Length());
-  }
+  // if (aStyles.Length() > aSequence.Length()) {
+  //   aStyles.TruncateLength(aSequence.Length());
+  // }
 
   // The rest of the array, if unused by the format string.
   for (; index < aData.Length(); ++index) {
     if (!aSequence.AppendElement(aData[index], fallible)) {
       return false;
     }
   }
 
