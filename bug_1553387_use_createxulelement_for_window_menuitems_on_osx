# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1558541803 25200
#      Wed May 22 09:16:43 2019 -0700
# Node ID 786c6069a7653fd8cb7b6f9acf88bb180d5edbb8
# Parent  aaae630f30291056f4f40bbd9e12a917309e401e
Bug 1553387 - Use createXULElement for 'window' menuitems on osx

Differential Revision: https://phabricator.services.mozilla.com/D32166

diff --git a/browser/base/content/test/menubar/browser.ini b/browser/base/content/test/menubar/browser.ini
--- a/browser/base/content/test/menubar/browser.ini
+++ b/browser/base/content/test/menubar/browser.ini
@@ -1,3 +1,5 @@
 [DEFAULT]
 
 [browser_file_menu_import_wizard.js]
+[browser_window_menu_list.js]
+skip-if = os != "mac" # Mac only feature
diff --git a/browser/base/content/test/menubar/browser_window_menu_list.js b/browser/base/content/test/menubar/browser_window_menu_list.js
new file mode 100644
--- /dev/null
+++ b/browser/base/content/test/menubar/browser_window_menu_list.js
@@ -0,0 +1,17 @@
+/* Any copyright is dedicated to the Public Domain.
+   http://creativecommons.org/publicdomain/zero/1.0/ */
+
+"use strict";
+
+add_task(async function test_TODO() {
+  ok(true, "TODO: implement the test");
+  let separator = document.querySelector("#sep-window-list");
+  await BrowserTestUtils.openNewBrowserWindow();
+  await BrowserTestUtils.openNewBrowserWindow();
+  await BrowserTestUtils.openNewBrowserWindow();
+
+  document.querySelector("#windowMenu").click();
+  // document.querySelector("#windowMenu").menupopup.openPopup();
+  await new Promise(r=>r);
+  // let menuitems = document.querySelectorAll("#sep-window-list ~ *")
+});
diff --git a/toolkit/content/macWindowMenu.js b/toolkit/content/macWindowMenu.js
--- a/toolkit/content/macWindowMenu.js
+++ b/toolkit/content/macWindowMenu.js
@@ -5,17 +5,17 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 function macWindowMenuDidShow() {
   let frag = document.createDocumentFragment();
   for (let win of Services.wm.getEnumerator("")) {
     if (win.document.documentElement.getAttribute("inwindowmenu") == "false") {
       continue;
     }
-    let item = document.createElement("menuitem");
+    let item = document.createXULElement("menuitem");
     item.setAttribute("label", win.document.title);
     if (win == window) {
       item.setAttribute("checked", "true");
     }
     item.addEventListener("command", () => {
       if (win.windowState == window.STATE_MINIMIZED) {
         win.restore();
       }
