# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1549583775 28800
#      Thu Feb 07 15:56:15 2019 -0800
# Node ID a599a726311a912ffe3167e71d33b1ed3c518ea6
# Parent  00432a450b3af67c4d5711810691b27093880c62
Bug 1526320 - Convert DevTools XBL test to use a test binding instead of a xul:tree;r=pbro

This will unblock removing XBL for tree.

Differential Revision: https://phabricator.services.mozilla.com/D19087

diff --git a/devtools/client/inspector/test/browser_inspector_highlighter-eyedropper-xul.js b/devtools/client/inspector/test/browser_inspector_highlighter-eyedropper-xul.js
--- a/devtools/client/inspector/test/browser_inspector_highlighter-eyedropper-xul.js
+++ b/devtools/client/inspector/test/browser_inspector_highlighter-eyedropper-xul.js
@@ -13,17 +13,17 @@ const TEST_URL_2 =
 add_task(async function() {
   const {inspector} = await openInspectorForURL(TEST_URL);
 
   info("Check the inspector toolbar");
   let button = inspector.panelDoc.querySelector("#inspector-eyedropper-toggle");
   ok(isDisabled(button), "The button is hidden in the toolbar");
 
   info("Check the color picker");
-  await selectNode("#tree", inspector);
+  await selectNode("#xbl-host", inspector);
 
   // Find the color swatch in the rule-view.
   let ruleView = inspector.getPanel("ruleview").view;
   let ruleViewDocument = ruleView.styleDocument;
   let swatchEl = ruleViewDocument.querySelector(".ruleview-colorswatch");
 
   info("Open the color picker");
   let cPicker = ruleView.tooltips.getTooltip("colorPicker");
diff --git a/devtools/client/inspector/test/browser_inspector_highlighter-xbl.js b/devtools/client/inspector/test/browser_inspector_highlighter-xbl.js
--- a/devtools/client/inspector/test/browser_inspector_highlighter-xbl.js
+++ b/devtools/client/inspector/test/browser_inspector_highlighter-xbl.js
@@ -7,21 +7,21 @@
 
 const TEST_URL = URL_ROOT + "doc_inspector_highlighter_xbl.xul";
 
 add_task(async function() {
   const {inspector, toolbox, testActor} = await openInspectorForURL(TEST_URL);
 
   await startPicker(toolbox);
 
-  info("Selecting the tree");
-  await moveMouseOver("#tree");
+  info("Selecting the host element");
+  await moveMouseOver("#xbl-host");
   await doKeyPick({key: "VK_RETURN", options: {}});
-  is(inspector.selection.nodeFront.className, "tree-bodybox",
-     "The .tree-bodybox inside the tree was selected");
+  is(inspector.selection.nodeFront.className, "xbl-anon",
+     "The .xbl-anon inside the box was selected");
 
   function doKeyPick(msg) {
     info("Key pressed. Waiting for element to be picked");
     testActor.synthesizeKey(msg);
     return promise.all([
       inspector.selection.once("new-node-front"),
       inspector.once("inspector-updated"),
     ]);
diff --git a/devtools/client/inspector/test/doc_inspector_highlighter_xbl.xul b/devtools/client/inspector/test/doc_inspector_highlighter_xbl.xul
--- a/devtools/client/inspector/test/doc_inspector_highlighter_xbl.xul
+++ b/devtools/client/inspector/test/doc_inspector_highlighter_xbl.xul
@@ -1,9 +1,14 @@
 <?xml version="1.0"?>
 <?xml-stylesheet href="chrome://global/skin" type="text/css"?>
 
 <window title="Test that the picker works correctly with XBL anonymous nodes"
-        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
+        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
+        xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
 
-<tree id="tree" style="background:red"/>
+<xbl:bindings xmlns:xbl="http://www.mozilla.org/xbl">
+<xbl:binding id="foo"><xbl:content><xul:box class="xbl-anon">Anonymous</xul:box></xbl:content></xbl:binding>
+</xbl:bindings>
+
+<box id="xbl-host" style="background:red; -moz-binding: url(#foo)"/>
 
 </window>
