# HG changeset patch
# User Jaideep Bhoosreddy <jaideepb@buffalo.edu>
# Parent  8cf8d34488bad25f04cf0301655ea695fc1c9b2c
Bug 1257913 - Add copy screenshot to clipboard feature; r?jryans

diff --git a/devtools/client/framework/toolbox-options.js b/devtools/client/framework/toolbox-options.js
--- a/devtools/client/framework/toolbox-options.js
+++ b/devtools/client/framework/toolbox-options.js
@@ -167,16 +167,19 @@ OptionsPanel.prototype = {
       let checkboxSpanLabel = this.panelDoc.createElement("span");
       checkboxSpanLabel.textContent = tool.label;
       let checkboxInput = this.panelDoc.createElement("input");
       checkboxInput.setAttribute("type", "checkbox");
       checkboxInput.setAttribute("id", tool.id);
       if (InfallibleGetBoolPref(tool.visibilityswitch)) {
         checkboxInput.setAttribute("checked", true);
       }
+      if (tool.disabled) {
+        checkboxInput.setAttribute("disabled", true);
+      }
       checkboxInput.addEventListener("change",
         onCheckboxClick.bind(this, checkboxInput));
 
       checkboxLabel.appendChild(checkboxInput);
       checkboxLabel.appendChild(checkboxSpanLabel);
       return checkboxLabel;
     };
 
@@ -301,16 +304,30 @@ OptionsPanel.prototype = {
       "input[type=checkbox][data-pref]");
     for (let prefCheckbox of prefCheckboxes) {
       if (GetPref(prefCheckbox.getAttribute("data-pref"))) {
         prefCheckbox.setAttribute("checked", true);
       }
       prefCheckbox.addEventListener("change", function (e) {
         let checkbox = e.target;
         setPrefAndEmit(checkbox.getAttribute("data-pref"), checkbox.checked);
+
+        // Code for screenshot to clipboard checkbox
+        if (checkbox.getAttribute("data-pref") ===
+            "devtools.screenshot-clipboard.enabled") {
+          const toolbarPref = "devtools.toolbox.toolbarSpec";
+          const toolbarSpec = JSON.parse(GetPref(toolbarPref));
+          const newToolbarSpec = Object.assign([], toolbarSpec);
+          if (checkbox.checked) {
+            newToolbarSpec[5] = "screenshot --clipboard";
+          } else {
+            newToolbarSpec[5] = "screenshot --fullpage";
+          }
+          setPrefAndEmit(toolbarPref, JSON.stringify(newToolbarSpec));
+        }
       });
     }
     // Themes radio inputs are handled in setupThemeList
     let prefRadiogroups = this.panelDoc.querySelectorAll(
       ".radiogroup[data-pref]:not(#devtools-theme-box)");
     for (let radioGroup of prefRadiogroups) {
       let selectedValue = GetPref(radioGroup.getAttribute("data-pref"));
 
diff --git a/devtools/client/framework/toolbox-options.xhtml b/devtools/client/framework/toolbox-options.xhtml
--- a/devtools/client/framework/toolbox-options.xhtml
+++ b/devtools/client/framework/toolbox-options.xhtml
@@ -92,16 +92,34 @@
           <span>&options.stylesheetSourceMaps.label;</span>
         </label>
         <label title="&options.stylesheetAutocompletion.tooltip;">
           <input type="checkbox"
                  data-pref="devtools.styleeditor.autocompletion-enabled"/>
           <span>&options.stylesheetAutocompletion.label;</span>
         </label>
       </fieldset>
+
+      <fieldset id="screenshot-options" class="options-groupbox">
+        <legend>&options.screenshot.label;
+          <toolbarbutton xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
+                         id="command-button-screenshot" tooltiptext="Take a fullpage screenshot"
+                         class="command-button command-button-invertable" style="vertical-align: sub;"/>
+        </legend>
+        <label title="&options.screenshotClipboard.tooltip;">
+          <input type="checkbox"
+                 data-pref="devtools.screenshot-clipboard.enabled"/>
+          <span>&options.screenshotClipboard.label;</span>
+        </label>
+        <label title="&options.screenshotAudio.tooltip;">
+          <input type="checkbox"
+                 data-pref="devtools.screenshot-audio.enabled"/>
+          <span>&options.screenshotAudio.label;</span>
+        </label>
+      </fieldset>
     </div>
 
     <div class="options-vertical-pane">
       <fieldset id="sourceeditor-options" class="options-groupbox">
         <legend>&options.sourceeditor.label;</legend>
         <label title="&options.sourceeditor.detectindentation.tooltip;">
           <input type="checkbox"
                  id="devtools-sourceeditor-detectindentation"
diff --git a/devtools/client/framework/toolbox.js b/devtools/client/framework/toolbox.js
--- a/devtools/client/framework/toolbox.js
+++ b/devtools/client/framework/toolbox.js
@@ -513,16 +513,20 @@ Toolbox.prototype = {
   _prefChanged: function (event, data) {
     switch (data.pref) {
       case "devtools.cache.disabled":
         this._applyCacheSettings();
         break;
       case "devtools.serviceWorkers.testing.enabled":
         this._applyServiceWorkersTestingSettings();
         break;
+      case "devtools.toolbox.toolbarSpec":
+        // This event is specially triggered to rebuild screenshot tool button
+        this._rebuildButton("command-button-screenshot");
+        break;
     }
   },
 
   _buildOptions: function (shortcuts) {
     let selectOptions = (name, event) => {
       // Flip back to the last used panel if we are already
       // on the options panel.
       if (this.currentToolId === "options" &&
@@ -957,16 +961,71 @@ Toolbox.prototype = {
                                             }
                                           });
                                           this.setToolboxButtonsVisibility();
                                         });
     });
   },
 
   /**
+   * Rebuild toolbox buttons again, if needed to reload from Spec.
+   */
+  _rebuildButtons: function () {
+    let container = this.doc.getElementById("toolbox-buttons");
+    while (container.firstChild) {
+      container.removeChild(container.firstChild);
+    }
+    this._buildButtons();
+  },
+
+  /**
+   * Rebuild toolbox button again
+   * Currently, only for building screenshot button
+   */
+  _rebuildButton: function (id) {
+    const container = this.doc.getElementById("toolbox-buttons");
+    const target = this.doc.getElementById(id);
+    const next = target.nextSibling;
+    container.removeChild(target);
+
+    if (!this.target.isAddon) {
+      this._buildPickerButton();
+    }
+
+    this.setToolboxButtonsVisibility();
+
+    // Old servers don't have a GCLI Actor, so just return
+    if (!this.target.hasActor("gcli")) {
+      return promise.resolve();
+    }
+    // Disable gcli in browser toolbox until there is usages of it
+    if (this.target.chrome) {
+      return promise.resolve();
+    }
+
+    const options = {
+      environment: CommandUtils.createEnvironment(this, "_target")
+    };
+    return CommandUtils.createRequisition(this.target, options).then(requisition => {
+      this._requisition = requisition;
+
+      const spec = CommandUtils.getCommandbarSpec("devtools.toolbox.toolbarSpec");
+      return CommandUtils.createButtons(spec, this.target, this.doc,
+          requisition).then(buttons => {
+            buttons.forEach(button=> {
+              if (button.id === id) {
+                container.insertBefore(button, next);
+              }
+            });
+            this.setToolboxButtonsVisibility();
+          });
+    });
+  },
+
+  /**
    * Adding the element picker button is done here unlike the other buttons
    * since we want it to work for remote targets too
    */
   _buildPickerButton: function () {
     this._pickerButton = this.doc.createElementNS(HTML_NS, "button");
     this._pickerButton.id = "command-button-pick";
     this._pickerButton.className = "command-button command-button-invertable devtools-button";
     this._pickerButton.setAttribute("title", toolboxStrings("pickButton.tooltip"));
diff --git a/devtools/client/inspector/inspector-panel.js b/devtools/client/inspector/inspector-panel.js
--- a/devtools/client/inspector/inspector-panel.js
+++ b/devtools/client/inspector/inspector-panel.js
@@ -1400,23 +1400,29 @@ InspectorPanel.prototype = {
       clipboardHelper.copyString(selector);
     }).then(null, console.error);
   },
 
   /**
    * Initiate gcli screenshot command on selected node
    */
   screenshotNode: function () {
+    const pref = "devtools.screenshot-clipboard.enabled";
+    const clipboardEnabled = Services.prefs.getBoolPref(pref);
+    let option = "--clipboard";
+    if (!clipboardEnabled) {
+      option = "";
+    }
     CommandUtils.createRequisition(this._target, {
       environment: CommandUtils.createEnvironment(this, "_target")
     }).then(requisition => {
       // Bug 1180314 -  CssSelector might contain white space so need to make sure it is
       // passed to screenshot as a single parameter.  More work *might* be needed if
       // CssSelector could contain escaped single- or double-quotes, backslashes, etc.
-      requisition.updateExec("screenshot --selector '" + this.selectionCssSelector + "'");
+      requisition.updateExec("screenshot " + option + " --selector '" + this.selectionCssSelector + "'");
     });
   },
 
   /**
    * Scroll the node into view.
    */
   scrollNodeIntoView: function () {
     if (!this.selection.isNode()) {
diff --git a/devtools/client/locales/en-US/toolbox.dtd b/devtools/client/locales/en-US/toolbox.dtd
--- a/devtools/client/locales/en-US/toolbox.dtd
+++ b/devtools/client/locales/en-US/toolbox.dtd
@@ -169,16 +169,31 @@
 <!ENTITY options.stylesheetSourceMaps.label      "Show original sources">
 <!ENTITY options.stylesheetSourceMaps.tooltip    "Show original sources (e.g. Sass files) in the Style Editor and Inspector">
 
 <!-- LOCALIZATION NOTE (options.stylesheetAutocompletion.label): This is the
    - label for the checkbox that toggles autocompletion of css in the Style Editor -->
 <!ENTITY options.stylesheetAutocompletion.label      "Autocomplete CSS">
 <!ENTITY options.stylesheetAutocompletion.tooltip    "Autocomplete CSS properties, values and selectors in Style Editor as you type">
 
+<!-- LOCALIZATION NOTE (options.screenshot.label): This is the label for the
+   -  heading of the group of Screenshot preferences in the options
+   -  panel. -->
+<!ENTITY options.screenshot.label            "Screenshot Behaviour">
+
+<!-- LOCALIZATION NOTE (options.screenshotClipboard.label): This is the
+   - label for the checkbox that toggles screenshot to clipboard feature. -->
+<!ENTITY options.screenshotClipboard.label      "Screenshot to clipboard">
+<!ENTITY options.screenshotClipboard.tooltip    "Saves to the screenshot directly to the clipboard">
+
+<!-- LOCALIZATION NOTE (options.stylesheetAutocompletion.label): This is the
+   - label for the checkbox that toggles autocompletion of css in the Style Editor -->
+<!ENTITY options.screenshotAudio.label      "Enable Audio Feedback">
+<!ENTITY options.screenshotAudio.tooltip    "Enables the camera audio sound when taking screenshot">
+
 <!-- LOCALIZATION NOTE (options.commonprefs): This is the label for the heading
       of all preferences that affect both the Web Console and the Network
       Monitor -->
 <!ENTITY options.commonPrefs.label           "Common Preferences">
 
 <!-- LOCALIZATION NOTE (options.enablePersistentLogs.label): This is the
   -  label for the checkbox that toggles persistent logs in the Web Console and
   -  network monitor,  i.e. devtools.webconsole.persistlog a boolean preference in
diff --git a/devtools/client/preferences/devtools.js b/devtools/client/preferences/devtools.js
--- a/devtools/client/preferences/devtools.js
+++ b/devtools/client/preferences/devtools.js
@@ -25,17 +25,17 @@ pref("devtools.toolbar.visible", false);
 pref("devtools.webide.enabled", true);
 
 // Toolbox preferences
 pref("devtools.toolbox.footer.height", 250);
 pref("devtools.toolbox.sidebar.width", 500);
 pref("devtools.toolbox.host", "bottom");
 pref("devtools.toolbox.previousHost", "side");
 pref("devtools.toolbox.selectedTool", "webconsole");
-pref("devtools.toolbox.toolbarSpec", '["splitconsole", "paintflashing toggle","scratchpad","resize toggle","eyedropper","screenshot --fullpage", "rulers", "measure"]');
+pref("devtools.toolbox.toolbarSpec", '["splitconsole", "paintflashing toggle","scratchpad","resize toggle","eyedropper","screenshot --clipboard", "rulers", "measure"]');
 pref("devtools.toolbox.sideEnabled", true);
 pref("devtools.toolbox.zoomValue", "1");
 pref("devtools.toolbox.splitconsoleEnabled", false);
 pref("devtools.toolbox.splitconsoleHeight", 100);
 
 // Toolbox Button preferences
 pref("devtools.command-button-pick.enabled", true);
 pref("devtools.command-button-frames.enabled", true);
@@ -196,16 +196,20 @@ pref("devtools.storage.enabled", false);
 pref("devtools.styleeditor.enabled", true);
 pref("devtools.styleeditor.source-maps-enabled", true);
 pref("devtools.styleeditor.autocompletion-enabled", true);
 pref("devtools.styleeditor.showMediaSidebar", true);
 pref("devtools.styleeditor.mediaSidebarWidth", 238);
 pref("devtools.styleeditor.navSidebarWidth", 245);
 pref("devtools.styleeditor.transitions", true);
 
+// Screenshot Options
+pref("devtools.screenshot-clipboard.enabled", true);
+pref("devtools.screenshot-audio.enabled", true);
+
 // Enable the Shader Editor.
 pref("devtools.shadereditor.enabled", false);
 
 // Enable the Canvas Debugger.
 pref("devtools.canvasdebugger.enabled", false);
 
 // Enable the Web Audio Editor
 pref("devtools.webaudioeditor.enabled", false);
diff --git a/devtools/client/responsive.html/actions/screenshot.js b/devtools/client/responsive.html/actions/screenshot.js
--- a/devtools/client/responsive.html/actions/screenshot.js
+++ b/devtools/client/responsive.html/actions/screenshot.js
@@ -11,18 +11,18 @@ const {
   TAKE_SCREENSHOT_END,
 } = require("./index");
 
 const { getFormatStr } = require("../utils/l10n");
 const { getToplevelWindow } = require("sdk/window/utils");
 const { Task: { spawn } } = require("devtools/shared/task");
 const e10s = require("../utils/e10s");
 
-const BASE_URL = "resource://devtools/client/responsive.html";
-const audioCamera = new window.Audio(`${BASE_URL}/audio/camera-click.mp3`);
+const BASE_URL = "resource://devtools/client/themes";
+const audioCamera = new window.Audio(`${BASE_URL}/audio/shutter.wav`);
 
 const animationFrame = () => new Promise(resolve => {
   window.requestAnimationFrame(resolve);
 });
 
 function getFileName() {
   let date = new Date();
   let month = ("0" + (date.getMonth() + 1)).substr(-2);
diff --git a/devtools/client/responsive.html/audio/camera-click.mp3 b/devtools/client/responsive.html/audio/camera-click.mp3
deleted file mode 100644
index 6d9af013315d873e910ecf6e15bc298093dc1e99..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/devtools/client/responsive.html/moz.build b/devtools/client/responsive.html/moz.build
--- a/devtools/client/responsive.html/moz.build
+++ b/devtools/client/responsive.html/moz.build
@@ -1,17 +1,16 @@
 # -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
 # vim: set filetype=python:
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
 DIRS += [
     'actions',
-    'audio',
     'browser',
     'components',
     'images',
     'reducers',
     'utils',
 ]
 
 DevToolsModules(
diff --git a/devtools/client/responsive.html/audio/moz.build b/devtools/client/themes/audio/moz.build
rename from devtools/client/responsive.html/audio/moz.build
rename to devtools/client/themes/audio/moz.build
--- a/devtools/client/responsive.html/audio/moz.build
+++ b/devtools/client/themes/audio/moz.build
@@ -1,9 +1,9 @@
 # -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
 # vim: set filetype=python:
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
 DevToolsModules(
-    'camera-click.mp3',
+    'shutter.wav',
 )
diff --git a/devtools/client/themes/audio/shutter.wav b/devtools/client/themes/audio/shutter.wav
new file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..e9d742913eb4f38f2b66aacf115f13277130f18e
GIT binary patch
literal 25744
zc%1FL2Ygi3*Dk#FIWv=<5PBzc5JCbWkWL3tnlvejrU9V@2%#zv1nC{A(u*`vK#G9U
zt8|bmz1IXnNSoPvea|^b1YiB%@4feZ@9+EW{r#EWftfRVuf58%)_PVlL)+#}n@)%!
z`nW;ICf)lc`s61ffk)%-i6(Rsq)|THiHS^%bZ(9(#4L<|aNn6+@ahexat3F!VkfLD
zNbZ!u_wjhmL~c}=isJ8Ve#x(}#+ht*F4-M>Gx!nT;AiYf6|mv~-(w4vrZU+7l5g@g
zJYKLDm8ar3g|PZ2AL8p=hCZTp^d6*~=AZc@bV=t6knTr~sVZ41g&*=Ae##noKttoy
z!g$A@F7ZrW$iH(z3a6G7Oohmm3PA38$Z>E*s!6qQdOB7d!lhFHg+VVL^Q0em2Q&_&
zve1I4800>}2`@Q~nbY|>7o|4P%9{@JHfXI;4Qfl#)Enm%q-W5;N~wI5kKy0O)R`K<
z!fU*rH$$HVuz~p#nn%;2(^>wG*W;{{oR2=CDCm@i=NI__KjB+^9_Ll22<k{fDV}`k
zcka!hJO*BEK<z1n-tZRao*(+XKs;Qr_aVGf3^r}zd3+Gw4Wv4-S(p(#&(nDk+j%4{
zgPogrDi6l)VRRCj)Ws@yy2`t7>Qne<H=p7HG=rwmIc~@kpz$&8!AZOkp1VR3q8ANe
zRzIs?9z>su_M$iafOq40F}!n!m+}fkZ8sGc&*1y59LEFs3wC24?nre-kXTE@I8nV+
zO=${caTZUf*>seba1HqH4j1MzDocGx<-`kW0&6~o{!{s5cH;RwhlbOa^rfhzEg?U3
zR+ivebep0?xadTE;G02wmqXz5_OSaEU*faSradLl8kQ;&@2sb}@bL-W3Ji~;$I$T&
zx8c=%jcSXlyjCqxZFn~|7aiy__oWt8lvC6|+6GOcxF7pdb?CQ`*YXVhoJaE&?3~2S
zsg}qm3Xwnmrik0~Z9Yj4p@Az_=YyZxz@NkE6<LL(UKGb2fta}*1^*7BUHmC;fOj(3
zCbrQIZVfaX<TYGg+!3%$b>dHvnr%b|6`>I-Le5jSXaVBf5!jtUXGI&WnC2tK@J%&S
z9Z)|~XKjq;q#@hXV)Z*U*DPY9>L^>NPzo0Jc#o8ht?Du#;0kP0->DGcp`GDpvMLwQ
zTIjd5vs#9z%th25S}wY&A&#HbW>rW<icht|;yiUwLGl~kLIWsWWvdISr5egD=@w$x
z4i+!aMw3H*LY2uOOR4-KNqZ=g#U`<fJE`h2K-wq^+TPT3trU-w%ej)an)b_*s*aFa
zA&QmTR2Y@uqq3N6<ap`W$X$fDs43QI4fOkB2TR8i`}?vZ{{h4bE~9qHJIXG4SfVX+
zv|#Egf3!bycu<_UgVR=Vgyv#tsLv(EEksS4EyHE9Donr9WvY#w{+%|`SRSIJJjQp(
zn?F(wX})$&J4ox*P5Ho4P&tVU;zQ9;91;_?QTlPq0!s}oNi}vPIws3h=(&uViPs`h
z450qdMo^$QORM>)s;aE&g<8W4wLY#k_oh7QRS`#lVwokY6n|57NZ`bPn$CNVS6|dJ
z>G6_)8y@oW&_RPeyEk+FVu$CFmA_4s_7b&%Ygg)|pDHx<J(sGt%5+ZkI&4}0#YXGF
zTd(d^dJtIAcWAW_OO#7>x-{?peCMFTy-G|j9$;JbV9MDG*M6{P>7Cwe68<H7SMOid
z&Fi<jLw~z`zi;^ljh+NFFO+Ft^JM?Ev~%75xSx892725ndbF^mK*juj<o7Pr%X#9X
zW~Z;5Uy^#zX{Xavn@_$+1-n_+r(AnHJh@2rZgnP;-rVPIB_n(j%eQyg@oLzk;3p4L
z8_1T{)t(QFY$&+d^8M>kk7wQPbbs?3i_3J6`7UQIzuC@vq!*auvC7&|JELOhh?{$X
zA+B9BHb3Hf)+Y~M_jjILxMo>Vcxd{|=iMEb9jU2X?)86?nq2m2l-D=!-OqpS)x?yH
z<Vp5GTU3dy;XMK>$<dE?-`{w$*dG(Tr`GZ-Kh}G0zSC(3F2A_y{^|fnyGB*q<^PS>
z?39ZSe|g5wUq7n)@T9Ej)1$_uQom)zKOJ|g$Rlqp#g=8?op$!s8gaW|i1%sR49_6f
zbq_aRpZU^R>)`I=wMToDan7=;z!B@|XJ6jUx=}l2NwLD^9_Jh3J=FEHm#ePy{$o)_
zaM}7HKJ{n$xLtRw>%L~~nc%dS?t^??nysnYBqQ}+!2JzRKFSPrxm;pmh4IC=IdysP
z+1a5tmuGLyztQK2XT7I)Z#T)BR(MCbN2PjsEw(47WIq1pZo-Q$7Tvpn_i#@qj|ivX
zS;wBgNEt1EarVx)&wX}w)2C}5wRz>Mhj{NQdc1Ii)5+I9&)!e%t;*>0EV0gwT)dq3
z*^2Aw_K{iJvPZJrw$7SgYpjnD8>DWpjeETvUF2`vh+2wJYjInmUS7M;&hk+9UV9wX
z69>?t-nS>e4tX=kuEczcr~bY8L4Kx&INxx;Xm#P6*_3rLd$+x~T!oA-ZX4$IT<?`J
zFva8LYe#EO*P_!3{%GBmEwVm%GvZBE`I%l=j}=bZC)~|GIqMIH5{I1@du{d(aGq$d
zm%1!@<(r3=OwVp^M`gb^7t$WQKK!PUy`gGC5A-2U*)H{6hFj8jwB~QwrhUzptn07t
zJwKZoZd+7vz4sCKiLQ%y-^)ucPQA&bO-{#LX1IE4@vkSO49{HdXsEV`v6hn7&eq|2
zKXlz<qN4Sf^($?x+MGQ!^N6FD^^iwwfqY)o#Jbd{FKVU!>bPm$ZJVe+79U%bzSGey
zePKos>f^l3IZP{@RV;0A)&=2bt!LZm<m5D8Z^h5;)3QF!7@O%Y!^I;lkzDLE(^Jx?
z%e%Hq?hD=OT2Ij^+9;ZcuIL*1^sj`JC+&T*H`w#jaoxk}ZTUrGF^9gfyJvlG4^Y=t
zJ<(6Er8~HgZ0h(v`^T)k4sY#SeV>+~Jrm8iwaQNi^hvfatUa~G+8TWT4RSooPO$$f
zTal}FL>ozU)NORBdye_`I7e0GjgDKMI`I{`9g!}pUDnp48(fj2WlvRDOwxSCNItCc
zt6`4*_9k+sw%FFo=4J^I!%)ljIw~neTQn(ZkUP7o7`f6>NXGMEZJ)kMt4rh2Q*Nua
z@`htPm9*})O}1>H+p?nCMQt@N(No#vV6~Log|nECKC%X!pcWTXyX73!Kn&Ht(;kAA
zlv3Y1PD&5@0`;^V<rf|GmU<k|&CbmH$S(Miwg54ksulo=QeEPUVy#w9l;!t1kQ&l9
zeyUol?Ysn4SPFldqt+-Z7|<qqggzQCe$aYpUA14uV0xnb)g{#3bF@#SkQ*;mUvh0u
zmN#TC9xg_Rh5U=!!^aSz!rEdnoO-c8dvbMkMzy3Xw3hawC&$xG5Z_tg10RUFT5;`D
z>WSXW>V_JjqGdH1p#&e{t9(`M=LzCHtu#7*Hfv(2NaeOFT0K@#>aJX(Hqv#`16-gI
z<bDBuHvlZFF#pEi@(^jaf9*(7!$eVinx@lKDP;=9YaeRgXd|_P;$tqvvp7SYQ2SMi
z^i&_yCNWsJ30Nxf(`xz5ZqGhrU$4^Wpje5HqtR*Z0-ok7g0%5^pw@)_RY{H^4>20N
z>#7>2p7UU;M@bYevS<P~SHsm*E+qPh>NF7hyv0`SwpLs`1dpnvmT^xpMtldpRusH8
zKYb4QGt_vQq%PBXZIzZJvUnvw=1}m(t<;q|(QV$tU3r!Y0>iFPhsmO?5{1RDV3CFB
z8nl=|UvieJ%e&Ma`MZo#eK?(N3A@NI#;Yc>hC0k`!O6GMH)5N3Al5;Ckh&}nt2Fhk
zdXK-Ng4$~B5H(aIWPUY|$5VGYMNZ-pnA1$~ykEfv`$L<C;#*Nd^yO0Wl%pI^5xcYq
zy_{BpM>ygf(W*UF7N3G~CV+p}=Wo?<V9gH3+=`A+G`tkdLS;(uV$n|9Do*k?Il&Pm
zv$&o%2>fL&)#ci1x)karmk`B;0t+t$Mp}!jfWc3vi(HvYV=A!I0AUkffLm<lWTo*}
zU@30M4ALfwg0u^f(82!C(=gFp)DY|7x&G>uEC7ZX2Sk3LO%_MFrgBn8RU3LJe6*8P
zgomp9Tozo#Uo4>!u(TDJ?+ZS|t*ILw<4#-`4Ae$@aLRk)Cu&VSXg`lb9t>C0IT~Je
z6^+2Dn}c;1LO!+P#^9~#T#Ua^Pl1b0V2>5V_rgtc)j~xRx}Ykm_26^IsjHYQ+{JDl
z%f-RX8;~dYsvfc&dx}(K=X&iDs#$_6jEK5&EcF%TL`SMdV~_)WsxxL6sqU&M@c%Yo
z+T+*??kkWZhv*QG<GmcoMc}h*{0lhP58MpiYOHptW;7fAe}X!+6xt1-^P-j(AXf8K
zH3x|9jag<9&*9rDTaH(i(an~C|Ho?2#phxo=Dn}MX6s`PI{+s3EvAJ=+*g%SL)2t`
zMXADF>n)bjV6awCngwP(m?}c&y)+;5XMR4S=BicdBgC*hu=ND}s}<!_qhwjtfRBQ+
zUxe>|K~5!M7C433Z8)ZYg5ZA}kp(WIFSQ5rUconj;gYBs^}#kDVA9c4u<Rl)NDFTx
zH_clsCq`j*O94Y)#?NS|m?CD=Jyjl4P8v_+NouEB3+?Z#dR&h>iWJdN<fECGm50(%
zN=9tYV)6*5#lZa$dM*-0bNW`TlS`Ec=8V0VG`gcx+*K#juVps3HS%!PK1l1UKD5q!
zGyIwTb%LdWrI+iMUisY$i5qDbtRBwoGc7JL#hpA_W%SFa_j*F|xbztNVouVMGK<^_
zevnSRi+Yv)wzQYm6h{ZCvPLDV<e%ke*Ap(Kvr61seXn%ZAdkvri<HT4`80ia#-Qv*
z8I`iyN^h641vHm$>^swjXZ3OEZ<}JjEE@=$Clx%QIltMNnvgkEKkKr_=@&~o8fZ^>
zo&4yhyX#-IaPM5=oOfwS$$gU_XKoU6oo_jpww-sXV0%s19g8wz(ksZ~;t3y;Z)kwa
zb@$0mJ@o6;h*qkrnIqDF&x&&VN++$~Ti1*E`go^A%TpC@|4<FJw6PS|Z;O*sQ?KYV
zv7VCEI2xthSEsVOWPfLWqei2$B$K~3+8SZ)V>zy0P;(r~;=ZkgwXCL#K*!XK>Gt=;
z389I0B1Vs~{A7J;i?Y0Chk7Zq(|<}^o%NHWfqWqPT3;*A?8&kc?^e|)Kzt=8qR%-{
z0f%!7>1=P!7sN^)$sXDW%Ts+QO-Btsn*Gx5L47Sl^>+NZ{gVuPW>q>Oo~UuEEgvK=
z%R{GydNKR<^lvi)<V9_%mPMbSlS)T3xlugTTZlj<=z(}7?r0fWA6_iG@<e)!YCc$u
z)2dtCEyKa<3aLGg){c`7FFpaZoe(R*8l<d)TInSMG&gIUzFAuB_3W4Jv*je3Au3{8
zex#MR)X+OnirlUOd4a4Tt=wL$LZ0oU%De>?u&F32cG5cWg?>;kq2(h@O_C*f8Aqww
zs0QbGr|RbD<ya)Uv5R&U{jn)#_K&D8X021)QEURgv2z5+a~Vnyb;U1yf>&UUN)k^=
z@|WnX-n0RKr*Tm{)*;V6;sdI^TCJ9&Pru;((B2|^=~M2(`8ZbDRSVirg52mLC5aYd
zHMOLw6iFXpay~3ti)oa|?bT`Ul{)-6^`?b9hVQWxt)w!TWy{hOzO0%nCuHabu}l;a
z&B#WBQ6Jq=3%(K!wTjwm@f9XWABv)Ttg(gLqKi+VRdj|IsI|ysH+sr7={4D@26g9k
zs<c|CwlGej#k7kWq3fKbINHb$IhF2Xw!f!b!S6g}M>$=M;u6%K)=&Y|g1R_c6I;Y1
z`hm)!7Dsa?e0@mR$%mC}iMqO5*5%JcsCF9t^)wyi#<G}Wr(>D?N_C+qEmP|v-1&qo
zfUbFnrfQw^2yL|ZSR0{jppj~^te|G`Y^p1C%}29{Vzh-DqAwie^SqrCxi~LUjllF8
zaudFQKGlqSq1M*o$7(14L8U}bT7iB(l)j?Rs0nSLW2iWTX#t;Cr&W2rgxWVpY!ty_
zJ{?9Cp2M|i0jymOZw_K+KhXhQb1tf19UjK7(RY^9dHz{_uPkgta*H}7E2*&@PEDyi
zMIg6-Lswe`PQ8SxAd1~Y6|oPjzBxKaSNcSp0~@+Q{$LhO_<OEQKSF04PsSq=IoFkg
zP@_wd3m8m3nh&fUWQ}~GxjWe04_pfG6oP(#&{(n{jxX5?ZI;3h0t_Y)dnBIa!+Q_;
z2Hwp_A*lPc(eb^B=n^{UO)fy?$eCUts_D=)gOfR%iF9)CQ#@=`fr?Wmkd}()L>^Qf
zj{@|XFXQo?U8yt`hHvbs?icuX#NaqzhpZH?NS^||;XvGBUJh1&hP{wGt*8wJQAzYJ
z2j9i|vwVf0;XEJQ4X04#Z87+E9(LTt91uXwX)-0CYt1l!8XL#0ajJ#lxjk|qK~xe~
zz(ogg7xEN!fbMGirMjw`({2$Z>cZ-ekzMoU3Rx31<&yXmTznee1?O&!9=w5_=|i0R
z6ggz)!Z`ah2ZKlNWnYRWrYVqk8qwXxAF0RE1^nm`_}W713_W|$3h?=1$mouU+acur
zQc+YZFADKknNRMPP5Ce#5Zkpy+Ab>3KdJB36Lo+KiaqGuA8}tEirP|zuVYtT(T|oP
zb5E${$h2w5{{&b$1=p86fzpMSmX3J;$kq8bHCeq<UQ`t|*;i~JS1JWe-v*=U0?f1k
zpZrmTiuzQ73c{{I)R<W=12g)Au87^D9=*>^IgC%BE;mEZeqXDnEkPgoL*9|!@=9>y
z&%x;1(FictT@=L6R7Xw#+7z`AEr7AJR9c)uXC9C4uBk=JhhoLoqBlKN-B7tQ`2g75
z8gz!j$SWJQ;rF-!PK(E#);t{??+pEfoI66hq2CHHrZPMc=!>B@luExMP8Cu2c5?~T
z!6@YdUM}bp+&@EIzyf{wj%vxC6imx`2%_@`eIUY6A3vpbs8oe8;hg35KwJ{Cxht~Z
zE8y}=?9QZT$m}>OE~*I!PvReubthE_*4+ilR>0o*;NHo=!vc<FFEFk!Wa3G@IzjWb
zU~N2YMU7?tfv#ezYDvdck}5;hL^+zJ{!r_<12TR!g^C^U_d=S9oDe`qEcFL}D~MTY
z9sA++8GfKTs9W&SUgX0LWQ;}h7B{IfHQ@wA^c(sf^Fpksj&9J50(c1~jHTdW7DS;Q
zvY?PCE3U&c2QUpTMt1*zyNA^hRHD^F(t6~_Y{aD>Fwhbi)(~^imuj@S%9Aif)We*3
z8{UX##lb+#4d7~q3RAzTIMk7W)Pb0bpl+|FnwT60sXgdH7NOHG(03C$S0E}~JRL{%
z^u@V9&@@p?Tt@%c2qy0>c4O`wqz0;sDuE;5x&B~$!ys=eI#?w9I1L>p0QJD1YEdb8
zXC<$K#55`@rlX=PhxZS{yT(tIyTOk6s0lx!cHBn>T5-lV)Rvwg+t2b2RIZ+=423a$
z?@<$|xA>Mm<1?xlpF<@#D%C)0FFqF0!0^Xx{4_HhHH7E{x^W`<&PMpDIVM1c?0cv-
z>FDvDfTUm03p=3476+H^NUOONKgV45HM;NuveGDi!PD@3CZ?1gs1{f0l!y_v(XAQ*
z$z74FKchaa;qRbrAQ(~ybecivHDe%uI66k47)uT{LG@xCHDnauLKj>J-d~4?AO|j^
zc27Zn+>1`WiOZsnl*QzeB%YvZ&1AdUroP7d&yhm~=m3odS6>MHegXU@s8|kw)%Ovf
zRLm!*)mU|eXP`sxM-98ejp5Cy9Ej}F;m_shDFvwoP(A@wG8r>L75J_%XMwd`170iA
zFWe3GRi<TPuP8x3V|wYycMz8Y=zWusy~TJFGmS!>>VwSaMK4Lh!`CpqbXCt(f2yHb
zwJGQf;j|0L^uT0crA~Z96~Xy0Q89nP#O8(h={L+2%|$0_1&Iq#O_!qU%mF_t3val?
z>PyJbvFJxDQE{@-*LnjvU($8VER(4(dioAzt~1z46)}R=A$C1*Ka7%rmhl`8mNOWg
z<Qi9icgLgGZlP_o4sm&kiFzh-@)2ZrNBnm{`!?WZUhrxnro4*iHP5m45vKY1kUkgH
zb}{%^WiE$W<pdt|ns?C{#5oMu`Wg27iIJj|h(`}^&C9{&YM}C5rgp+ZEQ7=e$oTJh
zyK18Rc^wtTY&n@epay(PeF`Lx<yUGF$01VBd7rwiCL&u7QxQ>8ECA<?V;Am>zPX<q
zsNY+8H2P6ROy<QfCp~3%<W&{nCib8L&jp99!&|7d)?II>dul(UHuaP(R0#rlfx`sE
z{R|JoR96W89*g=L1q4llloCMt8hB(PkY}L}Aiui0E+_B+@fp~xH&EOg6KxoLS%bdg
zp1`_I2uf3fk;PRI<&l&^U!ta^Av&MJl8xdOx^Zt_MSbbKdZ?cA9@PFlVDBFKbZtK!
z;L_}>?xV+S5cRb8#g~|pf90*<Mo-mZ%=X`*K1t-DL`8dm{8`Np(XU3)X_d&+sSGCW
zY;e5}<OeU#gI<-OeMLn58BqB<vT_Off-fTaoSK41`B6C_p(7aFWla48=#)ArljY|s
z4t41yCR`1@LIQ_Rz=MiWBsW$gFsoM)?P)af<py}meyS{v09S+f4Or$d_-Q-P6^WVr
zIDZKCatbVG61qVzU^WDm*PG(N``@P%=x2fO%nkHy1#cXq>CmPNDq<Dvyhc&t4LIa1
zY6e8E0q=f=*uGR@v_&L{0918<@T8yN?Ki-?AG$zM@Z2fN4}A3=H9)qt;p>=URsi9p
zVC`ts%NnAzXbs*LP2a+nd(bLeoTHKKkn7}gMPjbDUMs1&i~jsrj+Vnv@$FnhypQQ~
zz6w&~RTs5IRlvNRPdJH&=-K(vk9w;YGF%>$>uHjHR-c23r>|<PhN#UvM4Z&NYXeYu
zds8hAmJ{R_juDl$1mR49JX^I@pMVLZ$Q`m4uNPJIDcXHHtO8|K^(jpk_k_EqL=91b
z-DPR1<SliGO6YcN5N58gq?_6(1JpV7A>W|@{d2vmXvxm%u8ibD+B5ByVEP`lqB3VF
zKUAg3w1+C8z8?TO->CKI-fMu{L8w~eMGf6gUnG`sf3-x-q(fpk?c>E@3r=D(7`9C<
zkOjDka6psdV1`#PFU^z{<txW%S((1pD_cidq$tPd<qdTVDEUSd(&lIv#Z#`Ns>m$I
zN;!ZxifC<)_>CIVOZB~cE;CgGkT^^<(GO~eX(Fb)y3_`pxhL3J5IAa4%&PM_M(vb?
zRDV?eR31vlQK$RyevU$|Du5dJIr{TYsAngE?FV4B1H?Sk()!#2^|v60sxinBMlD$d
zj&+6CDmPUK6J$?H6OA=jF@-+_F1B(p%z?j(V`4ZamjgV2+wrgJj(jG)xf(j_0CbAZ
zz*u{B<xupJ1bAf*dGla(6jf*wofa>|L+o44yHSUFp%#a*#7tNa4EZ%)eFk|=cmf|o
zXE=^o@D4o#udSh~t2*kAI!R^qmX`K9gZWLsjCx5{<(V`~tP?57xS!NS`IUUCd{J`?
z!Z*QMXU$E!N)uI*<BZ*Izbk(iE38*+$1TG|b+y|*%^o3t<e8#2R(XnIyi9hNFJ*D`
zdLODs3&m5dpB5oDqb3(r?@5QFvI-ErE#F!PS^~74yg`zjCda8aoFF2!y<#>^=Br>S
znNore&*IaxSnPskTSXJ`3H!*#jx0wsf2vKj+_7BK(s_)k4Za_%=JH7JzIH+v1G%cY
zCi|cU8lT3fh-&nliffIu-)X6u<tXFWtj=qdtudDTn&b#IUG7wKI0X}7QCcZFixWIo
zwNk}ZXBA9eqRuZzhsHE3F0i+Xatv^^<15-DeZLkXhM}hzow_Q|#+njfgfTP?*zuCL
z9i7zgB()1#0r4LA&Jo1oYxPieR^w@p)<FxSCFpa%QhD*AI0Ifc9(?^2=DPPdzY358
z<aYIf(MLr&@Rwy^bEUXHZ$XzIL=(jX@di^*XPSg(GcXaHkr8St&{!1gZUoSrN_KGZ
zLCEo1>V}#{mqkPDc&>a^In3A{L_2MjXeP#s;^G0OizMZWirtrDnBa3?;Mw3vC&6XP
z8B7Xws|#kTdEgQO>YgmZL86!TiI#}HzryP^q_c`47OybLJVE#Rk&nx-91Uba9znH%
z>~Uf#a`_8nXrg12qX4zFY_--#&aUGYGRr>45u{GAJEp7)Sh)ZlW~NMYM9R9nlgc7D
z>S|p@S6Yi0HI$R3L;WGnT6$V<>mP`F>I2!zvD$G*>fE0Ci(l~ADt<x#m?__vCm_Kh
zDnQRL?E={UB-zwaSQeq@`X1|tmhIv^VsS-olLO(8F36CEB1;SwWvIV8A(P~LsyM}f
z@!t@~wUgotRl>d~OLv58dz_9qU$c%DesXm7X8Q>6uC}TZS@hSK%jT-Wva=)3u}ChX
z7urxgQ(vgB5VzDf_VDaOjz^TDE!UoiO=6fZ=Cj5kKi_b?lGA~&V|0wWqDI6hA6|-F
z4HCt~?_3X^>V5uBrK{@bA3Mbpt&g^VIs?xd{J9-`t`R1O<unX@r<NS&7$?2dYjvGc
zz<6i!6S+yQQ@bfvtE+7nEwoAErTR&BRq@EB(_*vm6Col_^r3vJtPI68*bB_19~BVQ
zXpuUG%6^o~p!=->tFdT8t0!jC2yp*xv=5a<DV?|TC+xwgDjA$<r*a@m(Pcz;aHLB>
zrW@umAF!22VwAQ;L;{s_Fik5y3ba>24qv2M?5>sp<Bz#1)u(1$Ty>NsWh+@sHK16%
zjCHkTk>*bWR3lWn<(Tc$m4>?JLMwsP2bh))IM&N#AbFwon;xi@=OPZuuAaR`R@CR&
zdfJxhy(wGvlwp{T1L!Hb*%nmc349RoD$n^bRn_OB;7#3WwpcGtlAju7-|sj=o_Y&y
z6M2cdh(I|phOBam{cF`wZ)R(3v*`u-kz6VJ$foE%jj4g<GyQiyV?UV{;3!6eM3AVc
z`CF28L66mAOdAnwqbgdGK1Y8cs`2O2__^d18OPgcsHm^~$P?^W9bamJmde!DVR3vW
zoAYR`r1b~O4AB`q=p#+jm!m7(0>^e!uN`Hj1)2}yy|T3op;Ee&_MP#Qc>Z3MR&I1r
z`$U&C5*2F;pVMkv_6rxRoTnNh%GFsQQXQp_qno--L%EAwq>3TeHi)ma%OZt8LM#t~
zkvoY!+B|I^72`Yd4@U=S{I(~FSA%ghpb^4Ovw5WYR=Ht13<95CD_Utqv_EJM*XFvo
zH%47h)2Sr*=u-69UGkZ7#?0RjGxH3d36wOaF5)|JO?;+x6WhT6OS1+J+YVhaP|OvN
zQHd_1!o{jf$jE7Yo;%SV;i{DrKXW0~Qm&Uh_(zdna}sM&hdR(RbV3K__rCm*>Va9d
z8%KiUZoqq?V3SGeEI4gzu~Ni~U~!VO<XPmxMy@8pwFcTLpuQT%nx9K+O?EDi`7D^<
z@Eh_KEh(DgRfJl_EkvwVLyLpmQG5gJtb|-4$I}VzhN#E`WUB1NW6>9zL7$1VL=4f+
zY2n&s?uk5nPfexEbdHvS>-~&c-5nik9;)OsSpp3B6d376F;REZdr}ijBKP<(O%a*G
z_%z!z&VnTk!86k2b4L|fM?L3ngttCNn}&=pgg%g>swo?0%5TuwKM)USD}3EY-N+0}
zDe=(j`FWRPK3w>U_5Fg$1uH&xIz8)Ab4s`VP-bKG6NMwxvy^eCDxDmke6WB=K$*av
zrMKpL_@>3_KBo`9B+tWz>v~Sgj!D03o8i7upOJMbdxFcyMGqG{;u?}1__(GcLH(Ao
zLp$U2tB6fM{&eQ!<QGF#?LuRUFLN3Brb6oNtYO-0m&H0|cg!sETD|D|A~3sFp+n`m
zmR#*VEB&J<<6hKqBwN3?eadZVqtiy0KP&_7t1=vFv}KY06M5QwGmEIF`Yy{heTenC
zMMFlcu?zdrtjG4+*6yy&Z7J4S)_Uq{O2mUjPfKQpIxqF!p8u$OPs_@z@oA&8ZipXk
z<Mj3_!VzXKWA7+0IZoI+sCoKC=M~Q5^isTp-qSV#NmDWhzZ&_bmD&gn6-#wAn{BCc
zpk=Y6Xm&N}qWN2^IVD<mP%%ex=H~Rf>4UN_f+s%bk>Z?Q(7I1^(z3NWS}VPS?j)Sp
zOCE9bQqLTVvOlu_WFM7X#&J}y=dr`9sLMzZp|&`D9ewN-vYKXHmJZ$GOt#jdHyshf
z$zMg$GJU>Y0WlpzKgs%z`HmKjz1eBm6X+MqL+z64Ex+Pb+9o|l8^)6zS=l`uZs_Z`
z$zO{^#;>)P&Gv9$64x$kEio0G63Vhl8)6@uxyW%5^(=_Hi7UY9LNb0=*-==v<KT;Z
zXqRPx?V(njT~sT_Z2Jl|Nd#!|dSlBdF-%^!Z<aMtCB49j-Nfgp;T=&|#_(jh&e0AG
zW~J7`Qq!8GpW&zKYmp7>XUbU2u@RVxCQvEuxSpj?6W;QWT_A59$lD}JR5xT4J<}dg
zExB3F15Y_emFX7dttG0X`UU^Cb?naymz6BrZHd|vw(1q=gRD|nWB3Tz*Uy+_rCyjG
zWuDLKKviu4E@>{8Ez9Ni@~UG*wtIFz-eCROR#U_~y4f43Rbrf8)Y4ysU~=27mLm6m
z=C3dTx25J_JiqW0y2#aKFIh^ov8=G%*8)|stZ7-B<p=OVH8GEWmAB=`v_n|56_^nU
z(oGJhO_-a1;>{F9FJ!hOkf&*6IV_&4mC{M}mS<HwHN*^E4?YW%dmSaYhbW=l6#cdH
zVlU>?r?Q0lR^FAf_%3ZgCmD&zjH0io8cBMCNnsS`;?v-#b>y$IiyFY=#8mx)c8hnZ
z%`{dUjY@c0#jCPlB^sF56zmK_B_4uVEs>wnm)cIPyYQl}+ym2Swj3p=%9C<|+C|m$
z^V(h>BYjl?`WRE?$JAb1DcbNnbx_?_m?`)SPsemvl@E#8dM~}MwhMFMK2?g2iA!Wt
z{&GHa2@_Lk6SwB`(B(7jb8!&-&mDc^BZ@<0|4_fmx`@OmUW!T5Q_SW4DhQn7y!eqi
ztJ{tr<b73|7o&p}5H-<5e*}|v#UwnL%TOi_f+df^T!L7GccrL?Nw+wr)xnr7v-Of%
zU*4pe^Aj~eg>wq{=WNVU4t18B(M(KC%h-!fav&zJY+gp5q6T^3)wkT6zu<eAj+TfS
znvdosT9BaP)DH1E!N23&2=J?;m<HTb0*8y=(QA5xXM18Y*~RPG_yqPI^wNF&KJ|sR
zVahJ;YBU|CySxtb#LpxViFEL?R517?==LFh2X>f1{V|nE-a{Q}5@xv?h}CB}sWDeK
zfA&3ttYEG`@p!%tF1u3f5L;;qH{`Xb-%)&l_faR&RD2IUbry_00vtaC890?{iaO#b
zrEvsbQyWz)j>hacpLEez?8Y3@5R+b4cyky<iAb>myMKn4*1`U-aB?xK1dpGD?-ub2
z^}A|EEiv_dMUm7V3_21s?`%<p8u147-UsriYE0=ON^2;NV)X#^DWWz3*%H8yxduAt
z05U!k-Ia%egGTX1?gO^9Ld3G4x~c-Gt9UJnieN5-a~fbu7)xh(6e7_Jf2Z(D^yvMR
zL>@E@`W2ztv<*|z7iuTEdpr<OmTqtfL|`jNax-qkJ>ij-;Ii{E5!IqjTme4X1_o6Y
zG5nE>QzaUWdxQBJXQ6Xfr`y2TefFc~)C(E%0sKCQhw~qpiAsRm6c<Bab1OOr&v@Y7
zU~(hoK;SQsE&~(H9cUMAp)$0NkFqnBrtY)~)<$FHLtcdyAJIzMhSyu5TYFfv6{i+~
zZ+7ts@XsUQOgs2Cdie}!umsp#0N=Mj)!5G6xjwkDvA#LQQAs+^cCL>4+8+3*1U;8x
ze_3E^8;|4_+=Ucb#08vv8z+TBYH8Taz|3JhKgao~F5Yv{Mc90jf8ue7>{;yV3&z#~
zmJg$5r1&ZeRF@xE=Z@T*2GdS3@QU!qLg=WV^H|{AojT*4VdM**@d@-dekxW6b7vep
zSdzZx<~#tt5OkHl!@O|?>}D(FqgB{DhLeEe%lrvEHj2DZ$FsOT_Ekl#^hPiJ2xxu4
zp6CZF_yFz{p<=*II&G(LoR*2*<Dm0m?!yk=L<eaqt)|WJ^aIxE8YFMQ<XoSYBI4=b
z>t)E9no<)W`#!s(@)*BQ4?rBg2DS#k`=8)s<J%b)x(=HL(r`$!A*!=@BbSGTk@Siu
z!S=nF`a7czhEokH1)nxR&L84L{(w6nXKKT%^QjG_q;Mff97;7|%{ENEHu3{6tOeXn
zKo6Y)T<zw<#&0s9>tgKh%kyBZ8<F{ak#qb4=&S-Q%RuAZ@bdv=N;V?w2RkkSDccZ(
z0ICRihahJdO-2p8h$?V}+t3))j;gRGKVm5PJuur(pi@J5BLF^pj9DrZ`goBM=@021
z|AwethNrvHNW|R@vHF7jV5{*Bk0O+c$)-9z!>Zd@w}Ve(r9Y*^zk868R?_GNI*JQj
z;GJNi{y>b5Gfu*%4osULVy^@5tc6XID?nl}6~&!fkavNf0!Mb#!R@HQgJ=?}>nZMx
z*!j}8G!8y~gsfQwo4n!YC?LHw&~T7{!Ff^iB{IPcXQ%N?NV<!>uZx%zp$zzIftg2H
z(A>w2;t9S1tG5B^=Q)Fe=~MXUKH{|qHE$a1AnfzP+J+QDCGgxE7VP35;HQr%2A({H
ztoj-_PKNC*sW+nFf|;Nztno9ylX8+bqgK|2-#-L4E0FR1ofe3;gboGBm<$DG0xMa8
zTL)xR1}-Y%#C!1KV&tR?g&~tefw9#*19uEPGvN~t;OIK+D{RKo3zjTIuiXe+6c<I_
z`v7T9kgoVO)}1i1T@@Xw7S2pHf5T<`wm*d{!B@ub(@OyXK8WRU`0xNf2eOShxe;vq
z9Fn%e4&ze<US#}yjd?%Tc|fbGn7`K}3vVO3?M&PA<B^H!MnU#%U}rn8K?GU=?=7Is
zam@6ike#Qv5zPS_!{AebzaPPpho~wVJOt{4?qqy2Wd{#LE@yCGWKMTz_#CmDj%slY
z7B)ks1;C4Gc<zC$t%aOOXXE$u#So>^_}c+1UPF_IINzJzgC}mAzt^)P|0<&bc>@n8
zfsaQ(+yzwfhxqpn^2{Hd`V_GA98qCp)+_A0ik;q&S`_<=LDEYzOVY6KBE0w-^{Y0{
zF9zGa5YJ>ty9wkNpD8syIZ**DPvOo@)ad$%W+iC)%(U3ZuQyy0U7{Lx=Yt)tu>THX
zoD77PLIj_|CI>W;(A>aGHnP7uEKCNsI)vTV5zBOBe*`pm1B}c^FZD%E)PyV@HKLCB
z$qeKBVNap!c{XykB6Je;2ka^YTsMJl3L$b?Cg*U%JDIT64|uNwWEFr`#y8B;P1FS-
z^U7l7MPTH2^s!pNv<F^4faH6Kx#6u0_~QaHA`J{B5H;xrvTHGPb%sB(;DamJnF`zr
z^rp?`r;D?Yp%r0mwpm3EKvN%JE7Zi}5v(>oV`Armu-X|O@gU<_WgzD&B;SO_`SB_Y
z*baeb^C4z0;pYnQ{R?<lhYdbt{DitZ?zjL|MujVhhaElQxcR%}Ok`pSGA<wdoykv7
zV_#vX2Hm&gjAJGX@P$800abUf>m1I|;a_ifpgzt@gGVmF?)>n!Gwd*aQ{sjbjPK}4
z*jmc`rdcuQSq^*LfN*#0s&1kwAGC7E`vsxfYk2VrbdvBuDOmCt=uAiaGx6*)WGToh
zZ0=Bql?%?2z|Twg=NfYS0&K~GUTKhU8@s&BJg`8jVUMvc1O3*4$YddV%ivuvvqs;?
zdq$1(0rIo)+>R_LfoK)P?vk)XN30CbIoLpf9Ud<UyKBOdY}|PTyKS(m5*aZyy66=%
zC%oW`!mu?1Ubu&IOJhwjMDGpIavi!}$GxgRNEOIV!M#iH;WOA&7M?M_TloSuT*1yP
z*lgg;2Ra%08EANgyT-RSvv7_TUagG0$%bZc%+(dm`sa*#aTU3r0k63N;l=UD2f5E-
ze=_br#0i=3mJ2XtA;X&<kZ}zdylsAS)18c5NJCXP4SOVVqA+k*1Qr>!?JlBWe0%c=
zY%dDw1RGMJO)9+n+SJ3r#y3E%kmF&-oPdWkSoj3H6%be0tj=%P_(X_N&k;~yyg1e?
zcs0%Zo~g0d4ZT4@;|I{|74#~CyN0X`oFSm2Zu-iYUW8dCj0hRuQ#HP+YK3(!W>g--
zYj1FZ5!ur4Lni$20utPzeSR`d@`iVf-+d-SmSiLH#c`IA|4vw~P-FbDCdG{AZJc7D
zx(K8dH!<{rjV|V4M%l&mrj-m0G%`McU}UWY4>!D*im0A|=Zt#dg;nWh{e6(T-wQGQ
z1CMmPGWr)GiVq>d`2Oh=cqIcKOan_T5A0Ng=Go9U8J2mPC@6%JpWvb4{o24xK@;sp
zUoB-;W*sPYH|wkh$wpog_LPNP4o)!<VSzu2k?~DdBT`27HFDU<LLJ&Wo88*zY}esY
z9V?5Pcrc>)3ac}aSH;Z88nLj!9-FDb>s;-f%#12%X1f>sk%=f749OE38Iq0O=W2cv
z!9au+dyP-i6@ZQ&c=ri%>p84(!@JI~fbp(`-yDdS#moldcit(`!sz|ZkR{p3{U^}g
z_<pmIt;Qo2QjAXlx|*ncgjd;YbZ#TsI%0Vf5zYoOiX)mOaaJnue-ri@5j4IRZ8N*P
zp}mAIZssYec<u_%dYQE;4Ia_4#v6KQco>M3u+H#`QMm}(dE%@TGn&RXtlh}?T;UU(
z{1|JEZ&>Gpel}C<7r1-RtjGls$KvpXk(bY5t#PUsVqj!oe%yTtyNv2v!2I;06a1H9
z)=w8x7aLAzGpk&1wlWdtWp=kL<L9xt7C4#j7}zkr@tuml9oS_^N;PX;mKiY@vu0%D
z-V11wlYOp`=801j)?}LbX<)_`)>%oI-!?ZYz40*mn9aP)=I1C~&F_9^;atKyUeGol
z)?~5K!5+dx7W1>6M!eEF!(3y*E+<pA9e#LdV%KiwjBZMGz|YRPT4qA;WYf?2AjiOd
znu(J<zZe#0m>7Oz)-2=Uz-m`hQyXO1u*PaWET(lCoN30>W`4W8C=l;q)+A|K>~11A
z-K>I{re{1%rfZyHU|csnmu^Oe%$&5DmKiK11zH$YLz)^HD|9nfhNPT&;$&8A!&^pW
zH~N{Kjc<ChiFyIN7*caE<pN*kGe0?$ZTi-VyGE39P?~L&T+aDl05rU(Q%(ob&4?NK
zrA$eN2F_+KEAuRi=?!Kh_Y9;M)jE^&vN0n!r=86TV^nbi0~S+?#XQyc?5qV6h;rm>
zreE!5?N+8#qp};-!>9|k+-mPIk?U#x&jPQ_6;?AgB6p{8mc#Uu@$GWE=_zZjuZ`Er
zd_UXdklCi@*``l(d_bm04Gb7Q7iRs?%_&it{%|*K$oYQ}9OiCm$|C6CY}#eW7ACqi
z)7zXIg&YJ~@LZV;HX~QR9JCnv=V<L<i-~78nTo+hZIn~#jHqOo@zc$EV$a1!wyB#f
zw|_g#JT-E{DL325jG%F<u~W-2((JQ_cXO())%-sjlFi;|)U~3(v$I(@?51>)`@cl6
z$u4qyljBv&m7jC2Js0nG)^lqw<5e0S+2(16@1(g_n255N_!8!{W7I-V=%bnV$-%gr
ziC&v&7w4khX6CjqbyDU!tEo%QA3gVB_&L)=gz>p<ORlym7g=@_dphM{)wnXvmAaW5
zE@td9&2`K<6(&bB!@exjM;<07*^Fck?hLeh;NfK6b(q>Zn`h)?kl{g#S@FosR%vQu
zH<6m-595(jwG2#2vkw{?8n4pLlO^ZHE)TEFIsUZgc0e+HY0W)X=H|5}7h&1vY1wAQ
z5V<QYrayBc=rHp~n0gpI!J6wM^-g}UIpJiOxhQh0VGgcT?z)`l<YhJI=780-U89`N
zmvdJ)Pomrm%gbfmJT>p0Zk|BqKJjPl+05U!_FDeblX5LHa3aktbL5_7GwYdp$73qj
z?>Ya+i7*kFqf?$OigTj(R<6iJT~0U9{)_;b+2s5V&T=}4%#FU5i%aoN)N-`X^Ic93
z<=B`PTf1qegVmpY)pKJaIp>_5s-N?ka_g&ZW>I!-XR*A4!5mGr+-gsMo+SSCLY}Rb
zT+Jls^p>3ZEOM>OvFGh8`ZFgf*TXrQ<;lxK>)Yx>@BGPIDgM-sb3K?B^&D+-9(gPC
z{>{q<@s5A#o%?yGy_Npf+PqWVwIIi)yc~IJL!KAKUo^?X2<PJcZGPs|xEzGMef_Qn
z@+9$}vE*EPwLjOWKdt+#tvOzM*Xwy`(B84+t)KHek*8~(zIk<&|MbDzU3v1~_2Rox
zqdz;tfBcgdg|~5kchx^Vdu!KU<>evcU9H~TnS=j-KIN?+@-%sin|H1Gt9>FDk8h<m
zXxbn?2~@@6HZU<EHnMNxu>P?zqaW*IMg6g3#};VSuH~S_$f!QCjpL#d<NC!%CJdvo
zW8GV|`^#(RR_$6x^@@#7q_4+{IDOVw^H#gWgt+(~V$N7m&C)nBF?O7B--fMtPPiL0
zrs_{qefpgFxdGmpH$Q)S<D7vF5@H+1^=J|w6BijjE>}{kL4BiQ6L64It9BhD`wTL-
zzc+TQh+abGUgt(VBje*^`wTR9c>bw%gM@_0VLAJ9p3a#oW{sUa*Jf<eTSgAW`bCQ&
zsQdCU)O}PvQ<z7Crfplc`#5rNZ1;W%ec#bK65B_&5Mym!0|IJAf2zjS3L@$sJg;Nv
zkcgT7q3Z`%3Hxnl$uP|`Dy)#bdqjn*6(c@4UopIdPi)x9k2-|;+0KW5?_D~4$+U4{
z34OJQqtkDMjrg%rSo3m4!&>l>&~uq%LPwt+7y9jz_d=g{Dj0h6w-+H*^;01oJU51<
zOg|jD<y!u*HLjP#Rz;+TH4XYE%%@A2unmj)gspwOA#AB!AC`S&ZrH}J*MzlQH6d(&
zwTt17oiD;Z8_+83_boE?=8qFXd0J@boQowxLknkxj7a+_<mB27AwLwJ5>lf?RLH{f
zT|)w2wF|jEA|Rw@t4bjYwp0$ef8<86+l+0&Kec%heDd_B;C?A1gF`=jFIbJq3_4cm
zm!Oji#|Bk6(m3d&i}ix4RVxo)I0xMyTR14l(<$g)HJ6~;8CuY+dCTj{cI)a6IJBtl
zp3lFj+iUB<x)JjS)D4MhUH7#mux=hqO~*Sm>J!%=@XHCx+_^b-bp*q_^WE|>drp@L
zH*b12XxcJ1GX9+)tusQilIQ?rHV7u4JHhn1b0{^}!ze2~l;Z1z^&ILQkuUZ|c>M{<
zVM!bmM%$}}(WQj&`g>o5CEe^8w$FK2c>VfI!>Eugj6yO)slvig`o2RbmHRZ5`rAV3
z<%<w{xhsUGtPP>}Cx_6`DWNp+Nodl;iDA_HKp1U}4NH3B8<tcnAguoM$zk<}e-)OL
z6dy)ihK13o_F?`Vlfsi;Z3(0JvN+>NDA_&>rJ$mrM6W`q({CX(c6JCIniN87qe5s?
ztq}659zruJhENsH5c0R;Yzm=#JA-M)v|!q|3I9$Frlb#pslFBe9tfiP-vm)odt60v
z6+%1+*KzpcX5E~BPvY8xD-72sxa#Aog6nY|qWiek;!3LXmzW?KkS71&XP;oAq9M3K
zDXDZA(aSJOx*A6N@`W3TL@NU7QI)C@l+-YsD1SKpelUXSyW{E>PM_?KpiSA~l=K37
zj$rSvxLV^m;z1AKk5jnddm4_bKdzN{?{OGyx*tw2&xX_OI^ndhayTuEg6yxu$$uH{
z^}_3o;Z#2|oWA@$g4$37`4qtGQ;>;RQ(;_hAZs(Oj<^zW1>vfY`#K-4{J5^eCg6q;
zW15fa7hFlW-Z$>!x(&ONaMcga@d4r57nF0o``oyaaxZ%4-@jZre#RgAtWC>K{R<&9
z^@jG3jP4zq=o1y&BQ8F?T*~gf<$U5|!pnUe*wVjc|3<Mr<K7>h5Zi8etM<{udq)Sy
zl&crv8a6a!Xy5*QV-q8NhW70fKQLryc)7@!eo?U@cy8SGE9YY_N$ee7u7UA}Pp6h`
zd>Zvji1i7q5$GH3U$eGP-QXHE18WBP2Uho~<zF+v&%d^xf3R=OS|R>HA+>7y<o+oa
z;flY*5@NcCv~Aop_c*)?FV{0Mv44o4-;g0gY77ae(J!HgU(Mj)U_bv_ezj`(VukO(
zVeyHPLw(~1md_EAC#P}j!03dy{zgCXF<wVT^&6BJUap+0&pUr|?dsdVamzoCiXT|R
zw6aEYzrKEW%dch)f4|1V;v@UUMYoJa2l4wCGX8~x$Q%j(VpGe1b#U&szJ333=fK1!
zgA@P9I|sH$*Y#@~JFwrNgy`5NgJa_p%m1^ewz1v+XGCH7KMIP8{!>c-K?!}#V8ulH
z#rBEqi?atpQcb@<V`PNM^m|DA1VD3O#9suO5o{RQ<F9w~-slr&Mznuq!oXNVv+#0x
zs+IfOhPUS=8t1f%>>C@=Xi#jMesS@MJ}n~?ddDUV4D<VsEB;@k7>62C{<6`$`L8#2
zPk`XIU?~yZYuB#n@1M8#?ft*m>X&2e|0X9i_Ax#GUvq*f;{Rkfv>Ox^4TA7r^Fs6Z
z)`JrNzwkoN-M=PEo~*y+m2q}ROVn-SzbiHPas(=JZD0Q&-&#TKjfxx?5)k0)UpFLI
zpTDmCk8=9O#C0F`pOW%+<zHpAY#Gu#eqdr`d~|H{#u2ztBQ7o`Bp@azCbD*PZQtO4
zn3}$|g97XLMn?Ka`UcdD46M_=PE>GoRG=yNuiO77x^chgK}Oxl6&>?GDf*r5e-qt0
zAr4(Mvd=#p5m`4lIykC!ly6LIP^53|z{py@!BI7%eQO2;2iA!Rt{W9qyKdeQ{~+dX
zN4+06FtK04uz#qI?P3S~_hf|GN<t#d$tz+YI9W`X-(T+i>rHWg58r>z0e{>6ug@6L
zGdBKz1hIEk{c9lu`*lwo5}6R&pa=XMk;7FQ42p>}*+HX5K2=&qMx!D08`!gIp2WXy
z`PZVOF(megjfwE<o0~0p0`lJY-&@cAd!zTC%aH#YqxZiSwVb<uO~t(Q{(I`?Ri@a4
zIK-)GLchNM$ykS(9PPi7ZvSEXKS_`IU#(_;+x}0|`~6pI=D!s4chA4$;CJ7Ri4HNw
z&B(-vNPwrG-%#Hnk%Pnh-rmj|AN>Bq{E#!8_~lL~7>xY>oQ(bnTL1lj{(Z>55Bc{Y
z|32j3hy44He;@Myt3zDh{%kciJ|?`}kaG1Rs714nJGLdFu@#7vZ^g4r4t@0CHO-zE
q&9pi6TV?N-b?8!)n!-csQn%ae)-2~N+sVKO`Lk?NW5M*#kN*eq>@mXt

diff --git a/devtools/client/themes/moz.build b/devtools/client/themes/moz.build
--- a/devtools/client/themes/moz.build
+++ b/devtools/client/themes/moz.build
@@ -1,10 +1,14 @@
 # -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
 # vim: set filetype=python:
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
+DIRS += [
+    'audio',
+]
+
 DevToolsModules(
     'common.css',
     'variables.css',
 )
diff --git a/devtools/shared/gcli/commands/screenshot.js b/devtools/shared/gcli/commands/screenshot.js
--- a/devtools/shared/gcli/commands/screenshot.js
+++ b/devtools/shared/gcli/commands/screenshot.js
@@ -21,16 +21,17 @@ loader.lazyImporter(this, "PrivateBrowsi
 const BRAND_SHORT_NAME = Cc["@mozilla.org/intl/stringbundle;1"]
                            .getService(Ci.nsIStringBundleService)
                            .createBundle("chrome://branding/locale/brand.properties")
                            .GetStringFromName("brandShortName");
 
 // String used as an indication to generate default file name in the following
 // format: "Screen Shot yyyy-mm-dd at HH.MM.SS.png"
 const FILENAME_DEFAULT_VALUE = " ";
+const BASE_URL = "resource://devtools/client/themes";
 
 /*
  * There are 2 commands and 1 converter here. The 2 commands are nearly
  * identical except that one runs on the client and one in the server.
  *
  * The server command is hidden, and is designed to be called from the client
  * command when the --chrome flag is *not* used.
  */
@@ -185,17 +186,17 @@ exports.items = [
             name: "chrome",
             type: "boolean",
             description: l10n.lookupFormat("screenshotChromeDesc2", [BRAND_SHORT_NAME]),
             manual: l10n.lookupFormat("screenshotChromeManual2", [BRAND_SHORT_NAME])
           },
         ]
       },
     ],
-    exec: function(args, context) {
+    exec: function (args, context) {
       if (args.chrome && args.selector) {
         // Node screenshot with chrome option does not work as intended
         // Refer https://bugzilla.mozilla.org/show_bug.cgi?id=659268#c7
         // throwing for now.
         throw new Error(l10n.lookup("screenshotSelectorChromeConflict"));
       }
 
       let capture;
@@ -203,28 +204,38 @@ exports.items = [
         // Re-execute the command on the server
         const command = context.typed.replace(/^screenshot/, "screenshot_server");
         capture = context.updateExec(command).then(output => {
           return output.error ? Promise.reject(output.data) : output.data;
         });
       } else {
         capture = captureScreenshot(args, context.environment.chromeDocument);
       }
-
+      const pref = "devtools.screenshot-audio.enabled";
+      const audioEnabled = Services.prefs.getBoolPref(pref);
+      if (audioEnabled) {
+        let document = context.environment.chromeDocument;
+        let window = document.defaultView;
+        const audioCamera = new window.Audio(`${BASE_URL}/audio/shutter.wav`);
+        audioCamera.play();
+      }
       return capture.then(saveScreenshot.bind(null, args, context));
     },
   },
   {
     item: "command",
     runAt: "server",
     name: "screenshot_server",
     hidden: true,
     returnType: "imageSummary",
     params: [ filenameParam, standardParams ],
-    exec: function(args, context) {
+    exec: function (args, context) {
+      const selector = args.selector ? args.selector : "html";
+      const node = context.environment.document.querySelector(selector);
+      node.animate({ opacity: [ 0, 1 ] }, 500);
       return captureScreenshot(args, context.environment.document);
     },
   }
 ];
 
 /**
  * This function simply handles the --delay argument before calling
  * createScreenshotData
