# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1547253201 28800
#      Fri Jan 11 16:33:21 2019 -0800
# Node ID 2f98e24db5de499f74daf79a87b8dfd68217e04b
# Parent  2a99e348fde3d1674296bb82c5f3881e696e8fb6
Bug 1519461 - Check for frameLoader existence before accessing it in docShellIsActive;r=mconley

Alternatively, we could check for mInitialized in `AsyncTabSwitcher.logState` before accessing
the getter. But this matches an existing pattern for other browser getters that rely on the
frameLoader existing, and will support other callers that hit this case.

Differential Revision: https://phabricator.services.mozilla.com/D16368

diff --git a/toolkit/content/widgets/browser-custom-element.js b/toolkit/content/widgets/browser-custom-element.js
--- a/toolkit/content/widgets/browser-custom-element.js
+++ b/toolkit/content/widgets/browser-custom-element.js
@@ -372,27 +372,34 @@ class MozBrowser extends MozElementMixin
   }
 
   get dateTimePicker() {
     return document.getElementById(this.getAttribute("datetimepicker"));
   }
 
   set docShellIsActive(val) {
     if (this.isRemoteBrowser) {
-      this.frameLoader.tabParent.docShellIsActive = val;
-      return val;
+      let { frameLoader } = this;
+      if (frameLoader && frameLoader.tabParent) {
+        return frameLoader.tabParent.docShellIsActive = val;
+      }
+      return false;
     }
     if (this.docShell)
       return this.docShell.isActive = val;
     return false;
   }
 
   get docShellIsActive() {
     if (this.isRemoteBrowser) {
-      return this.frameLoader.tabParent.docShellIsActive;
+      let { frameLoader } = this;
+      if (frameLoader && frameLoader.tabParent) {
+        return frameLoader.tabParent.docShellIsActive;
+      }
+      return false;
     }
     return this.docShell && this.docShell.isActive;
   }
 
   set renderLayers(val) {
     if (this.isRemoteBrowser) {
       let { frameLoader } = this;
       if (frameLoader && frameLoader.tabParent) {
