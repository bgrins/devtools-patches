
# HG changeset patch
# User Brendan Dahl <bdahl@mozilla.com>
# Date 1569283435 25200
# Node ID 2115057a189cb8dfdccad75a887a6ac598b01683
# Parent  4a20e73bd6243d88d056cb41c0d6a0d4a2bd11e5
rollup of all htmlify changes

diff --git a/browser/base/content/browser-sets.inc b/browser/base/content/browser-sets.inc
--- a/browser/base/content/browser-sets.inc
+++ b/browser/base/content/browser-sets.inc
@@ -4,16 +4,18 @@
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
 #ifdef XP_UNIX
 #ifndef XP_MACOSX
 #define XP_GNOME 1
 #endif
 #endif
 
+<box hidden="true"
+     xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
   <stringbundleset id="stringbundleset"
                    string-bookmarkthispage="&bookmarkThisPageCmd.label;"
                    string-editthisbookmark="&editThisBookmarkCmd.label;">
     <stringbundle id="bundle_brand" src="chrome://branding/locale/brand.properties"/>
     <stringbundle id="bundle_shell" src="chrome://browser/locale/shellservice.properties"/>
   </stringbundleset>
 
   <commandset id="mainCommandSet">
@@ -357,8 +359,9 @@
     <key id="key_hideThisAppCmdMac"
          key="&hideThisAppCmdMac2.commandkey;"
          modifiers="accel"/>
     <key id="key_hideOtherAppsCmdMac"
          key="&hideOtherAppsCmdMac.commandkey;"
          modifiers="accel,alt"/>
 #endif
   </keyset>
+</box>
diff --git a/browser/base/content/browser.css b/browser/base/content/browser.css
--- a/browser/base/content/browser.css
+++ b/browser/base/content/browser.css
@@ -1,14 +1,34 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 @namespace html url("http://www.w3.org/1999/xhtml");
 
+:root,
+body,
+#browser-ui-wrapper {
+  margin: 0;
+  padding: 0;
+  height: 100%;
+  width: 100%;
+  overflow: -moz-hidden-unscrollable;
+  min-width: 95px;
+  min-height: 95px;
+}
+
+:root {
+  text-rendering: optimizeLegibility;
+}
+
+:root:-moz-locale-dir(rtl) {
+  direction: rtl;
+}
+
 :root {
   --panelui-subview-transition-duration: 150ms;
   --lwt-additional-images: none;
   --lwt-background-alignment: right top;
   --lwt-background-tiling: no-repeat;
 
   --toolbar-bgcolor: var(--toolbar-non-lwt-bgcolor);
   --toolbar-bgimage: var(--toolbar-non-lwt-bgimage);
@@ -110,20 +130,20 @@ panelview[mainview] > .panel-header {
 
 .panel-viewcontainer[panelopen] {
   transition-property: height;
   transition-timing-function: var(--animation-easing-function);
   transition-duration: var(--panelui-subview-transition-duration);
   will-change: height;
 }
 
-.panel-viewcontainer.offscreen {
+/* .panel-viewcontainer.offscreen {
   display: block;
   position: absolute;
-}
+} */
 
 .panel-viewstack {
   overflow: visible;
   transition: height var(--panelui-subview-transition-duration);
 }
 
 @supports -moz-bool-pref("layout.css.emulate-moz-box-with-flex") {
   #tabbrowser-tabs {
@@ -246,17 +266,17 @@ toolbar:not([overflowing]) > .overflow-b
 toolbar[customizing] > .overflow-button {
   display: none;
 }
 
 toolbar[customizing] #whats-new-menu-button {
   display: none;
 }
 
-window:not([chromehidden~="toolbar"]) #nav-bar[nonemptyoverflow] > .overflow-button,
+:root:not([chromehidden~="toolbar"]) #nav-bar[nonemptyoverflow] > .overflow-button,
 #nav-bar[customizing] > .overflow-button {
   display: -moz-box;
 }
 
 /* The ids are ugly, but this should be reasonably performant, and
  * using a tagname as the last item would be less so.
  */
 #widget-overflow-list:empty + #widget-overflow-fixed-separator,
@@ -805,18 +825,18 @@ toolbarspring {
   }
 }
 
 menupopup[emptyplacesresult="true"] > .hide-if-empty-places-result {
   display: none;
 }
 
 /* Hide extension toolbars that neglected to set the proper class */
-window[chromehidden~="location"][chromehidden~="toolbar"] toolbar:not(.chromeclass-menubar),
-window[chromehidden~="toolbar"] toolbar:not(#nav-bar):not(#TabsToolbar):not(#print-preview-toolbar):not(.chromeclass-menubar) {
+:root[chromehidden~="location"][chromehidden~="toolbar"] toolbar:not(.chromeclass-menubar),
+:root[chromehidden~="toolbar"] toolbar:not(#nav-bar):not(#TabsToolbar):not(#print-preview-toolbar):not(.chromeclass-menubar) {
   display: none;
 }
 
 #navigator-toolbox ,
 #mainPopupSet {
   min-width: 1px;
 }
 
diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -8777,20 +8777,17 @@ var gPrivateBrowsingUI = {
 
     if (window.location.href != AppConstants.BROWSER_CHROME_URL) {
       return;
     }
 
     // Adjust the window's title
     let docElement = document.documentElement;
     if (!PrivateBrowsingUtils.permanentPrivateBrowsing) {
-      docElement.setAttribute(
-        "title",
-        docElement.getAttribute("title_privatebrowsing")
-      );
+      docElement.title = docElement.getAttribute("title_privatebrowsing");
       docElement.setAttribute(
         "titlemodifier",
         docElement.getAttribute("titlemodifier_privatebrowsing")
       );
     }
     docElement.setAttribute(
       "privatebrowsingmode",
       PrivateBrowsingUtils.permanentPrivateBrowsing ? "permanent" : "temporary"
diff --git a/browser/base/content/browser.xhtml b/browser/base/content/browser.xhtml
--- a/browser/base/content/browser.xhtml
+++ b/browser/base/content/browser.xhtml
@@ -31,23 +31,22 @@
 <?xml-stylesheet href="chrome://browser/skin/places/editBookmark.css" type="text/css"?>
 
 # All DTD information is stored in a separate file so that it can be shared by
 # hiddenWindowMac.xhtml.
 <!DOCTYPE window [
 #include browser-doctype.inc
 ]>
 
-<window id="main-window"
+<html id="main-window"
         xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
-        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
-        title="&mainWindow.title;"
+        xmlns="http://www.w3.org/1999/xhtml"
         title_normal="&mainWindow.title;"
 #ifdef XP_MACOSX
         title_privatebrowsing="&mainWindow.title;&mainWindow.titlemodifiermenuseparator;&mainWindow.titlePrivateBrowsingSuffix;"
         titledefault="&mainWindow.title;"
         titlemodifier=""
         titlemodifier_normal=""
         titlemodifier_privatebrowsing="&mainWindow.titlePrivateBrowsingSuffix;"
 #else
@@ -66,24 +65,24 @@
         windowtype="navigator:browser"
         macanimationtype="document"
         screenX="4" screenY="4"
         fullscreenbutton="true"
         sizemode="normal"
         retargetdocumentfocus="urlbar-input"
         persist="screenX screenY width height sizemode"
         data-l10n-sync="true">
+<head>
+  <link rel="localization" href="branding/brand.ftl"/>
+  <link rel="localization" href="browser/branding/sync-brand.ftl"/>
+  <link rel="localization" href="browser/browser.ftl"/>
+  <link rel="localization" href="browser/menubar.ftl"/>
+  <link rel="localization" href="browser/appmenu.ftl"/>
 
-<linkset>
-  <html:link rel="localization" href="branding/brand.ftl"/>
-  <html:link rel="localization" href="browser/branding/sync-brand.ftl"/>
-  <html:link rel="localization" href="browser/browser.ftl"/>
-  <html:link rel="localization" href="browser/menubar.ftl"/>
-  <html:link rel="localization" href="browser/appmenu.ftl"/>
-</linkset>
+  <title>&mainWindow.title;</title>
 
 # All JS files which are needed by browser.xhtml and other top level windows to
 # support MacOS specific features *must* go into the global-scripts.inc file so
 # that they can be shared with macWindow.inc.xul.
 #include global-scripts.inc
 
 <script>
   /* eslint-env mozilla/browser-window */
@@ -121,16 +120,21 @@
     gBrowserInit.onDOMContentLoaded.bind(gBrowserInit), { once: true });
 </script>
 
 # All sets except for popupsets (commands, keys, and stringbundles)
 # *must* go into the browser-sets.inc file so that they can be shared with other
 # top level windows in macWindow.inc.xul.
 #include browser-sets.inc
 
+</head>
+<body>
+
+<vbox id="browser-ui-wrapper"
+      xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
   <popupset id="mainPopupSet">
     <menupopup id="tabContextMenu"
                onpopupshowing="if (event.target == this) TabContextMenu.updateContextMenu(this);"
                onpopuphidden="if (event.target == this) TabContextMenu.contextTab = null;">
       <menuitem id="context_reloadTab" data-lazy-l10n-id="reload-tab"
                 oncommand="gBrowser.reloadTab(TabContextMenu.contextTab);"/>
       <menuitem id="context_reloadSelectedTabs" data-lazy-l10n-id="reload-tabs" hidden="true"
                 oncommand="gBrowser.reloadMultiSelectedTabs();"/>
@@ -682,16 +686,17 @@
         <label id="statuspanel-label"
                role="status"
                aria-live="off"
                flex="1"
                crop="end"/>
       </hbox>
     </hbox>
   </popupset>
+
   <box id="appMenu-viewCache" hidden="true"/>
 
   <toolbox id="navigator-toolbox">
 
     <vbox id="titlebar">
       <!-- Menu -->
       <toolbar type="menubar" id="toolbar-menubar"
                class="browser-toolbar chromeclass-menubar titlebar-color"
@@ -1402,19 +1407,22 @@
     </vbox>
     <vbox id="browser-border-end" hidden="true" layer="true"/>
   </hbox>
 
   <box id="customization-container" flex="1" renderroot="content" hidden="true"><![CDATA[
 #include ../../components/customizableui/content/customizeMode.inc.xul
   ]]></box>
 
+  <vbox id="browser-bottombox" layer="true" renderroot="content">
+    <!-- gNotificationBox will be added here lazily. -->
+  </vbox>
+
+  <html:div id="a11y-announcement" role="alert"/>
+</vbox>
+
 # Everything that needs to straddle the line between chrome and content, without being
 # its own widget-level window, needs to go in here, and set the renderroot="popover"
 # attribute, or it will fail to render properly in WebRender.
 #include popovers.inc
 
-  <vbox id="browser-bottombox" layer="true" renderroot="content">
-    <!-- gNotificationBox will be added here lazily. -->
-  </vbox>
-
-  <html:div id="a11y-announcement" role="alert"/>
-</window>
+</body>
+</html>
diff --git a/browser/base/content/popovers.inc b/browser/base/content/popovers.inc
--- a/browser/base/content/popovers.inc
+++ b/browser/base/content/popovers.inc
@@ -1,34 +1,34 @@
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at https://mozilla.org/MPL/2.0/.
-<html:div id="fullscreen-and-pointerlock-wrapper" renderroot="popover">
-  <html:div id="fullscreen-warning" class="pointerlockfswarning" hidden="true">
-    <html:div class="pointerlockfswarning-domain-text">
+<div id="fullscreen-and-pointerlock-wrapper" renderroot="popover">
+  <div id="fullscreen-warning" class="pointerlockfswarning" hidden="true">
+    <div class="pointerlockfswarning-domain-text">
       &fullscreenWarning.beforeDomain.label;
-      <html:span class="pointerlockfswarning-domain"/>
+      <span class="pointerlockfswarning-domain"/>
       &fullscreenWarning.afterDomain.label;
-    </html:div>
-    <html:div class="pointerlockfswarning-generic-text">
+    </div>
+    <div class="pointerlockfswarning-generic-text">
       &fullscreenWarning.generic.label;
-    </html:div>
-    <html:button id="fullscreen-exit-button"
+    </div>
+    <button id="fullscreen-exit-button"
                  onclick="FullScreen.exitDomFullScreen();">
 #ifdef XP_MACOSX
             &exitDOMFullscreenMac.button;
 #else
             &exitDOMFullscreen.button;
 #endif
-    </html:button>
-  </html:div>
+    </button>
+  </div>
 
-  <html:div id="pointerlock-warning" class="pointerlockfswarning" hidden="true">
-    <html:div class="pointerlockfswarning-domain-text">
+  <div id="pointerlock-warning" class="pointerlockfswarning" hidden="true">
+    <div class="pointerlockfswarning-domain-text">
       &pointerlockWarning.beforeDomain.label;
-      <html:span class="pointerlockfswarning-domain"/>
+      <span class="pointerlockfswarning-domain"/>
       &pointerlockWarning.afterDomain.label;
-    </html:div>
-    <html:div class="pointerlockfswarning-generic-text">
+    </div>
+    <div class="pointerlockfswarning-generic-text">
       &pointerlockWarning.generic.label;
-    </html:div>
-  </html:div>
-</html:div>
+    </div>
+  </div>
+</div>
diff --git a/browser/base/content/tabbrowser.js b/browser/base/content/tabbrowser.js
--- a/browser/base/content/tabbrowser.js
+++ b/browser/base/content/tabbrowser.js
@@ -967,17 +967,17 @@
       }
 
       if (!docTitle) {
         docTitle = docElement.getAttribute("titledefault");
       }
 
       var modifier = docElement.getAttribute("titlemodifier");
       if (docTitle) {
-        newTitle += docElement.getAttribute("titlepreface");
+        newTitle += docElement.getAttribute("titlepreface") || "";
         newTitle += docTitle;
         if (modifier) {
           newTitle += sep;
         }
       }
       newTitle += modifier;
 
       // If location bar is hidden and the URL type supports a host,
@@ -1356,20 +1356,17 @@
         this.selectedTab._findBarFocused
       ) {
         gFindBar._findField.focus();
         return;
       }
 
       // Don't focus the content area if something has been focused after the
       // tab switch was initiated.
-      if (
-        gMultiProcessBrowser &&
-        document.activeElement != document.documentElement
-      ) {
+      if (gMultiProcessBrowser && document.activeElement != document.body) {
         return;
       }
 
       // We're now committed to focusing the content area.
       let fm = Services.focus;
       let focusFlags = fm.FLAG_NOSCROLL;
 
       if (!gMultiProcessBrowser) {
diff --git a/browser/base/content/test/general/browser_tabfocus.js b/browser/base/content/test/general/browser_tabfocus.js
--- a/browser/base/content/test/general/browser_tabfocus.js
+++ b/browser/base/content/test/general/browser_tabfocus.js
@@ -671,16 +671,21 @@ function compareFocusResults() {
     if (gMultiProcessBrowser) {
       is(_expectedWindow, "main-window", "main-window is always expected");
     } else if (_expectedWindow != "main-window") {
       matchWindow =
         _expectedWindow == "window1"
           ? browser1.contentWindow
           : browser2.contentWindow;
     }
+    if (_expectedWindow == "main-window") {
+      // The browser window's body doesn't have an id set usually - set one now
+      // so it can be used for id comparisons below.
+      matchWindow.document.body.id = "main-window-body";
+    }
 
     var focusedElement = fm.focusedElement;
     is(
       getId(focusedElement),
       _expectedElement,
       currentTestName + " focusedElement"
     );
     is(fm.focusedWindow, matchWindow, currentTestName + " focusedWindow");
@@ -693,23 +698,17 @@ function compareFocusResults() {
     is(
       focusedWindow.value,
       matchWindow,
       currentTestName + " getFocusedElementForWindow frame"
     );
     is(matchWindow.document.hasFocus(), true, currentTestName + " hasFocus");
     var expectedActive = _expectedElement;
     if (!expectedActive) {
-      // Documents that have a XUL document element currently have a different
-      // active element behavior than regular HTML documents. This test will
-      // need to be updated when bug 1492582 is fixed.
-      expectedActive =
-        matchWindow.document.documentElement instanceof XULElement
-          ? "main-window"
-          : getId(matchWindow.document.body);
+      expectedActive = getId(matchWindow.document.body);
     }
     is(
       getId(matchWindow.document.activeElement),
       expectedActive,
       currentTestName + " activeElement"
     );
 
     currentPromiseResolver();
diff --git a/browser/components/privatebrowsing/test/browser/browser_privatebrowsing_windowtitle.js b/browser/components/privatebrowsing/test/browser/browser_privatebrowsing_windowtitle.js
--- a/browser/components/privatebrowsing/test/browser/browser_privatebrowsing_windowtitle.js
+++ b/browser/components/privatebrowsing/test/browser/browser_privatebrowsing_windowtitle.js
@@ -8,17 +8,17 @@
 add_task(async function test() {
   const testPageURL =
     "http://mochi.test:8888/browser/" +
     "browser/components/privatebrowsing/test/browser/browser_privatebrowsing_windowtitle_page.html";
   requestLongerTimeout(2);
 
   // initialization of expected titles
   let test_title = "Test title";
-  let app_name = document.documentElement.getAttribute("title");
+  let app_name = document.title;
   const isOSX = "nsILocalFileMac" in Ci;
   let page_with_title;
   let page_without_title;
   let about_pb_title;
   let pb_page_with_title;
   let pb_page_without_title;
   let pb_about_pb_title;
   if (isOSX) {
diff --git a/browser/themes/linux/browser.css b/browser/themes/linux/browser.css
--- a/browser/themes/linux/browser.css
+++ b/browser/themes/linux/browser.css
@@ -474,23 +474,23 @@ notification[value="translation"] menuli
    * See nsWindow::TopLevelWindowUseARGBVisual() for details. */
   @media (-moz-gtk-csd-transparent-background) {
     :root[tabsintitlebar][sizemode="normal"]:not(:-moz-lwtheme) {
       background-color: transparent;
       -moz-appearance: none;
     }
   }
 
-  :root[tabsintitlebar] > #navigator-toolbox > #titlebar {
+  :root[tabsintitlebar] #navigator-toolbox > #titlebar {
     -moz-appearance: -moz-window-titlebar-maximized;
   }
-  :root[tabsintitlebar][sizemode="normal"]:not([gtktiledwindow="true"]) > #navigator-toolbox > #titlebar {
+  :root[tabsintitlebar][sizemode="normal"]:not([gtktiledwindow="true"]) #navigator-toolbox > #titlebar {
     -moz-appearance: -moz-window-titlebar;
   }
-  :root[tabsintitlebar]:not([inDOMFullscreen]) > #navigator-toolbox > #titlebar:-moz-lwtheme {
+  :root[tabsintitlebar]:not([inDOMFullscreen]) #navigator-toolbox > #titlebar:-moz-lwtheme {
     visibility: hidden;
   }
   :root[tabsintitlebar]:not([inDOMFullscreen]) #toolbar-menubar:-moz-lwtheme,
   :root[tabsintitlebar]:not([inDOMFullscreen]) #TabsToolbar:-moz-lwtheme {
     visibility: visible;
   }
 
   /* When temporarily showing the menu bar, make it at least as tall as the tab
diff --git a/browser/themes/osx/browser.css b/browser/themes/osx/browser.css
--- a/browser/themes/osx/browser.css
+++ b/browser/themes/osx/browser.css
@@ -55,18 +55,17 @@
   bottom border. We cannot put this property on the toolbox itself as it
   cancels all backgrounds that are there, so we set it on the toolbox bottom
   border.
 */
 #navigator-toolbox::after {
   content: "";
   display: -moz-box;
   -moz-appearance: toolbox;
-  height: 1px;
-  margin-top: -1px;
+  height: 0;
   opacity: 0.001;
 }
 
 #tabbrowser-tabs {
   --tab-line-color: #0a84ff;
 }
 
 #navigator-toolbox toolbarbutton:-moz-lwtheme {
diff --git a/browser/themes/windows/browser.css b/browser/themes/windows/browser.css
--- a/browser/themes/windows/browser.css
+++ b/browser/themes/windows/browser.css
@@ -286,21 +286,21 @@
 }
 
 #browser-bottombox:not(:-moz-lwtheme) {
   background-color: -moz-dialog;
 }
 
 /* ::::: titlebar ::::: */
 
-#main-window[tabsintitlebar][sizemode="normal"] > #navigator-toolbox > #titlebar {
+#main-window[tabsintitlebar][sizemode="normal"] #navigator-toolbox > #titlebar {
   -moz-appearance: -moz-window-titlebar;
 }
 
-#main-window[tabsintitlebar][sizemode="maximized"] > #navigator-toolbox > #titlebar {
+#main-window[tabsintitlebar][sizemode="maximized"] #navigator-toolbox > #titlebar {
   -moz-appearance: -moz-window-titlebar-maximized;
 }
 
 @media (-moz-windows-compositor: 0) {
   /**
    * Anytime we're not using the compositor on Windows, the -moz-window-titlebar
    * and -moz-window-titlebar-maximized values for -moz-appearance override
    * backgrounds supplied by lwthemes. We make the #titlebar itself hidden, but
@@ -312,17 +312,17 @@
   }
   :root:not([inDOMFullscreen]) #toolbar-menubar:-moz-lwtheme,
   :root:not([inDOMFullscreen]) #TabsToolbar:-moz-lwtheme {
     visibility: visible;
   }
 }
 
 @media (-moz-windows-classic) {
-  #main-window[tabsintitlebar][sizemode="normal"] > #navigator-toolbox > #titlebar > #toolbar-menubar {
+  #main-window[tabsintitlebar][sizemode="normal"] #navigator-toolbox > #titlebar > #toolbar-menubar {
     margin-top: 4px;
   }
 }
 
 .titlebar-buttonbox {
   /* For all Windows configurations except for Windows Aero and Windows Aero Basic,
    * the default -moz-appearance of -moz-window-button-box and
    * -moz-window-button-box-maximized adds unwanted margins to the button box. We
diff --git a/browser/themes/windows/compacttheme.css b/browser/themes/windows/compacttheme.css
--- a/browser/themes/windows/compacttheme.css
+++ b/browser/themes/windows/compacttheme.css
@@ -5,17 +5,17 @@
 %include ../shared/compacttheme.inc.css
 
 /* The window background is white due to no accentcolor in the lightweight
    theme. It can't be changed to transparent when there is no compositor
    (Win 7 in classic / basic theme), or else dragging and focus become
    broken. So instead just show the normal titlebar in that case, and override
    the window color as transparent when the compositor is available. */
 @media (-moz-windows-compositor: 0) {
-  :root[tabsintitlebar]:not([inDOMFullscreen]) > #navigator-toolbox > #titlebar:-moz-lwtheme {
+  :root[tabsintitlebar]:not([inDOMFullscreen]) #navigator-toolbox > #titlebar:-moz-lwtheme {
     visibility: visible;
   }
 
   /* Prevent accent color overriding the window background for
    * light and dark theme on Aero Basic. This is copied from browser-aero.css. */
   @media (-moz-windows-default-theme) {
     :root {
       background-color: rgb(185,209,234) !important;
diff --git a/devtools/server/tests/mochitest/test_styles-applied.html b/devtools/server/tests/mochitest/test_styles-applied.html
--- a/devtools/server/tests/mochitest/test_styles-applied.html
+++ b/devtools/server/tests/mochitest/test_styles-applied.html
@@ -77,17 +77,17 @@ addTest(function inheritedSystemStyles()
     // If our system stylesheets are prone to churn, this might be a fragile
     // test.  If you're here because of that I apologize, file a bug
     // and we can find a different way to test.
 
     ok(!applied[1].inherited, "Entry 1 should not be inherited");
     ok(!applied[1].rule.parentStyleSheet.system, "Entry 1 should be a system style");
     is(applied[1].rule.type, 1, "Entry 1 should be a rule style");
 
-    is(applied.length, 12, "Should have 12 rules.");
+    is(applied.length, 13, "Should have 13 rules.");
   }).then(runNextTest));
 });
 
 addTest(function noInheritedStyles() {
   promiseDone(gWalker.querySelector(gWalker.rootNode, "#test-node").then(node => {
     return gStyles.getApplied(node, { inherited: false, filter: "user" });
   }).then(applied => {
     ok(!applied[0].inherited, "Entry 0 should be uninherited");
diff --git a/dom/base/Document.cpp b/dom/base/Document.cpp
--- a/dom/base/Document.cpp
+++ b/dom/base/Document.cpp
@@ -5742,19 +5742,19 @@ Element* Document::GetActiveElement() {
   }
 
   // No focused element anywhere in this document.  Try to get the BODY.
   if (IsHTMLOrXHTML()) {
     Element* bodyElement = AsHTMLDocument()->GetBody();
     if (bodyElement) {
       return bodyElement;
     }
-    // Special case to handle the transition to browser.xhtml where there is
-    // currently not a body element, but we need to match the XUL behavior.
-    // This should be removed when bug 1492582 is resolved.
+    // Special case to handle the transition to XHTML from XUL documents
+    // where there currently isn't a body element, but we need to match the
+    // XUL behavior. This should be removed when bug 1540278 is resolved.
     if (nsContentUtils::IsChromeDoc(this)) {
       Element* docElement = GetDocumentElement();
       if (docElement && docElement->IsXULElement()) {
         return docElement;
       }
     }
     // Because of IE compatibility, return null when html document doesn't have
     // a body.
diff --git a/toolkit/content/xul.css b/toolkit/content/xul.css
--- a/toolkit/content/xul.css
+++ b/toolkit/content/xul.css
@@ -20,38 +20,41 @@
  */
 
 @import url("chrome://global/skin/tooltip.css");
 
 @namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"); /* set default namespace to XUL */
 @namespace html url("http://www.w3.org/1999/xhtml"); /* namespace for HTML elements */
 @namespace xbl url("http://www.mozilla.org/xbl"); /* namespace for XBL elements */
 
+*|*:root {
+  --animation-easing-function: cubic-bezier(.07, .95, 0, 1);
+}
+
 :root {
   text-rendering: optimizeLegibility;
   -moz-control-character-visibility: visible;
-  --animation-easing-function: cubic-bezier(.07, .95, 0, 1);
 }
 
 :root:-moz-locale-dir(rtl) {
   direction: rtl;
 }
 
 /* ::::::::::
    :: Rules for 'hiding' portions of the chrome for special
    :: kinds of windows (not JUST browser windows) with toolbars
    ::::: */
 
-window[chromehidden~="menubar"] .chromeclass-menubar,
-window[chromehidden~="directories"] .chromeclass-directories,
-window[chromehidden~="status"] .chromeclass-status,
-window[chromehidden~="extrachrome"] .chromeclass-extrachrome,
-window[chromehidden~="location"] .chromeclass-location,
-window[chromehidden~="location"][chromehidden~="toolbar"] .chromeclass-toolbar,
-window[chromehidden~="toolbar"] .chromeclass-toolbar-additional {
+*|*:root[windowtype][chromehidden~="menubar"] .chromeclass-menubar,
+*|*:root[windowtype][chromehidden~="directories"] .chromeclass-directories,
+*|*:root[windowtype][chromehidden~="status"] .chromeclass-status,
+*|*:root[windowtype][chromehidden~="extrachrome"] .chromeclass-extrachrome,
+*|*:root[windowtype][chromehidden~="location"] .chromeclass-location,
+*|*:root[windowtype][chromehidden~="location"][chromehidden~="toolbar"] .chromeclass-toolbar,
+*|*:root[windowtype][chromehidden~="toolbar"] .chromeclass-toolbar-additional {
   display: none;
 }
 
 /* ::::::::::
    :: Rules for forcing direction for entry and display of URIs
    :: or URI elements
    ::::: */
 
diff --git a/toolkit/locales/en-US/chrome/global/intl.css b/toolkit/locales/en-US/chrome/global/intl.css
--- a/toolkit/locales/en-US/chrome/global/intl.css
+++ b/toolkit/locales/en-US/chrome/global/intl.css
@@ -1,11 +1,11 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 /*
  * This file contains all localizable skin settings such as 
  *   font, layout, and geometry
  */
-window { 
+window, html {
   font: 3mm tahoma,arial,helvetica,sans-serif;
 }
diff --git a/toolkit/themes/shared/findBar.inc.css b/toolkit/themes/shared/findBar.inc.css
--- a/toolkit/themes/shared/findBar.inc.css
+++ b/toolkit/themes/shared/findBar.inc.css
@@ -36,17 +36,17 @@ findbar[noanim] {
 .findbar-closebutton {
   padding: 0 8px;
 }
 
 /* Search field */
 
 /* Don't apply theme colors on findbar when header image is applied to avoid
 contrast issues, see bug 1506913 */
-:root[lwtheme-image] findbar {
+*|*:root[lwtheme-image] findbar {
   --lwt-toolbar-field-background-color: initial;
   --lwt-toolbar-field-color: initial;
   --lwt-toolbar-field-border-color: initial;
   --lwt-toolbar-field-focus: initial;
   --lwt-toolbar-field-focus-color: initial;
 }
 
 html|input.findbar-textbox {
diff --git a/toolkit/themes/shared/in-content/common.inc.css b/toolkit/themes/shared/in-content/common.inc.css
--- a/toolkit/themes/shared/in-content/common.inc.css
+++ b/toolkit/themes/shared/in-content/common.inc.css
@@ -145,19 +145,17 @@
 
     --card-outline-color: var(--grey-60);
 
     scrollbar-color: rgba(249,249,250,.4) rgba(20,20,25,.3);
   }
 }
 }
 
-html|html,
-xul|page,
-xul|window {
+*|*:root {
   font: message-box;
   -moz-appearance: none;
   background-color: var(--in-content-page-background);
   color: var(--in-content-page-color);
 }
 
 html|body {
   font-size: 15px;
