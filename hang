# HG changeset patch
# Parent ac90f9d869c943d94b0e15e6fbaf06e6e0261a84
# User Brian Grinstead <bgrinstead@mozilla.com>
Bug 927630 - Hang if tabs switched while Inspector is opening.

diff --git a/toolkit/devtools/LayoutHelpers.jsm b/toolkit/devtools/LayoutHelpers.jsm
--- a/toolkit/devtools/LayoutHelpers.jsm
+++ b/toolkit/devtools/LayoutHelpers.jsm
@@ -15,16 +15,21 @@ XPCOMUtils.defineLazyModuleGetter(this, 
 
 this.EXPORTED_SYMBOLS = ["LayoutHelpers"];
 
 this.LayoutHelpers = LayoutHelpers = function(aTopLevelWindow) {
   this._topDocShell = aTopLevelWindow.QueryInterface(Ci.nsIInterfaceRequestor)
                                      .getInterface(Ci.nsIWebNavigation)
                                      .QueryInterface(Ci.nsIDocShell);
 };
+const console = (function() {
+  const tempScope = {};
+  Components.utils.import("resource://gre/modules/devtools/Console.jsm", tempScope);
+  return tempScope.console;
+})();
 
 LayoutHelpers.prototype = {
 
   /**
    * Compute the position and the dimensions for the visible portion
    * of a node, relativalely to the root window.
    *
    * @param nsIDOMNode aNode
@@ -104,27 +109,27 @@ LayoutHelpers.prototype = {
    * @param nsIDOMNode aNode
    *        a DOM element to get the bounds for
    * @param nsIWindow aContentWindow
    *        the content window holding the node
    */
   getRect: function LH_getRect(aNode, aContentWindow) {
     let frameWin = aNode.ownerDocument.defaultView;
     let clientRect = aNode.getBoundingClientRect();
-
+    console.log(frameWin, aContentWindow, frameWin === aContentWindow)
     // Go up in the tree of frames to determine the correct rectangle.
     // clientRect is read-only, we need to be able to change properties.
     rect = {top: clientRect.top + aContentWindow.pageYOffset,
             left: clientRect.left + aContentWindow.pageXOffset,
             width: clientRect.width,
             height: clientRect.height};
 
     // We iterate through all the parent windows.
     while (true) {
-
+      break;
       // Are we in the top-level window?
       if (this.isTopLevelWindow(frameWin)) {
         break;
       }
 
       let frameElement = this.getFrameElement(frameWin);
       if (!frameElement) {
         break;
