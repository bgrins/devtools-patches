# HG changeset patch
# Parent 735024c55f8971175ccbc0acf8f7169f462dc9c7
# User Brian Grinstead <bgrinstead@mozilla.com>
Bug 1058167 - Activate split console command button when initially opened;r=jwalker


diff --git a/browser/devtools/framework/toolbox.js b/browser/devtools/framework/toolbox.js
--- a/browser/devtools/framework/toolbox.js
+++ b/browser/devtools/framework/toolbox.js
@@ -259,16 +259,21 @@ Toolbox.prototype = {
         this._loadInitialZoom();
 
         this.webconsolePanel = this.doc.querySelector("#toolbox-panel-webconsole");
         this.webconsolePanel.height =
           Services.prefs.getIntPref(SPLITCONSOLE_HEIGHT_PREF);
         this.webconsolePanel.addEventListener("resize",
           this._saveSplitConsoleHeight);
 
+        // Set the state before building command buttons.
+        // XXX: should handle this by triggering onchange on the cmd button inside of open/close
+        // split console
+        this._splitConsole = Services.prefs.getBoolPref(SPLITCONSOLE_ENABLED_PREF);
+
         let buttonsPromise = this._buildButtons();
 
         this._telemetry.toolOpened("toolbox");
 
         this.selectTool(this._defaultToolId).then(panel => {
 
           // Wait until the original tool is selected so that the split
           // console input will receive focus.
diff --git a/browser/devtools/webconsole/console-commands.js b/browser/devtools/webconsole/console-commands.js
--- a/browser/devtools/webconsole/console-commands.js
+++ b/browser/devtools/webconsole/console-commands.js
@@ -33,16 +33,18 @@ exports.items = [
     name: 'splitconsole',
     hidden: true,
     buttonId: "command-button-splitconsole",
     buttonClass: "command-button command-button-invertable",
     tooltipText: gcli.lookup("splitconsoleTooltip"),
     state: {
       isChecked: function(target) {
         let toolbox = gDevTools.getToolbox(target);
+        console.log("CHECKING ", !!(toolbox && toolbox.splitConsole));
+        console.trace();
         return !!(toolbox && toolbox.splitConsole);
       },
       onChange: function(target, changeHandler) {
         eventEmitter.on("changed", changeHandler);
       },
       offChange: function(target, changeHandler) {
         eventEmitter.off("changed", changeHandler);
       },
