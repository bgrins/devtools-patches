# HG changeset patch
# Parent f0f33c3d6411fbbc561719cd13b266f34ca1b4da
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  9c617d92add6da33f2f81f553d0302af6d3f3fc1
try: -b do -p linux,linux64,macosx64,win32 -u xpcshell,mochitests -t none

diff --git a/browser/devtools/sourceeditor/test/browser_editor_autocomplete_events.js b/browser/devtools/sourceeditor/test/browser_editor_autocomplete_events.js
--- a/browser/devtools/sourceeditor/test/browser_editor_autocomplete_events.js
+++ b/browser/devtools/sourceeditor/test/browser_editor_autocomplete_events.js
@@ -37,17 +37,17 @@ function testKeyboard(ed, win) {
   ed.setOption("autocomplete", true);
   ed.focus();
   ed.setText("b");
   ed.setCursor({line: 1, ch: 1});
 
   let waitForSuggestion = promise.defer();
 
   ed.getAutocompletionPopup().once("popup-opened", () => {
-    info("before-suggest has been triggered");
+    info("popup-opened has been triggered");
     EventUtils.synthesizeKey("VK_RETURN", { }, win);
     is (ed.getText(), "b1", "Editor text has been updated");
     waitForSuggestion.resolve();
   });
 
   let autocompleteKey = Editor.keyFor("autocompletion", { noaccel: true }).toUpperCase();
   EventUtils.synthesizeKey("VK_" + autocompleteKey, { ctrlKey: true }, win);
 
@@ -57,17 +57,17 @@ function testKeyboard(ed, win) {
 function testMouse(ed, win) {
   ed.focus();
   ed.setText("b");
   ed.setCursor({line: 1, ch: 1});
 
   let waitForSuggestion = promise.defer();
 
   ed.getAutocompletionPopup().once("popup-opened", () => {
-    info("before-suggest has been triggered");
+    info("popup-opened has been triggered");
     ed.getAutocompletionPopup()._list.firstChild.click();
     is (ed.getText(), "b1", "Editor text has been updated");
     waitForSuggestion.resolve();
   });
 
   let autocompleteKey = Editor.keyFor("autocompletion", { noaccel: true }).toUpperCase();
   EventUtils.synthesizeKey("VK_" + autocompleteKey, { ctrlKey: true }, win);
 
