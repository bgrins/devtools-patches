# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  24c6114c0a2309a327ad744614dc9cfd651b33de

diff --git a/browser/components/search/content/searchbar.js b/browser/components/search/content/searchbar.js
--- a/browser/components/search/content/searchbar.js
+++ b/browser/components/search/content/searchbar.js
@@ -440,36 +440,65 @@ class MozSearchbar extends MozXULElement
 
       this.openSuggestionsPanel();
     }, true);
 
     this.addEventListener("mousedown", (event) => {
       if (event.originalTarget.classList.contains("searchbar-search-button")) {
         this._clickClosedPopup = this._textbox.popup._isHiding;
       }
-    }, true);
+
+      // Ignore clicks on the search go button.
+      if (event.originalTarget.classList.contains("search-go-button")) {
+        return;
+      }
+
+      let isIconClick = event.originalTarget.classList.contains("searchbar-search-button");
+
+      // Ignore clicks on the icon if they were made to close the popup
+      console.log("Returning because of icon click?", this._textbox.popup._isHiding, this._clickClosedPopup);
+      console.trace();
+      if (isIconClick && this._clickClosedPopup) {
+        // console.log("Returning because of icon click", this._textbox.popup._isHiding, this._textbox.popup.popupOpen);
+        return;
+      }
+
+      console.log(isIconClick, event.originalTarget);
+
+      // Open the suggestions whenever clicking on the search icon or if there
+      // is text in the textbox.
+      if (isIconClick || this._textbox.value) {
+        this.openSuggestionsPanel(true);
+      }
+
+    }, { mozSystemGroup: true, capture: true } );
 
     this.addEventListener("mousedown", (event) => {
       // Ignore clicks on the search go button.
       if (event.originalTarget.classList.contains("search-go-button")) {
         return;
       }
 
       let isIconClick = event.originalTarget.classList.contains("searchbar-search-button");
 
       // Ignore clicks on the icon if they were made to close the popup
+      console.log("Returning because of icon click?", this._textbox.popup._isHiding, this._clickClosedPopup);
+      console.trace();
       if (isIconClick && this._clickClosedPopup) {
+        // console.log("Returning because of icon click", this._textbox.popup._isHiding, this._textbox.popup.popupOpen);
         return;
       }
 
+      console.log(isIconClick, event.originalTarget);
+
       // Open the suggestions whenever clicking on the search icon or if there
       // is text in the textbox.
       if (isIconClick || this._textbox.value) {
         this.openSuggestionsPanel(true);
       }
-    });
+    }, {mozSystemGroup: true});
 
   }
 }
 
 customElements.define("searchbar", MozSearchbar);
 
 }
diff --git a/browser/components/search/test/browser_searchbar_openpopup.js b/browser/components/search/test/browser_searchbar_openpopup.js
--- a/browser/components/search/test/browser_searchbar_openpopup.js
+++ b/browser/components/search/test/browser_searchbar_openpopup.js
@@ -130,21 +130,25 @@ add_no_popup_task(async function open_ic
 
 // With no text in the search box left clicking the icon should open the popup.
 // Clicking the icon again should hide the popup and not show it again.
 add_task(async function open_empty() {
   gURLBar.focus();
 
   let promise = promiseEvent(searchPopup, "popupshown");
   info("Clicking icon");
+  // console.log(searchIcon);
+  // await new Promise(r=>setTimeout(r, 1000));
   EventUtils.synthesizeMouseAtCenter(searchIcon, {});
+  // is(searchPopup.getAttribute("showonlysettings"), "true", "Should only show the settings");
   await promise;
   is(searchPopup.getAttribute("showonlysettings"), "true", "Should only show the settings");
   is(textbox.mController.searchString, "", "Should be an empty search string");
 
+
   // By giving the textbox some text any next attempt to open the search popup
   // from the click handler will try to search for this text.
   textbox.value = "foo";
 
   promise = promiseEvent(searchPopup, "popuphidden");
 
   info("Hiding popup");
   await synthesizeNativeMouseClick(searchIcon);
