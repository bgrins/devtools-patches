# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1561055643 25200
#      Thu Jun 20 11:34:03 2019 -0700
# Node ID 3fe7b859f0330169d38935c9f203549a8fbf5e5a
# Parent  875ae8e3ce6f706c2e48d04375145d08b94e05bf
Bug 1550061 - WIP - Create an HTML custom element replacement for xul key

Differential Revision: https://phabricator.services.mozilla.com/D35446

diff --git a/browser/base/content/browser-development-helpers.js b/browser/base/content/browser-development-helpers.js
--- a/browser/base/content/browser-development-helpers.js
+++ b/browser/base/content/browser-development-helpers.js
@@ -28,22 +28,21 @@ var DevelopmentHelpers = {
 
   addRestartShortcut() {
     let command = document.createXULElement("command");
     command.setAttribute("id", "cmd_quickRestart");
     command.addEventListener("command", this.quickRestart, true);
     command.setAttribute("oncommand", "void 0;"); // Needed - bug 371900
     document.getElementById("mainCommandSet").prepend(command);
 
-    let key = document.createXULElement("key");
+    let key = document.createElement("moz-key");
     key.setAttribute("id", "key_quickRestart");
     key.setAttribute("key", "r");
     key.setAttribute("modifiers", "accel,alt");
     key.setAttribute("command", "cmd_quickRestart");
-    key.setAttribute("oncommand", "void 0;"); // Needed - bug 371900
     document.getElementById("mainKeyset").prepend(key);
 
     let menuitem = document.createXULElement("menuitem");
     menuitem.setAttribute("id", "menu_FileRestartItem");
     menuitem.setAttribute("key", "key_quickRestart");
     menuitem.setAttribute("label", "Restart (Developer)");
     menuitem.addEventListener("command", this.quickRestart, true);
     document.getElementById("menu_FilePopup").appendChild(menuitem);
diff --git a/browser/base/content/browser-places.js b/browser/base/content/browser-places.js
--- a/browser/base/content/browser-places.js
+++ b/browser/base/content/browser-places.js
@@ -133,17 +133,17 @@ var StarUI = {
               //    be enough.
               break;
             }
             this.panel.hidePopup();
             break;
           // This case is for catching character-generating keypresses
           case 0:
             let accessKey = document.getElementById("key_close");
-            if (eventMatchesKey(aEvent, accessKey)) {
+            if (accessKey.eventMatches(aEvent)) {
               this.panel.hidePopup();
             }
             break;
         }
         break;
       case "compositionend":
         // After composition is committed, "mouseout" or something can set
         // auto close timer.
diff --git a/browser/base/content/browser-sets.inc b/browser/base/content/browser-sets.inc
--- a/browser/base/content/browser-sets.inc
+++ b/browser/base/content/browser-sets.inc
@@ -116,26 +116,26 @@
              label="&zoomWindow.label;"
              oncommand="zoomWindow();" />
 #endif
   </commandset>
 
 #include ../../components/places/content/placesCommands.inc.xhtml
 
   <keyset id="mainKeyset">
-    <key id="key_newNavigator"
+    <html:moz-key id="key_newNavigator"
          key="&newNavigatorCmd.key;"
          command="cmd_newNavigator"
          modifiers="accel" reserved="true"/>
-    <key id="key_newNavigatorTab" key="&tabCmd.commandkey;" modifiers="accel"
+    <html:moz-key id="key_newNavigatorTab" key="&tabCmd.commandkey;" modifiers="accel"
          command="cmd_newNavigatorTabNoEvent" reserved="true"/>
-    <key id="focusURLBar" key="&openCmd.commandkey;" command="Browser:OpenLocation"
+    <html:moz-key id="focusURLBar" key="&openCmd.commandkey;" command="Browser:OpenLocation"
          modifiers="accel"/>
 #ifndef XP_MACOSX
-    <key id="focusURLBar2" key="&urlbar.accesskey;" command="Browser:OpenLocation"
+    <html:moz-key id="focusURLBar2" key="&urlbar.accesskey;" command="Browser:OpenLocation"
          modifiers="alt"/>
 #endif
 
 #
 # Search Command Key Logic works like this:
 #
 # Unix: Ctrl+K (cross platform binding)
 #       Ctrl+J (in case of emacs Ctrl-K conflict)
@@ -146,231 +146,232 @@
 #
 # We support Ctrl+K on all platforms now and advertise it in the menu since it is
 # our standard - it is a "safe" choice since it is near no harmful keys like "W" as
 # "E" is. People mourning the loss of Ctrl+K for emacs compat can switch their GTK
 # system setting to use emacs emulation, and we should respect it. Focus-Search-Box
 # is a fundamental keybinding and we are maintaining a XP binding so that it is easy
 # for people to switch to Linux.
 #
-    <key id="key_search" key="&searchFocus.commandkey;" command="Tools:Search" modifiers="accel"/>
+    <html:moz-key id="key_search" key="&searchFocus.commandkey;" command="Tools:Search" modifiers="accel"/>
 #ifdef XP_MACOSX
-    <key id="key_search2" key="&findOnCmd.commandkey;" command="Tools:Search" modifiers="accel,alt"/>
+    <html:moz-key id="key_search2" key="&findOnCmd.commandkey;" command="Tools:Search" modifiers="accel,alt"/>
 #endif
 #ifdef XP_WIN
-    <key id="key_search2" key="&searchFocus.commandkey2;" command="Tools:Search" modifiers="accel"/>
+    <html:moz-key id="key_search2" key="&searchFocus.commandkey2;" command="Tools:Search" modifiers="accel"/>
 #endif
 #ifdef XP_GNOME
-    <key id="key_search2" key="&searchFocusUnix.commandkey;" command="Tools:Search" modifiers="accel"/>
-    <key id="key_openDownloads" key="&downloadsUnix.commandkey;" command="Tools:Downloads" modifiers="accel,shift"/>
+    <html:moz-key id="key_search2" key="&searchFocusUnix.commandkey;" command="Tools:Search" modifiers="accel"/>
+    <html:moz-key id="key_openDownloads" key="&downloadsUnix.commandkey;" command="Tools:Downloads" modifiers="accel,shift"/>
 #else
-    <key id="key_openDownloads" key="&downloads.commandkey;" command="Tools:Downloads" modifiers="accel"/>
+    <html:moz-key id="key_openDownloads" key="&downloads.commandkey;" command="Tools:Downloads" modifiers="accel"/>
 #endif
-    <key id="key_openAddons" key="&addons.commandkey;" command="Tools:Addons" modifiers="accel,shift"/>
-    <key id="openFileKb" key="&openFileCmd.commandkey;" command="Browser:OpenFile"  modifiers="accel"/>
-    <key id="key_savePage" key="&savePageCmd.commandkey;" command="Browser:SavePage" modifiers="accel"/>
-    <key id="printKb" key="&printCmd.commandkey;" command="cmd_print"  modifiers="accel"/>
-    <key id="key_close" key="&closeCmd.key;" command="cmd_close" modifiers="accel" reserved="true"/>
-    <key id="key_closeWindow" key="&closeCmd.key;" command="cmd_closeWindow" modifiers="accel,shift" reserved="true"/>
-    <key id="key_toggleMute" key="&toggleMuteCmd.key;" command="cmd_toggleMute" modifiers="control"/>
-    <key id="key_undo"
+    <html:moz-key id="key_openAddons" key="&addons.commandkey;" command="Tools:Addons" modifiers="accel,shift"/>
+    <html:moz-key id="openFileKb" key="&openFileCmd.commandkey;" command="Browser:OpenFile"  modifiers="accel"/>
+    <html:moz-key id="key_savePage" key="&savePageCmd.commandkey;" command="Browser:SavePage" modifiers="accel"/>
+    <html:moz-key id="printKb" key="&printCmd.commandkey;" command="cmd_print"  modifiers="accel"/>
+    <html:moz-key id="key_close" key="&closeCmd.key;" command="cmd_close" modifiers="accel" reserved="true"/>
+    <html:moz-key id="key_closeWindow" key="&closeCmd.key;" command="cmd_closeWindow" modifiers="accel,shift" reserved="true"/>
+    <html:moz-key id="key_toggleMute" key="&toggleMuteCmd.key;" command="cmd_toggleMute" modifiers="control"/>
+    <html:moz-key id="key_undo"
          data-l10n-id="text-action-undo-shortcut"
          modifiers="accel"/>
-    <key id="key_redo"
+    <html:moz-key id="key_redo"
 #ifdef XP_UNIX
          data-l10n-id="text-action-undo-shortcut"
          modifiers="accel,shift"
 #else
          data-l10n-id="text-action-redo-shortcut"
          modifiers="accel"
 #endif
          />
-    <key id="key_cut"
+    <html:moz-key id="key_cut"
          data-l10n-id="text-action-cut-shortcut"
          modifiers="accel"/>
-    <key id="key_copy"
+    <html:moz-key id="key_copy"
          data-l10n-id="text-action-copy-shortcut"
          modifiers="accel"/>
-    <key id="key_paste"
+    <html:moz-key id="key_paste"
          data-l10n-id="text-action-paste-shortcut"
          modifiers="accel"/>
-    <key id="key_delete" keycode="VK_DELETE" command="cmd_delete"/>
-    <key id="key_selectAll" data-l10n-id="text-action-select-all-shortcut" modifiers="accel"/>
+    <html:moz-key id="key_delete" keycode="VK_DELETE" command="cmd_delete"/>
+    <html:moz-key id="key_selectAll" data-l10n-id="text-action-select-all-shortcut" modifiers="accel"/>
 
-    <key keycode="VK_BACK" command="cmd_handleBackspace" reserved="false"/>
-    <key keycode="VK_BACK" command="cmd_handleShiftBackspace" modifiers="shift" reserved="false"/>
+    <html:moz-key keycode="VK_BACK" command="cmd_handleBackspace" reserved="false"/>
+    <html:moz-key keycode="VK_BACK" command="cmd_handleShiftBackspace" modifiers="shift" reserved="false"/>
 #ifndef XP_MACOSX
-    <key id="goBackKb"  keycode="VK_LEFT" command="Browser:Back" modifiers="alt"/>
-    <key id="goForwardKb"  keycode="VK_RIGHT" command="Browser:Forward" modifiers="alt"/>
+    <html:moz-key id="goBackKb"  keycode="VK_LEFT" command="Browser:Back" modifiers="alt"/>
+    <html:moz-key id="goForwardKb"  keycode="VK_RIGHT" command="Browser:Forward" modifiers="alt"/>
 #else
-    <key id="goBackKb" keycode="VK_LEFT" command="Browser:Back" modifiers="accel" />
-    <key id="goForwardKb" keycode="VK_RIGHT" command="Browser:Forward" modifiers="accel" />
+    <html:moz-key id="goBackKb" keycode="VK_LEFT" command="Browser:Back" modifiers="accel" />
+    <html:moz-key id="goForwardKb" keycode="VK_RIGHT" command="Browser:Forward" modifiers="accel" />
 #endif
 #ifdef XP_UNIX
-    <key id="goBackKb2" key="&goBackCmd.commandKey;" command="Browser:Back" modifiers="accel"/>
-    <key id="goForwardKb2" key="&goForwardCmd.commandKey;" command="Browser:Forward" modifiers="accel"/>
+    <html:moz-key id="goBackKb2" key="&goBackCmd.commandKey;" command="Browser:Back" modifiers="accel"/>
+    <html:moz-key id="goForwardKb2" key="&goForwardCmd.commandKey;" command="Browser:Forward" modifiers="accel"/>
 #endif
-    <key id="goHome" keycode="VK_HOME" oncommand="BrowserHome();" modifiers="alt"/>
-    <key keycode="VK_F5" command="Browser:Reload"/>
+    <html:moz-key id="goHome" keycode="VK_HOME" oncommand="BrowserHome();" modifiers="alt"/>
+    <html:moz-key keycode="VK_F5" command="Browser:Reload"/>
 #ifndef XP_MACOSX
-    <key id="showAllHistoryKb" key="&showAllHistoryCmd.commandkey;" command="Browser:ShowAllHistory" modifiers="accel,shift"/>
-    <key keycode="VK_F5" command="Browser:ReloadSkipCache" modifiers="accel"/>
-    <key id="key_fullScreen" keycode="VK_F11" command="View:FullScreen"/>
+    <html:moz-key id="showAllHistoryKb" key="&showAllHistoryCmd.commandkey;" command="Browser:ShowAllHistory" modifiers="accel,shift"/>
+    <html:moz-key keycode="VK_F5" command="Browser:ReloadSkipCache" modifiers="accel"/>
+    <html:moz-key id="key_fullScreen" keycode="VK_F11" command="View:FullScreen"/>
 #else
-    <key id="key_fullScreen" key="&fullScreenCmd.macCommandKey;" command="View:FullScreen" modifiers="accel,control"/>
-    <key id="key_fullScreen_old" key="&fullScreenCmd.macCommandKey;" command="View:FullScreen" modifiers="accel,shift"/>
-    <key keycode="VK_F11" command="View:FullScreen"/>
+    <html:moz-key id="key_fullScreen" key="&fullScreenCmd.macCommandKey;" command="View:FullScreen" modifiers="accel,control"/>
+    <html:moz-key id="key_fullScreen_old" key="&fullScreenCmd.macCommandKey;" command="View:FullScreen" modifiers="accel,shift"/>
+    <html:moz-key keycode="VK_F11" command="View:FullScreen"/>
 #endif
 #ifndef XP_WIN
-    <key id="key_toggleReaderMode" key="&toggleReaderMode.key;" command="View:ReaderView" modifiers="accel,alt" disabled="true"/>
+    <html:moz-key id="key_toggleReaderMode" key="&toggleReaderMode.key;" command="View:ReaderView" modifiers="accel,alt" disabled="true"/>
 #else
-    <key id="key_toggleReaderMode" keycode="&toggleReaderMode.win.keycode;" command="View:ReaderView" disabled="true"/>
+    <html:moz-key id="key_toggleReaderMode" keycode="&toggleReaderMode.win.keycode;" command="View:ReaderView" disabled="true"/>
 #endif
 
 #ifndef XP_MACOSX
-    <key id="key_togglePictureInPicture" key="&togglePictureInPicture.key;" command="View:PictureInPicture" modifiers="accel,shift"/>
-    <key                                 key="&togglePictureInPicture.key2;" command="View:PictureInPicture" modifiers="accel,shift"/>
+    <html:moz-key id="key_togglePictureInPicture" key="&togglePictureInPicture.key;" command="View:PictureInPicture" modifiers="accel,shift"/>
+    <html:moz-key                                 key="&togglePictureInPicture.key2;" command="View:PictureInPicture" modifiers="accel,shift"/>
 #endif
 
-    <key key="&reloadCmd.commandkey;" command="Browser:Reload" modifiers="accel" id="key_reload"/>
-    <key key="&reloadCmd.commandkey;" command="Browser:ReloadSkipCache" modifiers="accel,shift" id="key_reload_skip_cache"/>
-    <key id="key_viewSource" key="&pageSourceCmd.commandkey;" command="View:PageSource" modifiers="accel"/>
+    <html:moz-key key="&reloadCmd.commandkey;" command="Browser:Reload" modifiers="accel" id="key_reload"/>
+    <html:moz-key key="&reloadCmd.commandkey;" command="Browser:ReloadSkipCache" modifiers="accel,shift" id="key_reload_skip_cache"/>
+    <html:moz-key id="key_viewSource" key="&pageSourceCmd.commandkey;" command="View:PageSource" modifiers="accel"/>
 #ifdef XP_MACOSX
-    <key id="key_viewSourceSafari" key="&pageSourceCmd.SafariCommandKey;" command="View:PageSource" modifiers="accel,alt"/>
+    <html:moz-key id="key_viewSourceSafari" key="&pageSourceCmd.SafariCommandKey;" command="View:PageSource" modifiers="accel,alt"/>
 #endif
 #ifndef XP_WIN
-    <key id="key_viewInfo"   key="&pageInfoCmd.commandkey;"   command="View:PageInfo"   modifiers="accel"/>
+    <html:moz-key id="key_viewInfo"   key="&pageInfoCmd.commandkey;"   command="View:PageInfo"   modifiers="accel"/>
 #endif
-    <key id="key_find" key="&findOnCmd.commandkey;" command="cmd_find" modifiers="accel"/>
-    <key id="key_findAgain" key="&findAgainCmd.commandkey;" command="cmd_findAgain" modifiers="accel"/>
-    <key id="key_findPrevious" key="&findAgainCmd.commandkey;" command="cmd_findPrevious" modifiers="accel,shift"/>
+    <html:moz-key id="key_find" key="&findOnCmd.commandkey;" command="cmd_find" modifiers="accel"/>
+    <html:moz-key id="key_findAgain" key="&findAgainCmd.commandkey;" command="cmd_findAgain" modifiers="accel"/>
+    <html:moz-key id="key_findPrevious" key="&findAgainCmd.commandkey;" command="cmd_findPrevious" modifiers="accel,shift"/>
 #ifdef XP_MACOSX
-    <key id="key_findSelection" key="&findSelectionCmd.commandkey;" command="cmd_findSelection" modifiers="accel"/>
+    <html:moz-key id="key_findSelection" key="&findSelectionCmd.commandkey;" command="cmd_findSelection" modifiers="accel"/>
 #endif
-    <key keycode="&findAgainCmd.commandkey2;" command="cmd_findAgain"/>
-    <key keycode="&findAgainCmd.commandkey2;"  command="cmd_findPrevious" modifiers="shift"/>
+    <html:moz-key keycode="&findAgainCmd.commandkey2;" command="cmd_findAgain"/>
+    <html:moz-key keycode="&findAgainCmd.commandkey2;"  command="cmd_findPrevious" modifiers="shift"/>
 
-    <key id="addBookmarkAsKb" key="&bookmarkThisPageCmd.commandkey;" command="Browser:AddBookmarkAs" modifiers="accel"/>
-    <key id="bookmarkAllTabsKb" key="&bookmarkThisPageCmd.commandkey;" oncommand="PlacesCommandHook.bookmarkPages(PlacesCommandHook.uniqueCurrentPages);" modifiers="accel,shift"/>
+    <html:moz-key id="addBookmarkAsKb" key="&bookmarkThisPageCmd.commandkey;" command="Browser:AddBookmarkAs" modifiers="accel"/>
+    <html:moz-key id="bookmarkAllTabsKb" key="&bookmarkThisPageCmd.commandkey;" oncommand="PlacesCommandHook.bookmarkPages(PlacesCommandHook.uniqueCurrentPages);" modifiers="accel,shift"/>
 # Accel+Shift+A-F are reserved on GTK
 #ifndef MOZ_WIDGET_GTK
-    <key id="manBookmarkKb" key="&bookmarksCmd.commandkey;" command="Browser:ShowAllBookmarks" modifiers="accel,shift"/>
+    <html:moz-key id="manBookmarkKb" key="&bookmarksCmd.commandkey;" command="Browser:ShowAllBookmarks" modifiers="accel,shift"/>
 #else
-    <key id="manBookmarkKb" key="&bookmarksGtkCmd.commandkey;" command="Browser:ShowAllBookmarks" modifiers="accel,shift"/>
+    <html:moz-key id="manBookmarkKb" key="&bookmarksGtkCmd.commandkey;" command="Browser:ShowAllBookmarks" modifiers="accel,shift"/>
 #endif
-    <key id="viewBookmarksSidebarKb" key="&bookmarksCmd.commandkey;" oncommand="SidebarUI.toggle('viewBookmarksSidebar');" modifiers="accel"/>
+    <html:moz-key id="viewBookmarksSidebarKb" key="&bookmarksCmd.commandkey;" oncommand="SidebarUI.toggle('viewBookmarksSidebar');" modifiers="accel"/>
 #ifdef XP_WIN
 # Cmd+I is conventially mapped to Info on MacOS X, thus it should not be
 # overridden for other purposes there.
-    <key id="viewBookmarksSidebarWinKb" key="&bookmarksWinCmd.commandkey;" oncommand="SidebarUI.toggle('viewBookmarksSidebar');" modifiers="accel"/>
+    <html:moz-key id="viewBookmarksSidebarWinKb" key="&bookmarksWinCmd.commandkey;" oncommand="SidebarUI.toggle('viewBookmarksSidebar');" modifiers="accel"/>
 #endif
 
-    <key id="key_stop" keycode="VK_ESCAPE" command="Browser:Stop"/>
+    <html:moz-key id="key_stop" keycode="VK_ESCAPE" command="Browser:Stop"/>
 
 #ifdef XP_MACOSX
-    <key id="key_stop_mac" modifiers="accel" key="&stopCmd.macCommandKey;" command="Browser:Stop"/>
+    <html:moz-key id="key_stop_mac" modifiers="accel" key="&stopCmd.macCommandKey;" command="Browser:Stop"/>
 #endif
 
-    <key id="key_gotoHistory"
+    <html:moz-key id="key_gotoHistory"
          key="&historySidebarCmd.commandKey;"
 #ifdef XP_MACOSX
          modifiers="accel,shift"
 #else
          modifiers="accel"
 #endif
          oncommand="SidebarUI.toggle('viewHistorySidebar');"/>
 
-    <key id="key_fullZoomReduce"  key="&fullZoomReduceCmd.commandkey;"   command="cmd_fullZoomReduce"  modifiers="accel"/>
-    <key                          key="&fullZoomReduceCmd.commandkey2;"  command="cmd_fullZoomReduce"  modifiers="accel"/>
-    <key id="key_fullZoomEnlarge" key="&fullZoomEnlargeCmd.commandkey;"  command="cmd_fullZoomEnlarge" modifiers="accel"/>
-    <key                          key="&fullZoomEnlargeCmd.commandkey2;" command="cmd_fullZoomEnlarge" modifiers="accel"/>
-    <key                          key="&fullZoomEnlargeCmd.commandkey3;" command="cmd_fullZoomEnlarge" modifiers="accel"/>
-    <key id="key_fullZoomReset"   key="&fullZoomResetCmd.commandkey;"    command="cmd_fullZoomReset"   modifiers="accel"/>
-    <key                          key="&fullZoomResetCmd.commandkey2;"   command="cmd_fullZoomReset"   modifiers="accel"/>
+    <html:moz-key id="key_fullZoomReduce"  key="&fullZoomReduceCmd.commandkey;"   command="cmd_fullZoomReduce"  modifiers="accel"/>
+    <html:moz-key                          key="&fullZoomReduceCmd.commandkey2;"  command="cmd_fullZoomReduce"  modifiers="accel"/>
+    <html:moz-key id="key_fullZoomEnlarge" key="&fullZoomEnlargeCmd.commandkey;"  command="cmd_fullZoomEnlarge" modifiers="accel"/>
+    <html:moz-key                          key="&fullZoomEnlargeCmd.commandkey2;" command="cmd_fullZoomEnlarge" modifiers="accel"/>
+    <html:moz-key                          key="&fullZoomEnlargeCmd.commandkey3;" command="cmd_fullZoomEnlarge" modifiers="accel"/>
+    <html:moz-key id="key_fullZoomReset"   key="&fullZoomResetCmd.commandkey;"    command="cmd_fullZoomReset"   modifiers="accel"/>
+    <html:moz-key                          key="&fullZoomResetCmd.commandkey2;"   command="cmd_fullZoomReset"   modifiers="accel"/>
 
-    <key id="key_showAllTabs" keycode="VK_TAB" modifiers="control,shift"/>
+    <html:moz-key id="key_showAllTabs" keycode="VK_TAB" modifiers="control,shift"/>
 
-    <key id="key_switchTextDirection" key="&bidiSwitchTextDirectionItem.commandkey;" command="cmd_switchTextDirection" modifiers="accel,shift" />
+    <html:moz-key id="key_switchTextDirection" key="&bidiSwitchTextDirectionItem.commandkey;" command="cmd_switchTextDirection" modifiers="accel,shift" />
 
-    <key id="key_privatebrowsing" command="Tools:PrivateBrowsing" key="&privateBrowsingCmd.commandkey;"
+    <html:moz-key id="key_privatebrowsing" command="Tools:PrivateBrowsing" key="&privateBrowsingCmd.commandkey;"
          modifiers="accel,shift" reserved="true"/>
-    <key id="key_sanitize" command="Tools:Sanitize" keycode="VK_DELETE" modifiers="accel,shift"/>
+    <html:moz-key id="key_sanitize" command="Tools:Sanitize" keycode="VK_DELETE" modifiers="accel,shift"/>
 #ifdef XP_MACOSX
-    <key id="key_sanitize_mac" command="Tools:Sanitize" keycode="VK_BACK" modifiers="accel,shift"/>
+    <html:moz-key id="key_sanitize_mac" command="Tools:Sanitize" keycode="VK_BACK" modifiers="accel,shift"/>
 #endif
-    <key id="key_quitApplication" key="&quitApplicationCmd.key;"
+    <html:moz-key id="key_quitApplication" key="&quitApplicationCmd.key;"
 #ifdef XP_WIN
          modifiers="accel,shift"
 #else
          modifiers="accel"
 #endif
 # On OS X, dark voodoo magic invokes the quit code for this key.
 # So we're not adding the attribute on OSX because of backwards/add-on compat.
 # See bug 1369909 for background on this.
 #ifndef XP_MACOSX
          command="cmd_quitApplication"
+         reserved="true"
 #endif
-         reserved="true"/>
+         />
 
-    <key id="key_undoCloseTab" command="History:UndoCloseTab" key="&tabCmd.commandkey;" modifiers="accel,shift"/>
-    <key id="key_undoCloseWindow" command="History:UndoCloseWindow" key="&newNavigatorCmd.key;" modifiers="accel,shift"/>
+    <html:moz-key id="key_undoCloseTab" command="History:UndoCloseTab" key="&tabCmd.commandkey;" modifiers="accel,shift"/>
+    <html:moz-key id="key_undoCloseWindow" command="History:UndoCloseWindow" key="&newNavigatorCmd.key;" modifiers="accel,shift"/>
 
 #ifdef XP_GNOME
 #define NUM_SELECT_TAB_MODIFIER alt
 #else
 #define NUM_SELECT_TAB_MODIFIER accel
 #endif
 
-#expand    <key id="key_selectTab1" oncommand="gBrowser.selectTabAtIndex(0, event);" key="1" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
-#expand    <key id="key_selectTab2" oncommand="gBrowser.selectTabAtIndex(1, event);" key="2" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
-#expand    <key id="key_selectTab3" oncommand="gBrowser.selectTabAtIndex(2, event);" key="3" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
-#expand    <key id="key_selectTab4" oncommand="gBrowser.selectTabAtIndex(3, event);" key="4" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
-#expand    <key id="key_selectTab5" oncommand="gBrowser.selectTabAtIndex(4, event);" key="5" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
-#expand    <key id="key_selectTab6" oncommand="gBrowser.selectTabAtIndex(5, event);" key="6" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
-#expand    <key id="key_selectTab7" oncommand="gBrowser.selectTabAtIndex(6, event);" key="7" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
-#expand    <key id="key_selectTab8" oncommand="gBrowser.selectTabAtIndex(7, event);" key="8" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
-#expand    <key id="key_selectLastTab" oncommand="gBrowser.selectTabAtIndex(-1, event);" key="9" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
+#expand    <html:moz-key id="key_selectTab1" oncommand="gBrowser.selectTabAtIndex(0, event);" key="1" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
+#expand    <html:moz-key id="key_selectTab2" oncommand="gBrowser.selectTabAtIndex(1, event);" key="2" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
+#expand    <html:moz-key id="key_selectTab3" oncommand="gBrowser.selectTabAtIndex(2, event);" key="3" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
+#expand    <html:moz-key id="key_selectTab4" oncommand="gBrowser.selectTabAtIndex(3, event);" key="4" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
+#expand    <html:moz-key id="key_selectTab5" oncommand="gBrowser.selectTabAtIndex(4, event);" key="5" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
+#expand    <html:moz-key id="key_selectTab6" oncommand="gBrowser.selectTabAtIndex(5, event);" key="6" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
+#expand    <html:moz-key id="key_selectTab7" oncommand="gBrowser.selectTabAtIndex(6, event);" key="7" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
+#expand    <html:moz-key id="key_selectTab8" oncommand="gBrowser.selectTabAtIndex(7, event);" key="8" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
+#expand    <html:moz-key id="key_selectLastTab" oncommand="gBrowser.selectTabAtIndex(-1, event);" key="9" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
 
 #ifdef NIGHTLY_BUILD
-    <key id="key_wrCaptureCmd"
+    <html:moz-key id="key_wrCaptureCmd"
 #ifdef XP_MACOSX
     key="3" modifiers="control,shift"
 #else
     key="#" modifiers="control"
 #endif
     command="wrCaptureCmd"/>
-    <key id="key_windowRecordingCmd"
+    <html:moz-key id="key_windowRecordingCmd"
 #ifdef XP_MACOSX
     key="4" modifiers="control,shift"
 #else
     key="$" modifiers="control"
 #endif
     command="windowRecordingCmd"/>
-    <key id="key_transactionLoggingCmd"
+    <html:moz-key id="key_transactionLoggingCmd"
 #ifdef XP_MACOSX
     key="5" modifiers="control,shift"
 #else
     key="%" modifiers="control"
 #endif
     command="wrTransactionLoggingCmd"/>
 #endif
 #ifdef XP_MACOSX
-    <key id="key_minimizeWindow"
+    <html:moz-key id="key_minimizeWindow"
          command="minimizeWindow"
          key="&minimizeWindow.key;"
          modifiers="accel"/>
-    <key id="key_openHelpMac"
+    <html:moz-key id="key_openHelpMac"
          oncommand="openHelpLink('firefox-osxkey');"
          key="&helpMac.commandkey;"
          modifiers="accel"/>
     <!-- These are used to build the Application menu -->
-    <key id="key_preferencesCmdMac"
+    <html:moz-key id="key_preferencesCmdMac"
          key="&preferencesCmdMac.commandkey;"
          reserved="true"
          modifiers="accel"/>
-    <key id="key_hideThisAppCmdMac"
+    <html:moz-key id="key_hideThisAppCmdMac"
          key="&hideThisAppCmdMac2.commandkey;"
          modifiers="accel"/>
-    <key id="key_hideOtherAppsCmdMac"
+    <html:moz-key id="key_hideOtherAppsCmdMac"
          key="&hideOtherAppsCmdMac.commandkey;"
          modifiers="accel,alt"/>
 #endif
   </keyset>
diff --git a/browser/base/content/test/contextMenu/browser_utilityOverlay.js b/browser/base/content/test/contextMenu/browser_utilityOverlay.js
--- a/browser/base/content/test/contextMenu/browser_utilityOverlay.js
+++ b/browser/base/content/test/contextMenu/browser_utilityOverlay.js
@@ -3,47 +3,48 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 add_task(async function test_eventMatchesKey() {
   let eventMatchResult;
   let key;
   let checkEvent = function(e) {
     e.stopPropagation();
     e.preventDefault();
-    eventMatchResult = eventMatchesKey(e, key);
+    // XXX: move this to a moz-key specific test file?
+    eventMatchResult = key.eventMatches(e);
   };
   document.addEventListener("keypress", checkEvent);
 
   try {
-    key = document.createXULElement("key");
+    key = document.createElement("moz-key");
     let keyset = document.getElementById("mainKeyset");
     key.setAttribute("key", "t");
     key.setAttribute("modifiers", "accel");
     keyset.appendChild(key);
     EventUtils.synthesizeKey("t", { accelKey: true });
     is(eventMatchResult, true, "eventMatchesKey: one modifier");
     keyset.removeChild(key);
 
-    key = document.createXULElement("key");
+    key = document.createElement("moz-key");
     key.setAttribute("key", "g");
     key.setAttribute("modifiers", "accel,shift");
     keyset.appendChild(key);
     EventUtils.synthesizeKey("g", { accelKey: true, shiftKey: true });
     is(eventMatchResult, true, "eventMatchesKey: combination modifiers");
     keyset.removeChild(key);
 
-    key = document.createXULElement("key");
+    key = document.createElement("moz-key");
     key.setAttribute("key", "w");
     key.setAttribute("modifiers", "accel");
     keyset.appendChild(key);
     EventUtils.synthesizeKey("f", { accelKey: true });
     is(eventMatchResult, false, "eventMatchesKey: mismatch keys");
     keyset.removeChild(key);
 
-    key = document.createXULElement("key");
+    key = document.createElement("moz-key");
     key.setAttribute("keycode", "VK_DELETE");
     keyset.appendChild(key);
     EventUtils.synthesizeKey("VK_DELETE", { accelKey: true });
     is(eventMatchResult, false, "eventMatchesKey: mismatch modifiers");
     keyset.removeChild(key);
   } finally {
     // Make sure to remove the event listener so future tests don't
     // fail when they simulate key presses.
diff --git a/browser/base/content/test/permissions/browser_reservedkey.js b/browser/base/content/test/permissions/browser_reservedkey.js
--- a/browser/base/content/test/permissions/browser_reservedkey.js
+++ b/browser/base/content/test/permissions/browser_reservedkey.js
@@ -1,44 +1,38 @@
 add_task(async function test_reserved_shortcuts() {
   let keyset = document.createXULElement("keyset");
-  let key1 = document.createXULElement("key");
+  let key1 = document.createElement("moz-key");
   key1.setAttribute("id", "kt_reserved");
   key1.setAttribute("modifiers", "shift");
   key1.setAttribute("key", "O");
   key1.setAttribute("reserved", "true");
   key1.setAttribute("count", "0");
-  // We need to have the attribute "oncommand" for the "command" listener to fire
-  key1.setAttribute("oncommand", "//");
-  key1.addEventListener("command", () => {
+  key1.addEventListener("select", () => {
     let attribute = key1.getAttribute("count");
     key1.setAttribute("count", Number(attribute) + 1);
   });
 
-  let key2 = document.createXULElement("key");
+  let key2 = document.createElement("moz-key");
   key2.setAttribute("id", "kt_notreserved");
   key2.setAttribute("modifiers", "shift");
   key2.setAttribute("key", "P");
   key2.setAttribute("reserved", "false");
   key2.setAttribute("count", "0");
-  // We need to have the attribute "oncommand" for the "command" listener to fire
-  key2.setAttribute("oncommand", "//");
-  key2.addEventListener("command", () => {
+  key2.addEventListener("select", () => {
     let attribute = key2.getAttribute("count");
     key2.setAttribute("count", Number(attribute) + 1);
   });
 
-  let key3 = document.createXULElement("key");
+  let key3 = document.createElement("moz-key");
   key3.setAttribute("id", "kt_reserveddefault");
   key3.setAttribute("modifiers", "shift");
   key3.setAttribute("key", "Q");
   key3.setAttribute("count", "0");
-  // We need to have the attribute "oncommand" for the "command" listener to fire
-  key3.setAttribute("oncommand", "//");
-  key3.addEventListener("command", () => {
+  key3.addEventListener("select", () => {
     let attribute = key3.getAttribute("count");
     key3.setAttribute("count", Number(attribute) + 1);
   });
 
   keyset.appendChild(key1);
   keyset.appendChild(key2);
   keyset.appendChild(key3);
   let container = document.createXULElement("box");
diff --git a/browser/base/content/test/tabs/browser_pinnedTabs_closeByKeyboard.js b/browser/base/content/test/tabs/browser_pinnedTabs_closeByKeyboard.js
--- a/browser/base/content/test/tabs/browser_pinnedTabs_closeByKeyboard.js
+++ b/browser/base/content/test/tabs/browser_pinnedTabs_closeByKeyboard.js
@@ -7,17 +7,17 @@ function test() {
 
   function testState(aPinned) {
     function elemAttr(id, attr) {
       return document.getElementById(id).getAttribute(attr);
     }
 
     is(
       elemAttr("key_close", "disabled"),
-      "",
+      null,
       "key_closed should always be enabled"
     );
     is(
       elemAttr("menu_close", "key"),
       "key_close",
       "menu_close should always have key_close set"
     );
   }
diff --git a/browser/components/preferences/applicationManager.xhtml b/browser/components/preferences/applicationManager.xhtml
--- a/browser/components/preferences/applicationManager.xhtml
+++ b/browser/components/preferences/applicationManager.xhtml
@@ -25,17 +25,17 @@
 
   <commandset id="appManagerCommandSet">
     <command id="cmd_remove"
              oncommand="gAppManagerDialog.remove();"
              disabled="true"/>
   </commandset>
 
   <keyset id="appManagerKeyset">
-    <key id="delete" keycode="VK_DELETE" command="cmd_remove"/>
+    <html:moz-key id="delete" keycode="VK_DELETE" command="cmd_remove"/>
   </keyset>
 
   <description id="appDescription"/>
   <separator class="thin"/>
   <hbox flex="1">
     <richlistbox id="appList" onselect="gAppManagerDialog.onSelect();" flex="1"/>
     <vbox>
       <button id="remove"
diff --git a/browser/components/preferences/blocklists.xhtml b/browser/components/preferences/blocklists.xhtml
--- a/browser/components/preferences/blocklists.xhtml
+++ b/browser/components/preferences/blocklists.xhtml
@@ -21,17 +21,17 @@
   <linkset>
     <html:link rel="localization" href="branding/brand.ftl"/>
     <html:link rel="localization" href="browser/preferences/blocklists.ftl"/>
   </linkset>
 
   <script src="chrome://browser/content/preferences/blocklists.js"/>
 
   <keyset>
-    <key data-l10n-id="blocklist-close-key" modifiers="accel" oncommand="window.close();"/>
+    <html:moz-key data-l10n-id="blocklist-close-key" modifiers="accel" onselect="window.close();"/>
   </keyset>
 
   <vbox class="contentPane">
     <description id="blocklistsText" data-l10n-id="blocklist-description" control="url">
       <html:a target="_blank" class="text-link" data-l10n-name="disconnect-link" href="https://disconnect.me/"/>
     </description>
     <separator class="thin"/>
     <tree id="blocklistsTree" flex="1" style="height: 18em;"
diff --git a/browser/components/preferences/clearSiteData.xhtml b/browser/components/preferences/clearSiteData.xhtml
--- a/browser/components/preferences/clearSiteData.xhtml
+++ b/browser/components/preferences/clearSiteData.xhtml
@@ -18,17 +18,17 @@
 
   <linkset>
     <html:link rel="localization" href="branding/brand.ftl"/>
     <html:link rel="localization" href="browser/preferences/clearSiteData.ftl"/>
   </linkset>
   <script src="chrome://browser/content/preferences/clearSiteData.js"/>
 
   <keyset>
-    <key data-l10n-id="clear-site-data-close-key" modifiers="accel" oncommand="window.close();"/>
+    <html:moz-key data-l10n-id="clear-site-data-close-key" modifiers="accel" onselect="window.close();"/>
   </keyset>
 
   <vbox class="contentPane">
     <description control="url" data-l10n-id="clear-site-data-description"/>
     <separator class="thin"/>
     <vbox class="options-container">
       <vbox class="option">
         <checkbox data-l10n-id="clear-site-data-cookies-empty" id="clearSiteData" checked="true"/>
diff --git a/browser/components/preferences/colors.xhtml b/browser/components/preferences/colors.xhtml
--- a/browser/components/preferences/colors.xhtml
+++ b/browser/components/preferences/colors.xhtml
@@ -21,17 +21,17 @@
   <linkset>
     <html:link rel="localization" href="browser/preferences/colors.ftl"/>
   </linkset>
 
   <script src="chrome://browser/content/utilityOverlay.js"/>
   <script src="chrome://global/content/preferencesBindings.js"/>
 
   <keyset>
-    <key data-l10n-id="colors-close-key" modifiers="accel" oncommand="Preferences.close(event)"/>
+    <html:moz-key data-l10n-id="colors-close-key" modifiers="accel" onselect="Preferences.close(event)"/>
   </keyset>
 
   <hbox>
     <groupbox flex="1">
       <label><html:h2 data-l10n-id="colors-text-and-background"/></label>
       <hbox align="center">
         <label data-l10n-id="colors-text-header" control="foregroundtextmenu"/>
         <spacer flex="1"/>
diff --git a/browser/components/preferences/connection.xhtml b/browser/components/preferences/connection.xhtml
--- a/browser/components/preferences/connection.xhtml
+++ b/browser/components/preferences/connection.xhtml
@@ -25,17 +25,17 @@
     <html:link rel="localization" href="branding/brand.ftl"/>
   </linkset>
 
   <script src="chrome://browser/content/utilityOverlay.js"/>
   <script src="chrome://global/content/preferencesBindings.js"/>
   <script src="chrome://browser/content/preferences/in-content/extensionControlled.js"/>
 
   <keyset>
-    <key data-l10n-id="connection-close-key" modifiers="accel" oncommand="Preferences.close(event)"/>
+    <html:moz-key data-l10n-id="connection-close-key" modifiers="accel" onselect="Preferences.close(event)"/>
   </keyset>
 
   <script src="chrome://browser/content/preferences/connection.js"/>
 
   <hbox id="proxyExtensionContent"
         align="start" hidden="true" class="extension-controlled">
     <description control="disableProxyExtension" flex="1" />
     <button id="disableProxyExtension"
diff --git a/browser/components/preferences/containers.xhtml b/browser/components/preferences/containers.xhtml
--- a/browser/components/preferences/containers.xhtml
+++ b/browser/components/preferences/containers.xhtml
@@ -18,17 +18,17 @@
 
   <linkset>
     <html:link rel="localization" href="browser/preferences/containers.ftl"/>
   </linkset>
 
   <script src="chrome://browser/content/preferences/containers.js"/>
 
   <keyset>
-    <key data-l10n-id="containers-window-close" modifiers="accel" oncommand="window.close();"/>
+    <html:moz-key data-l10n-id="containers-window-close" modifiers="accel" onselect="window.close();"/>
   </keyset>
 
   <vbox class="contentPane" hidden="true" id="containers-content">
     <hbox align="start">
       <label id="nameLabel" control="name"
              data-l10n-id="containers-name-label"
              data-l10n-attrs="style"/>
       <html:input id="name" type="text" data-l10n-id="containers-name-text" oninput="gContainersManager.checkForm();" />
diff --git a/browser/components/preferences/fonts.xhtml b/browser/components/preferences/fonts.xhtml
--- a/browser/components/preferences/fonts.xhtml
+++ b/browser/components/preferences/fonts.xhtml
@@ -21,17 +21,17 @@
   <linkset>
     <html:link rel="localization" href="browser/preferences/fonts.ftl"/>
   </linkset>
 
   <script src="chrome://browser/content/utilityOverlay.js"/>
   <script src="chrome://global/content/preferencesBindings.js"/>
 
   <keyset>
-    <key data-l10n-id="fonts-window-close" modifiers="accel" oncommand="Preferences.close(event)"/>
+    <html:moz-key data-l10n-id="fonts-window-close" modifiers="accel" onselect="Preferences.close(event)"/>
   </keyset>
 
   <!-- Fonts for: [ Language ] -->
   <groupbox>
     <hbox align="center">
       <label control="selectLangs"><html:h2 data-l10n-id="fonts-langgroup-header"/></label>
     </hbox>
     <!-- Please don't remove the wrapping hbox/vbox/box for these elements. It's used to properly compute the search tooltip position. -->
diff --git a/browser/components/preferences/in-content/preferences.xhtml b/browser/components/preferences/in-content/preferences.xhtml
--- a/browser/components/preferences/in-content/preferences.xhtml
+++ b/browser/components/preferences/in-content/preferences.xhtml
@@ -161,17 +161,17 @@
           </hbox>
         </label>
       </hbox>
     </vbox>
 
     <keyset>
       <!-- If you change the code within the oncommand handler of 'focusSearch1' you have to update the current hash of
            sha512-X8+p/CqXeMdssOoFOf5RV+RpkvnN9pukQ20acGc7LqMgfYLW+lR0WAYT66OtSTpFHE/Qgx/ZCBs2RMc4QrA8FQ== within the CSP above. -->
-      <key data-l10n-id="focus-search" key="" modifiers="accel" id="focusSearch1" oncommand="gSearchResultsPane.searchInput.focus();"/>
+      <html:moz-key data-l10n-id="focus-search" key="" modifiers="accel" id="focusSearch1" onselect="gSearchResultsPane.searchInput.focus();"/>
     </keyset>
 
     <vbox class="main-content" flex="1" align="start">
       <vbox class="pane-container">
         <hbox class="sticky-container" pack="end" align="start">
           <hbox id="policies-container" align="stretch" flex="1" hidden="true">
             <hbox align="start">
               <image class="info-icon"></image>
diff --git a/browser/components/preferences/languages.xhtml b/browser/components/preferences/languages.xhtml
--- a/browser/components/preferences/languages.xhtml
+++ b/browser/components/preferences/languages.xhtml
@@ -22,17 +22,17 @@
     <html:link rel="localization" href="browser/preferences/languages.ftl"/>
   </linkset>
 
   <script src="chrome://browser/content/utilityOverlay.js"/>
   <script src="chrome://global/content/preferencesBindings.js"/>
   <script src="chrome://browser/content/preferences/languages.js"/>
 
   <keyset>
-    <key data-l10n-id="languages-close-key" modifiers="accel" oncommand="Preferences.close(event)"/>
+    <html:moz-key data-l10n-id="languages-close-key" modifiers="accel" onselect="Preferences.close(event)"/>
   </keyset>
 
   <stringbundleset id="languageSet">
     <stringbundle id="bundleAccepted"     src="resource://gre/res/language.properties"/>
   </stringbundleset>
 
   <description data-l10n-id="languages-description"/>
   <checkbox id="spoofEnglish"
diff --git a/browser/components/preferences/permissions.xhtml b/browser/components/preferences/permissions.xhtml
--- a/browser/components/preferences/permissions.xhtml
+++ b/browser/components/preferences/permissions.xhtml
@@ -20,17 +20,17 @@
 
   <linkset>
     <html:link rel="localization" href="browser/preferences/permissions.ftl"/>
   </linkset>
 
   <script src="chrome://browser/content/preferences/permissions.js"/>
 
   <keyset>
-    <key data-l10n-id="permissions-close-key" modifiers="accel" oncommand="window.close();"/>
+    <html:moz-key data-l10n-id="permissions-close-key" modifiers="accel" onselect="window.close();"/>
   </keyset>
 
   <vbox class="contentPane">
     <description id="permissionsText" control="url"/>
     <separator class="thin"/>
     <label id="urlLabel" control="url" data-l10n-id="permissions-address"/>
     <hbox align="start">
       <html:input id="url" type="text"
diff --git a/browser/components/preferences/sanitize.xhtml b/browser/components/preferences/sanitize.xhtml
--- a/browser/components/preferences/sanitize.xhtml
+++ b/browser/components/preferences/sanitize.xhtml
@@ -25,17 +25,17 @@
     <html:link rel="localization" href="browser/sanitize.ftl"/>
     <html:link rel="localization" href="branding/brand.ftl"/>
   </linkset>
 
   <script src="chrome://browser/content/utilityOverlay.js"/>
   <script src="chrome://global/content/preferencesBindings.js"/>
 
   <keyset>
-    <key data-l10n-id="window-close" modifiers="accel" oncommand="Preferences.close(event)"/>
+    <html:moz-key data-l10n-id="window-close" modifiers="accel" onselect="Preferences.close(event)"/>
   </keyset>
 
   <script src="chrome://browser/content/preferences/sanitize.js"/>
 
   <description data-l10n-id="clear-data-settings-label"></description>
 
   <groupbox>
     <label><html:h2 data-l10n-id="history-section-label"/></label>
diff --git a/browser/components/preferences/sitePermissions.xhtml b/browser/components/preferences/sitePermissions.xhtml
--- a/browser/components/preferences/sitePermissions.xhtml
+++ b/browser/components/preferences/sitePermissions.xhtml
@@ -23,17 +23,17 @@
     <html:link rel="localization" href="browser/preferences/preferences.ftl"/>
     <html:link rel="localization" href="browser/preferences/permissions.ftl"/>
   </linkset>
 
   <script src="chrome://browser/content/preferences/sitePermissions.js"/>
   <script src="chrome://browser/content/preferences/in-content/extensionControlled.js"/>
 
   <keyset>
-    <key data-l10n-id="permissions-close-key" modifiers="accel" oncommand="window.close();"/>
+    <html:moz-key data-l10n-id="permissions-close-key" modifiers="accel" onselect="window.close();"/>
   </keyset>
 
   <vbox class="contentPane">
 
     <hbox align="center" id="setAutoplayPref" hidden="true">
       <label data-l10n-id="permissions-autoplay-menu"/>
     </hbox>
     <description id="permissionsText" control="url"/>
diff --git a/browser/components/preferences/translation.xhtml b/browser/components/preferences/translation.xhtml
--- a/browser/components/preferences/translation.xhtml
+++ b/browser/components/preferences/translation.xhtml
@@ -20,17 +20,17 @@
 
   <linkset>
     <html:link rel="localization" href="browser/preferences/translation.ftl"/>
   </linkset>
 
   <script src="chrome://browser/content/preferences/translation.js"/>
 
   <keyset>
-    <key data-l10n-id="translation-close-key" modifiers="accel" oncommand="window.close();"/>
+    <html:moz-key data-l10n-id="translation-close-key" modifiers="accel" onselect="window.close();"/>
   </keyset>
 
   <vbox class="contentPane">
     <vbox flex="1">
       <label id="languagesLabel"
              data-l10n-id="translation-languages-disabled-desc"
              control="permissionsTree"/>
       <separator class="thin"/>
diff --git a/devtools/client/framework/test/browser_keybindings_01.js b/devtools/client/framework/test/browser_keybindings_01.js
--- a/devtools/client/framework/test/browser_keybindings_01.js
+++ b/devtools/client/framework/test/browser_keybindings_01.js
@@ -21,17 +21,17 @@ ChromeUtils.defineModuleGetter(
   "resource://gre/modules/AppConstants.jsm"
 );
 const isMac = AppConstants.platform == "macosx";
 
 const allKeys = [];
 function buildDevtoolsKeysetMap(keyset) {
   // Fetches all the keyboard shortcuts which were defined by lazyGetter 'KeyShortcuts' in
   // devtools-startup.js and added to the DOM by 'hookKeyShortcuts'
-  [...keyset.querySelectorAll("key")].forEach(key => {
+  [...keyset.querySelectorAll("moz-key")].forEach(key => {
     if (!key.getAttribute("key")) {
       return;
     }
 
     const modifiers = key.getAttribute("modifiers");
     allKeys.push({
       toolId: key.id.split("_")[1],
       key: key.getAttribute("key"),
diff --git a/devtools/startup/DevToolsStartup.jsm b/devtools/startup/DevToolsStartup.jsm
--- a/devtools/startup/DevToolsStartup.jsm
+++ b/devtools/startup/DevToolsStartup.jsm
@@ -767,17 +767,17 @@ DevToolsStartup.prototype = {
 
   getKeyElementId({ id, toolId }) {
     return "key_" + (id || toolId);
   },
 
   // Create a <xul:key> DOM Element
   createKey(doc, key, oncommand) {
     const { shortcut, modifiers: mod } = key;
-    const k = doc.createXULElement("key");
+    const k = doc.createElement("moz-key");
     k.id = this.getKeyElementId(key);
 
     if (shortcut.startsWith("VK_")) {
       k.setAttribute("keycode", shortcut);
       if (shortcut.match(/^VK_\d$/)) {
         // Add the event keydown attribute to ensure that shortcuts work for combinations
         // such as ctrl shift 1.
         k.setAttribute("event", "keydown");
@@ -785,19 +785,17 @@ DevToolsStartup.prototype = {
     } else {
       k.setAttribute("key", shortcut);
     }
 
     if (mod) {
       k.setAttribute("modifiers", mod);
     }
 
-    // Bug 371900: command event is fired only if "oncommand" attribute is set.
-    k.setAttribute("oncommand", ";");
-    k.addEventListener("command", oncommand);
+    k.addEventListener("select", oncommand);
 
     return k;
   },
 
   initDevTools: function(reason, key = "") {
     // If an entry point is fired and tools are not enabled open the installation page
     if (!Services.prefs.getBoolPref(DEVTOOLS_ENABLED_PREF)) {
       this.openInstallPage(reason);
diff --git a/dom/l10n/L10nOverlays.cpp b/dom/l10n/L10nOverlays.cpp
--- a/dom/l10n/L10nOverlays.cpp
+++ b/dom/l10n/L10nOverlays.cpp
@@ -75,16 +75,19 @@ bool L10nOverlays::IsAttrNameLocalizable
       return nameAtom == nsGkAtoms::alt;
     }
     if (elemName == nsGkAtoms::textarea) {
       return nameAtom == nsGkAtoms::placeholder;
     }
     if (elemName == nsGkAtoms::th) {
       return nameAtom == nsGkAtoms::abbr;
     }
+    if (elemName == nsGkAtoms::mozkey) {
+      return nameAtom == nsGkAtoms::key || nameAtom == nsGkAtoms::keycode;
+    }
 
   } else if (nameSpace == kNameSpaceID_XUL) {
     // Is it a globally safe attribute?
     if (nameAtom == nsGkAtoms::accesskey || nameAtom == nsGkAtoms::aria_label ||
         nameAtom == nsGkAtoms::aria_valuetext || nameAtom == nsGkAtoms::label ||
         nameAtom == nsGkAtoms::title || nameAtom == nsGkAtoms::tooltiptext) {
       return true;
     }
diff --git a/toolkit/components/extensions/ExtensionShortcuts.jsm b/toolkit/components/extensions/ExtensionShortcuts.jsm
--- a/toolkit/components/extensions/ExtensionShortcuts.jsm
+++ b/toolkit/components/extensions/ExtensionShortcuts.jsm
@@ -328,24 +328,20 @@ class ExtensionShortcuts {
    * @param {string} shortcut The shortcut provided in the manifest.
    * @see https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/key
    *
    * @returns {Document} The newly created Key element.
    */
   buildKey(doc, name, shortcut) {
     let keyElement = this.buildKeyFromShortcut(doc, name, shortcut);
 
-    // We need to have the attribute "oncommand" for the "command" listener to fire,
-    // and it is currently ignored when set to the empty string.
-    keyElement.setAttribute("oncommand", "//");
-
     /* eslint-disable mozilla/balanced-listeners */
     // We remove all references to the key elements when the extension is shutdown,
     // therefore the listeners for these elements will be garbage collected.
-    keyElement.addEventListener("command", event => {
+    keyElement.addEventListener("select", event => {
       let action;
       if (name == EXECUTE_PAGE_ACTION) {
         action = pageActionFor(this.extension);
       } else if (name == EXECUTE_BROWSER_ACTION) {
         action = browserActionFor(this.extension);
       } else if (name == EXECUTE_SIDEBAR_ACTION) {
         action = sidebarActionFor(this.extension);
       } else {
@@ -369,17 +365,17 @@ class ExtensionShortcuts {
    * @param {Document} doc The XUL document.
    * @param {string} name The name of the shortcut.
    * @param {string} shortcut The shortcut provided in the manifest.
    *
    * @see https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/key
    * @returns {Document} The newly created Key element.
    */
   buildKeyFromShortcut(doc, name, shortcut) {
-    let keyElement = doc.createXULElement("key");
+    let keyElement = doc.createElement("moz-key");
 
     let parts = shortcut.split("+");
 
     // The key is always the last element.
     let chromeKey = parts.pop();
 
     // The modifiers are the remaining elements.
     keyElement.setAttribute(
diff --git a/toolkit/content/widgets/general.js b/toolkit/content/widgets/general.js
--- a/toolkit/content/widgets/general.js
+++ b/toolkit/content/widgets/general.js
@@ -50,16 +50,249 @@
       let image = document.createXULElement("image");
       image.setAttribute("part", "icon");
       shadowRoot.appendChild(image);
     }
   }
 
   customElements.define("dropmarker", MozDropmarker);
 
+  const activeKeys = {};
+  const activeKeyCodes = {};
+  window.addEventListener("keydown", handleKeyEvent, { mozSystemGroup: true });
+  window.addEventListener("keypress", handleKeyEvent, { mozSystemGroup: true });
+
+  function handleKeyEvent(event) {
+    // console.log(`moz-key ${event.type} event processed (prevented: ${event.defaultPrevented})`,
+    //   `e.code: ${event.code} (${activeKeys[event.code] ? activeKeys[event.code].size : 0} matches)`,
+    //   `e.keyCode: ${event.keyCode} (${activeKeyCodes[event.keyCode] ? activeKeyCodes[event.keyCode].size : 0} matches)`);
+
+    if (event.defaultPrevented) {
+      return;
+    }
+
+    if (activeKeys[event.code]) {
+      for (let element of activeKeys[event.code]) {
+        element.processKeyEvent(event);
+      }
+    }
+    if (activeKeyCodes[event.keyCode]) {
+      for (let element of activeKeyCodes[event.keyCode]) {
+        element.processKeyEvent(event);
+      }
+    }
+  }
+  class MozKey extends HTMLElement {
+    static get observedAttributes() {
+      return ["key", "keycode"];
+    }
+
+    // If we wanted to drop the optimization of keying only relevant
+    // elements on an event (IOW: loop over all connected keys on every
+    // key event), then we could drop the removal / addition logic across
+    // this element.
+    attributeChangedCallback(name, oldValue, newValue) {
+      if (!this.isConnected) {
+        return;
+      }
+      if (name === "key" && oldValue) {
+        let oldKey = this.keyForAttr(oldValue);
+        this.removeFromActiveKeys(oldKey);
+        this.addToActiveKeys();
+      } else if (name === "keycode" && oldValue) {
+        let oldKeyCode = this.keycodeForAttr(oldValue);
+        this.removeFromActiveKeyCodes(oldKeyCode);
+        this.addToActiveKeyCodes();
+      }
+    }
+
+    connectedCallback() {
+      this.addToActiveKeys();
+      this.addToActiveKeyCodes();
+    }
+
+    disconnectedCallback() {
+      this.removeFromActiveKeys();
+      this.removeFromActiveKeyCodes();
+    }
+
+    get key() {
+      if (!this.hasAttribute("key")) {
+        return null;
+      }
+      return this.keyForAttr(this.getAttribute("key"));
+    }
+
+    keyForAttr(attr) {
+      if (!isNaN(parseFloat(attr)) && isFinite(attr)) {
+        return `Digit${attr}`;
+      }
+      return `Key${attr.toUpperCase()}`;
+    }
+
+    get event() {
+      if (!this.hasAttribute("event")) {
+        return "keypress";
+      }
+      return this.getAttribute("event");
+    }
+
+    get keycode() {
+      if (!this.hasAttribute("keycode")) {
+        return null;
+      }
+
+      let keycode = this.keycodeForAttr(this.getAttribute("keycode"));
+      if (!keycode) {
+        console.error(
+          `Couldn't find keycode for "${this.getAttribute("keycode")}"`
+        );
+      }
+      return keycode;
+    }
+
+    keycodeForAttr(attr) {
+      if (attr == "VK_BACK") {
+        return KeyboardEvent.DOM_VK_BACK_SPACE;
+      }
+      return KeyboardEvent["DOM_" + attr];
+    }
+
+    addToActiveKeys() {
+      let key = this.key;
+      if (key) {
+        if (!activeKeys[key]) {
+          activeKeys[key] = new Set();
+        }
+        activeKeys[key].add(this);
+      }
+    }
+
+    addToActiveKeyCodes() {
+      let keycode = this.keycode;
+      if (keycode) {
+        if (!activeKeyCodes[keycode]) {
+          activeKeyCodes[keycode] = new Set();
+        }
+        activeKeyCodes[keycode].add(this);
+      }
+    }
+
+    removeFromActiveKeys(key = this.key) {
+      if (activeKeys[key]) {
+        activeKeys[key].delete(this);
+      }
+    }
+
+    removeFromActiveKeyCodes(keyCode = this.keyCode) {
+      if (activeKeyCodes[keyCode]) {
+        activeKeyCodes[keyCode].delete(this);
+      }
+    }
+
+    processKeyEvent(event) {
+      if (this.hasAttribute("disabled")) {
+        return;
+      }
+
+      // <moz-key> defaults to "keypress" but some listen for "keydown" instead.
+      if (this.event != event.type) {
+        return;
+      }
+
+      if (!this.eventMatches(event)) {
+        return;
+      }
+
+      let command = this.getAttribute("command");
+      if (command) {
+        if (document.getElementById(command)) {
+          let cmdEvent = document.createEvent("xulcommandevent");
+          cmdEvent.initCommandEvent(
+            "command",
+            true,
+            true,
+            window,
+            0,
+            event.ctrlKey,
+            event.altKey,
+            event.shiftKey,
+            event.metaKey,
+            event,
+            event.mozInputSource
+          );
+          document.getElementById(command).dispatchEvent(cmdEvent);
+        } else if (window.goDoCommand) {
+          goDoCommand(command);
+        } else {
+          console.error("Unknown command handler for key", command);
+        }
+      }
+
+      // XXX: If we wanted to wire up [oncommand] attribute we'd need to store
+      // the handler on the html elem somehow (or switch it to xul).
+      // In the meantime, let's rewrite [oncommand] to [onselect].
+      this.dispatchEvent(new UIEvent("select"));
+      // this.dispatchEvent(new UIEvent("command"));
+
+      // XXX: Expose nsContentUtils::ShouldBlockReservedKeys for access from here?
+      // See also permissions.default.shortcut and `enum XBLReservedKey`
+      if (this.hasAttribute("reserved")) {
+        event.preventDefault();
+      }
+    }
+
+    /**
+     * This function compares it to the keys pressed during an event with this element.
+     *
+     * @param aEvent
+     *        The KeyboardEvent event you want to compare against your key.
+     */
+    // XXX: This is mostly copied from utilityOverlay.js. Can it be removed from there?
+    eventMatches(aEvent) {
+      let keyModifiers = this.hasAttribute("modifiers")
+        ? this.getAttribute("modifiers")
+        : "";
+      let modifiers = ["Alt", "Control", "Meta", "Shift"];
+
+      if (aEvent.code !== this.key && aEvent.keyCode !== this.keycode) {
+        // console.log(`Skipping key ${this.outerHTML} due to non matched code`);
+        return false;
+      }
+
+      // Check if aEvent has a modifier and this element doesn't
+      let eventModifiers = modifiers.filter(modifier =>
+        aEvent.getModifierState(modifier)
+      );
+      if (eventModifiers.length > 0 && keyModifiers.length == 0) {
+        return false;
+      }
+
+      // Check whether this element modifiers match aEvent's modifiers
+      if (keyModifiers) {
+        keyModifiers = keyModifiers.split(/[\s,]+/);
+        // Capitalize first letter of this element modifers to compare to aEvent's modifier
+        keyModifiers.forEach(function(modifier, index) {
+          if (modifier == "accel") {
+            keyModifiers[index] =
+              AppConstants.platform == "macosx" ? "Meta" : "Control";
+          } else {
+            keyModifiers[index] = modifier[0].toUpperCase() + modifier.slice(1);
+          }
+        });
+        return modifiers.every(
+          modifier =>
+            keyModifiers.includes(modifier) == aEvent.getModifierState(modifier)
+        );
+      }
+      return true;
+    }
+  }
+  customElements.define("moz-key", MozKey);
+
   class MozCommandSet extends MozXULElement {
     connectedCallback() {
       if (this.getAttribute("commandupdater") === "true") {
         const events = this.getAttribute("events") || "*";
         const targets = this.getAttribute("targets") || "*";
         document.commandDispatcher.addCommandUpdater(this, events, targets);
       }
     }
diff --git a/widget/tests/test_keycodes.xhtml b/widget/tests/test_keycodes.xhtml
--- a/widget/tests/test_keycodes.xhtml
+++ b/widget/tests/test_keycodes.xhtml
@@ -1,35 +1,36 @@
 <?xml version="1.0"?>
 <?xml-stylesheet href="chrome://global/skin" type="text/css"?>
 <?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css"
                  type="text/css"?>
 <window title="Key event tests"
   onload="runTest()"
+  xmlns:html="http://www.w3.org/1999/xhtml"
   xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
 
   <script src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js" />
   <script src="chrome://mochikit/content/tests/SimpleTest/NativeKeyCodes.js" />
   <script src="chrome://mochikit/content/tests/SimpleTest/EventUtils.js" />
 
 <commandset>
   <command id="expectedCommand" oncommand="this.activeCount++" disabled="true"/>
   <command id="unexpectedCommand" oncommand="this.activeCount++" disabled="true"/>
   <command id="expectedReservedCommand" oncommand="this.activeCount++" reserved="true" disabled="true"/>
 </commandset>
 <keyset>
-  <key id="unshiftedKey" key=";" modifiers="accel" command="unexpectedCommand"/>
-  <key id="shiftedKey" key=":" modifiers="accel" command="unexpectedCommand"/>
-  <key id="commandOptionF" key='f' modifiers="accel,alt" command="unexpectedCommand"/>
-  <key id="question" key='?' modifiers="accel" command="unexpectedCommand"/>
-  <key id="unshiftedX" key="x" modifiers="accel" command="unexpectedCommand"/>
-  <key id="shiftedX" key="X" modifiers="accel,shift" command="unexpectedCommand"/>
-  <key id="unshiftedPlus" key="+" modifiers="accel" command="unexpectedCommand"/>
-  <key id="reservedUnshiftedKey" key="'" modifiers="accel" command="unexpectedCommand"/>
-  <key id="reservedShiftedKey" key='"' modifiers="accel" command="unexpectedCommand"/>
+  <html:moz-key id="unshiftedKey" key=";" modifiers="accel" command="unexpectedCommand"/>
+  <html:moz-key id="shiftedKey" key=":" modifiers="accel" command="unexpectedCommand"/>
+  <html:moz-key id="commandOptionF" key='f' modifiers="accel,alt" command="unexpectedCommand"/>
+  <html:moz-key id="question" key='?' modifiers="accel" command="unexpectedCommand"/>
+  <html:moz-key id="unshiftedX" key="x" modifiers="accel" command="unexpectedCommand"/>
+  <html:moz-key id="shiftedX" key="X" modifiers="accel,shift" command="unexpectedCommand"/>
+  <html:moz-key id="unshiftedPlus" key="+" modifiers="accel" command="unexpectedCommand"/>
+  <html:moz-key id="reservedUnshiftedKey" key="'" modifiers="accel" command="unexpectedCommand"/>
+  <html:moz-key id="reservedShiftedKey" key='"' modifiers="accel" command="unexpectedCommand"/>
 </keyset>
 
 <browser id="browser" type="content" src="data:text/html;charset=utf-8,&lt;button id='content_button'&gt;button&lt;/button&gt;" width="200" height="32"/>
 
 <body  xmlns="http://www.w3.org/1999/xhtml">
 <p id="display">
   <!-- for some reason, if we don't have 'accesskey' here, adding it dynamically later
        doesn't work! -->
@@ -41,16 +42,18 @@
 </div>
 <pre id="test">
 </pre>
 </body>
 
 <script class="testbody" type="application/javascript">
 <![CDATA[
 
+// XXX: Check this with moz-key
+
 const IS_MAC = navigator.platform.indexOf("Mac") == 0;
 const IS_WIN = navigator.platform.indexOf("Win") == 0;
 const OS_VERSION =
   IS_WIN  ? parseFloat(Cc["@mozilla.org/system-info;1"]
                          .getService(Ci.nsIPropertyBag2)
                          .getProperty("version")) : 0;
 const WIN7 = 6.1;
 const WIN8 = 6.2;
diff --git a/xpcom/ds/StaticAtoms.py b/xpcom/ds/StaticAtoms.py
--- a/xpcom/ds/StaticAtoms.py
+++ b/xpcom/ds/StaticAtoms.py
@@ -632,16 +632,17 @@ STATIC_ATOMS = [
     Atom("menugroup", "menugroup"),
     Atom("menuitem", "menuitem"),
     Atom("menulist", "menulist"),
     Atom("menupopup", "menupopup"),
     Atom("menuseparator", "menuseparator"),
     Atom("mesh", "mesh"),
     Atom("message", "message"),
     Atom("meta", "meta"),
+    Atom("mozkey", "moz-key"),
     Atom("referrer", "referrer"),
     Atom("referrerpolicy", "referrerpolicy"),
     Atom("renderroot", "renderroot"),
     Atom("headerReferrerPolicy", "referrer-policy"),
     Atom("meter", "meter"),
     Atom("method", "method"),
     Atom("middle", "middle"),
     Atom("min", "min"),
