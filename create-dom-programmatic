# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  fcdfe2be33a5fa5a531d18f3f4302aa48df5f3e0

diff --git a/toolkit/content/widgets/checkbox.js b/toolkit/content/widgets/checkbox.js
--- a/toolkit/content/widgets/checkbox.js
+++ b/toolkit/content/widgets/checkbox.js
@@ -35,31 +35,35 @@ class MozCheckbox extends MozElements.Ba
     };
   }
 
   connectedCallback() {
     if (this.delayConnectedCallback()) {
       return;
     }
 
-    if (!MozCheckbox.contentFragment) {
-      let content = `
-        <image class="checkbox-check"/>
-        <hbox class="checkbox-label-box" flex="1">
-          <image class="checkbox-icon"/>
-          <label class="checkbox-label" flex="1"/>
-        </hbox>
-      `;
-      MozCheckbox.contentFragment = MozXULElement.parseXULToFragment(content);
-    }
+    let image = document.createXULElement("image");
+    image.className = "checkbox-check";
+
+    let box = document.createXULElement("box");
+    box.className = "checkbox-label-box";
+    box.setAttribute("flex", "1");
+
+    let image1 = document.createXULElement("image");
+    image1.className = "checkbox-icon";
+
+    let label = document.createXULElement("label");
+    label.className = "checkbox-label";
+    label.setAttribute("flex", "1");
 
     this.textContent = "";
-    let fragment =
-      this.ownerDocument.importNode(MozCheckbox.contentFragment, true);
-    this.appendChild(fragment);
+    box.append(image1);
+    box.append(label);
+    this.append(image);
+    this.append(box);
 
     this.initializeAttributeInheritance();
   }
 
   set checked(val) {
     let change = (val != (this.getAttribute("checked") == "true"));
     if (val) {
       this.setAttribute("checked", "true");
