# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  10654a84982bbe8b389cfedd698240fa02033bcf

diff --git a/toolkit/content/customElements.js b/toolkit/content/customElements.js
--- a/toolkit/content/customElements.js
+++ b/toolkit/content/customElements.js
@@ -405,16 +405,28 @@ MozElements.MozElementMixin = Base => {
     gElementsPendingConnection.add(this);
     return true;
   }
 
   get isConnectedAndReady() {
     return gIsDOMContentLoaded && this.isConnected;
   }
 
+  static parseXULToFragTemplate(markup) {
+    let doc = gXULDOMParser.parseFromString(`
+      <box xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
+            xmlns:html="http://www.w3.org/1999/xhtml">
+        <html:template>
+          ${markup}
+        </html:template>
+      </box>
+    `, "application/xml");
+    return doc.firstElementChild.firstElementChild.content;
+  }
+
   /**
    * Allows eager deterministic construction of XUL elements with XBL attached, by
    * parsing an element tree and returning a DOM fragment to be inserted in the
    * document before any of the inner elements is referenced by JavaScript.
    *
    * This process is required instead of calling the createElement method directly
    * because bindings get attached when:
    *
diff --git a/toolkit/content/widgets/menu.js b/toolkit/content/widgets/menu.js
--- a/toolkit/content/widgets/menu.js
+++ b/toolkit/content/widgets/menu.js
@@ -183,34 +183,34 @@ class MozMenu extends MozMenuBaseMixin(M
   }
 
   get fragment() {
     let {isMenubarChild, isIconic} = this;
     let fragment = null;
     // Add aria-hidden="true" on all DOM, since XULMenuAccessible handles accessibility here.
     if (isMenubarChild && isIconic) {
       if (!MozMenu.menubarIconicFrag) {
-        MozMenu.menubarIconicFrag = MozXULElement.parseXULToFragment(`
+        MozMenu.menubarIconicFrag = MozXULElement.parseXULToFragTemplate(`
           <image class="menubar-left" aria-hidden="true"/>
           <label class="menubar-text" crop="right" aria-hidden="true"/>
         `);
       }
       fragment = document.importNode(MozMenu.menubarIconicFrag, true);
     }
     if (isMenubarChild && !isIconic) {
       if (!MozMenu.menubarFrag) {
-        MozMenu.menubarFrag = MozXULElement.parseXULToFragment(`
+        MozMenu.menubarFrag = MozXULElement.parseXULToFragTemplate(`
           <label class="menubar-text" crop="right" aria-hidden="true"/>
         `);
       }
       fragment = document.importNode(MozMenu.menubarFrag, true);
     }
     if (!isMenubarChild && isIconic) {
       if (!MozMenu.normalIconicFrag) {
-        MozMenu.normalIconicFrag = MozXULElement.parseXULToFragment(`
+        MozMenu.normalIconicFrag = MozXULElement.parseXULToFragTemplate(`
           <hbox class="menu-iconic-left" align="center" pack="center" aria-hidden="true">
             <image class="menu-iconic-icon"/>
           </hbox>
           <label class="menu-iconic-text" flex="1" crop="right" aria-hidden="true"/>
           <label class="menu-iconic-highlightable-text" crop="right" aria-hidden="true"/>
           <hbox class="menu-accel-container" anonid="accel" aria-hidden="true">
             <label class="menu-iconic-accel"/>
           </hbox>
@@ -219,17 +219,17 @@ class MozMenu extends MozMenuBaseMixin(M
           </hbox>
        `);
       }
 
       fragment = document.importNode(MozMenu.normalIconicFrag, true);
     }
     if (!isMenubarChild && !isIconic) {
       if (!MozMenu.normalFrag) {
-        MozMenu.normalFrag = MozXULElement.parseXULToFragment(`
+        MozMenu.normalFrag = MozXULElement.parseXULToFragTemplate(`
           <label class="menu-text" crop="right" aria-hidden="true"/>
           <hbox class="menu-accel-container" anonid="accel" aria-hidden="true">
             <label class="menu-accel"/>
           </hbox>
           <hbox align="center" class="menu-right" aria-hidden="true">
             <image/>
           </hbox>
        `);
