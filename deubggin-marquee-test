# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  068758334188a0212f34dada3f8300025013fd45

diff --git a/dom/html/HTMLMarqueeElement.cpp b/dom/html/HTMLMarqueeElement.cpp
--- a/dom/html/HTMLMarqueeElement.cpp
+++ b/dom/html/HTMLMarqueeElement.cpp
@@ -83,22 +83,31 @@ HTMLMarqueeElement::ParseAttribute(int32
       return aResult.ParseEnumValue(aValue, kDirectionTable, false, kDefaultDirection);
     }
     if ((aAttribute == nsGkAtoms::hspace) ||
         (aAttribute == nsGkAtoms::vspace)) {
       return aResult.ParseIntWithBounds(aValue, 0);
     }
 
     if (aAttribute == nsGkAtoms::loop) {
-      nsContentUtils::ParseHTMLIntegerResultFlags parseResult;
-      int32_t originalVal = nsContentUtils::ParseHTMLInteger(aValue, &parseResult);
-      if (originalVal == -1 || originalVal > 0) {
-        return aResult.ParseIntWithBounds(aValue, kDefaultLoop);
-      }
-      return false;
+      return aResult.ParseIntValue(aValue);
+      // if (aResult.ParseIntValue(aValue))) {
+      //   int val = aResult.GetIntegerValue();
+      //   if (val <)
+      // }
+      // // if (aResult.GetIntegerValue()) {
+
+      // printf("Setting loop - current value: %s current IDL %d\n", NS_LossyConvertUTF16toASCII(aValue).get(), Loop());
+      // // }
+      // nsContentUtils::ParseHTMLIntegerResultFlags parseResult;
+      // int32_t originalVal = nsContentUtils::ParseHTMLInteger(aValue, &parseResult);
+      // // if (originalVal == -1 || originalVal > 0) {
+      //   return aResult.ParseIntWithBounds(aValue, kDefaultLoop);
+      // // }
+      // return false;
     }
 
     if (aAttribute == nsGkAtoms::scrollamount ||
         aAttribute == nsGkAtoms::scrolldelay) {
       return aResult.ParseNonNegativeIntValue(aValue);
     }
   }
 
diff --git a/dom/html/HTMLMarqueeElement.h b/dom/html/HTMLMarqueeElement.h
--- a/dom/html/HTMLMarqueeElement.h
+++ b/dom/html/HTMLMarqueeElement.h
@@ -58,17 +58,22 @@ public:
     return GetIntAttr(nsGkAtoms::hspace, 0);
   }
   void SetHspace(uint32_t aValue, ErrorResult& aError)
   {
     SetUnsignedIntAttr(nsGkAtoms::hspace, aValue, 0, aError);
   }
   int32_t Loop()
   {
-    return GetIntAttr(nsGkAtoms::loop, kDefaultLoop);
+    int loop = GetIntAttr(nsGkAtoms::loop, kDefaultLoop);
+    if (loop <= 0) {
+      loop = -1;
+    }
+
+    return loop;
   }
   void SetLoop(int32_t aValue, ErrorResult& aError)
   {
     if (aValue == -1 || aValue > 0) {
       SetHTMLIntAttr(nsGkAtoms::loop, aValue, aError);
     }
   }
   uint32_t ScrollAmount()
diff --git a/dom/tests/mochitest/bugs/test_bug1160342_marquee.html b/dom/tests/mochitest/bugs/test_bug1160342_marquee.html
--- a/dom/tests/mochitest/bugs/test_bug1160342_marquee.html
+++ b/dom/tests/mochitest/bugs/test_bug1160342_marquee.html
@@ -76,17 +76,17 @@ https://bugzilla.mozilla.org/show_bug.cg
     is(x.loop, -1, "Wrong loop value");
     x.setAttribute('loop', '-1.123');
     is(x.loop, -1, "Wrong loop value");
     x.setAttribute('loop', '-1');
     is(x.loop, -1, "Wrong loop value");
     x.setAttribute('loop', '1000');
     is(x.loop, 1000, "Wrong loop value");
     x.removeAttribute('loop');
-    is(x.loop, -1, "Wrong loop value");
+    is(x.loop, -1, "Wrong loop value (removed)");
     is(x.getAttribute('loop'), null, "Wrong loop attribute");
 
     x.loop = 1;
     is(x.loop, 1, "Wrong loop value");
     is(x.getAttribute('loop'), "1", "Wrong loop attribute");
     try {
       x.loop = -2;
       todo_is(false, true, "marquee.loop = -2 should throw");
