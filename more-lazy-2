# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  5b636f5b7889d7ba5bbca46c88738616ef725639

diff --git a/toolkit/content/widgets/menupopup.js b/toolkit/content/widgets/menupopup.js
--- a/toolkit/content/widgets/menupopup.js
+++ b/toolkit/content/widgets/menupopup.js
@@ -6,32 +6,48 @@
 
 // This is loaded into all XUL windows. Wrap in a block to prevent
 // leaking to window scope.
 {
   const { AppConstants } = ChromeUtils.import(
     "resource://gre/modules/AppConstants.jsm"
   );
 
+  // In general, wait to render menus and menuitems inside menupopups
+  // until they are going to be visible:
+  window.addEventListener(
+    "popupshowing",
+    e => {
+      if (
+        e.originalTarget.ownerDocument != document ||
+        e.originalTarget.tagName !== "menupopup"
+      ) {
+        return;
+      }
+      console.trace("RENDERING FROM HANDLER", e.originalTarget);
+      e.originalTarget.attachShadowRoot();
+    },
+    { capture: true, mozSystemGroup: true }
+  );
+
   class MozMenuPopup extends MozElements.MozElementMixin(XULPopupElement) {
     constructor() {
       super();
 
       this.AUTOSCROLL_INTERVAL = 25;
       this.NOT_DRAGGING = 0;
       this.DRAG_OVER_BUTTON = -1;
       this.DRAG_OVER_POPUP = 1;
       this._draggingState = this.NOT_DRAGGING;
       this._scrollTimer = 0;
 
       // We intentionally don't attach the shadow root here because there are a
       // ton of menupopups that get constructed at startup. Instead we wait until
       // the popup is going to be visible and call render() then.
       this.addEventListener("popupshowing", event => {
-        this.shadowRoot; // This forces the shadowRoot to get attached (see the getter)
         let array = [];
         let width = 0;
         for (
           let menuitem = this.firstElementChild;
           menuitem;
           menuitem = menuitem.nextElementSibling
         ) {
           if (
