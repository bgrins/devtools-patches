# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  da2dbeaf7722dd7d2eece1f5094d72ddf3a72bb8

diff --git a/toolkit/content/widgets/menupopup.js b/toolkit/content/widgets/menupopup.js
--- a/toolkit/content/widgets/menupopup.js
+++ b/toolkit/content/widgets/menupopup.js
@@ -20,40 +20,47 @@
       this.DRAG_OVER_BUTTON = -1;
       this.DRAG_OVER_POPUP = 1;
       this._draggingState = this.NOT_DRAGGING;
       this._scrollTimer = 0;
 
       // We intentionally don't attach the shadow root here because there are a
       // ton of menupopups that get constructed at startup. Instead we wait until
       // the popup is going to be visible and call render() then.
-      this.addEventListener("popupshowing", event => {
-        this.shadowRoot; // This forces the shadowRoot to get attached (see the getter)
-        let array = [];
-        let width = 0;
-        for (
-          let menuitem = this.firstElementChild;
-          menuitem;
-          menuitem = menuitem.nextElementSibling
-        ) {
-          if (
-            menuitem.localName == "menuitem" &&
-            menuitem.hasAttribute("acceltext")
+      this.addEventListener(
+        "popupshowing",
+        event => {
+          this.shadowRoot; // This forces the shadowRoot to get attached (see the getter)
+          let array = [];
+          let width = 0;
+          for (
+            let menuitem = this.firstElementChild;
+            menuitem;
+            menuitem = menuitem.nextElementSibling
           ) {
-            let accel = menuitem.querySelector(".menu-accel-container");
-            if (accel && accel.boxObject) {
-              array.push(accel);
-              if (accel.boxObject.width > width) {
-                width = accel.boxObject.width;
+            if (
+              menuitem.localName == "menuitem" &&
+              menuitem.hasAttribute("acceltext")
+            ) {
+              let accel = menuitem.querySelector(".menu-accel-container");
+              if (accel && accel.boxObject) {
+                array.push(accel);
+                if (accel.boxObject.width > width) {
+                  width = accel.boxObject.width;
+                }
               }
             }
           }
+          array.forEach(accel => (accel.width = width));
+        },
+        {
+          capture: true,
+          mozSystemGroup: true,
         }
-        array.forEach(accel => (accel.width = width));
-      });
+      );
     }
 
     // We want to lazily attach the shadow root until the popup is going
     // to be visible or until some code accesses it. By overriding the getter
     // we can handle the second case without remembering to call .render()
     // everywhere that wants to access the root:
     get shadowRoot() {
       if (!super.shadowRoot) {
@@ -62,16 +69,27 @@
       }
       return super.shadowRoot;
     }
 
     get scrollBox() {
       return this.shadowRoot.querySelector(".popup-internal-box");
     }
 
+    openPopup(...args) {
+      console.log("HERE");
+      this.shadowRoot;
+      super.openPopup(...args);
+    }
+    openPopupAtScreen(...args) {
+      console.log("HERE");
+      this.shadowRoot;
+      super.openPopupAtScreen(...args);
+    }
+
     connectedCallback() {
       if (this.delayConnectedCallback() || this.hasConnected) {
         return;
       }
 
       this.hasConnected = true;
       if (this.parentNode && this.parentNode.localName == "menulist") {
         this._setUpMenulistPopup();
