# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  15aa78c89a66675394b03a0f4eb28da555a7d297
browser_webconsole_bug_595934_message_categorie

diff --git a/devtools/client/webconsole/test/browser_webconsole_bug_595934_message_categories.js b/devtools/client/webconsole/test/browser_webconsole_bug_595934_message_categories.js
--- a/devtools/client/webconsole/test/browser_webconsole_bug_595934_message_categories.js
+++ b/devtools/client/webconsole/test/browser_webconsole_bug_595934_message_categories.js
@@ -5,16 +5,17 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 "use strict";
 
 const TEST_URI = "data:text/html;charset=utf-8,Web Console test for " +
                  "bug 595934 - message categories coverage.";
 const TESTS_PATH = "http://example.com/browser/devtools/client/webconsole/" +
                    "test/";
+
 const TESTS = [
   {
     // #0
     file: "test-bug-595934-css-loader.html",
     category: "CSS Loader",
     matchString: "text/css",
   },
   {
@@ -148,44 +149,26 @@ function testNext() {
         text: test.matchString,
       }],
     }).then(() => {
       foundText = true;
       startNextTest();
     });
 
     let testLocation = TESTS_PATH + test.file;
-    gBrowser.selectedBrowser.addEventListener("load", function onLoad(evt) {
-      if (content.location.href != testLocation) {
-        return;
+    BrowserTestUtils.browserLoaded(gBrowser.selectedBrowser, false, testLocation).then(() => {
+      pageLoaded = true;
+      pageError = true;
+      startNextTest();
+      if (test.onload) {
+        test.onload();
       }
-      gBrowser.selectedBrowser.removeEventListener(evt.type, onLoad, true);
-
-      pageLoaded = true;
-      test.onload && test.onload(evt);
-
-      if (test.expectError) {
-        content.addEventListener("error", function _onError() {
-          content.removeEventListener("error", _onError);
-          pageError = true;
-          startNextTest();
-        });
-        // On e10s, the exception is triggered in child process
-        // and is ignored by test harness
-        if (!Services.appinfo.browserTabsRemoteAutostart) {
-          expectUncaughtException();
-        }
-      } else {
-        pageError = true;
-      }
-
-      startNextTest();
     }, true);
 
-    content.location = testLocation;
+    BrowserTestUtils.loadURI(gBrowser.selectedBrowser, testLocation);
   } else {
     testEnded = true;
     finishTest();
   }
 }
 
 function testEnd() {
   if (!testEnded) {
