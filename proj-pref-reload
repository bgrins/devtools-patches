# HG changeset patch
# Parent aa6b9dea9b99d8c8bf728d0e4b583c6fca9246ff
# User Brian Grinstead <bgrinstead@mozilla.com>
Bug 1008709 - Add reloadEditorPrefs function for Project Editor;r=paul

diff --git a/browser/devtools/projecteditor/lib/editors.js b/browser/devtools/projecteditor/lib/editors.js
--- a/browser/devtools/projecteditor/lib/editors.js
+++ b/browser/devtools/projecteditor/lib/editors.js
@@ -44,16 +44,24 @@ var ItchEditor = Class({
     this.label = "";
     this.elt = this.doc.createElement("vbox");
     this.elt.setAttribute("flex", "1");
     this.elt.editor = this;
     this.toolbar = this.doc.querySelector("#projecteditor-toolbar");
   },
 
   /**
+   * Reset the state of the Editor based on relevant prefs.
+   * This can have different meanings depending on the type of editor.
+   */
+  reloadPrefs: function() {
+
+  },
+
+  /**
    * Sets the visibility of the element that shows up above the editor
    * based on the this.hidesToolbar property.
    */
   setToolbarVisibility: function() {
     if (this.hidesToolbar) {
       this.toolbar.setAttribute("hidden", "true");
     } else {
       this.toolbar.removeAttribute("hidden");
@@ -129,16 +137,25 @@ var TextEditor = Class({
         let command = this.doc.querySelector("#" + key.getAttribute("command"));
         command.dispatchEvent(event);
       };
     });
 
     return extraKeys;
   },
 
+  reloadPrefs: function() {
+    this.editor.resetIndentUnit();
+    this.appended.then(() => {
+      if (this.editor) {
+        this.editor.setOption("autocomplete", prefs.get("devtools.editor.autocomplete"));
+      }
+    });
+  },
+
   initialize: function(document, mode=Editor.modes.text) {
     ItchEditor.prototype.initialize.apply(this, arguments);
     this.label = mode.name;
     this.editor = new Editor({
       mode: mode,
       lineNumbers: true,
       extraKeys: this.extraKeys,
       themeSwitching: false,
diff --git a/browser/devtools/projecteditor/lib/projecteditor.js b/browser/devtools/projecteditor/lib/projecteditor.js
--- a/browser/devtools/projecteditor/lib/projecteditor.js
+++ b/browser/devtools/projecteditor/lib/projecteditor.js
@@ -282,16 +282,25 @@ var ProjectEditor = Class({
       let rootResource = this.project.localStores.get(path).root;
       emit(rootResource, "label-change", rootResource);
     }
 
     return this.project.refresh();
   },
 
   /**
+   * Reset the state of all Editors based on relevant prefs.
+   */
+  reloadEditorPrefs: function() {
+    for (let [resource, shell] of this.shells.shells.entries()) {
+      shell.editor.reloadPrefs();
+    }
+  },
+
+  /**
    * Open a resource in a particular shell.
    *
    * @param Resource resource
    *                 The file to be opened.
    */
   openResource: function(resource) {
     this.shells.open(resource);
     this.projectTree.selectResource(resource);
