
# HG changeset patch
# User Brendan Dahl <bdahl@mozilla.com>
# Date 1541118267 25200
# Node ID 88f2d2c82c2a2798a25005aa5e638fabb195e023
# Parent  4c7772c170a1848c4e57fea0087c351fd2288859
Disable xul prototype and script cache.

diff --git a/dom/xul/nsXULPrototypeCache.cpp b/dom/xul/nsXULPrototypeCache.cpp
--- a/dom/xul/nsXULPrototypeCache.cpp
+++ b/dom/xul/nsXULPrototypeCache.cpp
@@ -134,64 +134,65 @@ nsXULPrototypeCache::Observe(nsISupports
         NS_WARNING("Unexpected observer topic.");
     }
     return NS_OK;
 }
 
 nsXULPrototypeDocument*
 nsXULPrototypeCache::GetPrototype(nsIURI* aURI)
 {
-    if (!aURI)
-        return nullptr;
+    return nullptr;
+    // if (!aURI)
+    //     return nullptr;
 
-    nsCOMPtr<nsIURI> uriWithoutRef;
-    NS_GetURIWithoutRef(aURI, getter_AddRefs(uriWithoutRef));
+    // nsCOMPtr<nsIURI> uriWithoutRef;
+    // NS_GetURIWithoutRef(aURI, getter_AddRefs(uriWithoutRef));
 
-    nsXULPrototypeDocument* protoDoc = mPrototypeTable.GetWeak(uriWithoutRef);
-    if (protoDoc)
-        return protoDoc;
+    // nsXULPrototypeDocument* protoDoc = mPrototypeTable.GetWeak(uriWithoutRef);
+    // if (protoDoc)
+    //     return protoDoc;
 
-    nsresult rv = BeginCaching(aURI);
-    if (NS_FAILED(rv))
-        return nullptr;
+    // nsresult rv = BeginCaching(aURI);
+    // if (NS_FAILED(rv))
+    //     return nullptr;
 
-    // No prototype in XUL memory cache. Spin up the cache Service.
-    nsCOMPtr<nsIObjectInputStream> ois;
-    rv = GetInputStream(aURI, getter_AddRefs(ois));
-    if (NS_FAILED(rv))
-        return nullptr;
+    // // No prototype in XUL memory cache. Spin up the cache Service.
+    // nsCOMPtr<nsIObjectInputStream> ois;
+    // rv = GetInputStream(aURI, getter_AddRefs(ois));
+    // if (NS_FAILED(rv))
+    //     return nullptr;
 
-    RefPtr<nsXULPrototypeDocument> newProto;
-    rv = NS_NewXULPrototypeDocument(getter_AddRefs(newProto));
-    if (NS_FAILED(rv))
-        return nullptr;
+    // RefPtr<nsXULPrototypeDocument> newProto;
+    // rv = NS_NewXULPrototypeDocument(getter_AddRefs(newProto));
+    // if (NS_FAILED(rv))
+    //     return nullptr;
 
-    rv = newProto->Read(ois);
-    if (NS_SUCCEEDED(rv)) {
-        rv = PutPrototype(newProto);
-    } else {
-        newProto = nullptr;
-    }
+    // rv = newProto->Read(ois);
+    // if (NS_SUCCEEDED(rv)) {
+    //     rv = PutPrototype(newProto);
+    // } else {
+    //     newProto = nullptr;
+    // }
 
-    mInputStreamTable.Remove(aURI);
-    return newProto;
+    // mInputStreamTable.Remove(aURI);
+    // return newProto;
 }
 
 nsresult
 nsXULPrototypeCache::PutPrototype(nsXULPrototypeDocument* aDocument)
 {
-    if (!aDocument->GetURI()) {
-        return NS_ERROR_FAILURE;
-    }
+    // if (!aDocument->GetURI()) {
+    //     return NS_ERROR_FAILURE;
+    // }
 
-    nsCOMPtr<nsIURI> uri;
-    NS_GetURIWithoutRef(aDocument->GetURI(), getter_AddRefs(uri));
+    // nsCOMPtr<nsIURI> uri;
+    // NS_GetURIWithoutRef(aDocument->GetURI(), getter_AddRefs(uri));
 
-    // Put() releases any old value and addrefs the new one
-    mPrototypeTable.Put(uri, aDocument);
+    // // Put() releases any old value and addrefs the new one
+    // mPrototypeTable.Put(uri, aDocument);
 
     return NS_OK;
 }
 
 mozilla::StyleSheet*
 nsXULPrototypeCache::GetStyleSheet(nsIURI* aURI)
 {
     return mStyleSheetTable.GetWeak(aURI);
@@ -203,37 +204,38 @@ nsXULPrototypeCache::PutStyleSheet(Style
     nsIURI* uri = aStyleSheet->GetSheetURI();
     mStyleSheetTable.Put(uri, aStyleSheet);
     return NS_OK;
 }
 
 JSScript*
 nsXULPrototypeCache::GetScript(nsIURI* aURI)
 {
-    return mScriptTable.Get(aURI);
+    return nullptr;
+    // return mScriptTable.Get(aURI);
 }
 
 nsresult
 nsXULPrototypeCache::PutScript(nsIURI* aURI,
                                JS::Handle<JSScript*> aScriptObject)
 {
-    MOZ_ASSERT(aScriptObject, "Need a non-NULL script");
+//     MOZ_ASSERT(aScriptObject, "Need a non-NULL script");
 
-#ifdef DEBUG_BUG_392650
-    if (mScriptTable.Get(aURI)) {
-        nsAutoCString scriptName;
-        aURI->GetSpec(scriptName);
-        nsAutoCString message("Loaded script ");
-        message += scriptName;
-        message += " twice (bug 392650)";
-        NS_WARNING(message.get());
-    }
-#endif
+// #ifdef DEBUG_BUG_392650
+//     if (mScriptTable.Get(aURI)) {
+//         nsAutoCString scriptName;
+//         aURI->GetSpec(scriptName);
+//         nsAutoCString message("Loaded script ");
+//         message += scriptName;
+//         message += " twice (bug 392650)";
+//         NS_WARNING(message.get());
+//     }
+// #endif
 
-    mScriptTable.Put(aURI, aScriptObject);
+//     mScriptTable.Put(aURI, aScriptObject);
 
     return NS_OK;
 }
 
 nsXBLDocumentInfo*
 nsXULPrototypeCache::GetXBLDocumentInfo(nsIURI* aURL)
 {
   return mXBLDocTable.GetWeak(aURL);
