# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  c3c811fbe4a7def086d7ae22af39cf428808dc8f
Bug 1175239 - Replace tracking protection drop-down control with a button;r=MattN

diff --git a/browser/base/content/test/general/browser.ini b/browser/base/content/test/general/browser.ini
--- a/browser/base/content/test/general/browser.ini
+++ b/browser/base/content/test/general/browser.ini
@@ -421,16 +421,20 @@ run-if = e10s
 [browser_trackingUI_1.js]
 support-files =
   trackingPage.html
   benignPage.html
 [browser_trackingUI_2.js]
 support-files =
   trackingPage.html
   benignPage.html
+[browser_trackingUI_3.js]
+support-files =
+  trackingPage.html
+  benignPage.html
 [browser_typeAheadFind.js]
 skip-if = buildapp == 'mulet'
 [browser_unknownContentType_title.js]
 [browser_unloaddialogs.js]
 skip-if = e10s # Bug 1100700 - test relies on unload event firing on closed tabs, which it doesn't
 [browser_urlHighlight.js]
 [browser_urlbarAutoFillTrimURLs.js]
 [browser_urlbarCopying.js]
diff --git a/browser/base/content/test/general/browser_trackingUI_1.js b/browser/base/content/test/general/browser_trackingUI_1.js
--- a/browser/base/content/test/general/browser_trackingUI_1.js
+++ b/browser/base/content/test/general/browser_trackingUI_1.js
@@ -57,30 +57,16 @@ function* testTrackingPageWhitelisted(gT
   ok(!notificationElement.isTrackingContentBlocked,
     "Tracking Content is NOT being blocked");
 
   // Make sure the notification has the trackingblockdisabled attribute set to true
   is(notificationElement.getAttribute("trackingblockdisabled"), "true",
     "Doorhanger must have [trackingblockdisabled='true'] attribute");
 }
 
-function testTrackingPageOFF(gTestBrowser)
-{
-  // Make sure the doorhanger does NOT appear
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  is(notification, null, "Tracking Content Doorhanger did NOT appear when protection was OFF and tracking was present");
-}
-
-function testBenignPageOFF(gTestBrowser)
-{
-  // Make sure the doorhanger does NOT appear
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  is(notification, null, "Tracking Content Doorhanger did NOT appear when protection was OFF and tracking was NOT present");
-}
-
 add_task(function* () {
   registerCleanupFunction(function() {
     Services.prefs.clearUserPref(PREF);
     gBrowser.removeCurrentTab();
   });
 
   yield updateTrackingProtectionDatabase();
 
diff --git a/browser/base/content/test/general/browser_trackingUI_3.js b/browser/base/content/test/general/browser_trackingUI_3.js
new file mode 100644
--- /dev/null
+++ b/browser/base/content/test/general/browser_trackingUI_3.js
@@ -0,0 +1,85 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+// Test that the Tracking Protection Doorhanger does not ever appear
+// when the feature is off (Bug 1043801)
+
+let PREF = "privacy.trackingprotection.enabled";
+let BENIGN_PAGE = "http://tracking.example.org/browser/browser/base/content/test/general/benignPage.html";
+let TRACKING_PAGE = "http://tracking.example.org/browser/browser/base/content/test/general/trackingPage.html";
+let gTestBrowser;
+
+function* testBlockButtonClick() {
+  let {notification,notificationElement} = yield showDoorhanger();
+
+  let doc = notificationElement.ownerDocument;
+  let button = doc.getAnonymousElementByAttribute(notificationElement,
+                                                  "anonid",
+                                                  "trackingContentAction.block");
+
+  ok (button, "The block button exists");
+  ok(!button.getAttribute("hidden"), "The block button is not hidden");
+
+  button.click();
+}
+
+function* testUnblockButtonClick() {
+  let {notification,notificationElement} = yield showDoorhanger();
+
+  let doc = notificationElement.ownerDocument;
+  let button = doc.getAnonymousElementByAttribute(notificationElement,
+                                                  "anonid",
+                                                  "trackingContentAction.unblock");
+
+  ok (button, "The unblock button exists");
+  ok(!button.getAttribute("hidden"), "The block button is not hidden");
+
+  button.click();
+}
+
+function* showDoorhanger() {
+  // Make sure the doorhanger appears
+  let notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
+  isnot(notification, null, "Tracking Content Doorhanger did appear when protection was ON");
+  notification.reshow();
+  let notificationElement = PopupNotifications.panel.firstChild;
+
+  // Wait for the method to be attached after showing the popup
+  yield promiseWaitForCondition(() => {
+    return notificationElement.disableTrackingContentProtection;
+  });
+
+  return {notification,notificationElement};
+}
+
+add_task(function* () {
+  registerCleanupFunction(function() {
+    Services.prefs.clearUserPref(PREF);
+    gBrowser.removeCurrentTab();
+  });
+
+  Services.prefs.setBoolPref(PREF, true);
+  yield updateTrackingProtectionDatabase();
+
+  let tab = gBrowser.selectedTab = gBrowser.addTab();
+  yield promiseTabLoadEvent(tab, TRACKING_PAGE);
+
+  gTestBrowser = gBrowser.getBrowserForTab(tab);
+
+  yield testUnblockButtonClick();
+  yield promiseTabLoadEvent(tab);
+
+  let {notification,notificationElement} = yield showDoorhanger();
+  ok(!notificationElement.isTrackingContentBlocked,
+    "Tracking Content is NOT being blocked");
+
+  yield testBlockButtonClick();
+  yield promiseTabLoadEvent(tab);
+
+  ({notification,notificationElement}) = yield showDoorhanger();
+  ok(notificationElement.isTrackingContentBlocked,
+    "Tracking Content IS being blocked");
+
+  gTestBrowser = null;
+});
diff --git a/browser/base/content/urlbarBindings.xml b/browser/base/content/urlbarBindings.xml
--- a/browser/base/content/urlbarBindings.xml
+++ b/browser/base/content/urlbarBindings.xml
@@ -2217,29 +2217,29 @@ file, You can obtain one at http://mozil
                   xbl:inherits="popupid,trackingblockdisabled">
                   &trackingContentBlocked.moreinfo;
                 </xul:description>
                 <xul:label anonid="trackingContent.helplink"
                   class="text-link" href=""
                   value="&trackingContentBlocked.learnMore;"/>
               </xul:vbox>
               <xul:button
-                type="menu" label="&trackingContentBlocked.options;"
-                sizetopopup="none">
-                <xul:menupopup>
-                  <xul:menuitem anonid="trackingContentAction.unblock"
-                    hidden="true" label="&trackingContentBlocked.unblock2.label;"
-                    accesskey="&trackingContentBlocked.unblock2.accesskey;"
-                    oncommand="document.getBindingParent(this).disableTrackingContentProtection();"/>
-                  <xul:menuitem anonid="trackingContentAction.block"
-                    hidden="true" label="&trackingContentBlocked.block.label;"
-                    accesskey="&trackingContentBlocked.block.accesskey;"
-                    oncommand="document.getBindingParent(this).enableTrackingContentProtection();"/>
-                </xul:menupopup>
-              </xul:button>
+                label="&trackingContentBlocked.unblock2.label;"
+                accesskey="&trackingContentBlocked.unblock2.accesskey;"
+                anonid="trackingContentAction.unblock"
+                hidden="true"
+                oncommand="document.getBindingParent(this).disableTrackingContentProtection();"
+              />
+              <xul:button
+                label="&trackingContentBlocked.block1.label;"
+                accesskey="&trackingContentBlocked.block1.accesskey;"
+                anonid="trackingContentAction.block"
+                hidden="true"
+                oncommand="document.getBindingParent(this).enableTrackingContentProtection();"
+              />
             </xul:hbox>
             <xul:hbox class="popup-notification-footer" xbl:inherits="popupid,trackingblockdisabled">
               <xul:description class="popup-notification-item-message popup-notification-item-message-critical" xbl:inherits="popupid">
                 &trackingContentBlocked.disabled.message;
                 </xul:description>
             </xul:hbox>
           </xul:vbox>
         </xul:vbox>
diff --git a/browser/locales/en-US/chrome/browser/browser.dtd b/browser/locales/en-US/chrome/browser/browser.dtd
--- a/browser/locales/en-US/chrome/browser/browser.dtd
+++ b/browser/locales/en-US/chrome/browser/browser.dtd
@@ -767,18 +767,18 @@ you can use these alternative items. Oth
 <!ENTITY mixedContentBlocked2.disabled.message "Protection is disabled">
 
 <!ENTITY trackingContentBlocked.message "Tracking">
 <!ENTITY trackingContentBlocked.moreinfo "Parts of the page that track your online activity have been blocked.">
 <!ENTITY trackingContentBlocked.learnMore "Learn More">
 <!ENTITY trackingContentBlocked.options "Options">
 <!ENTITY trackingContentBlocked.unblock2.label "Disable protection for this site">
 <!ENTITY trackingContentBlocked.unblock2.accesskey "D">
-<!ENTITY trackingContentBlocked.block.label "Enable protection">
-<!ENTITY trackingContentBlocked.block.accesskey "E">
+<!ENTITY trackingContentBlocked.block1.label "Enable protection for this site">
+<!ENTITY trackingContentBlocked.block1.accesskey "E">
 <!ENTITY trackingContentBlocked.disabled.message "Tracking protection is disabled">
 
 <!ENTITY pointerLock.notification.message "Press ESC at any time to show it again.">
 
 <!ENTITY pluginNotification.showAll.label "Show All">
 <!ENTITY pluginNotification.showAll.accesskey "S">
 
 <!-- LOCALIZATION NOTE (pluginActivateNow.label, pluginActivateAlways.label, pluginBlockNow.label): These should be the same as the matching strings in browser.properties -->
