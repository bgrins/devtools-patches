# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  09a4282d1172ac255038e7ccacfd772140b219e2
Bug 1375280 - Allow Browser Toolbox connections by default in local builds;r=jryans

MozReview-Commit-ID: tEUTEbTxiz

diff --git a/modules/libpref/init/all.js b/modules/libpref/init/all.js
--- a/modules/libpref/init/all.js
+++ b/modules/libpref/init/all.js
@@ -1009,32 +1009,43 @@ pref("toolkit.telemetry.unified", true);
 // AsyncShutdown delay before crashing in case of shutdown freeze
 pref("toolkit.asyncshutdown.crash_timeout", 60000);
 // Extra logging for AsyncShutdown barriers and phases
 pref("toolkit.asyncshutdown.log", false);
 
 // Enable deprecation warnings.
 pref("devtools.errorconsole.deprecation_warnings", true);
 
+#ifdef NIGHTLY_BUILD
+// Don't show the Browser Toolbox prompt on local builds / nightly
+pref("devtools.debugger.prompt-connection", false);
+#else
+pref("devtools.debugger.prompt-connection", true);
+#endif
+
+#ifdef MOZILLA_OFFICIAL
 // Disable debugging chrome
 pref("devtools.chrome.enabled", false);
+// Disable remote debugging connections
+pref("devtools.debugger.remote-enabled", false);
+#else
+// In local builds, enable the browser toolbox by default without a prompt
+pref("devtools.chrome.enabled", true);
+pref("devtools.debugger.remote-enabled", true);
+#endif
+
 
 // Disable remote debugging protocol logging
 pref("devtools.debugger.log", false);
 pref("devtools.debugger.log.verbose", false);
 
-// Disable remote debugging connections
-pref("devtools.debugger.remote-enabled", false);
-
 pref("devtools.debugger.remote-port", 6000);
 pref("devtools.debugger.remote-websocket", false);
 // Force debugger server binding on the loopback interface
 pref("devtools.debugger.force-local", true);
-// Display a prompt when a new connection starts to accept/reject it
-pref("devtools.debugger.prompt-connection", true);
 // Block tools from seeing / interacting with certified apps
 pref("devtools.debugger.forbid-certified-apps", true);
 
 // DevTools default color unit
 pref("devtools.defaultColorUnit", "authored");
 
 // Used for devtools debugging
 pref("devtools.dump.emit", false);
diff --git a/testing/marionette/client/marionette_driver/geckoinstance.py b/testing/marionette/client/marionette_driver/geckoinstance.py
--- a/testing/marionette/client/marionette_driver/geckoinstance.py
+++ b/testing/marionette/client/marionette_driver/geckoinstance.py
@@ -173,16 +173,22 @@ class GeckoInstance(object):
         if "-jsdebugger" in self.app_args:
             profile_args["preferences"].update({
                 "devtools.browsertoolbox.panel": "jsdebugger",
                 "devtools.debugger.remote-enabled": True,
                 "devtools.chrome.enabled": True,
                 "devtools.debugger.prompt-connection": False,
                 "marionette.debugging.clicktostart": True,
             })
+        else:
+            profile_args["preferences"].update({
+                "devtools.debugger.remote-enabled": False,
+                "devtools.chrome.enabled": False,
+                "devtools.debugger.prompt-connection": True,
+            })
         if self.addons:
             profile_args["addons"] = self.addons
 
         if hasattr(self, "profile_path") and self.profile is None:
             if not self.profile_path:
                 if self.workspace:
                     profile_args["profile"] = tempfile.mkdtemp(
                         suffix=".mozrunner-{:.0f}".format(time.time()),
diff --git a/testing/mochitest/mochitest_options.py b/testing/mochitest/mochitest_options.py
--- a/testing/mochitest/mochitest_options.py
+++ b/testing/mochitest/mochitest_options.py
@@ -727,17 +727,22 @@ class MochitestArguments(ArgumentContain
             options.symbolsPath = os.path.join(build_obj.distdir, 'crashreporter-symbols')
 
         if options.jsdebugger:
             options.extraPrefs += [
                 "devtools.debugger.remote-enabled=true",
                 "devtools.chrome.enabled=true",
                 "devtools.debugger.prompt-connection=false"
             ]
-
+        else:
+            options.extraPrefs += [
+                "devtools.debugger.remote-enabled=false",
+                "devtools.chrome.enabled=false",
+                "devtools.debugger.prompt-connection=true"
+            ]
         if options.debugOnFailure and not options.jsdebugger:
             parser.error(
                 "--debug-on-failure requires --jsdebugger.")
 
         if options.debuggerArgs and not options.debugger:
             parser.error(
                 "--debugger-args requires --debugger.")
 
