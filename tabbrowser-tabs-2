# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  c68ff92fe54c75338c3a937bc6c4e615d9b1d45a
Bug 1498674 - Another attempt at de-anon tabbrowser-tabs

diff --git a/browser/base/content/browser.xul b/browser/base/content/browser.xul
--- a/browser/base/content/browser.xul
+++ b/browser/base/content/browser.xul
@@ -712,44 +712,58 @@
                aria-label="&tabsToolbar.label;"
                context="toolbar-context-menu"
                flex="1">
 
         <hbox class="titlebar-spacer" type="pre-tabs"/>
 
         <hbox flex="1" align="end" class="toolbar-items">
           <hbox id="TabsToolbar-customization-target" flex="1">
+          <hbox class="tab-drop-indicator-box">
+            <image class="tab-drop-indicator" id="tab-drop-indicator" collapsed="true"/>
+          </hbox>
+          <arrowscrollbox id="tabbrowser-arrowscrollbox" orient="horizontal" flex="1"
+                              style="min-width: 1px;"
+                              clicktoscroll="true"
+                              class="tabbrowser-arrowscrollbox">
             <tabs id="tabbrowser-tabs"
                   flex="1"
                   setfocus="false"
                   tooltip="tabbrowser-tab-tooltip"
                   stopwatchid="FX_TAB_CLICK_MS">
               <tab class="tabbrowser-tab" selected="true" visuallyselected="true" fadein="true"/>
             </tabs>
+            <toolbarbutton class="tabs-newtab-button toolbarbutton-1"
+                              id="tabs-newtab-button"
+                              command="cmd_newNavigatorTab"
+                              onclick="checkForMiddleClick(this, event);"
+                              />
+            <spacer class="closing-tabs-spacer" id="closing-tabs-spacer"
+                        style="width: 0;"/>
+          </arrowscrollbox>
+          <toolbarbutton id="new-tab-button"
+                          class="toolbarbutton-1 chromeclass-toolbar-additional"
+                          label="&tabCmd.label;"
+                          command="cmd_newNavigatorTab"
+                          onclick="checkForMiddleClick(this, event);"
+                          tooltip="dynamic-shortcut-tooltip"
+                          ondrop="newTabButtonObserver.onDrop(event)"
+                          ondragover="newTabButtonObserver.onDragOver(event)"
+                          ondragenter="newTabButtonObserver.onDragOver(event)"
+                          ondragexit="newTabButtonObserver.onDragExit(event)"
+                          cui-areatype="toolbar"
+                          removable="true"/>
 
-            <toolbarbutton id="new-tab-button"
-                           class="toolbarbutton-1 chromeclass-toolbar-additional"
-                           label="&tabCmd.label;"
-                           command="cmd_newNavigatorTab"
-                           onclick="checkForMiddleClick(this, event);"
-                           tooltip="dynamic-shortcut-tooltip"
-                           ondrop="newTabButtonObserver.onDrop(event)"
-                           ondragover="newTabButtonObserver.onDragOver(event)"
-                           ondragenter="newTabButtonObserver.onDragOver(event)"
-                           ondragexit="newTabButtonObserver.onDragExit(event)"
-                           cui-areatype="toolbar"
-                           removable="true"/>
-
-            <toolbarbutton id="alltabs-button"
-                           class="toolbarbutton-1 chromeclass-toolbar-additional tabs-alltabs-button badged-button"
-                           oncommand="gTabsPanel.showAllTabsPanel();"
-                           label="&listAllTabs.label;"
-                           tooltiptext="&listAllTabs.label;"
-                           removable="false"/>
-          </hbox>
+          <toolbarbutton id="alltabs-button"
+                          class="toolbarbutton-1 chromeclass-toolbar-additional tabs-alltabs-button badged-button"
+                          oncommand="gTabsPanel.showAllTabsPanel();"
+                          label="&listAllTabs.label;"
+                          tooltiptext="&listAllTabs.label;"
+                          removable="false"/>
+        </hbox>
         </hbox>
 
         <hbox class="titlebar-spacer" type="post-tabs"/>
 
 #ifndef XP_MACOSX
         <button class="accessibility-indicator" tooltiptext="&accessibilityIndicator.tooltip;"
                 aria-live="polite"/>
         <hbox class="private-browsing-indicator"/>
diff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml
--- a/browser/base/content/tabbrowser.xml
+++ b/browser/base/content/tabbrowser.xml
@@ -5,59 +5,30 @@
    - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
 
 <bindings id="tabBrowserBindings"
           xmlns="http://www.mozilla.org/xbl"
           xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
           xmlns:xbl="http://www.mozilla.org/xbl">
   <binding id="tabbrowser-tabs"
            extends="chrome://global/content/bindings/tabbox.xml#tabs">
-    <content>
-      <xul:hbox class="tab-drop-indicator-box">
-        <xul:image class="tab-drop-indicator" anonid="tab-drop-indicator" collapsed="true"/>
-      </xul:hbox>
-      <xul:arrowscrollbox anonid="arrowscrollbox" orient="horizontal" flex="1"
-                          style="min-width: 1px;"
-                          clicktoscroll="true"
-                          class="tabbrowser-arrowscrollbox">
-<!--
- This is a hack to circumvent bug 472020, otherwise the tabs show up on the
- right of the newtab button.
--->
-        <children includes="tab"/>
-<!--
-  This is to ensure anything extensions put here will go before the newtab
-  button, necessary due to the previous hack.
--->
-        <children/>
-        <xul:toolbarbutton class="tabs-newtab-button toolbarbutton-1"
-                           anonid="tabs-newtab-button"
-                           command="cmd_newNavigatorTab"
-                           onclick="checkForMiddleClick(this, event);"
-                           />
-        <xul:spacer class="closing-tabs-spacer" anonid="closing-tabs-spacer"
-                    style="width: 0;"/>
-      </xul:arrowscrollbox>
-    </content>
-
     <implementation implements="nsIObserver">
       <constructor>
         <![CDATA[
           this._tabClipWidth = Services.prefs.getIntPref("browser.tabs.tabClipWidth");
           this._hiddenSoundPlayingTabs = new Set();
 
           let strId = PrivateBrowsingUtils.isWindowPrivate(window) ?
               "emptyPrivateTabTitle" : "emptyTabTitle";
           this.emptyTabTitle = gTabBrowserBundle.GetStringFromName("tabs." + strId);
 
           var tab = this.firstElementChild;
           tab.label = this.emptyTabTitle;
 
-          let newTabButton = document.getAnonymousElementByAttribute(
-            this, "anonid", "tabs-newtab-button");
+          let newTabButton = document.getElementById("tabs-newtab-button");
           newTabButton.setAttribute("tooltiptext", GetDynamicShortcutTooltipText("tabs-newtab-button"));
 
           window.addEventListener("resize", this);
 
           Services.prefs.addObserver("privacy.userContext", this);
           this.observe(null, "nsPref:changed", "privacy.userContext.enabled");
 
           XPCOMUtils.defineLazyPreferenceGetter(this, "_tabMinWidthPref",
@@ -103,17 +74,17 @@
         document.getElementById("tabbrowser-tabbox");
       </field>
 
       <field name="contextMenu" readonly="true">
         document.getElementById("tabContextMenu");
       </field>
 
       <field name="arrowScrollbox">
-        document.getAnonymousElementByAttribute(this, "anonid", "arrowscrollbox");
+        document.getElementById("tabbrowser-arrowscrollbox");
       </field>
 
       <field name="_firstTab">null</field>
       <field name="_lastTab">null</field>
       <field name="_beforeSelectedTab">null</field>
       <field name="_beforeHoveredTab">null</field>
       <field name="_afterHoveredTab">null</field>
       <field name="_hoveredTab">null</field>
@@ -206,17 +177,17 @@
 
               // If longPressBehavior pref is set to 0 (or any invalid value)
               // long press menu is disabled.
               if (containersEnabled && (longPressBehavior <= 0 || longPressBehavior > 2)) {
                 containersEnabled = false;
               }
 
               const newTab = document.getElementById("new-tab-button");
-              const newTab2 = document.getAnonymousElementByAttribute(this, "anonid", "tabs-newtab-button");
+              const newTab2 = document.getElementById("tabs-newtab-button");
 
               for (let parent of [newTab, newTab2]) {
                 if (!parent)
                   continue;
 
                 gClickAndHoldListenersOnElement.remove(parent);
                 parent.removeAttribute("type");
                 if (parent.firstElementChild) {
@@ -328,17 +299,17 @@
             }
           }
         ]]></body>
       </method>
 
       <field name="_blockDblClick">false</field>
 
       <field name="_tabDropIndicator">
-        document.getAnonymousElementByAttribute(this, "anonid", "tab-drop-indicator");
+        document.getElementById("tab-drop-indicator");
       </field>
 
       <field name="_dragOverDelay">350</field>
       <field name="_dragTime">0</field>
 
       <field name="_closeButtonsUpdatePending">false</field>
       <method name="_updateCloseButtons">
         <body><![CDATA[
@@ -400,17 +371,17 @@
           if (this.getAttribute("overflow") == "true")
             this.arrowScrollbox.ensureElementIsVisible(selectedTab, aInstant);
 
           selectedTab._notselectedsinceload = false;
         ]]></body>
       </method>
 
       <field name="_closingTabsSpacer">
-        document.getAnonymousElementByAttribute(this, "anonid", "closing-tabs-spacer");
+        document.getElementById("closing-tabs-spacer");
       </field>
 
       <field name="_tabDefaultMaxWidth">NaN</field>
       <field name="_lastTabClosedByMouse">false</field>
       <field name="_hasTabTempMaxWidth">false</field>
 
       <!-- Try to keep the active tab's close button under the mouse cursor -->
       <method name="_lockTabSizing">
