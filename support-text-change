# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  0dcd3f277f6215f2ec06705dc356cdbe7c626e0f

diff --git a/toolkit/content/widgets/text.js b/toolkit/content/widgets/text.js
--- a/toolkit/content/widgets/text.js
+++ b/toolkit/content/widgets/text.js
@@ -37,32 +37,41 @@ if (gUnderlineAccesskey) {
 class MozTextLabel extends MozXULTextElement {
   constructor() {
     super();
     this._lastFormattedAccessKey = null;
     this.addEventListener("click", this._onClick);
   }
 
   static get observedAttributes() {
-    return ["accesskey"];
+    return ["accesskey", "text"];
   }
 
   set textContent(val) {
+    textContentDescriptor.set.call(this, val);
     this._lastFormattedAccessKey = null;
-    textContentDescriptor.set.call(this, val);
+    this.formatAccessKey();
   }
 
   get textContent() {
     return textContentDescriptor.get.call(this);
   }
 
   attributeChangedCallback(name, oldValue, newValue) {
     if (!this.isConnectedAndReady || oldValue == newValue) {
       return;
     }
+
+    // As long as we are still hosted within XBL anonymous content and the [text]
+    // attribute inheritance, we need to handle changes this way, in addition to textContent:
+    if (name == "text") {
+      this._lastFormattedAccessKey = null;
+    }
+
+    // console.log(name, oldValue, newValue, this.textContent);
     this.formatAccessKey();
   }
 
   _onClick(event) {
     let controlElement = this.labeledControlElement;
     if (!controlElement || this.disabled) {
       return;
     }
