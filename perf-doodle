# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  da66c4a05fda49d457d9411a7092fed87cf9e53a

diff --git a/devtools/client/webconsole/new-console-output/components/console-output.js b/devtools/client/webconsole/new-console-output/components/console-output.js
--- a/devtools/client/webconsole/new-console-output/components/console-output.js
+++ b/devtools/client/webconsole/new-console-output/components/console-output.js
@@ -80,32 +80,34 @@ const ConsoleOutput = createClass({
       messagesUi,
       messagesTableData,
       messagesRepeat,
       networkMessagesUpdate,
       serviceContainer,
       timestampsVisible,
     } = this.props;
 
+    console.time("Creating messageNodes");
     let messageNodes = visibleMessages.map((message) => {
       return (
         MessageContainer({
           dispatch,
           message,
           key: message.id,
           serviceContainer,
           open: messagesUi.includes(message.id),
           tableData: messagesTableData.get(message.id),
           indent: message.indent,
           timestampsVisible,
           repeat: messagesRepeat[message.id],
           networkMessageUpdate: networkMessagesUpdate[message.id],
         })
       );
     });
+    console.timeEnd("Creating messageNodes");
 
     return (
       dom.div({
         className: "webconsole-output",
         onContextMenu: this.onContextMenu,
         ref: node => {
           this.outputNode = node;
         },
diff --git a/devtools/client/webconsole/new-console-output/components/message-container.js b/devtools/client/webconsole/new-console-output/components/message-container.js
--- a/devtools/client/webconsole/new-console-output/components/message-container.js
+++ b/devtools/client/webconsole/new-console-output/components/message-container.js
@@ -4,19 +4,20 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 "use strict";
 
 // React & Redux
 const {
   createClass,
-
+  DOM: dom,
   PropTypes
 } = require("devtools/client/shared/vendor/react");
+const ReactDOM = require("devtools/client/shared/vendor/react-dom");
 
 const {
   MESSAGE_SOURCE,
   MESSAGE_TYPE
 } = require("devtools/client/webconsole/new-console-output/constants");
 
 const componentMap = new Map([
   ["ConsoleApiCall", require("./message-types/console-api-call")],
@@ -63,24 +64,64 @@ const MessageContainer = createClass({
       || openChanged
       || tableDataChanged
       || responseChanged
       || totalTimeChanged
       || timestampVisibleChanged
       || networkMessageUpdateChanged;
   },
 
+  componentWillUnmount() {
+
+  },
+
   render() {
     const { message } = this.props;
+    const mount = dom.div({
+      ref: (div) => { this.div = div}
+    });
+
+    itemsToRender.push(this);
+    scheduleRender();
+    return mount;
 
     let MessageComponent = getMessageComponent(message);
     return MessageComponent(this.props);
   }
 });
 
+
+const itemsToRender = [];
+let raf = null;
+let FRAME_BUDGET = 10;
+function scheduleRender() {
+    if (raf) {
+      return;
+    }
+    raf = requestAnimationFrame(() => {
+      const start = Date.now();
+      while (Date.now() - start < FRAME_BUDGET && itemsToRender.length !== 0) {
+        const item = itemsToRender.shift();
+        if (item.div && item.div.parentNode) {
+        let MessageComponent = getMessageComponent(item.props.message);
+        ReactDOM.render(MessageComponent(item.props), item.div);
+        item.div.scrollIntoView();
+      } else {
+        console.log("Forget it", item.key1);
+      }
+      }
+      raf = null;
+      if (itemsToRender.length > 0) {
+        console.log("Carrying over",itemsToRender.length )
+        scheduleRender();
+      }
+    });
+}
+
+
 function getMessageComponent(message) {
   switch (message.source) {
     case MESSAGE_SOURCE.CONSOLE_API:
       return componentMap.get("ConsoleApiCall");
     case MESSAGE_SOURCE.NETWORK:
       return componentMap.get("NetworkEventMessage");
     case MESSAGE_SOURCE.CSS:
     case MESSAGE_SOURCE.JAVASCRIPT:
