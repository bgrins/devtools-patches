# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  e28e2921e6f4b5e51eefab0642962210a2d81391

diff --git a/toolkit/content/widgets/radio.js b/toolkit/content/widgets/radio.js
--- a/toolkit/content/widgets/radio.js
+++ b/toolkit/content/widgets/radio.js
@@ -312,22 +312,21 @@ class MozRadiogroup extends MozBaseContr
 
     var radioChildren = [];
     var doc = this.ownerDocument;
 
     if (this.hasChildNodes()) {
       // Don't store the collected child nodes immediately,
       // collecting the child nodes could trigger constructors
       // which would blow away our list.
-
-      var iterator = doc.createTreeWalker(this,
+      var iterator = doc.createNodeIterator(this,
         NodeFilter.SHOW_ELEMENT,
         this._filterRadioGroup);
       while (iterator.nextNode())
-        radioChildren.push(iterator.currentNode);
+        radioChildren.push(iterator.referenceNode);
       return this._radioChildren = radioChildren;
     }
 
     // We don't have child nodes.
     const XUL_NS = "http://www.mozilla.org/keymaster/" +
       "gatekeeper/there.is.only.xul";
     var elems = doc.getElementsByAttribute("group", this.id);
     for (var i = 0; i < elems.length; i++) {
@@ -338,17 +337,16 @@ class MozRadiogroup extends MozBaseContr
     }
     return this._radioChildren = radioChildren;
   }
 
   _filterRadioGroup(node) {
     switch (node.localName) {
       case "radio":
         return NodeFilter.FILTER_ACCEPT;
-      case "template":
       case "radiogroup":
         return NodeFilter.FILTER_REJECT;
       default:
         return NodeFilter.FILTER_SKIP;
     }
   }
 
   getIndexOfItem(item) {
