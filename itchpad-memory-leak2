# HG changeset patch
# Parent 8d3e4777b5189e233a46e3e0dcc27a88633da2df
# User Brian Grinstead <bgrinstead@mozilla.com>
testing mem leak on editor_01.js


diff --git a/browser/devtools/itchpad/test/browser_itchpad_editing_01.js b/browser/devtools/itchpad/test/browser_itchpad_editing_01.js
--- a/browser/devtools/itchpad/test/browser_itchpad_editing_01.js
+++ b/browser/devtools/itchpad/test/browser_itchpad_editing_01.js
@@ -9,35 +9,29 @@ let test = asyncTest(function*() {
   let itchpad = yield addItchpadTabForTempDirectory();
   let TEMP_PATH = [...itchpad.project.allPaths()][0];
 
   var defer = promise.defer();
 
   ok (itchpad.currentEditor, "There is an editor for itchpad");
   let containers = [...itchpad.projectTree._containers].map(z=>z[0]);
 
-  yield selectFile(itchpad, containers[1]);
-  yield selectFile(itchpad, containers[2]);
-  yield selectFile(itchpad, containers[3]);
+  // yield selectFile(itchpad, containers[1]);
+  // yield selectFile(itchpad, containers[2]);
+  // yield selectFile(itchpad, containers[3]);
   yield selectFile(itchpad, containers[4]);
-  yield testEditFile(itchpad, TEMP_PATH + "/index.html", "<h1>Changed Content</h1>");
+  // yield testEditFile(itchpad, TEMP_PATH + "/index.html", "<h1>Changed Content</h1>");
 
-  yield selectFile(itchpad, containers[5]);
-  yield selectFile(itchpad, containers[6]);
-  yield testEditFile(itchpad, TEMP_PATH + "/README.md", "### Markdown\n*Editing*");
+  // yield selectFile(itchpad, containers[5]);
+  // yield selectFile(itchpad, containers[6]);
+  // yield testEditFile(itchpad, TEMP_PATH + "/README.md", "### Markdown\n*Editing*");
 
-  // XXX: Move this to tree_select.js
-  // containers.forEach(function(container) {
-  //   console.log("Container exists", container.displayName);
-  //   itchpad.projectTree.select(container);
-  // });
-
-  is ([...itchpad.project.allPaths()].length, 1, "1 path is set");
-  itchpad.project.removeAllStores();
-  is ([...itchpad.project.allPaths()].length, 0, "No paths are remaining");
+  // is ([...itchpad.project.allPaths()].length, 1, "1 path is set");
+  // itchpad.project.removeAllStores();
+  // is ([...itchpad.project.allPaths()].length, 0, "No paths are remaining");
 
   // itchpad.window.setTimeout(() => {
   defer.resolve();
   // }, 5000);
   return defer.promise;
 });
 
 
@@ -70,21 +64,21 @@ function* selectFile(itchpad, container)
   itchpad.projectTree.select(container);
 
   if (container.isDir) {
     return;
   }
 
   let [editorCreated, editorLoaded] = yield promise.all([
     whenEditorCreated(itchpad),
-    whenEditorLoad(itchpad)
+    // whenEditorLoad(itchpad)
   ]);
 
-  is (editorCreated, itchpad.currentEditor,  "Editor has been created for " + container.path);
-  is (editorLoaded, itchpad.currentEditor,  "Editor has been loaded for " + container.path);
+  // is (editorCreated, itchpad.currentEditor,  "Editor has been created for " + container.path);
+  // is (editorLoaded, itchpad.currentEditor,  "Editor has been loaded for " + container.path);
 }
 
 function* testEditFile(itchpad, filePath, newData) {
   info ("Testing file editing for: " + filePath);
 
   let initialData = yield getFileData(filePath);
   let editor = itchpad.currentEditor;
   let resource = itchpad.resourceFor(editor);
diff --git a/browser/devtools/itchpad/test/browser_itchpad_tree_selection.js b/browser/devtools/itchpad/test/browser_itchpad_tree_selection.js
--- a/browser/devtools/itchpad/test/browser_itchpad_tree_selection.js
+++ b/browser/devtools/itchpad/test/browser_itchpad_tree_selection.js
@@ -5,9 +5,16 @@
 "use strict";
 
 // Test tree selection functionality
 
 let test = asyncTest(function*() {
   let itchpad = yield addItchpadTabForTempDirectory();
   ok(itchpad, "Itchpad has loaded");
 
+  // XXX:
+  // Select each file from the tree, make sure editor appears, then select another.
+  // Go back through again and make sure new editors are not opened
+  // containers.forEach(function(container) {
+  //   console.log("Container exists", container.displayName);
+  //   itchpad.projectTree.select(container);
+  // });
 });
\ No newline at end of file
