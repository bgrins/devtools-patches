# HG changeset patch
# User Tom Tromey <tromey@mozilla.com>

Bug 1201136 - make output-parser correctly handle special color values

diff --git a/browser/devtools/shared/test/browser_outputparser.js b/browser/devtools/shared/test/browser_outputparser.js
index 78303ad..8ad8765 100644
--- a/browser/devtools/shared/test/browser_outputparser.js
+++ b/browser/devtools/shared/test/browser_outputparser.js
@@ -93,17 +93,19 @@ function testParseCssProperty(doc, parser) {
     makeColorTest("hellothere", "'red'", ["'red'"]),
 
     makeColorTest("filter",
                   "blur(1px) drop-shadow(0 0 0 blue) url(red.svg#blue)",
                   ["<span data-filters=\"blur(1px) drop-shadow(0 0 0 blue) ",
                    "url(red.svg#blue)\"><span>",
                    "blur(1px) drop-shadow(0 0 0 ",
                    {name: "blue", value: "#00F"},
-                   ") url(\"red.svg#blue\")</span></span>"])
+                   ") url(\"red.svg#blue\")</span></span>"]),
+
+    makeColorTest("color", "currentColor", ["currentColor"])
   ];
 
   let target = doc.querySelector("div");
   ok(target, "captain, we have the div");
 
   for (let test of tests) {
     info(test.desc);
 
diff --git a/toolkit/devtools/output-parser.js b/toolkit/devtools/output-parser.js
index 8be33be..598e3f7 100644
--- a/toolkit/devtools/output-parser.js
+++ b/toolkit/devtools/output-parser.js
@@ -309,19 +309,16 @@ OutputParser.prototype = {
   /**
    * Append a color to the output.
    *
    * @param  {String} color
    *         Color to append
    * @param  {Object} [options]
    *         Options object. For valid options and default values see
    *         _mergeOptions().
-   * @returns {Boolean}
-   *          true if the color passed in was valid, false otherwise. Special
-   *          values such as transparent also return false.
    */
   _appendColor: function(color, options={}) {
     let colorObj = new colorUtils.CssColor(color);
 
     if (this._isValidColor(colorObj)) {
       let container = this._createNode("span", {
          "data-color": color
       });
@@ -342,19 +339,19 @@ OutputParser.prototype = {
       }
 
       let value = this._createNode("span", {
         class: options.colorClass
       }, color);
 
       container.appendChild(value);
       this.parsed.push(container);
-      return true;
+    } else {
+      this._appendTextNode(color);
     }
-    return false;
   },
 
   /**
    * Wrap some existing nodes in a filter editor.
    *
    * @param {String} filters
    *        The full text of the "filter" property.
    * @param {object} options
