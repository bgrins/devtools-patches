# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  a4a4365468fc8dcba33a29762a1f17f0d9190e15

diff --git a/browser/components/places/content/places-menupopup.js b/browser/components/places/content/places-menupopup.js
--- a/browser/components/places/content/places-menupopup.js
+++ b/browser/components/places/content/places-menupopup.js
@@ -30,46 +30,16 @@
       for (let event_name of event_names) {
         this.addEventListener(event_name, ev => this[`on_${event_name}`](ev));
       }
 
       this._indicatorBar = this.shadowRoot.querySelector(
         "[part=drop-indicator-bar]"
       );
       this._scrollBox = this.shadowRoot.querySelector(".popup-internal-box");
-    }
-
-    get fragment() {
-      if (!this.constructor.hasOwnProperty("_fragment")) {
-        this.constructor._fragment = MozXULElement.parseXULToFragment(
-          this.markup
-        );
-      }
-      return document.importNode(this.constructor._fragment, true);
-    }
-
-    get markup() {
-      return `
-      <html:link rel="stylesheet" href="chrome://global/skin/global.css" />
-      <hbox flex="1" part="innerbox">
-        <vbox part="drop-indicator-bar" hidden="true">
-          <image part="drop-indicator" mousethrough="always"></image>
-        </vbox>
-        <arrowscrollbox class="popup-internal-box" flex="1" orient="vertical"
-                        smoothscroll="false" part="popupbox">
-          <html:slot></html:slot>
-        </arrowscrollbox>
-      </hbox>
-    `;
-    }
-
-    connectedCallback() {
-      if (this.delayConnectedCallback()) {
-        return;
-      }
 
       /**
        * Sub-menus should be opened when the mouse drags over them, and closed
        * when the mouse drags off.  The overFolder object manages opening and
        * closing of folders when the mouse hovers.
        */
       this._overFolder = {
         _self: this,
@@ -212,16 +182,40 @@
           if (this._folder.closeTimer) {
             this._folder.closeTimer.cancel();
             this._folder.closeTimer = null;
           }
         },
       };
     }
 
+    get fragment() {
+      if (!this.constructor.hasOwnProperty("_fragment")) {
+        this.constructor._fragment = MozXULElement.parseXULToFragment(
+          this.markup
+        );
+      }
+      return document.importNode(this.constructor._fragment, true);
+    }
+
+    get markup() {
+      return `
+      <html:link rel="stylesheet" href="chrome://global/skin/global.css" />
+      <hbox flex="1" part="innerbox">
+        <vbox part="drop-indicator-bar" hidden="true">
+          <image part="drop-indicator" mousethrough="always"></image>
+        </vbox>
+        <arrowscrollbox class="popup-internal-box" flex="1" orient="vertical"
+                        smoothscroll="false" part="popupbox">
+          <html:slot></html:slot>
+        </arrowscrollbox>
+      </hbox>
+    `;
+    }
+
     /**
      * This is the view that manages the popup.
      */
     get _rootView() {
       if (!this.__rootView) {
         this.__rootView = PlacesUIUtils.getViewForNode(this);
       }
       return this.__rootView;
