# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  0d72c7996d60a7c07e35c5f90d78b02a47d17460
Bug 1479908 - Prototype bookmarkThisPageBroadcaster behavior without XUL broadcaster

diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -383,16 +383,60 @@ function SetClickAndHoldHandlers() {
 
   let forwardButton = document.getElementById("forward-button");
   popup = popup.cloneNode(true);
   forwardButton.setAttribute("type", "menu");
   forwardButton.appendChild(popup);
   gClickAndHoldListenersOnElement.add(forwardButton);
 }
 
+class Broadcaster extends EventTarget {
+  constructor() {
+    super();
+    this._state = {};
+  }
+  setState(state) {
+    for (let s in state) {
+      this._state[s] = state[s];
+    }
+    this.dispatchEvent(new CustomEvent("change", {
+      detail: this.getState()
+    }));
+  }
+  getState() {
+    return this._state;
+  }
+  copyToNode(node) {
+    let state = this.getState();
+    for (let s in state) {
+      if (state[s] === undefined) {
+        node.removeAttribute(s);
+      } else {
+        node.setAttribute(s, state[s]);
+      }
+    }
+  }
+
+  registerNode(node) {
+    this.addEventListener("change", () => {
+      this.copyToNode(node);
+    });
+    this.copyToNode(node);
+  }
+}
+
+const Broadcasters = {
+  bookmark: new Broadcaster({
+
+  }),
+};
+
+Broadcasters.bookmark.addEventListener("change", (e) => {
+  console.log(event, event.detail);
+});
 
 const gClickAndHoldListenersOnElement = {
   _timers: new Map(),
 
   _mousedownHandler(aEvent) {
     if (aEvent.button != 0 ||
         aEvent.currentTarget.open ||
         aEvent.currentTarget.disabled)
