# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  1a672c721700595d8d90e693f410fdff39b3f774

diff --git a/browser/base/content/test/performance/head.js b/browser/base/content/test/performance/head.js
--- a/browser/base/content/test/performance/head.js
+++ b/browser/base/content/test/performance/head.js
@@ -590,16 +590,21 @@ function dumpFrame({ data, width, height
  *               {name: "bug 1nnnnnn - the foo icon shouldn't flicker",
  *                condition: r => r.w == 14 && r.y1 == 0 && ... }
  *               },
  *               {name: "bug ...
  *             ]
  */
 function reportUnexpectedFlicker(frames, expectations) {
   info("comparing " + frames.length + " frames");
+  info(
+    `tab height ${gBrowser.selectedTab.clientHeight} and content height ${
+      gBrowser.selectedTab.querySelector(".tab-content").clientHeight
+    }`
+  );
 
   let unexpectedRects = 0;
   for (let i = 1; i < frames.length; ++i) {
     let frame = frames[i],
       previousFrame = frames[i - 1];
     let rects = compareFrames(frame, previousFrame);
 
     if (expectations.filter) {
@@ -610,16 +615,17 @@ function reportUnexpectedFlicker(frames,
       let rectText = `${rect.toSource()}, window width: ${frame.width}`;
       for (let e of expectations.exceptions || []) {
         if (e.condition(rect)) {
           todo(false, e.name + ", " + rectText);
           return false;
         }
       }
 
+      debugger;
       ok(false, "unexpected changed rect: " + rectText);
       return true;
     });
 
     if (!rects.length) {
       continue;
     }
 
