# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  35d22a574873de433bba1814bf870209a3dfe67d
temp changse

diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -6889,17 +6889,17 @@ var gIdentityHandler = {
     }
 
     // We need those values later when populating the control center.
     this._uri = uri;
     this._state = state;
     this._isChromeUI = isChromeUI;
     this._sslStatus =
       gBrowser.securityUI.QueryInterface(Ci.nsISSLStatusProvider).SSLStatus;
-
+console.log(this._sslStatus);
     // Update the identity block.
     if (this._identityBox) {
       this._identityBox.className = mode;
       this.refreshIdentityBlock(mode);
     }
 
     // NOTE: We do NOT update the identity popup (the control center) when
     // we receive a new security state. If the user opened the popup and looks
@@ -7055,36 +7055,35 @@ var gIdentityHandler = {
     // We have no specific flags for weak ciphers (yet). If a connection is
     // broken and we can't detect any mixed active content loaded then it's
     // a weak cipher.
     let ciphers = "";
     if (isBroken && !isMixedActiveContentLoaded) {
       ciphers = "weak";
     }
 
-    // Update all elements.
-    let elementIDs = [
-      "identity-popup",
-      "identity-popup-securityView-body",
-    ];
-
     function updateAttribute(elem, attr, value) {
       if (value) {
         elem.setAttribute(attr, value);
       } else {
         elem.removeAttribute(attr);
       }
     }
 
-    for (let id of elementIDs) {
-      let element = document.getElementById(id);
-      updateAttribute(element, "connection", connection);
-      updateAttribute(element, "ciphers", ciphers);
-      updateAttribute(element, "mixedcontent", mixedcontent);
-    }
+    // Don't update the mixedcontent attribute for the popup unless if STATE_IS_BROKEN.
+    // This prevents showing a lock on an http page with an https frame and MCB, see Bug 1192162.
+    let identityPopup = document.getElementById("identity-popup");
+    updateAttribute(identityPopup, "connection", connection);
+    updateAttribute(identityPopup, "ciphers", ciphers);
+    updateAttribute(identityPopup, "mixedcontent", isBroken ? mixedcontent : null);
+
+    let identityPopupBody = document.getElementById("identity-popup-securityView-body");
+    updateAttribute(identityPopupBody, "connection", connection);
+    updateAttribute(identityPopupBody, "ciphers", ciphers);
+    updateAttribute(identityPopupBody, "mixedcontent", mixedcontent);
 
     // Initialize the optional strings to empty values
     let supplemental = "";
     let verifier = "";
     let host = "";
     let owner = "";
 
     try {
diff --git a/browser/components/controlcenter/content/panel.inc.xul b/browser/components/controlcenter/content/panel.inc.xul
--- a/browser/components/controlcenter/content/panel.inc.xul
+++ b/browser/components/controlcenter/content/panel.inc.xul
@@ -1,15 +1,16 @@
 <!-- This Source Code Form is subject to the terms of the Mozilla Public
    - License, v. 2.0. If a copy of the MPL was not distributed with this
    - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
 
 <panel id="identity-popup"
        type="arrow"
        hidden="true"
+       noautohide="true"
        onpopupshown="gIdentityHandler.onPopupShown(event);"
        onpopuphidden="gIdentityHandler.onPopupHidden(event);"
        orient="vertical">
 
   <broadcasterset>
     <broadcaster id="identity-popup-content-host" class="identity-popup-headline" crop="end"/>
     <broadcaster id="identity-popup-mcb-learn-more" class="text-link plain" value="&identity.learnMore;"/>
   </broadcasterset>
diff --git a/browser/themes/shared/controlcenter/panel.inc.css b/browser/themes/shared/controlcenter/panel.inc.css
--- a/browser/themes/shared/controlcenter/panel.inc.css
+++ b/browser/themes/shared/controlcenter/panel.inc.css
@@ -217,23 +217,16 @@
   background-image: url(chrome://browser/skin/controlcenter/conn-degraded.svg);
 }
 
 #identity-popup[mixedcontent~=active-loaded] #identity-popup-securityView,
 #identity-popup[mixedcontent~=active-loaded] #identity-popup-security-content {
   background-image: url(chrome://browser/skin/controlcenter/mcb-disabled.svg);
 }
 
-/* Make sure that non-secure connections always show the correct icon. Works
-   around case where there is an https iframe with MCB inside an http page. */
-#identity-popup[connection=not-secure] #identity-popup-securityView,
-#identity-popup[connection=not-secure] #identity-popup-security-content {
-  background-image: url(chrome://browser/skin/controlcenter/conn-not-secure.svg);
-}
-
 #identity-popup-security-descriptions > description {
   margin-top: 6px;
   color: Graytext;
 }
 
 #identity-popup-securityView-header {
   border-bottom: 1px solid var(--panel-separator-color);
   padding-bottom: 1em;
