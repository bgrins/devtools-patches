# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  11f12da5719b2602d11982a2499f2cda22f099a6
Bug 1175327 - Move existing Tracking Protection functionality from shield doorhanger to Control Center;r=ttaubert

diff --git a/browser/base/content/browser-trackingprotection.js b/browser/base/content/browser-trackingprotection.js
new file mode 100644
--- /dev/null
+++ b/browser/base/content/browser-trackingprotection.js
@@ -0,0 +1,133 @@
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+let TrackingProtection = {
+  PREF_ENABLED: "privacy.trackingprotection.enabled",
+
+  // States for the current page
+  isTrackingBlocked: false,
+  isTrackingLoaded: false,
+  isNoTracking: false,
+
+  init: function() {
+    this.updateEnabled();
+    Services.prefs.addObserver(this.PREF_ENABLED,
+                               this.updateEnabled.bind(this), false);
+
+    let $ = selector => document.querySelector(selector);
+    this.container = $("#tracking-protection-container");
+    this.unblockButton = $("#tracking-action-unblock");
+    this.blockButton = $("#tracking-action-block");
+    this.labelTrackingBlocked = $("#tracking-blocked");
+    this.labelTrackingLoaded = $("#tracking-loaded");
+    this.labelNoTracking = $("#tracking-not-detected");
+    this.actions = $("#tracking-actions");
+
+    this.resetUI();
+  },
+
+  getTelemetryHistogram: function() {
+    return Services.telemetry.getHistogramById("TRACKING_PROTECTION_EVENTS");
+  },
+
+  updateEnabled: function() {
+    this.enabled = Services.prefs.getBoolPref(this.PREF_ENABLED);
+  },
+
+  onSecurityChange: function(state) {
+    this.isTrackingBlocked = false;
+    this.isTrackingLoaded = false;
+    this.isNoTracking = false;
+
+    if (!this.enabled) {
+      return;
+    }
+
+    let {
+      STATE_BLOCKED_TRACKING_CONTENT, STATE_LOADED_TRACKING_CONTENT
+    } = Ci.nsIWebProgressListener;
+
+    if (state & STATE_BLOCKED_TRACKING_CONTENT) {
+      this.isTrackingBlocked = true;
+    } else if (state & STATE_LOADED_TRACKING_CONTENT) {
+      this.isTrackingLoaded = true;
+    } else {
+      this.isNoTracking = true;
+    }
+
+    this.updateUI();
+
+    // Telemetry for state change.
+    this.getTelemetryHistogram().add(0);
+  },
+
+  resetUI: function() {
+    this.container.hidden = !this.enabled;
+    this.container.removeAttribute("block-disabled");
+    this.blockButton.hidden = true;
+    this.unblockButton.hidden = true;
+    this.labelTrackingBlocked.hidden = true;
+    this.labelTrackingLoaded.hidden = true;
+    this.actions.hidden = true;
+    this.labelNoTracking.hidden = true;
+  },
+
+  updateUI: function() {
+    // Hide everything and then unhide any relevant controls.
+    this.resetUI();
+    if (!this.enabled) {
+      return;
+    }
+
+    if (this.isTrackingBlocked) {
+      this.unblockButton.hidden = false;
+      this.labelTrackingBlocked.hidden = false;
+      this.actions.hidden = false;
+    }
+
+    if (this.isTrackingLoaded) {
+      this.container.setAttribute("block-disabled", true);
+      this.labelTrackingLoaded.hidden = false;
+      this.blockButton.hidden = false;
+      this.actions.hidden = false;
+    }
+
+    if (this.isNoTracking) {
+      this.labelNoTracking.hidden = false;
+    }
+  },
+
+  disableForCurrentPage: function() {
+    // Convert document URI into the format used by
+    // nsChannelClassifier::ShouldEnableTrackingProtection.
+    // Any scheme turned into https is correct.
+    let normalizedUrl = Services.io.newURI(
+      "https://" + gBrowser.selectedBrowser.currentURI.hostPort,
+      null, null);
+
+    // Add the current host in the 'trackingprotection' consumer of
+    // the permission manager using a normalized URI. This effectively
+    // places this host on the tracking protection allowlist.
+    Services.perms.add(normalizedUrl,
+      "trackingprotection", Services.perms.ALLOW_ACTION);
+
+    // Telemetry for disable protection.
+    this.getTelemetryHistogram().add(1);
+
+    BrowserReload();
+  },
+
+  enableForCurrentPage: function() {
+    // Remove the current host from the 'trackingprotection' consumer
+    // of the permission manager. This effectively removes this host
+    // from the tracking protection allowlist.
+    Services.perms.remove(gBrowser.selectedBrowser.currentURI.host,
+      "trackingprotection");
+
+    // Telemetry for enable protection.
+    this.getTelemetryHistogram().add(2);
+
+    BrowserReload();
+  },
+};
diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -273,16 +273,17 @@ let gInitialPages = [
 #include browser-places.js
 #include browser-plugins.js
 #include browser-readinglist.js
 #include browser-safebrowsing.js
 #include browser-sidebar.js
 #include browser-social.js
 #include browser-tabview.js
 #include browser-thumbnails.js
+#include browser-trackingprotection.js
 
 #ifdef MOZ_DATA_REPORTING
 #include browser-data-submission-info-bar.js
 #endif
 
 #ifdef MOZ_SERVICES_SYNC
 #include browser-syncui.js
 #endif
@@ -957,16 +958,17 @@ var gBrowserInit = {
     // message sent between when the frame script is loaded and when
     // the listener is registered.
     DOMLinkHandler.init();
     gPageStyleMenu.init();
     LanguageDetectionListener.init();
     BrowserOnClick.init();
     DevEdition.init();
     AboutPrivateBrowsingListener.init();
+    TrackingProtection.init();
 
     let mm = window.getGroupMessageManager("browsers");
     mm.loadFrameScript("chrome://browser/content/tab-content.js", true);
     mm.loadFrameScript("chrome://browser/content/content.js", true);
     mm.loadFrameScript("chrome://browser/content/content-UITour.js", true);
     mm.loadFrameScript("chrome://global/content/manifestMessages.js", true);
 
     window.messageManager.addMessageListener("Browser:LoadURI", RedirectLoad);
@@ -1440,20 +1442,18 @@ var gBrowserInit = {
                         slot.status != Ci.nsIPKCS11Slot.SLOT_UNINITIALIZED &&
                         slot.status != Ci.nsIPKCS11Slot.SLOT_READY;
         if (mpEnabled) {
           Services.telemetry.getHistogramById("MASTER_PASSWORD_ENABLED").add(mpEnabled);
         }
       }, 5000);
 
       // Telemetry for tracking protection.
-      let tpEnabled = gPrefService
-                      .getBoolPref("privacy.trackingprotection.enabled");
       Services.telemetry.getHistogramById("TRACKING_PROTECTION_ENABLED")
-        .add(tpEnabled);
+        .add(TrackingProtection.enabled);
 
       PanicButtonNotifier.init();
     });
     this.delayedStartupFinished = true;
 
     Services.obs.notifyObservers(window, "browser-delayed-startup-finished", "");
     TelemetryTimestamps.add("delayedStartupFinished");
   },
@@ -4372,16 +4372,17 @@ var XULBrowserWindow = {
       if (gURLBar)
         gURLBar.removeAttribute("level");
     }
 
     try {
       uri = Services.uriFixup.createExposableURI(uri);
     } catch (e) {}
     gIdentityHandler.checkIdentity(this._state, uri);
+    TrackingProtection.onSecurityChange(this._state);
   },
 
   // simulate all change notifications after switching tabs
   onUpdateCurrentBrowser: function XWB_onUpdateCurrentBrowser(aStateFlags, aStatus, aMessage, aTotalProgress) {
     if (FullZoom.updateBackgroundTabs)
       FullZoom.onLocationChange(gBrowser.currentURI, true);
     var nsIWebProgressListener = Components.interfaces.nsIWebProgressListener;
     var loadingDone = aStateFlags & nsIWebProgressListener.STATE_STOP;
@@ -6770,17 +6771,17 @@ var gIdentityHandler = {
     // - tracking content is blocked
     // - tracking content is not blocked
     if (state &
         (nsIWebProgressListener.STATE_BLOCKED_MIXED_ACTIVE_CONTENT |
          nsIWebProgressListener.STATE_LOADED_MIXED_ACTIVE_CONTENT  |
          nsIWebProgressListener.STATE_BLOCKED_TRACKING_CONTENT     |
          nsIWebProgressListener.STATE_LOADED_TRACKING_CONTENT)) {
       this.showBadContentDoorhanger(state);
-    } else if (gPrefService.getBoolPref("privacy.trackingprotection.enabled")) {
+    } else if (TrackingProtection.enabled) {
       // We didn't show the shield
       Services.telemetry.getHistogramById("TRACKING_PROTECTION_SHIELD")
         .add(0);
     }
   },
 
   showBadContentDoorhanger : function(state) {
     var currentNotification =
diff --git a/browser/base/content/test/general/browser_trackingUI_1.js b/browser/base/content/test/general/browser_trackingUI_1.js
--- a/browser/base/content/test/general/browser_trackingUI_1.js
+++ b/browser/base/content/test/general/browser_trackingUI_1.js
@@ -1,119 +1,88 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
-// Test that the Tracking Protection Doorhanger appears
-// and has the correct state when tracking content is blocked (Bug 1043801)
+// Test that the Tracking Protection section is visible in the Control Center
+// and has the correct state for the cases when:
+//   * A page with no tracking elements is loaded.
+//   * A page with tracking elements is loaded and they are blocked.
+//   * A page with tracking elements is loaded and they are not blocked.
+// See also Bugs 1175327 and 1043801.
 
-var PREF = "privacy.trackingprotection.enabled";
-var BENIGN_PAGE = "http://tracking.example.org/browser/browser/base/content/test/general/benignPage.html";
-var TRACKING_PAGE = "http://tracking.example.org/browser/browser/base/content/test/general/trackingPage.html";
+let PREF = "privacy.trackingprotection.enabled";
+let BENIGN_PAGE = "http://tracking.example.org/browser/browser/base/content/test/general/benignPage.html";
+let TRACKING_PAGE = "http://tracking.example.org/browser/browser/base/content/test/general/trackingPage.html";
+let TrackingProtection = null;
 
-function testBenignPage(gTestBrowser)
-{
-  // Make sure the doorhanger does NOT appear
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  is(notification, null, "Tracking Content Doorhanger did NOT appear when protection was ON and tracking was NOT present");
+registerCleanupFunction(function() {
+  TrackingProtection = null;
+  Services.prefs.clearUserPref(PREF);
+  gBrowser.removeCurrentTab();
+});
+
+function testBenignPage() {
+  // Make sure that the no tracking elements message appears
+  ok (!TrackingProtection.labelNoTracking.hidden, "labelNoTracking is visible");
+  ok (TrackingProtection.labelTrackingLoaded.hidden, "labelTrackingLoaded is hidden");
+  ok (TrackingProtection.labelTrackingBlocked.hidden, "labelTrackingBlocked is hidden");
+  ok (!TrackingProtection.container.hasAttribute("block-disabled"), "blocking not disabled");
 }
 
-function* testTrackingPage(gTestBrowser)
-{
-  // Make sure the doorhanger appears
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  isnot(notification, null, "Tracking Content Doorhanger did appear when protection was ON and tracking was present");
-  notification.reshow();
-  var notificationElement = PopupNotifications.panel.firstChild;
-
-  // Wait for the method to be attached after showing the popup
-  yield promiseWaitForCondition(() => {
-    return notificationElement.disableTrackingContentProtection;
-  });
-
-  // Make sure the state of the doorhanger includes blocking tracking elements
-  ok(notificationElement.isTrackingContentBlocked,
-     "Tracking Content is being blocked");
-
-  // Make sure the notification has no trackingblockdisabled attribute
-  ok(!notificationElement.hasAttribute("trackingblockdisabled"),
-    "Doorhanger must have no trackingblockdisabled attribute");
+function testTrackingPage() {
+  // Make sure that the blocked tracking elements message appears
+  ok (TrackingProtection.labelNoTracking.hidden, "labelNoTracking is hidden");
+  ok (TrackingProtection.labelTrackingLoaded.hidden, "labelTrackingLoaded is hidden");
+  ok (!TrackingProtection.labelTrackingBlocked.hidden, "labelTrackingBlocked is visible");
+  ok (!TrackingProtection.container.hasAttribute("block-disabled"), "blocking not disabled");
 }
 
-function* testTrackingPageWhitelisted(gTestBrowser)
-{
-  // Make sure the doorhanger appears
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  isnot(notification, null, "Tracking Content Doorhanger did appear when protection was ON and tracking was present but white-listed");
-  notification.reshow();
-  var notificationElement = PopupNotifications.panel.firstChild;
-
-  // Wait for the method to be attached after showing the popup
-  yield promiseWaitForCondition(() => {
-    return notificationElement.disableTrackingContentProtection;
-  });
-
-  var notificationElement = PopupNotifications.panel.firstChild;
-
-  // Make sure the state of the doorhanger does NOT include blocking tracking elements
-  ok(!notificationElement.isTrackingContentBlocked,
-    "Tracking Content is NOT being blocked");
-
-  // Make sure the notification has the trackingblockdisabled attribute set to true
-  is(notificationElement.getAttribute("trackingblockdisabled"), "true",
-    "Doorhanger must have [trackingblockdisabled='true'] attribute");
-}
-
-function testTrackingPageOFF(gTestBrowser)
-{
-  // Make sure the doorhanger does NOT appear
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  is(notification, null, "Tracking Content Doorhanger did NOT appear when protection was OFF and tracking was present");
-}
-
-function testBenignPageOFF(gTestBrowser)
-{
-  // Make sure the doorhanger does NOT appear
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  is(notification, null, "Tracking Content Doorhanger did NOT appear when protection was OFF and tracking was NOT present");
+function testTrackingPageWhitelisted() {
+  // Make sure that the blocked tracking elements message appears
+  ok (TrackingProtection.labelNoTracking.hidden, "labelNoTracking is hidden");
+  ok (!TrackingProtection.labelTrackingLoaded.hidden, "labelTrackingLoaded is visible");
+  ok (TrackingProtection.labelTrackingBlocked.hidden, "labelTrackingBlocked is hidden");
+  ok (TrackingProtection.container.hasAttribute("block-disabled"), "blocking is disabled");
 }
 
 add_task(function* () {
-  registerCleanupFunction(function() {
-    Services.prefs.clearUserPref(PREF);
-    gBrowser.removeCurrentTab();
-  });
-
   yield updateTrackingProtectionDatabase();
 
   let tab = gBrowser.selectedTab = gBrowser.addTab();
 
-  // Enable Tracking Protection
+  TrackingProtection = gBrowser.ownerGlobal.TrackingProtection;
+  ok (TrackingProtection, "Functionality is attached to the browser window");
+  is (TrackingProtection.enabled, Services.prefs.getBoolPref(PREF),
+    "The initial enabled value is based on the default pref value");
+
+  info("Enable Tracking Protection");
   Services.prefs.setBoolPref(PREF, true);
+  ok (TrackingProtection.enabled, "Functionality is enabled after setting the pref");
 
-  // Point tab to a test page NOT containing tracking elements
+  info("Point tab to a test page NOT containing tracking elements");
   yield promiseTabLoadEvent(tab, BENIGN_PAGE);
-  testBenignPage(gBrowser.getBrowserForTab(tab));
+  testBenignPage();
 
-  // Point tab to a test page containing tracking elements
+  info("Point tab to a test page containing tracking elements");
   yield promiseTabLoadEvent(tab, TRACKING_PAGE);
 
-  // Tracking content must be blocked
-  yield testTrackingPage(gBrowser.getBrowserForTab(tab));
+  info("Tracking content must be blocked");
+  testTrackingPage();
 
-  // Disable Tracking Content Protection for the page (which reloads the page)
-  PopupNotifications.panel.firstChild.disableTrackingContentProtection();
+  info("Disable Tracking Content Protection for the page (which reloads the page)");
+  TrackingProtection.disableForCurrentPage();
 
-  // Wait for tab to reload following tracking-protection page white-listing
+  info("Wait for tab to reload following tracking-protection page white-listing");
   yield promiseTabLoadEvent(tab);
 
-  // Tracking content must be white-listed (NOT blocked)
-  yield testTrackingPageWhitelisted(gBrowser.getBrowserForTab(tab));
+  info("Tracking content must be white-listed (NOT blocked)");
+  testTrackingPageWhitelisted();
 
-  // Re-enable Tracking Content Protection for the page (which reloads the page)
-  PopupNotifications.panel.firstChild.enableTrackingContentProtection();
+  info("Re-enable Tracking Content Protection for the page (which reloads the page)");
+  TrackingProtection.enableForCurrentPage();
 
-  // Wait for tab to reload following tracking-protection page white-listing
+  info("Wait for tab to reload following tracking-protection page white-listing");
   yield promiseTabLoadEvent(tab);
 
-  // Tracking content must be blocked
-  yield testTrackingPage(gBrowser.getBrowserForTab(tab));
+  info("Tracking content must be blocked");
+  testTrackingPage();
 });
diff --git a/browser/base/content/test/general/browser_trackingUI_2.js b/browser/base/content/test/general/browser_trackingUI_2.js
--- a/browser/base/content/test/general/browser_trackingUI_2.js
+++ b/browser/base/content/test/general/browser_trackingUI_2.js
@@ -1,46 +1,49 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
-// Test that the Tracking Protection Doorhanger does not ever appear
-// when the feature is off (Bug 1043801)
+// Test that the Tracking Protection section is never visible in the
+// Control Center when the feature is off.
+// See also Bugs 1175327 and 1043801.
 
-var PREF = "privacy.trackingprotection.enabled";
-var BENIGN_PAGE = "http://tracking.example.org/browser/browser/base/content/test/general/benignPage.html";
-var TRACKING_PAGE = "http://tracking.example.org/browser/browser/base/content/test/general/trackingPage.html";
+let PREF = "privacy.trackingprotection.enabled";
+let BENIGN_PAGE = "http://tracking.example.org/browser/browser/base/content/test/general/benignPage.html";
+let TRACKING_PAGE = "http://tracking.example.org/browser/browser/base/content/test/general/trackingPage.html";
+let TrackingProtection = null;
 
-function testTrackingPageOFF(gTestBrowser)
-{
-  // Make sure the doorhanger does NOT appear
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  is(notification, null, "Tracking Content Doorhanger did NOT appear when protection was OFF and tracking was present");
+registerCleanupFunction(function() {
+  TrackingProtection = null;
+  Services.prefs.clearUserPref(PREF);
+  gBrowser.removeCurrentTab();
+});
+
+function testTrackingPageOFF() {
+  ok (TrackingProtection.container.hidden, "The container is hidden");
 }
 
-function testBenignPageOFF(gTestBrowser)
-{
-  // Make sure the doorhanger does NOT appear
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  is(notification, null, "Tracking Content Doorhanger did NOT appear when protection was OFF and tracking was NOT present");
+function testBenignPageOFF() {
+  ok (TrackingProtection.container.hidden, "The container is hidden");
 }
 
 add_task(function* () {
-  registerCleanupFunction(function() {
-    Services.prefs.clearUserPref(PREF);
-    gBrowser.removeCurrentTab();
-  });
-
   yield updateTrackingProtectionDatabase();
 
   let tab = gBrowser.selectedTab = gBrowser.addTab();
 
-  // Disable Tracking Protection
+  TrackingProtection = gBrowser.ownerGlobal.TrackingProtection;
+  ok (TrackingProtection, "Functionality is attached to the browser window");
+  is (TrackingProtection.enabled, Services.prefs.getBoolPref(PREF),
+    "The initial enabled value is based on the default pref value");
+
+  info ("Disable Tracking Protection");
   Services.prefs.setBoolPref(PREF, false);
+  ok (!TrackingProtection.enabled, "Functionality is disabled after setting the pref");
 
-  // Point tab to a test page containing tracking elements
+  info ("Point tab to a test page containing tracking elements");
   yield promiseTabLoadEvent(tab, TRACKING_PAGE);
-  testTrackingPageOFF(gBrowser.getBrowserForTab(tab));
+  testTrackingPageOFF();
 
-  // Point tab to a test page NOT containing tracking elements
+  info ("Point tab to a test page NOT containing tracking elements");
   yield promiseTabLoadEvent(tab, BENIGN_PAGE);
-  testBenignPageOFF(gBrowser.getBrowserForTab(tab));
+  testBenignPageOFF();
 });
diff --git a/browser/base/content/urlbarBindings.xml b/browser/base/content/urlbarBindings.xml
--- a/browser/base/content/urlbarBindings.xml
+++ b/browser/base/content/urlbarBindings.xml
@@ -2363,20 +2363,16 @@ file, You can obtain one at http://mozil
             Ci.nsIWebProgressListener.STATE_LOADED_TRACKING_CONTENT) {
           this.setAttribute("trackingblockdisabled", true);
           _trackingContent.hidden = false;
           _trackingContentBlock.hidden = false;
           _trackingContentHelpLink.href =
             Services.urlFormatter.formatURLPref("app.support.baseURL")
               + "tracking-protection";
         }
-        if (Services.prefs.getBoolPref("privacy.trackingprotection.enabled")) {
-          let histogram = Services.telemetry.getHistogramById("TRACKING_PROTECTION_EVENTS");
-          histogram.add(0);
-        }
       ]]></constructor>
       <method name="disableMixedContentProtection">
         <body><![CDATA[
           // Use telemetry to measure how often unblocking happens
           const kMIXED_CONTENT_UNBLOCK_EVENT = 2;
           let histogram =
             Services.telemetry.getHistogramById(
               "MIXED_CONTENT_UNBLOCK_COUNTER");
@@ -2401,34 +2397,26 @@ file, You can obtain one at http://mozil
           let normalizedUrl = Services.io.newURI(
             "https://" + gBrowser.selectedBrowser.currentURI.hostPort,
             null, null);
           // Add the current host in the 'trackingprotection' consumer of
           // the permission manager using a normalized URI. This effectively
           // places this host on the tracking protection allowlist.
           Services.perms.add(normalizedUrl,
             "trackingprotection", Services.perms.ALLOW_ACTION);
-          // Telemetry for disable protection
-          let histogram = Services.telemetry.getHistogramById(
-              "TRACKING_PROTECTION_EVENTS");
-          histogram.add(1);
           BrowserReload();
         ]]></body>
       </method>
       <method name="enableTrackingContentProtection">
         <body><![CDATA[
           // Remove the current host from the 'trackingprotection' consumer
           // of the permission manager. This effectively removes this host
           // from the tracking protection allowlist.
           Services.perms.remove(gBrowser.selectedBrowser.currentURI.host,
             "trackingprotection");
-          // Telemetry for enable protection
-          let histogram = Services.telemetry.getHistogramById(
-              "TRACKING_PROTECTION_EVENTS");
-          histogram.add(2);
           BrowserReload();
         ]]></body>
       </method>
     </implementation>
   </binding>
 
   <binding id="click-to-play-plugins-notification" extends="chrome://global/content/bindings/notification.xml#popup-notification">
     <content align="start" style="width: &pluginNotification.width;;">
diff --git a/browser/components/controlcenter/content/panel.inc.xul b/browser/components/controlcenter/content/panel.inc.xul
--- a/browser/components/controlcenter/content/panel.inc.xul
+++ b/browser/components/controlcenter/content/panel.inc.xul
@@ -31,16 +31,58 @@
                  value="&identity.connectionNotSecure;"/>
           <label class="identity-popup-connection-internal identity-popup-text"
                  value="&identity.connectionInternal;"/>
         </vbox>
         <button class="identity-popup-expander"
                 oncommand="gIdentityHandler.showSubView('security', this)"/>
       </hbox>
 
+      <!-- Tracking Protection Section -->
+      <hbox id="tracking-protection-container" class="identity-popup-section">
+        <vbox>
+          <label class="identity-popup-text identity-popup-headline"
+                 crop="end"
+                 value="&trackingProtection.title;" />
+
+          <label id="tracking-blocked"
+                 class="identity-popup-text tracking-protection-label"
+                 crop="end">
+            &trackingProtection.detectedBlocked;
+          </label>
+          <label id="tracking-loaded"
+                 class="identity-popup-text tracking-protection-label"
+                 crop="end">
+            &trackingProtection.detectedNotBlocked;
+          </label>
+          <label id="tracking-not-detected"
+                 class="identity-popup-text tracking-protection-label"
+                 crop="end">
+            &trackingProtection.notDetected;
+          </label>
+
+          <button id="tracking-actions"
+            type="menu" label="&trackingContentBlocked.options;"
+            sizetopopup="none">
+            <menupopup>
+              <menuitem
+                id="tracking-action-unblock"
+                label="&trackingProtection.unblock.label;"
+                accesskey="&trackingProtection.unblock.accesskey;"
+                oncommand="TrackingProtection.disableForCurrentPage();"/>
+              <menuitem
+                id="tracking-action-block"
+                label="&trackingProtection.block.label;"
+                accesskey="&trackingProtection.block.accesskey;"
+                oncommand="TrackingProtection.enableForCurrentPage();"/>
+            </menupopup>
+          </button>
+        </vbox>
+      </hbox>
+
       <!-- Permissions Section -->
       <hbox id="identity-popup-permissions" class="identity-popup-section">
         <vbox id="identity-popup-permissions-content" flex="1">
           <label class="identity-popup-text identity-popup-headline"
                  value="&identity.permissions;"/>
           <vbox id="identity-popup-permission-list"/>
         </vbox>
       </hbox>
diff --git a/browser/locales/en-US/chrome/browser/browser.dtd b/browser/locales/en-US/chrome/browser/browser.dtd
--- a/browser/locales/en-US/chrome/browser/browser.dtd
+++ b/browser/locales/en-US/chrome/browser/browser.dtd
@@ -763,16 +763,25 @@ you can use these alternative items. Oth
 <!ENTITY mixedContentBlocked2.learnMore "Learn More">
 <!ENTITY mixedContentBlocked2.options "Options">
 <!ENTITY mixedContentBlocked2.unblock.label "Disable protection for now">
 <!ENTITY mixedContentBlocked2.unblock.accesskey "D">
 <!ENTITY mixedContentBlocked2.block.label "Enable protection">
 <!ENTITY mixedContentBlocked2.block.accesskey "E">
 <!ENTITY mixedContentBlocked2.disabled.message "Protection is disabled">
 
+<!ENTITY trackingProtection.title "Tracking Protection">
+<!ENTITY trackingProtection.detectedBlocked "Attempts to track your online behavior have been blocked.">
+<!ENTITY trackingProtection.detectedNotBlocked "Tracking elements detected.  You have disabled protection on this site.">
+<!ENTITY trackingProtection.notDetected "No tracking elements detected on this website.">
+<!ENTITY trackingProtection.unblock.label "Disable protection for this site">
+<!ENTITY trackingProtection.unblock.accesskey "D">
+<!ENTITY trackingProtection.block.label "Enable protection for this site">
+<!ENTITY trackingProtection.block.accesskey "E">
+
 <!ENTITY trackingContentBlocked.message "Tracking">
 <!ENTITY trackingContentBlocked.moreinfo "Parts of the page that track your online activity have been blocked.">
 <!ENTITY trackingContentBlocked.learnMore "Learn More">
 <!ENTITY trackingContentBlocked.options "Options">
 <!ENTITY trackingContentBlocked.unblock2.label "Disable protection for this site">
 <!ENTITY trackingContentBlocked.unblock2.accesskey "D">
 <!ENTITY trackingContentBlocked.block.label "Enable protection">
 <!ENTITY trackingContentBlocked.block.accesskey "E">
diff --git a/browser/themes/linux/jar.mn b/browser/themes/linux/jar.mn
--- a/browser/themes/linux/jar.mn
+++ b/browser/themes/linux/jar.mn
@@ -145,16 +145,18 @@ browser.jar:
   skin/classic/browser/loop/toolbar-inverted.png      (loop/toolbar-inverted.png)
   skin/classic/browser/loop/toolbar-inverted@2x.png   (loop/toolbar-inverted@2x.png)
 * skin/classic/browser/controlcenter/panel.css        (controlcenter/panel.css)
   skin/classic/browser/controlcenter/arrow-subview.svg  (../shared/controlcenter/arrow-subview.svg)
   skin/classic/browser/controlcenter/conn-not-secure.svg  (../shared/controlcenter/conn-not-secure.svg)
   skin/classic/browser/controlcenter/conn-secure-dv.svg  (../shared/controlcenter/conn-secure-dv.svg)
   skin/classic/browser/controlcenter/conn-secure-ev.svg  (../shared/controlcenter/conn-secure-ev.svg)
   skin/classic/browser/controlcenter/permissions.svg  (../shared/controlcenter/permissions.svg)
+  skin/classic/browser/controlcenter/tracking-protection.svg                 (../shared/controlcenter/tracking-protection.svg)
+  skin/classic/browser/controlcenter/tracking-protection-disabled.svg        (../shared/controlcenter/tracking-protection-disabled.svg)
   skin/classic/browser/customizableui/background-noise-toolbar.png  (customizableui/background-noise-toolbar.png)
   skin/classic/browser/customizableui/customize-illustration.png  (../shared/customizableui/customize-illustration.png)
   skin/classic/browser/customizableui/customize-illustration-rtl.png  (../shared/customizableui/customize-illustration-rtl.png)
   skin/classic/browser/customizableui/customizeMode-gridTexture.png  (customizableui/customizeMode-gridTexture.png)
   skin/classic/browser/customizableui/customizeMode-separatorHorizontal.png  (customizableui/customizeMode-separatorHorizontal.png)
   skin/classic/browser/customizableui/customizeMode-separatorVertical.png  (customizableui/customizeMode-separatorVertical.png)
   skin/classic/browser/customizableui/customizeFavicon.ico  (../shared/customizableui/customizeFavicon.ico)
   skin/classic/browser/customizableui/info-icon-customizeTip.png  (../shared/customizableui/info-icon-customizeTip.png)
diff --git a/browser/themes/osx/jar.mn b/browser/themes/osx/jar.mn
--- a/browser/themes/osx/jar.mn
+++ b/browser/themes/osx/jar.mn
@@ -189,16 +189,18 @@ browser.jar:
   skin/classic/browser/yosemite/loop/toolbar.png            (loop/toolbar-yosemite.png)
   skin/classic/browser/yosemite/loop/toolbar@2x.png         (loop/toolbar-yosemite@2x.png)
 * skin/classic/browser/controlcenter/panel.css        (controlcenter/panel.css)
   skin/classic/browser/controlcenter/arrow-subview.svg  (../shared/controlcenter/arrow-subview.svg)
   skin/classic/browser/controlcenter/conn-not-secure.svg  (../shared/controlcenter/conn-not-secure.svg)
   skin/classic/browser/controlcenter/conn-secure-dv.svg  (../shared/controlcenter/conn-secure-dv.svg)
   skin/classic/browser/controlcenter/conn-secure-ev.svg  (../shared/controlcenter/conn-secure-ev.svg)
   skin/classic/browser/controlcenter/permissions.svg  (../shared/controlcenter/permissions.svg)
+  skin/classic/browser/controlcenter/tracking-protection.svg                 (../shared/controlcenter/tracking-protection.svg)
+  skin/classic/browser/controlcenter/tracking-protection-disabled.svg        (../shared/controlcenter/tracking-protection-disabled.svg)
   skin/classic/browser/customizableui/background-noise-toolbar.png  (customizableui/background-noise-toolbar.png)
   skin/classic/browser/customizableui/customize-titleBar-toggle.png  (customizableui/customize-titleBar-toggle.png)
   skin/classic/browser/customizableui/customize-titleBar-toggle@2x.png  (customizableui/customize-titleBar-toggle@2x.png)
   skin/classic/browser/customizableui/customize-illustration.png  (../shared/customizableui/customize-illustration.png)
   skin/classic/browser/customizableui/customize-illustration@2x.png  (../shared/customizableui/customize-illustration@2x.png)
   skin/classic/browser/customizableui/customize-illustration-rtl.png  (../shared/customizableui/customize-illustration-rtl.png)
   skin/classic/browser/customizableui/customize-illustration-rtl@2x.png  (../shared/customizableui/customize-illustration-rtl@2x.png)
   skin/classic/browser/customizableui/customizeFavicon.ico  (../shared/customizableui/customizeFavicon.ico)
diff --git a/browser/themes/shared/controlcenter/panel.inc.css b/browser/themes/shared/controlcenter/panel.inc.css
--- a/browser/themes/shared/controlcenter/panel.inc.css
+++ b/browser/themes/shared/controlcenter/panel.inc.css
@@ -51,28 +51,30 @@
 }
 
 .identity-popup-section:not(:first-child) {
   border-top: 1px solid rgb(229,229,229);
 }
 
 #identity-popup-securityView,
 #identity-popup-security-content,
-#identity-popup-permissions-content {
+#identity-popup-permissions-content,
+#tracking-protection-container {
   padding: 0.75em 0 1em;
   -moz-padding-start: calc(2em + 24px);
   -moz-padding-end: 1em;
   background-repeat: no-repeat;
   background-position: 1em 1em;
   background-size: 24px auto;
 }
 
 #identity-popup-securityView:-moz-locale-dir(rtl),
 #identity-popup-security-content:-moz-locale-dir(rtl),
-#identity-popup-permissions-content:-moz-locale-dir(rtl) {
+#identity-popup-permissions-content:-moz-locale-dir(rtl),
+#tracking-protection-container:-moz-locale-dir(rtl) {
   background-position: calc(100% - 1em) 1em;
 }
 
 /* EXPAND BUTTON */
 
 .identity-popup-expander {
   margin: 0;
   padding: 4px 0;
@@ -234,8 +236,28 @@
   background-color: hsla(210,4%,10%,.07);
 }
 
 #identity-popup-more-info-button:hover:active {
   color: inherit;
   background-color: hsla(210,4%,10%,.12);
   box-shadow: 0 1px 0 hsla(210,4%,10%,.05) inset;
 }
+
+/* Tracking protection section */
+
+#tracking-protection-container {
+  background-image: url("chrome://browser/skin/controlcenter/tracking-protection.svg");
+}
+
+#tracking-protection-container[block-disabled]  {
+  background-image: url("chrome://browser/skin/controlcenter/tracking-protection-disabled.svg");
+}
+
+.tracking-protection-label {
+  white-space: normal;
+  max-width: 260px;
+  margin: 5px 0;
+}
+
+#tracking-actions {
+  margin: 0;
+}
diff --git a/browser/themes/shared/controlcenter/tracking-protection-disabled.svg b/browser/themes/shared/controlcenter/tracking-protection-disabled.svg
new file mode 100644
--- /dev/null
+++ b/browser/themes/shared/controlcenter/tracking-protection-disabled.svg
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- This Source Code Form is subject to the terms of the Mozilla Public
+   - License, v. 2.0. If a copy of the MPL was not distributed with this
+   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
+<svg xmlns="http://www.w3.org/2000/svg"
+     xmlns:xlink="http://www.w3.org/1999/xlink"
+     width="16"
+     height="16"
+     viewBox="0 0 16 16">
+  <defs>
+    <path id="shape-shield-outer" d="M8,1L2.8,1.9C2.4,1.9,2,2.4,2,2.8C2,4,2,6.1,2.1,7.1c0.3,2.7,0.8,4,1.9,5.6C5.6,14.7,8,15,8,15s2.4-0.3,4-2.4 c1.2-1.5,1.7-2.9,1.9-5.6C14,6.1,14,4,14,2.8c0-0.5-0.4-0.9-0.8-1L8,1L8,1z"/>
+    <path id="shape-shield-inner" d="M8,2l5,0.8c0,2,0,3.5-0.1,4.1c-0.3,2.7-0.8,3.8-1.7,5.1c-1.1,1.5-2.7,1.9-3.2,2c-0.4-0.1-2.1-0.5-3.2-2 c-1-1.3-1.5-2.4-1.7-5.1C3,6.3,3,4.8,3,2.8L8,2"/>
+    <path id="shape-shield-detail" d="M8,13c-0.5-0.1-1.6-0.5-2.4-1.5c-0.9-1.2-1.3-2.1-1.5-4.6C4,6.3,4,5.2,4,3.7L8,3 V13z"/>
+    <mask id="mask-shield-cutout">
+      <rect width="16" height="16" fill="#000" />
+      <use xlink:href="#shape-shield-outer" fill="#fff" />
+      <use xlink:href="#shape-shield-inner" fill="#000" />
+      <use xlink:href="#shape-shield-detail" fill="#fff" />
+      <line x1="3" y1="15" x2="15" y2="3" stroke="#000" stroke-width="2" />
+    </mask>
+  </defs>
+  <use xlink:href="#shape-shield-outer" mask="url(#mask-shield-cutout)" fill="#808080" />
+  <line x1="3" y1="14" x2="15" y2="2" stroke="#d92d21" stroke-width="2" />
+</svg>
diff --git a/browser/themes/shared/controlcenter/tracking-protection.svg b/browser/themes/shared/controlcenter/tracking-protection.svg
new file mode 100644
--- /dev/null
+++ b/browser/themes/shared/controlcenter/tracking-protection.svg
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- This Source Code Form is subject to the terms of the Mozilla Public
+   - License, v. 2.0. If a copy of the MPL was not distributed with this
+   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
+<svg xmlns="http://www.w3.org/2000/svg"
+     xmlns:xlink="http://www.w3.org/1999/xlink"
+     width="16"
+     height="16"
+     viewBox="0 0 16 16">
+  <defs>
+    <path id="shape-shield-outer" d="M8,1L2.8,1.9C2.4,1.9,2,2.4,2,2.8C2,4,2,6.1,2.1,7.1c0.3,2.7,0.8,4,1.9,5.6C5.6,14.7,8,15,8,15s2.4-0.3,4-2.4 c1.2-1.5,1.7-2.9,1.9-5.6C14,6.1,14,4,14,2.8c0-0.5-0.4-0.9-0.8-1L8,1L8,1z"/>
+    <path id="shape-shield-inner" d="M8,2l5,0.8c0,2,0,3.5-0.1,4.1c-0.3,2.7-0.8,3.8-1.7,5.1c-1.1,1.5-2.7,1.9-3.2,2c-0.4-0.1-2.1-0.5-3.2-2 c-1-1.3-1.5-2.4-1.7-5.1C3,6.3,3,4.8,3,2.8L8,2"/>
+    <path id="shape-shield-detail" d="M8,13c-0.5-0.1-1.6-0.5-2.4-1.5c-0.9-1.2-1.3-2.1-1.5-4.6C4,6.3,4,5.2,4,3.7L8,3 V13z"/>
+    <mask id="mask-shield-cutout">
+      <rect width="16" height="16" fill="#000" />
+      <use xlink:href="#shape-shield-outer" fill="#fff" />
+      <use xlink:href="#shape-shield-inner" fill="#000" />
+      <use xlink:href="#shape-shield-detail" fill="#fff" />
+    </mask>
+  </defs>
+  <use xlink:href="#shape-shield-outer" mask="url(#mask-shield-cutout)" fill="#808080" />
+</svg>
diff --git a/browser/themes/windows/jar.mn b/browser/themes/windows/jar.mn
--- a/browser/themes/windows/jar.mn
+++ b/browser/themes/windows/jar.mn
@@ -190,16 +190,18 @@ browser.jar:
         skin/classic/browser/loop/toolbar-lunaSilver.png             (loop/toolbar-lunaSilver.png)
         skin/classic/browser/loop/toolbar-lunaSilver@2x.png          (loop/toolbar-lunaSilver@2x.png)
 *       skin/classic/browser/controlcenter/panel.css                 (controlcenter/panel.css)
         skin/classic/browser/controlcenter/arrow-subview.svg  (../shared/controlcenter/arrow-subview.svg)
         skin/classic/browser/controlcenter/conn-not-secure.svg  (../shared/controlcenter/conn-not-secure.svg)
         skin/classic/browser/controlcenter/conn-secure-dv.svg  (../shared/controlcenter/conn-secure-dv.svg)
         skin/classic/browser/controlcenter/conn-secure-ev.svg  (../shared/controlcenter/conn-secure-ev.svg)
         skin/classic/browser/controlcenter/permissions.svg  (../shared/controlcenter/permissions.svg)
+        skin/classic/browser/controlcenter/tracking-protection.svg                 (../shared/controlcenter/tracking-protection.svg)
+        skin/classic/browser/controlcenter/tracking-protection-disabled.svg        (../shared/controlcenter/tracking-protection-disabled.svg)
         skin/classic/browser/customizableui/background-noise-toolbar.png  (customizableui/background-noise-toolbar.png)
         skin/classic/browser/customizableui/customizeFavicon.ico  (../shared/customizableui/customizeFavicon.ico)
         skin/classic/browser/customizableui/customize-illustration.png  (../shared/customizableui/customize-illustration.png)
         skin/classic/browser/customizableui/customize-illustration-rtl.png  (../shared/customizableui/customize-illustration-rtl.png)
         skin/classic/browser/customizableui/customize-titleBar-toggle.png  (customizableui/customize-titleBar-toggle.png)
         skin/classic/browser/customizableui/customize-titleBar-toggle@2x.png  (customizableui/customize-titleBar-toggle@2x.png)
         skin/classic/browser/customizableui/customizeMode-gridTexture.png  (customizableui/customizeMode-gridTexture.png)
         skin/classic/browser/customizableui/customizeMode-separatorHorizontal.png  (customizableui/customizeMode-separatorHorizontal.png)
