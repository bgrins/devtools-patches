# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  3b50fe7dbdbf085d56ddae3c47f5d93e68caf979

diff --git a/browser/base/content/browser-sidebar.js b/browser/base/content/browser-sidebar.js
--- a/browser/base/content/browser-sidebar.js
+++ b/browser/base/content/browser-sidebar.js
@@ -261,17 +261,22 @@ var SidebarUI = {
   /**
    * Toggle the visibility of the sidebar. If the sidebar is hidden or is open
    * with a different commandID, then the sidebar will be opened using the
    * specified commandID. Otherwise the sidebar will be hidden.
    *
    * @param {string} commandID ID of the xul:broadcaster element to use.
    * @return {Promise}
    */
-  toggle(commandID = this.currentID) {
+  toggle(commandID) {
+    // Provide a default value if nothing was provided. First priority is the
+    // currentID (persisted to the document in uninit), but if that doesn't exist
+    // default to the bookmarks sidebar.
+    commandID = commandID || this.currentID || "viewBookmarksSidebar";
+
     if (this.isOpen && commandID == this.currentID) {
       this.hide();
       return Promise.resolve();
     }
     return this.show(commandID);
   },
 
   /**
diff --git a/browser/components/customizableui/CustomizableWidgets.jsm b/browser/components/customizableui/CustomizableWidgets.jsm
--- a/browser/components/customizableui/CustomizableWidgets.jsm
+++ b/browser/components/customizableui/CustomizableWidgets.jsm
@@ -594,17 +594,17 @@ const CustomizableWidgets = [
       let win = aEvent.target.ownerGlobal;
       win.BrowserOpenFileWindow();
     }
   }, {
     id: "sidebar-button",
     tooltiptext: "sidebar-button.tooltiptext2",
     onCommand(aEvent) {
       let win = aEvent.target.ownerGlobal;
-      win.SidebarUI.toggle(win.SidebarUI.lastOpenedId || "viewBookmarksSidebar");
+      win.SidebarUI.toggle();
     },
     onCreated(aNode) {
       // Add an observer so the button is checked while the sidebar is open
       let doc = aNode.ownerDocument;
       let obnode = doc.createElementNS(kNSXUL, "observes");
       obnode.setAttribute("element", "sidebar-box");
       obnode.setAttribute("attribute", "checked");
       aNode.appendChild(obnode);
