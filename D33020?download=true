diff --git a/browser/components/BrowserGlue.jsm b/browser/components/BrowserGlue.jsm
--- a/browser/components/BrowserGlue.jsm
+++ b/browser/components/BrowserGlue.jsm
@@ -948,6 +948,17 @@
 
   // initialization (called on application startup)
   _init: function BG__init() {
+    let env = Cc["@mozilla.org/process/environment;1"].getService(Ci.nsIEnvironment);
+    if (env.get("MOZ_BROWSER_TOOLBOX_PORT")) {
+      if (AppConstants.platform == "macosx") {
+        Services.prefs.setStringPref("browser.hiddenWindowChromeURL", "about:blank");
+      }
+      let {TelemetryStartup} =
+        ChromeUtils.import("resource://gre/modules/TelemetryStartup.jsm");
+      TelemetryStartup.prototype.observe = function() {};
+      return;
+    }
+
     let os = Services.obs;
     os.addObserver(this, "notifications-open-settings");
     os.addObserver(this, "final-ui-startup");
diff --git a/toolkit/mozapps/extensions/addonManager.js b/toolkit/mozapps/extensions/addonManager.js
--- a/toolkit/mozapps/extensions/addonManager.js
+++ b/toolkit/mozapps/extensions/addonManager.js
@@ -40,6 +40,12 @@
 
 var AddonManager, AddonManagerPrivate;
 function amManager() {
+  let env = Cc["@mozilla.org/process/environment;1"].getService(Ci.nsIEnvironment);
+  if (env.get("MOZ_BROWSER_TOOLBOX_PORT")) {
+    this.observe = function() {};
+    return;
+  }
+
   ({AddonManager, AddonManagerPrivate} = ChromeUtils.import("resource://gre/modules/AddonManager.jsm"));
 
   Services.mm.loadFrameScript(CHILD_SCRIPT, true, true);

