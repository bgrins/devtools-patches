# HG changeset patch
# Parent caf64bb3f566f0685c4bb0243b3a45ac5009c951
# User Patrick Brosset <pbrosset@mozilla.com>
Bug 958169 - Switch to the inspector panel on click of the pick button; r=bgrins

diff --git a/browser/devtools/framework/toolbox.js b/browser/devtools/framework/toolbox.js
--- a/browser/devtools/framework/toolbox.js
+++ b/browser/devtools/framework/toolbox.js
@@ -1110,17 +1110,20 @@ Toolbox.prototype = {
   startPicker: function() {
     let deferred = promise.defer();
 
     let done = () => {
       this.emit("picker-started");
       deferred.resolve();
     };
 
-    this.initInspector().then(() => {
+    promise.all([
+      this.initInspector(),
+      this.selectTool("inspector")
+    ]).then(() => {
       this._isPicking = true;
       this._pickerButton.setAttribute("checked", "true");
 
       if (this.isRemoteHighlightable) {
         this.highlighter.pick().then(done);
 
         this._onPickerNodeHovered = res => {
           this.emit("picker-node-hovered", res.node);
diff --git a/browser/devtools/inspector/test/browser.ini b/browser/devtools/inspector/test/browser.ini
--- a/browser/devtools/inspector/test/browser.ini
+++ b/browser/devtools/inspector/test/browser.ini
@@ -40,8 +40,9 @@ support-files =
 [browser_inspector_pseudoclass_lock.js]
 [browser_inspector_reload.js]
 [browser_inspector_scrolling.js]
 [browser_inspector_select_last_selected.js]
 [browser_inspector_sidebarstate.js]
 [browser_inspector_bug_848731_reset_selection_on_delete.js]
 [browser_inspector_bug_922125_destroy_on_navigate.js]
 [browser_inspector_bug_952294_tooltips_dimensions.js]
+[browser_inspector_bug_958169_switch_to_inspector_on_pick.js]
diff --git a/browser/devtools/inspector/test/browser_inspector_bug_958169_switch_to_inspector_on_pick.js b/browser/devtools/inspector/test/browser_inspector_bug_958169_switch_to_inspector_on_pick.js
new file mode 100644
--- /dev/null
+++ b/browser/devtools/inspector/test/browser_inspector_bug_958169_switch_to_inspector_on_pick.js
@@ -0,0 +1,57 @@
+/* vim: set ts=2 et sw=2 tw=80: */
+/* Any copyright is dedicated to the Public Domain.
+ http://creativecommons.org/publicdomain/zero/1.0/ */
+
+"use strict";
+
+let doc;
+let toolbox;
+
+function test() {
+  waitForExplicitFinish();
+
+  gBrowser.selectedTab = gBrowser.addTab();
+  gBrowser.selectedBrowser.addEventListener("load", function onload(evt) {
+    gBrowser.selectedBrowser.removeEventListener("load", onload, true);
+    doc = content.document;
+    waitForFocus(startTests, content);
+  }, true);
+
+  content.location = "data:text/html,<p>Switch to inspector on pick</p>";
+}
+
+function startTests() {
+  Task.spawn(function() {
+    yield openToolbox();
+    yield startPickerAndAssertSwitchToInspector();
+    yield toolbox.stopPicker();
+
+    finishTests();
+  }).then(null, Cu.reportError);
+}
+
+function openToolbox() {
+  let target = TargetFactory.forTab(gBrowser.selectedTab);
+  return gDevTools.showToolbox(target, "webconsole").then(aToolbox => {
+    toolbox = aToolbox;
+  });
+}
+
+function startPickerAndAssertSwitchToInspector() {
+  let deferred = promise.defer();
+
+  let pickButton = toolbox.doc.querySelector("#command-button-pick");
+  pickButton.click();
+  toolbox.once("inspector-selected", () => {
+    is(toolbox.currentToolId, "inspector", "Switched to the inspector");
+    toolbox.getCurrentPanel().once("inspector-updated", deferred.resolve);
+  });
+
+  return deferred.promise;
+}
+
+function finishTests() {
+  doc = toolbox = null;
+  gBrowser.removeCurrentTab();
+  finish();
+}
