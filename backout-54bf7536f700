# HG changeset patch
# Parent  d007cfebe661581f8c70a818efa88b00e9da28af
Backed out changeset 54bf7536f700 (bug 1238133)

diff --git a/devtools/client/framework/sidebar.js b/devtools/client/framework/sidebar.js
--- a/devtools/client/framework/sidebar.js
+++ b/devtools/client/framework/sidebar.js
@@ -259,17 +259,22 @@ ToolSidebar.prototype = {
     this._tooltip.page = true;
 
     tab.linkedPanel = this.TABPANEL_ID_PREFIX + id;
 
     // We store the index of this tab.
     this._tabs.set(id, tab);
 
     if (selected) {
-      this._selectTabSoon(id);
+      // For some reason I don't understand, if we call this.select in this
+      // event loop (after inserting the tab), the tab will never get the
+      // the "selected" attribute set to true.
+      this._panelDoc.defaultView.setTimeout(() => {
+        this.select(id);
+      }, 10);
     }
 
     this.emit("new-tab-registered", id);
   },
 
   untitledTabsIndex: 0,
 
   /**
@@ -354,28 +359,16 @@ ToolSidebar.prototype = {
   select: function(id) {
     let tab = this.getTab(id);
     if (tab) {
       this._tabbox.selectedTab = tab;
     }
   },
 
   /**
-   * Hack required to select a tab right after it was created.
-   *
-   * @param  {String} id
-   *         The sidebar tab id to select.
-   */
-  _selectTabSoon: function(id) {
-    this._panelDoc.defaultView.setTimeout(() => {
-      this.select(id);
-    }, 0);
-  },
-
-  /**
    * Return the id of the selected tab.
    */
   getCurrentTabID: function() {
     let currentID = null;
     for (let [id, tab] of this._tabs) {
       if (this._tabbox.tabs.selectedItem == tab) {
         currentID = id;
         break;
@@ -458,38 +451,23 @@ ToolSidebar.prototype = {
       this.show();
     } else {
       this.hide();
     }
   },
 
   /**
    * Show the sidebar.
-   *
-   * @param  {String} id
-   *         The sidebar tab id to select.
    */
-  show: function(id) {
+  show: function() {
     if (this._width) {
       this._tabbox.width = this._width;
     }
     this._tabbox.removeAttribute("hidden");
 
-    // If an id is given, select the corresponding sidebar tab and record the
-    // tool opened.
-    if (id) {
-      this._currentTool = id;
-
-      if (this._telemetry) {
-        this._telemetry.toolOpened(this._currentTool);
-      }
-
-      this._selectTabSoon(id);
-    }
-
     this.emit("show");
   },
 
   /**
    * Show the sidebar.
    */
   hide: function() {
     Services.prefs.setIntPref("devtools.toolsidebar-width." + this._uid, this._tabbox.width);
diff --git a/devtools/client/inspector/inspector-panel.js b/devtools/client/inspector/inspector-panel.js
--- a/devtools/client/inspector/inspector-panel.js
+++ b/devtools/client/inspector/inspector-panel.js
@@ -370,17 +370,17 @@ InspectorPanel.prototype = {
     this.layoutview = new LayoutView(this, this.panelWin);
 
     if (this.target.form.animationsActor) {
       this.sidebar.addTab("animationinspector",
                           "chrome://devtools/content/animationinspector/animation-inspector.xhtml",
                           "animationinspector" == defaultTab);
     }
 
-    this.sidebar.show(defaultTab);
+    this.sidebar.show();
 
     this.setupSidebarToggle();
   },
 
   /**
    * Add the expand/collapse behavior for the sidebar panel.
    */
   setupSidebarToggle: function() {
