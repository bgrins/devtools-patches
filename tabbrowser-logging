# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  18d29bdf4b5f876691257ea380d7c344067cb44c

diff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml
--- a/browser/base/content/tabbrowser.xml
+++ b/browser/base/content/tabbrowser.xml
@@ -3654,16 +3654,17 @@
       </method>
 
       <property name="selectedTab">
         <getter>
           return this.mCurrentTab;
         </getter>
         <setter>
           <![CDATA[
+          dump("Setting selected tab for tabbrowser " + gNavToolbox.collapsed + "\n");
           if (gNavToolbox.collapsed && !this._allowTabChange) {
             return this.mTabBox.selectedTab;
           }
           // Update the tab
           this.mTabBox.selectedTab = val;
           return val;
           ]]>
         </setter>
@@ -5483,16 +5484,17 @@
               break;
             }
           }
         ]]></body>
       </method>
 
       <constructor>
         <![CDATA[
+          dump("Tabbrowser constructor running!\n");
           this.mCurrentBrowser = document.getAnonymousElementByAttribute(this, "anonid", "initialBrowser");
           this.mCurrentBrowser.permanentKey = {};
 
           Services.obs.addObserver(this, "contextual-identity-updated");
 
           this.mCurrentTab = this.tabContainer.firstChild;
           const nsIEventListenerService =
             Components.interfaces.nsIEventListenerService;
@@ -5989,17 +5991,17 @@
 
       <destructor>
         <![CDATA[
           Services.prefs.removeObserver("privacy.userContext", this);
         ]]>
       </destructor>
 
       <field name="tabbrowser" readonly="true">
-        document.getElementById(this.getAttribute("tabbrowser"));
+        window.gBrowser
       </field>
 
       <field name="tabbox" readonly="true">
         this.tabbrowser.mTabBox;
       </field>
 
       <field name="contextMenu" readonly="true">
         document.getElementById("tabContextMenu");
@@ -6139,16 +6141,17 @@
 
       <method name="_setPositionalAttributes">
         <body><![CDATA[
           let visibleTabs = this.tabbrowser.visibleTabs;
 
           if (!visibleTabs.length)
             return;
 
+          dump("_setPositionalAttributes " + this.selectedIndex + " " + this.selectedItem + " " + visibleTabs.length + "\n");
           let selectedIndex = visibleTabs.indexOf(this.selectedItem);
 
           let lastVisible = visibleTabs.length - 1;
 
           if (this._afterSelectedTab)
             this._afterSelectedTab.removeAttribute("afterselected-visible");
           if (this.selectedItem.closing || selectedIndex == lastVisible) {
             this._afterSelectedTab = null;
@@ -8097,22 +8100,25 @@
   <binding id="tabbrowser-tabpanels"
            extends="chrome://global/content/bindings/tabbox.xml#tabpanels">
     <implementation>
       <field name="_selectedIndex">0</field>
 
       <property name="selectedIndex">
         <getter>
         <![CDATA[
+          dump("tabbrowser-tabpanels selectedIndex\n");
           return this._selectedIndex;
         ]]>
         </getter>
 
         <setter>
         <![CDATA[
+          dump("set: tabbrowser-tabpanels selectedIndex" + val + "\n");
+          console.trace();
           if (val < 0 || val >= this.childNodes.length)
             return val;
 
           let toTab = this.getRelatedElement(this.childNodes[val]);
 
           gBrowser._getSwitcher().requestTab(toTab);
 
           var panel = this._selectedPanel;
