
# HG changeset patch
# User Andrew Swan <aswan@mozilla.com>
# Date 1560485142 25200
# Node ID 0db4f5d8d6245e9f76f50a2ce0ba00d9ed330696
# Parent  8707261552a9026ba21f0e5ecce562ddd19d0fe4
cache fragment

diff --git a/browser/base/content/tabbrowser-tabs.js b/browser/base/content/tabbrowser-tabs.js
--- a/browser/base/content/tabbrowser-tabs.js
+++ b/browser/base/content/tabbrowser-tabs.js
@@ -726,39 +726,45 @@ class MozTabbrowserTabs extends MozEleme
   get tabbox() {
     return document.getElementById("tabbrowser-tabbox");
   }
 
   get newTabButton() {
     return this.querySelector(".tabs-newtab-button");
   }
 
-  connectedCallback() {
-    if (this.delayConnectedCallback()) {
-      return;
-    }
-
-    let children = Array.from(this.children);
-    this.appendChild(MozXULElement.parseXULToFragment(`
+  static get fragment() {
+    let frag = document.importNode(MozXULElement.parseXULToFragment(`
       <hbox class="tab-drop-indicator-box">
         <image class="tab-drop-indicator" collapsed="true"></image>
       </hbox>
       <arrowscrollbox orient="horizontal" flex="1" style="min-width: 1px;" clicktoscroll="true" class="tabbrowser-arrowscrollbox">
         <toolbarbutton class="tabs-newtab-button toolbarbutton-1" command="cmd_newNavigatorTab" onclick="checkForMiddleClick(this, event);"></toolbarbutton>
         <spacer class="closing-tabs-spacer" style="width: 0;"></spacer>
       </arrowscrollbox>
-    `));
+    `), true);
+    Object.defineProperty(this, "fragment", {value: frag});
+    return frag;
+  }
+
+  connectedCallback() {
+    if (this.delayConnectedCallback()) {
+      return;
+    }
+
+    let children = Array.from(this.children);
+    this.appendChild(this.constructor.fragment.cloneNode(true));
 
     this.arrowScrollbox = this.querySelector("arrowscrollbox");
     let el = this.arrowScrollbox.firstChild;
     for (let child of children) {
       this.arrowScrollbox.insertBefore(child, el);
     }
 
-    this.initializeAttributeInheritance();
+//    this.initializeAttributeInheritance();
 
     this.baseConnect();
 
     this._firstTab = null;
     this._lastTab = null;
     this._beforeSelectedTab = null;
     this._beforeHoveredTab = null;
     this._afterHoveredTab = null;

