# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  3a0579ae7667099a1e214162e323dbe0ee54b0f1
Bug 1163092 - Update netmonitor summary stats while streaming;r=jsantell

diff --git a/browser/devtools/netmonitor/netmonitor-view.js b/browser/devtools/netmonitor/netmonitor-view.js
--- a/browser/devtools/netmonitor/netmonitor-view.js
+++ b/browser/devtools/netmonitor/netmonitor-view.js
@@ -1109,19 +1109,21 @@ RequestsMenuView.prototype = Heritage.ex
     let visibleItems = this.visibleItems;
     let visibleRequestsCount = visibleItems.length;
     if (!visibleRequestsCount) {
       this._summary.setAttribute("value", L10N.getStr("networkMenu.empty"));
       return;
     }
 
     let totalBytes = this._getTotalBytesOfRequests(visibleItems);
-    let totalMillis =
-      this._getNewestRequest(visibleItems).attachment.endedMillis -
-      this._getOldestRequest(visibleItems).attachment.startedMillis;
+    let oldestRequest = this._getOldestRequest(visibleItems)
+    let newestRequest = this._getNewestRequest(visibleItems);
+    let totalMillis = oldestRequest && newestRequest &&
+      newestRequest.attachment.endedMillis -
+      oldestRequest.attachment.startedMillis;
 
     // https://developer.mozilla.org/en-US/docs/Localization_and_Plurals
     let str = PluralForm.get(visibleRequestsCount, L10N.getStr("networkMenu.summary"));
     this._summary.setAttribute("value", str
       .replace("#1", visibleRequestsCount)
       .replace("#2", L10N.numberWithDecimals((totalBytes || 0) / 1024, CONTENT_SIZE_DECIMALS))
       .replace("#3", L10N.numberWithDecimals((totalMillis || 0) / 1000, REQUEST_TIME_DECIMALS))
     );
@@ -1936,17 +1938,17 @@ RequestsMenuView.prototype = Heritage.ex
    *
    * @param array aItemsArray
    * @return number
    */
   _getTotalBytesOfRequests: function(aItemsArray) {
     if (!aItemsArray.length) {
       return 0;
     }
-    return aItemsArray.reduce((prev, curr) => prev + curr.attachment.contentSize || 0, 0);
+    return aItemsArray.reduce((prev, curr) => prev + (curr.attachment.contentSize || 0), 0);
   },
 
   /**
    * Gets the oldest (first performed) request in a set. Returns null for an
    * empty set.
    *
    * @param array aItemsArray
    * @return object
@@ -1955,28 +1957,29 @@ RequestsMenuView.prototype = Heritage.ex
     if (!aItemsArray.length) {
       return null;
     }
     return aItemsArray.reduce((prev, curr) =>
       prev.attachment.startedMillis < curr.attachment.startedMillis ? prev : curr);
   },
 
   /**
-   * Gets the newest (latest performed) request in a set. Returns null for an
+   * Gets the newest (last finished) request in a set. Returns null for an
    * empty set.
    *
    * @param array aItemsArray
    * @return object
    */
   _getNewestRequest: function(aItemsArray) {
-    if (!aItemsArray.length) {
+    let endedRequests = aItemsArray.filter(r=>r.attachment.endedMillis);
+    if (!endedRequests.length) {
       return null;
     }
-    return aItemsArray.reduce((prev, curr) =>
-      prev.attachment.startedMillis > curr.attachment.startedMillis ? prev : curr);
+    return endedRequests.reduce((prev, curr) =>
+      prev.attachment.endedMillis > curr.attachment.endedMillis ? prev : curr);
   },
 
   /**
    * Gets the available waterfall width in this container.
    * @return number
    */
   get _waterfallWidth() {
     if (this._cachedWaterfallWidth == 0) {
