# HG changeset patch
# Parent 87f56ae05a165738fc29e71651373b4aed1601db
# User Brian Grinstead <bgrinstead@mozilla.com>
testing breadcrumb

diff --git a/browser/devtools/inspector/breadcrumbs.js b/browser/devtools/inspector/breadcrumbs.js
--- a/browser/devtools/inspector/breadcrumbs.js
+++ b/browser/devtools/inspector/breadcrumbs.js
@@ -378,19 +378,22 @@ HTMLBreadcrumbs.prototype = {
    *
    * @param aIdx Index of the displayed-button to select
    */
   setCursor: function BC_setCursor(aIdx)
   {
     // Unselect the previously selected button
     if (this.currentIndex > -1 && this.currentIndex < this.nodeHierarchy.length) {
       this.nodeHierarchy[this.currentIndex].button.removeAttribute("checked");
+      this.nodeHierarchy[this.currentIndex].separator.removeAttribute("checked");
     }
     if (aIdx > -1) {
       this.nodeHierarchy[aIdx].button.setAttribute("checked", "true");
+      this.nodeHierarchy[aIdx].separator.setAttribute("checked", "true");
+
       if (this.hadFocus)
         this.nodeHierarchy[aIdx].button.focus();
     }
     this.currentIndex = aIdx;
   },
 
   /**
    * Get the index of the node in the cache.
@@ -415,16 +418,17 @@ HTMLBreadcrumbs.prototype = {
    *
    * @param aIdx
    */
   cutAfter: function BC_cutAfter(aIdx)
   {
     while (this.nodeHierarchy.length > (aIdx + 1)) {
       let toRemove = this.nodeHierarchy.pop();
       this.container.removeChild(toRemove.button);
+      this.container.removeChild(toRemove.separator);
     }
   },
 
   /**
    * Build a button representing the node.
    *
    * @param aNode The node from the page.
    * @returns aNode The <button>.
@@ -473,19 +477,23 @@ HTMLBreadcrumbs.prototype = {
       let originalLength = this.nodeHierarchy.length;
       let stopNode = null;
       if (originalLength > 0) {
         stopNode = this.nodeHierarchy[originalLength - 1].node;
       }
       while (toAppend && toAppend != stopNode) {
         if (toAppend.tagName) {
           let button = this.buildButton(toAppend);
+          let separator = this.chromeDoc.createElement("box");
+          separator.className = "breadcrumbs-widget-separator";
+          separator.flex = 0;
           fragment.insertBefore(button, lastButtonInserted);
-          lastButtonInserted = button;
-          this.nodeHierarchy.splice(originalLength, 0, {node: toAppend, button: button});
+          fragment.insertBefore(separator, button);
+          lastButtonInserted = separator;
+          this.nodeHierarchy.splice(originalLength, 0, {node: toAppend, button: button, separator: separator });
         }
         toAppend = toAppend.parentNode();
       }
       this.container.appendChild(fragment, this.container.firstChild);
   },
 
   /**
    * Get a child of a node that can be displayed in the breadcrumbs
diff --git a/browser/themes/shared/devtools/widgets.inc.css b/browser/themes/shared/devtools/widgets.inc.css
--- a/browser/themes/shared/devtools/widgets.inc.css
+++ b/browser/themes/shared/devtools/widgets.inc.css
@@ -112,25 +112,53 @@
 
 .breadcrumbs-widget-item {
   background-color: transparent;
   -moz-appearance: none;
   overflow: hidden;
   min-width: 85px;
   max-width: 250px;
   min-height: 25px;
-  border-style: solid;
-  border-width: 1px 13px 2px 13px;
-  margin: 0 -11px 0 0;
-  padding: 0 9px;
+  margin: 0;
+  padding: 0;
+  border: none;
   outline: none;
   color: hsl(210,30%,85%);
 }
 
+.breadcrumbs-widget-separator {
+  display: block;
+  border: solid 12px transparent;
+  border-right-width: 0;
+}
+
+.breadcrumbs-widget-separator[checked] {
+  border-right-width: 0;
+  border-top-color: #1d4f73;
+  border-bottom-color: #1d4f73;
+  border-left-color: #343c45;
+}
+
+.breadcrumbs-widget-separator[checked]:first-child {
+  border-left-color: #1d4f73;
+}
+
+.breadcrumbs-widget-item[checked] + .breadcrumbs-widget-separator {
+  border-right-width: 0;
+  border-top-color: #343c45;
+  border-bottom-color: #343c45;
+  border-left-color: #1d4f73;
+}
+
+.breadcrumbs-widget-item[checked] {
+  background: #1d4f73
+}
+
 .breadcrumbs-widget-item:-moz-focusring > label {
+  border-top: 1px solid transparent;
   border-bottom: 1px dotted hsla(210,30%,85%,0.4);
 }
 
 .breadcrumbs-widget-item[checked] .breadcrumbs-widget-item-tag {
   color: hsl(208,100%,60%);
 }
 
 .breadcrumbs-widget-item[checked] .breadcrumbs-widget-item-id {
@@ -145,17 +173,17 @@
 .breadcrumbs-widget-item-classes {
   color: #8d99a6;
 }
 
 .breadcrumbs-widget-item-pseudo-classes {
   color: hsl(20,100%,85%);
 }
 
-/* Breadcrumbs LTR */
+/* Breadcrumbs LTR
 
 .breadcrumbs-widget-item:-moz-locale-dir(ltr) {
   border-image: url("breadcrumbs/ltr-middle.png") 1 13 2 13 fill stretch;
 }
 
 .breadcrumbs-widget-item:not([checked]):hover:active:-moz-locale-dir(ltr) {
   border-image: url("breadcrumbs/ltr-middle-pressed.png") 1 13 2 13 fill stretch;
 }
