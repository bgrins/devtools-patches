# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  f19fc746e02082b3b456aa59d75c2993a01dd4f1
Bug 1469902 - Remove unused eventNode code

diff --git a/toolkit/content/widgets/tabbox.js b/toolkit/content/widgets/tabbox.js
--- a/toolkit/content/widgets/tabbox.js
+++ b/toolkit/content/widgets/tabbox.js
@@ -6,27 +6,18 @@
 
 {
 
 class MozTabbox extends MozXULElement {
   connectedCallback() {
     this._handleMetaAltArrows = /Mac/.test(navigator.platform);
 
     this._eventNode = this;
-
-    switch (this.getAttribute("eventnode")) {
-      case "parent":
-        this._eventNode = this.parentNode;
-        break;
-      case "window":
-        this._eventNode = window;
-        break;
-      case "document":
-        this._eventNode = document;
-        break;
+    if (this.getAttribute("eventnode") == "document") {
+      this._eventNode = document;
     }
 
     Services.els.addSystemEventListener(this._eventNode, "keydown", this, false);
 
     this.disconnectedCallback = this.disconnectedCallback.bind(this);
     window.addEventListener("unload", this.disconnectedCallback, { once: true });
   }
 
@@ -101,29 +92,16 @@ class MozTabbox extends MozXULElement {
     return val;
   }
 
   get selectedPanel() {
     var tabpanels = this.tabpanels;
     return tabpanels && tabpanels.selectedPanel;
   }
 
-  set eventNode(val) {
-    if (val != this._eventNode) {
-      Services.els.addSystemEventListener(val, "keydown", this, false);
-      Services.els.removeSystemEventListener(this._eventNode, "keydown", this, false);
-      this._eventNode = val;
-    }
-    return val;
-  }
-
-  get eventNode() {
-    return this._eventNode;
-  }
-
   handleEvent(event) {
     if (!event.isTrusted) {
       // Don't let untrusted events mess with tabs.
       return;
     }
 
     // Don't check if the event was already consumed because tab
     // navigation should always work for better user experience.
