# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  81ed15cfdbfa2ab524bb05a7c356bc181f72758c
Bug 1210430 - Use global Promise to make beta doorhanger work again;r=jsantell

diff --git a/devtools/client/shared/doorhanger.js b/devtools/client/shared/doorhanger.js
--- a/devtools/client/shared/doorhanger.js
+++ b/devtools/client/shared/doorhanger.js
@@ -3,17 +3,16 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 "use strict";
 
 const { Ci, Cc } = require("chrome");
 const { Services } = require("resource://gre/modules/Services.jsm");
 const { DOMHelpers } = require("resource:///modules/devtools/client/shared/DOMHelpers.jsm");
 const { Task } = require("resource://gre/modules/Task.jsm");
-const { Promise } = require("promise");
 const { setTimeout } = require("sdk/timers");
 const { getMostRecentBrowserWindow } = require("sdk/window/utils");
 
 const XULNS = "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
 const DEV_EDITION_PROMO_URL = "chrome://devtools/content/framework/dev-edition-promo/dev-edition-promo.xul";
 const DEV_EDITION_PROMO_ENABLED_PREF = "devtools.devedition.promo.enabled";
 const DEV_EDITION_PROMO_SHOWN_PREF = "devtools.devedition.promo.shown";
 const DEV_EDITION_PROMO_URL_PREF = "devtools.devedition.promo.url";
@@ -128,33 +127,31 @@ function setDoorhangerStyle (panel, fram
 
   frame.style.borderRadius = "5px";
   frame.setAttribute("flex", "1");
   frame.setAttribute("width", "450");
   frame.setAttribute("height", "179");
 }
 
 function onFrameLoad (frame) {
-  let { resolve, promise } = Promise.defer();
-
-  if (frame.contentWindow) {
-    let domHelper = new DOMHelpers(frame.contentWindow);
-    domHelper.onceDOMReady(resolve);
-  } else {
-    let callback = () => {
-      frame.removeEventListener("DOMContentLoaded", callback);
-      resolve();
+  return new Promise(resolve => {
+    if (frame.contentWindow) {
+      let domHelper = new DOMHelpers(frame.contentWindow);
+      domHelper.onceDOMReady(resolve);
+    } else {
+      let callback = () => {
+        frame.removeEventListener("DOMContentLoaded", callback);
+        resolve();
+      }
+      frame.addEventListener("DOMContentLoaded", callback);
     }
-    frame.addEventListener("DOMContentLoaded", callback);
-  }
-
-  return promise;
+  });
 }
 
 function getGBrowser () {
   return getMostRecentBrowserWindow().gBrowser;
 }
 
 function wait (n) {
-  let { resolve, promise } = Promise.defer();
-  setTimeout(resolve, n);
-  return promise;
+  return new Promise(resolve => {
+    setTimeout(resolve, n);
+  });
 }
