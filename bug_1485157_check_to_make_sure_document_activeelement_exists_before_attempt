# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1535651726 25200
#      Thu Aug 30 10:55:26 2018 -0700
# Node ID 74cc0fa9d01002c055068c5ec831e9416a0ff8b5
# Parent  1bd0f0baab41d587e900da8797467801d71568a5
Bug 1485157 - Check to make sure document.activeElement exists before attempting to blur it;r=Gijs

We're ending up in a case here where document.activeElement is null in
browser.xhtml but it's a <browser> tag in browser.xul.

We'll need more analysis and testing to decide if we want the HTML or XUL
activeElement behavior, and then adjust as needed. But in the meantime,
this unbreaks a bunch of browser.xhtml tests and is a safe null check in
both cases.

Differential Revision: https://phabricator.services.mozilla.com/D4705

diff --git a/browser/base/content/tabbrowser.js b/browser/base/content/tabbrowser.js
--- a/browser/base/content/tabbrowser.js
+++ b/browser/base/content/tabbrowser.js
@@ -1081,17 +1081,17 @@ window._gBrowser = {
       oldTab._findBarFocused = (!findBar.hidden &&
         findBar._findField.getAttribute("focused") == "true");
     }
 
     let activeEl = document.activeElement;
     // If focus is on the old tab, move it to the new tab.
     if (activeEl == oldTab) {
       newTab.focus();
-    } else if (gMultiProcessBrowser && activeEl != newBrowser && activeEl != newTab) {
+    } else if (gMultiProcessBrowser && activeEl && activeEl != newBrowser && activeEl != newTab) {
       // In e10s, if focus isn't already in the tabstrip or on the new browser,
       // and the new browser's previous focus wasn't in the url bar but focus is
       // there now, we need to adjust focus further.
       let keepFocusOnUrlBar = newBrowser &&
         newBrowser._urlbarFocused &&
         gURLBar &&
         gURLBar.focused;
       if (!keepFocusOnUrlBar) {
