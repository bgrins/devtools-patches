# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1535651726 25200
#      Thu Aug 30 10:55:26 2018 -0700
# Node ID 27249b8f3a407bf7e3b5a260d9419fedd6039275
# Parent  7d542c1d11cd71d29efae6743780254d1db7c203
Bug 1485157 - Check to make sure document.activeElement exists before attempting to blur it;r=Gijs

We're ending up in a case here where document.activeElement is null in
browser.xhtml but it's a <browser> tag in browser.xul.

We'll need more analysis and testing to decide if we want the HTML or XUL
activeElement behavior, and then adjust as needed. But in the meantime,
this unbreaks a bunch of browser.xhtml tests and is a safe null check in
both cases.

Differential Revision: https://phabricator.services.mozilla.com/D4705

diff --git a/browser/base/content/tabbrowser.js b/browser/base/content/tabbrowser.js
--- a/browser/base/content/tabbrowser.js
+++ b/browser/base/content/tabbrowser.js
@@ -1089,17 +1089,19 @@ window._gBrowser = {
     } else if (gMultiProcessBrowser && activeEl != newBrowser && activeEl != newTab) {
       // In e10s, if focus isn't already in the tabstrip or on the new browser,
       // and the new browser's previous focus wasn't in the url bar but focus is
       // there now, we need to adjust focus further.
       let keepFocusOnUrlBar = newBrowser &&
         newBrowser._urlbarFocused &&
         gURLBar &&
         gURLBar.focused;
-      if (!keepFocusOnUrlBar) {
+      // In an HTML document (built with MOZ_BROWSER_XHTML), the activeElement
+      // can be null, so check before attempting to blur it (Bug 1485157).
+      if (!keepFocusOnUrlBar && document.activeElement) {
         // Clear focus so that _adjustFocusAfterTabSwitch can detect if
         // some element has been focused and respect that.
         document.activeElement.blur();
       }
     }
   },
 
   _adjustFocusAfterTabSwitch(newTab) {
