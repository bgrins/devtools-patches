# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  6296ed36532a887f88dfe4c6299f34811e694220
Bug 1442058 - Override loadURI on tabbrowser browsers with an expando property

This allows us to remove the XBL binding inheritance, simplifying the tree
of bindings under "browser" and deleting two bindings in the process

diff --git a/browser/base/content/browser.css b/browser/base/content/browser.css
--- a/browser/base/content/browser.css
+++ b/browser/base/content/browser.css
@@ -61,24 +61,16 @@ searchbar {
 }
 
 /* Prevent shrinking the page content to 0 height and width */
 .browserStack > browser {
   min-height: 25px;
   min-width: 25px;
 }
 
-.browserStack > browser {
-  -moz-binding: url("chrome://browser/content/tabbrowser.xml#tabbrowser-browser");
-}
-
-.browserStack > browser[remote="true"] {
-  -moz-binding: url("chrome://browser/content/tabbrowser.xml#tabbrowser-remote-browser");
-}
-
 toolbar[customizable="true"] {
   -moz-binding: url("chrome://browser/content/customizableui/toolbar.xml#toolbar");
 }
 
 %ifdef XP_MACOSX
 #toolbar-menubar {
   -moz-binding: url("chrome://browser/content/customizableui/toolbar.xml#toolbar-menubar-stub");
 }
diff --git a/browser/base/content/tabbrowser.js b/browser/base/content/tabbrowser.js
--- a/browser/base/content/tabbrowser.js
+++ b/browser/base/content/tabbrowser.js
@@ -288,16 +288,18 @@ window._gBrowser = {
   },
 
   _setupInitialBrowserAndTab() {
     let browser = this.initialBrowser;
     this._selectedBrowser = browser;
 
     browser.permanentKey = {};
     browser.droppedLinkHandler = handleDroppedLink;
+    browser.tabModalPromptBox = null;
+    browser.loadURI = _loadURI.bind(null, browser);
 
     let autoScrollPopup = browser._createAutoScrollPopup();
     autoScrollPopup.id = "autoscroller";
     document.getElementById("mainPopupSet").appendChild(autoScrollPopup);
     browser.setAttribute("autoscrollpopup", autoScrollPopup.id);
 
     this._defaultBrowserAttributes = {
       autoscrollpopup: "",
@@ -1796,16 +1798,18 @@ window._gBrowser = {
     remoteType,
     replayExecution,
     sameProcessAsFrameLoader,
     uriIsAboutBlank,
     userContextId,
   } = {}) {
     let b = document.createElementNS(this._XUL_NS, "browser");
     b.permanentKey = {};
+    b.tabModalPromptBox = null;
+    b.loadURI = _loadURI.bind(null, b);
 
     for (let attribute in this._defaultBrowserAttributes) {
       b.setAttribute(attribute, this._defaultBrowserAttributes[attribute]);
     }
 
     if (userContextId) {
       b.setAttribute("usercontextid", userContextId);
     }
diff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml
--- a/browser/base/content/tabbrowser.xml
+++ b/browser/base/content/tabbrowser.xml
@@ -2183,46 +2183,9 @@
       <![CDATA[
         if (event.originalTarget.getAttribute("anonid") == "tab-loading-burst") {
           this.removeAttribute("bursting");
         }
       ]]>
       </handler>
     </handlers>
   </binding>
-
-  <binding id="tabbrowser-browser"
-           extends="chrome://global/content/bindings/browser.xml#browser">
-    <implementation>
-      <field name="tabModalPromptBox">null</field>
-
-      <!-- throws exception for unknown schemes -->
-      <method name="loadURI">
-        <parameter name="aURI"/>
-        <parameter name="aParams"/>
-        <body>
-          <![CDATA[
-            _loadURI(this, aURI, aParams);
-          ]]>
-        </body>
-      </method>
-    </implementation>
-  </binding>
-
-  <binding id="tabbrowser-remote-browser"
-           extends="chrome://global/content/bindings/remote-browser.xml#remote-browser">
-    <implementation>
-      <field name="tabModalPromptBox">null</field>
-
-      <!-- throws exception for unknown schemes -->
-      <method name="loadURI">
-        <parameter name="aURI"/>
-        <parameter name="aParams"/>
-        <body>
-          <![CDATA[
-            _loadURI(this, aURI, aParams);
-          ]]>
-        </body>
-      </method>
-    </implementation>
-  </binding>
-
 </bindings>
