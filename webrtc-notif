# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  08588a27e51d69cd811869b7f7840719bdbd7517

diff --git a/browser/base/content/test/webrtc/browser_devices_get_user_media.js b/browser/base/content/test/webrtc/browser_devices_get_user_media.js
--- a/browser/base/content/test/webrtc/browser_devices_get_user_media.js
+++ b/browser/base/content/test/webrtc/browser_devices_get_user_media.js
@@ -21,17 +21,18 @@ var gTests = [
        "webRTC-shareDevices-notification-icon", "anchored to device icon");
     checkDeviceSelectors(true, true);
     let iconclass =
       PopupNotifications.panel.firstElementChild.getAttribute("iconclass");
     ok(iconclass.includes("camera-icon"), "panel using devices icon");
 
     let indicator = promiseIndicatorWindow();
     await promiseMessage("ok", () => {
-      PopupNotifications.panel.firstElementChild.button.click();
+      console.log(PopupNotifications.panel.firstElementChild.button);
+      //PopupNotifications.panel.firstElementChild.button.click();
     });
     await expectObserverCalled("getUserMedia:response:allow");
     await expectObserverCalled("recording-device-events");
     Assert.deepEqual((await getMediaCaptureState()), {audio: true, video: true},
                      "expected camera and microphone to be shared");
 
     await indicator;
     await checkSharingUI({audio: true, video: true});
diff --git a/toolkit/content/widgets/popupnotification.js b/toolkit/content/widgets/popupnotification.js
--- a/toolkit/content/widgets/popupnotification.js
+++ b/toolkit/content/widgets/popupnotification.js
@@ -145,17 +145,21 @@ class MozPopupNotification extends MozXU
           </menupopup>
         </button>
         <button anonid="button" class="popup-notification-button popup-notification-primary-button" label="&defaultButton.label;" accesskey="&defaultButton.accesskey;" inherits="oncommand=buttoncommand,label=buttonlabel,accesskey=buttonaccesskey,default=buttonhighlight,disabled=mainactiondisabled"></button>
       </hbox>
     `, ["chrome://global/locale/notification.dtd"]));
 
     this.appendNotificationFooter(this.querySelector("popupnotificationfooter"));
     this.appendNotificationHeader(this.querySelector("popupnotificationheader"));
-    this.appendNotificationContent(this.querySelector("popupnotificationcontent"));
+//    this.appendNotificationContent(this.querySelectorAll("popupnotificationcontent"));
+
+    this.querySelector("children[includes='popupnotificationcontent']").replaceWith(
+      ...this.querySelectorAll("popupnotificationcontent")
+    );
 
     if (buttons.length) {
       this.querySelector("children[includes='button']").replaceWith(...buttons);
     }
 
     this.inheritAttributes();
   }
 
