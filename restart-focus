# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  77c06979d9e88979ec96263eccdbd750cb9221a4
Bug 1461366 - Focus the Browser Console window after opening;r=nchevobbe

This allows keyboard shortcuts to work right away when the input field
isn't present.

MozReview-Commit-ID: COmmybkUu0m

diff --git a/devtools/client/webconsole/new-webconsole.js b/devtools/client/webconsole/new-webconsole.js
--- a/devtools/client/webconsole/new-webconsole.js
+++ b/devtools/client/webconsole/new-webconsole.js
@@ -236,16 +236,20 @@ NewWebConsoleFrame.prototype = {
       clearShortcut = l10n.getStr("webconsole.clear.keyOSX");
     } else {
       clearShortcut = l10n.getStr("webconsole.clear.key");
     }
 
     shortcuts.on(clearShortcut, () => this.jsterm.clearOutput(true));
 
     if (this.isBrowserConsole) {
+      // Make sure keyboard shortcuts work immediately after opening
+      // the Browser Console (Bug 1461366).
+      this.window.focus();
+
       shortcuts.on(l10n.getStr("webconsole.close.key"),
                    this.window.top.close.bind(this.window.top));
 
       ZoomKeys.register(this.window);
       shortcuts.on("CmdOrCtrl+Alt+R", quickRestart);
     } else if (Services.prefs.getBoolPref(PREF_SIDEBAR_ENABLED)) {
       shortcuts.on("Esc", event => {
         if (!this.jsterm.autocompletePopup || !this.jsterm.autocompletePopup.isOpen) {
diff --git a/devtools/client/webconsole/test/mochitest/browser_console_open_or_focus.js b/devtools/client/webconsole/test/mochitest/browser_console_open_or_focus.js
--- a/devtools/client/webconsole/test/mochitest/browser_console_open_or_focus.js
+++ b/devtools/client/webconsole/test/mochitest/browser_console_open_or_focus.js
@@ -15,16 +15,18 @@ add_task(async function() {
   let currWindow, hud, mainWindow;
 
   mainWindow = Services.wm.getMostRecentWindow(null);
 
   await HUDService.openBrowserConsoleOrFocus();
 
   hud = HUDService.getBrowserConsole();
 
+  ok(hud.ui.document.hasFocus(), "Focus in the document");
+
   console.log(TEST_MESSAGE);
 
   await waitFor(() => findMessage(hud, TEST_MESSAGE));
 
   currWindow = Services.wm.getMostRecentWindow(null);
   is(currWindow.document.documentURI, Tools.webConsole.browserConsoleURL,
      "The Browser Console is open and has focus");
   mainWindow.focus();
