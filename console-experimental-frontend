# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  16aaf4cd418c2c26b27967f2940a31937590f646
Prototype of integrating a different console frontend

diff --git a/devtools/client/webconsole/moz.build b/devtools/client/webconsole/moz.build
--- a/devtools/client/webconsole/moz.build
+++ b/devtools/client/webconsole/moz.build
@@ -1,16 +1,20 @@
 # -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
 # vim: set filetype=python:
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
 BROWSER_CHROME_MANIFESTS += ['test/browser.ini']
 
+DIRS += [
+    'new-console-output'
+]
+
 DevToolsModules(
     'console-commands.js',
     'console-output.js',
     'hudservice.js',
     'jsterm.js',
     'panel.js',
     'webconsole.js',
 )
diff --git a/devtools/client/webconsole/new-console-output/main.js b/devtools/client/webconsole/new-console-output/main.js
new file mode 100644
--- /dev/null
+++ b/devtools/client/webconsole/new-console-output/main.js
@@ -0,0 +1,23 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+"use strict";
+
+var { utils: Cu } = Components;
+
+Cu.import("resource://gre/modules/XPCOMUtils.jsm");
+Cu.import("resource://devtools/client/shared/browser-loader.js");
+
+// Initialize module loader and load all modules of the new inline
+// preview feature. The entire code-base doesn't need any extra
+// privileges and runs entirely in content scope.
+const rootUrl = "resource://devtools/client/webconsole/new-console-output/";
+const require = BrowserLoader({
+  baseURI: rootUrl,
+  window: this}).require;
+const OutputComponent = require("./output-component");
+const { Services } = Cu.import("resource://gre/modules/Services.jsm", {});
+
+this.NewConsoleOutput = function(parentNode) {
+  // console.log("Creating NewConsoleOutput", parentNode);
+}
diff --git a/devtools/client/webconsole/new-console-output/moz.build b/devtools/client/webconsole/new-console-output/moz.build
new file mode 100644
--- /dev/null
+++ b/devtools/client/webconsole/new-console-output/moz.build
@@ -0,0 +1,14 @@
+# vim: set filetype=python:
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+#DIRS += [
+#    'components',
+#    'utils'
+#]
+
+DevToolsModules(
+    'main.js',
+    'output-component.js',
+)
\ No newline at end of file
diff --git a/devtools/client/webconsole/new-console-output/output-component.js b/devtools/client/webconsole/new-console-output/output-component.js
new file mode 100644
--- /dev/null
+++ b/devtools/client/webconsole/new-console-output/output-component.js
@@ -0,0 +1,17 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+"use strict";
+
+// React
+const React = require("devtools/client/shared/vendor/react");
+const ReactDOM = require("devtools/client/shared/vendor/react-dom");
+
+console.log("Hello, world", React);
+
+function NewConsoleOutput() {
+   this.body = ReactDOM.render(body, this.netInfoBodyBox);
+}
+
+// Exports from this module
+module.exports = NewConsoleOutput;
\ No newline at end of file
diff --git a/devtools/client/webconsole/webconsole.js b/devtools/client/webconsole/webconsole.js
--- a/devtools/client/webconsole/webconsole.js
+++ b/devtools/client/webconsole/webconsole.js
@@ -191,16 +191,18 @@ const FILTER_PREFS_PREFIX = "devtools.we
 
 // The minimum font size.
 const MIN_FONT_SIZE = 10;
 
 const PREF_CONNECTION_TIMEOUT = "devtools.debugger.remote-timeout";
 const PREF_PERSISTLOG = "devtools.webconsole.persistlog";
 const PREF_MESSAGE_TIMESTAMP = "devtools.webconsole.timestampMessages";
 
+const SUPER_FRONTEND_EXPERIMENT = !!this.window.NewConsoleOutput;
+
 /**
  * A WebConsoleFrame instance is an interactive console initialized *per target*
  * that displays console log data as well as provides an interactive terminal to
  * manipulate the target's document content.
  *
  * The WebConsoleFrame is responsible for the actual Web Console UI
  * implementation.
  *
@@ -519,16 +521,34 @@ WebConsoleFrame.prototype = {
     } else {
       doc.querySelector("#key_clear").removeAttribute("disabled");
     }
 
     this.filterBox = doc.querySelector(".hud-filter-box");
     this.outputNode = doc.getElementById("output-container");
     this.outputWrapper = doc.getElementById("output-wrapper");
 
+    if (SUPER_FRONTEND_EXPERIMENT) {
+      console.log("Entering experimental mode for console frontend");
+
+      // this.experimentalOutputNode = this.outputNode.cloneNode();
+      // // XXX: We should actually stop output from happening on old output
+      // // panel, but for now let's just hide it.
+      // this.outputNode.hidden = true;
+
+      // this.outputFoo = new this.window.NewConsoleOutput(this.experimentalOutputNode);
+      // Create an html frame to host the output region
+      // let frame = doc.createElement("iframe");
+      // frame.onload = function() {
+      // }
+      // frame.src = "data:text/html,";
+      // this.outputWrapper.appendChild(frame);
+      // console.log("APPENDING", frame.contentDocument.body, this.outputNode);
+      // frame.contentDocument.body.appendChild(this.outputNode);
+    }
     this.completeNode = doc.querySelector(".jsterm-complete-node");
     this.inputNode = doc.querySelector(".jsterm-input-node");
 
     this._setFilterTextBoxEvents();
     this._initFilterButtons();
 
     let fontSize = this.owner._browserConsole ?
                    Services.prefs.getIntPref("devtools.webconsole.fontSize") :
diff --git a/devtools/client/webconsole/webconsole.xul b/devtools/client/webconsole/webconsole.xul
--- a/devtools/client/webconsole/webconsole.xul
+++ b/devtools/client/webconsole/webconsole.xul
@@ -21,16 +21,18 @@
         title="&window.title;"
         browserConsoleTitle="&browserConsole.title;"
         windowtype="devtools:webconsole"
         width="900" height="350"
         persist="screenX screenY width height sizemode">
 
   <script type="application/javascript;version=1.8"
           src="chrome://devtools/content/shared/theme-switching.js"/>
+  <script type="text/javascript"
+          src="resource://devtools/client/webconsole/new-console-output/main.js"/>
   <script type="text/javascript" src="chrome://global/content/globalOverlay.js"/>
   <script type="text/javascript"><![CDATA[
 function goUpdateConsoleCommands() {
   goUpdateCommand("consoleCmd_openURL");
   goUpdateCommand("consoleCmd_copyURL");
 }
   // ]]></script>
 
