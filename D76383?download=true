diff --git a/browser/themes/shared/customizableui/panelUI.inc.css b/browser/themes/shared/customizableui/panelUI.inc.css
--- a/browser/themes/shared/customizableui/panelUI.inc.css
+++ b/browser/themes/shared/customizableui/panelUI.inc.css
@@ -365,7 +365,7 @@
 }
 
 panelview:not([mainview]) .toolbarbutton-text,
-.cui-widget-panel toolbarbutton:not([wrap]) > .toolbarbutton-text,
+.cui-widget-panel .toolbarbutton-text,
 #overflowMenu-customize-button > .toolbarbutton-text {
   text-align: start;
   display: -moz-box;
@@ -1021,7 +1021,6 @@
   background-color: @appmenuWarningBackgroundColorActiveBrightText@;
 }
 
-#customization-palette .toolbarbutton-multiline-text,
 #customization-palette .toolbarbutton-text {
   display: none;
 }
@@ -1084,12 +1083,6 @@
   padding-inline-start: 8px; /* See '.subviewbutton-iconic > .toolbarbutton-text' rule above. */
 }
 
-.panel-banner-item > .toolbarbutton-multiline-text {
-  margin: 0;
-  padding: 0;
-  padding-inline-start: 8px; /* See '.subviewbutton-iconic > .toolbarbutton-text' rule above. */
-}
-
 .subviewbutton-iconic > .toolbarbutton-icon {
   width: 16px;
   height: 16px;
@@ -1746,7 +1739,7 @@
 }
 
 .subviewbutton-back > .toolbarbutton-text {
-  /* !important to override .cui-widget-panel toolbarbutton:not([wrap]) > .toolbarbutton-text
+  /* !important to override .cui-widget-panel .toolbarbutton-text
    * selector further down. */
   display: none !important;
 }
diff --git a/toolkit/content/widgets/toolbarbutton.js b/toolkit/content/widgets/toolbarbutton.js
--- a/toolkit/content/widgets/toolbarbutton.js
+++ b/toolkit/content/widgets/toolbarbutton.js
@@ -35,8 +35,7 @@
       return {
         ".toolbarbutton-icon":
           "validate,src=image,label,type,consumeanchor,triggeringprincipal=iconloadingprincipal",
-        ".toolbarbutton-text": "value=label,accesskey,crop,dragover-top,wrap",
-        ".toolbarbutton-multiline-text": "text=label,accesskey,wrap",
+        ".toolbarbutton-text": "accesskey,crop,dragover-top,wrap",
         ".toolbarbutton-menu-dropmarker": "disabled,label",
 
         ".toolbarbutton-badge": "text=badge,style=badgeStyle",
@@ -48,7 +47,6 @@
         MozXULElement.parseXULToFragment(`
         <image class="toolbarbutton-icon"></image>
         <label class="toolbarbutton-text" crop="right" flex="1"></label>
-        <label class="toolbarbutton-multiline-text" flex="1"></label>
         `),
         true
       );
@@ -64,7 +62,6 @@
           <html:label class="toolbarbutton-badge"/>
         </stack>
         <label class="toolbarbutton-text" crop="right" flex="1"/>
-        <label class="toolbarbutton-multiline-text" flex="1"/>
         `),
         true
       );
@@ -87,6 +84,48 @@
       return this.querySelector(":scope > .toolbarbutton-text") != null;
     }
 
+    get _textNode() {
+      let node = this.getElementForAttrInheritance(".toolbarbutton-text");
+      if (node) {
+        Object.defineProperty(this, "_textNode", { value: node });
+      }
+      return node;
+    }
+
+    _setLabel(label) {
+      if (this.getAttribute("wrap") == "true") {
+        this._textNode.textContent = label || "";
+      } else {
+        this._textNode.setAttribute("value", label || "");
+      }
+    }
+
+    attributeChangedCallback(name, oldValue, newValue) {
+      // Deal with single/multiline label inheritance:
+      if (
+        this.initializedAttributeInheritance &&
+        (name == "label" || name == "wrap") &&
+        oldValue != newValue
+      ) {
+        if (name == "wrap") {
+          if (newValue == "true") {
+            this._textNode.removeAttribute("value");
+            this._textNode.textContent = this.getAttribute("label") || "";
+          } else {
+            this._textNode.textContent = "";
+            this._textNode.setAttribute(
+              "value",
+              this.getAttribute("label") || ""
+            );
+          }
+        } else if (name == "label") {
+          this._setLabel(newValue);
+        }
+      }
+      // The normal implementation will deal with everything else.
+      super.attributeChangedCallback(name, oldValue, newValue);
+    }
+
     connectedCallback() {
       if (this.delayConnectedCallback()) {
         return;
@@ -157,6 +196,7 @@
       }
 
       this.initializeAttributeInheritance();
+      this._setLabel(this.getAttribute("label"));
     }
 
     get icon() {
@@ -172,7 +212,10 @@
     }
 
     get multilineLabel() {
-      return this.querySelector(".toolbarbutton-multiline-text");
+      if (this.getAttribute("wrap") == "true") {
+        return this.querySelector(".toolbarbutton-text");
+      }
+      return null;
     }
 
     get dropmarker() {
diff --git a/toolkit/content/xul.css b/toolkit/content/xul.css
--- a/toolkit/content/xul.css
+++ b/toolkit/content/xul.css
@@ -118,10 +118,7 @@
 /********** toolbarbutton **********/
 
 toolbar[mode="icons"] .toolbarbutton-text,
-toolbar[mode="icons"] .toolbarbutton-multiline-text,
 toolbar[mode="text"] .toolbarbutton-icon,
-.toolbarbutton-multiline-text:not([wrap="true"]),
-.toolbarbutton-text[wrap="true"],
 html|label.toolbarbutton-badge:empty {
   display: none;
 }
diff --git a/xpcom/ds/StaticAtoms.py b/xpcom/ds/StaticAtoms.py
--- a/xpcom/ds/StaticAtoms.py
+++ b/xpcom/ds/StaticAtoms.py
@@ -1199,7 +1199,6 @@
     Atom("tokenize", "tokenize"),
     Atom("toolbar", "toolbar"),
     Atom("toolbarbutton", "toolbarbutton"),
-    Atom("toolbarbuttonMultilineText", "toolbarbutton-multiline-text"),
     Atom("toolbaritem", "toolbaritem"),
     Atom("toolbarpaletteitem", "toolbarpaletteitem"),
     Atom("toolbox", "toolbox"),

