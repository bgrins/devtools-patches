# HG changeset patch
# Parent aad069f68e0e4e6fe94a1f556ac2268e48b7067c
# User Brian Grinstead <bgrinstead@mozilla.com>
Bug 998344 - Console input is slow when accessing large Uint8Array object properties

diff --git a/toolkit/devtools/webconsole/utils.js b/toolkit/devtools/webconsole/utils.js
--- a/toolkit/devtools/webconsole/utils.js
+++ b/toolkit/devtools/webconsole/utils.js
@@ -969,27 +969,24 @@ function getMatchedProps(aObj, aMatch)
 function getMatchedProps_impl(aObj, aMatch, {chainIterator, getProperties})
 {
   let matches = new Set();
 
   // We need to go up the prototype chain.
   let iter = chainIterator(aObj);
   for (let obj of iter) {
     let props = getProperties(obj);
+    props = props.filter(prop => prop[0] < '0' || prop[0] > '9');
+
     for (let prop of props) {
       if (prop.indexOf(aMatch) != 0) {
         continue;
       }
 
-      // If it is an array index, we can't take it.
-      // This uses a trick: converting a string to a number yields NaN if
-      // the operation failed, and NaN is not equal to itself.
-      if (+prop != +prop) {
-        matches.add(prop);
-      }
+      matches.add(prop);
 
       if (matches.size > MAX_COMPLETIONS) {
         break;
       }
     }
 
     if (matches.size > MAX_COMPLETIONS) {
       break;
