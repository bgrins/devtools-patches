# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1571430288 25200
#      Fri Oct 18 13:24:48 2019 -0700
# Node ID d8d5368e30973c8066179ad32bbecc69c0bcdf8a
# Parent  a15ba287ac6fd84643d248ace00bf18c18382ada
Bug 1584641 - Investigation - can we use an html element with content: <url> instead of <xul:image>?

It looks pretty possible. We could also start doing this piecemeal, letting the two elements live alongside each other for a while. There are some todos:

- Finish finding and changing styles to target directly the moz-image elements instead of relying on inheriting styles (this is done in a proof of concept here
  to render the main toolbarbuttons we see at startup. This patch has some logging to try to help with that. Mozscreenshots would come in handy too.
- Handle moz-image-rect as ntim outlines in https://bugzilla.mozilla.org/show_bug.cgi?id=1584641#c2
- .tabbrowser-arrowscrollbox::part(scrollbutton-down) is used to set list-style-image. We want to dig into the content of that node, but can't with Shadow Parts.
  We'd need export parts or something similar for that (Bug 1559076)

Differential Revision: https://phabricator.services.mozilla.com/D49795

diff --git a/browser/base/content/browser.xhtml b/browser/base/content/browser.xhtml
--- a/browser/base/content/browser.xhtml
+++ b/browser/base/content/browser.xhtml
@@ -869,19 +869,19 @@
               <box id="tracking-protection-icon-container" align="center"
                    role="button"
                    onclick="gProtectionsHandler.handleProtectionsButtonEvent(event);"
                    onkeypress="gProtectionsHandler.handleProtectionsButtonEvent(event);"
                    onmouseover="gProtectionsHandler.onTrackingProtectionIconHoveredOrFocused();"
                    onfocus="gProtectionsHandler.onTrackingProtectionIconHoveredOrFocused();">
                 <box id="tracking-protection-icon-box" animationsenabled="true"
                      tooltip="tracking-protection-icon-tooltip">
-                  <image id="tracking-protection-icon"/>
+                  <html:moz-image id="tracking-protection-icon"/>
                   <box id="tracking-protection-icon-animatable-box" flex="1">
-                    <image id="tracking-protection-icon-animatable-image" flex="1"/>
+                    <html:moz-image id="tracking-protection-icon-animatable-image" flex="1"/>
                   </box>
                 </box>
                 <tooltip id="tracking-protection-icon-tooltip">
                   <description id="tracking-protection-icon-tooltip-label" class="tooltip-label"/>
                 </tooltip>
               </box>
               <box id="identity-box" role="button"
                    align="center"
diff --git a/browser/themes/shared/identity-block/identity-block.inc.css b/browser/themes/shared/identity-block/identity-block.inc.css
--- a/browser/themes/shared/identity-block/identity-block.inc.css
+++ b/browser/themes/shared/identity-block/identity-block.inc.css
@@ -295,21 +295,21 @@
   animation-name: tp-icon-animation-rtl;
 }
 
 #tracking-protection-icon-tooltip {
   max-width: 500px;
 }
 
 #urlbar-input-container[pageproxystate="valid"] > #tracking-protection-icon-container > #tracking-protection-icon-box > #tracking-protection-icon {
-  list-style-image: url(chrome://browser/skin/tracking-protection.svg);
+  content: url(chrome://browser/skin/tracking-protection.svg);
 }
 
 #urlbar-input-container[pageproxystate="valid"] > #tracking-protection-icon-container > #tracking-protection-icon-box[hasException] > #tracking-protection-icon {
-  list-style-image: url(chrome://browser/skin/tracking-protection-disabled.svg);
+  content: url(chrome://browser/skin/tracking-protection-disabled.svg);
 }
 
 #urlbar-input-container[pageproxystate="valid"] > #tracking-protection-icon-container > #tracking-protection-icon-box > #tracking-protection-icon:-moz-locale-dir(rtl) {
   transform: scaleX(-1);
 }
 
 #urlbar-input-container[pageproxystate="invalid"] > #tracking-protection-icon-container {
   visibility: collapse;
diff --git a/browser/themes/shared/tabs.inc.css b/browser/themes/shared/tabs.inc.css
--- a/browser/themes/shared/tabs.inc.css
+++ b/browser/themes/shared/tabs.inc.css
@@ -683,39 +683,40 @@
   content: "";
   display: -moz-box;
 }
 
 /* Tab bar scroll arrows */
 
 .tabbrowser-arrowscrollbox::part(scrollbutton-up),
 .tabbrowser-arrowscrollbox::part(scrollbutton-down) {
+  /* XXX: we can't target this node without exportparts */
   list-style-image: url(chrome://browser/skin/arrow-left.svg) !important;
   -moz-context-properties: fill, fill-opacity;
   fill: var(--lwt-toolbarbutton-icon-fill, currentColor);
   fill-opacity: var(--toolbarbutton-icon-fill-opacity);
   color: inherit;
 }
 
 .tabbrowser-arrowscrollbox:-moz-locale-dir(rtl)::part(scrollbutton-up),
 .tabbrowser-arrowscrollbox:-moz-locale-dir(ltr)::part(scrollbutton-down) {
   transform: scaleX(-1);
 }
 
 /* New tab button */
 
-#tabs-newtab-button,
-#TabsToolbar #new-tab-button {
-  list-style-image: url(chrome://browser/skin/add.svg);
+#tabs-newtab-button > .toolbarbutton-icon,
+#TabsToolbar #new-tab-button > .toolbarbutton-icon {
+  content: url(chrome://browser/skin/add.svg);
 }
 
 /* All tabs button and menupopup */
 
-#alltabs-button {
-  list-style-image: url(chrome://global/skin/icons/arrow-dropdown-16.svg);
+#alltabs-button > .toolbarbutton-icon {
+  content: url(chrome://global/skin/icons/arrow-dropdown-16.svg);
 }
 
 #tabbrowser-tabs[hiddensoundplaying] ~ #alltabs-button > .toolbarbutton-badge-stack > .toolbarbutton-badge {
   background: transparent url(chrome://browser/skin/tabbrowser/badge-audio-playing.svg);
   box-shadow: none;
   /* Match the color of the button, rather than label default. */
   color: inherit;
   display: block;
@@ -771,36 +772,36 @@
   font-weight: bold;
   box-shadow: inset 4px 0 var(--blue-40);
 }
 
 .all-tabs-item[selected]:-moz-locale-dir(rtl) {
   box-shadow: inset -4px 0 var(--blue-40);
 }
 
-.all-tabs-button {
-  list-style-image: url("chrome://mozapps/skin/places/defaultFavicon.svg");
+.all-tabs-button > .toolbarbutton-icon {
+  content: url("chrome://mozapps/skin/places/defaultFavicon.svg");
 }
 
 .all-tabs-secondary-button > label {
   display: none;
   margin: 0 5.5px;
 }
 
-.all-tabs-secondary-button[soundplaying] {
-  list-style-image: url(chrome://browser/skin/tabbrowser/tab-audio-playing.svg);
+.all-tabs-secondary-button[soundplaying] > .toolbarbutton-icon {
+  content: url(chrome://browser/skin/tabbrowser/tab-audio-playing.svg);
 }
 
-.all-tabs-secondary-button[muted] {
-  list-style-image: url(chrome://browser/skin/tabbrowser/tab-audio-muted.svg);
+.all-tabs-secondary-button[muted] > .toolbarbutton-icon {
+  content: url(chrome://browser/skin/tabbrowser/tab-audio-muted.svg);
 }
 
-#allTabsMenu-undoCloseTab {
-  list-style-image: url(chrome://browser/skin/undo.svg);
+#allTabsMenu-undoCloseTab > .toolbarbutton-icon {
+  content: url(chrome://browser/skin/undo.svg);
 }
 
 #allTabsMenu-undoCloseTab > .toolbarbutton-icon:-moz-locale-dir(rtl) {
   transform: scaleX(-1);
 }
 
-#allTabsMenu-searchTabs {
-  list-style-image: url(chrome://browser/skin/search-glass.svg);
+#allTabsMenu-searchTabs > .toolbarbutton-icon {
+  content: url(chrome://browser/skin/search-glass.svg);
 }
diff --git a/browser/themes/shared/toolbarbutton-icons.inc.css b/browser/themes/shared/toolbarbutton-icons.inc.css
--- a/browser/themes/shared/toolbarbutton-icons.inc.css
+++ b/browser/themes/shared/toolbarbutton-icons.inc.css
@@ -41,22 +41,22 @@ toolbar[brighttext] {
 #reload-button:-moz-locale-dir(rtl) > .toolbarbutton-icon,
 #nav-bar-overflow-button:-moz-locale-dir(rtl) > .toolbarbutton-icon,
 #PlacesChevron:-moz-locale-dir(rtl) > .toolbarbutton-icon,
 #panic-button:-moz-locale-dir(rtl) > .toolbarbutton-icon,
 #PanelUI-menu-button:-moz-locale-dir(rtl) > .toolbarbutton-badge-stack > .toolbarbutton-icon {
   transform: scaleX(-1);
 }
 
-#back-button {
-  list-style-image: url("chrome://browser/skin/back.svg");
+#back-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/back.svg");
 }
 
-#forward-button {
-  list-style-image: url("chrome://browser/skin/forward.svg");
+#forward-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/forward.svg");
 }
 
 /* The animations for the reload-button and stop-button are disabled
    outside of the nav-bar due to bug 1382894. */
 :-moz-any(#reload-button, #stop-button) > .toolbarbutton-animatable-box {
   display: none;
 }
 #nav-bar-customization-target > #stop-reload-button > :-moz-any(#reload-button, #stop-button) > .toolbarbutton-animatable-box {
@@ -166,141 +166,141 @@ toolbar[brighttext] {
 #reload-button[displaystop] + #stop-button > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
   transform: translateX(-450px);
 }
 
 #reload-button[displaystop] + #stop-button:-moz-locale-dir(rtl) > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
   transform: scaleX(-1) translateX(-450px);
 }
 
-#reload-button {
-  list-style-image: url("chrome://browser/skin/reload.svg");
+#reload-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/reload.svg");
 }
 
-#stop-button {
-  list-style-image: url("chrome://browser/skin/stop.svg");
+#stop-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/stop.svg");
 }
 
-#home-button {
-  list-style-image: url("chrome://browser/skin/home.svg");
+#home-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/home.svg");
 }
 
-#bookmarks-toolbar-button,
-#bookmarks-toolbar-placeholder {
-  list-style-image: url("chrome://browser/skin/bookmarks-toolbar.svg");
+#bookmarks-toolbar-button > .toolbarbutton-icon,
+#bookmarks-toolbar-placeholder > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/bookmarks-toolbar.svg");
 }
 
-#bookmarks-menu-button {
-  list-style-image: url("chrome://browser/skin/bookmark-star-on-tray.svg");
+#bookmarks-menu-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/bookmark-star-on-tray.svg");
 }
 
-#history-panelmenu {
-  list-style-image: url("chrome://browser/skin/history.svg");
+#history-panelmenu > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/history.svg");
 }
 
-#downloads-button {
-  list-style-image: url("chrome://browser/skin/downloads/download-icons.svg#arrow-with-bar");
+#downloads-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/downloads/download-icons.svg#arrow-with-bar");
 }
 
-#add-ons-button {
-  list-style-image: url("chrome://mozapps/skin/extensions/extensionGeneric-16.svg");
+#add-ons-button > .toolbarbutton-icon {
+  content: url("chrome://mozapps/skin/extensions/extensionGeneric-16.svg");
 }
 
-#open-file-button {
-  list-style-image: url("chrome://browser/skin/open.svg");
+#open-file-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/open.svg");
 }
 
-#save-page-button {
-  list-style-image: url("chrome://browser/skin/save.svg");
+#save-page-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/save.svg");
 }
 
-#sync-button {
-  list-style-image: url("chrome://browser/skin/tab.svg");
+#sync-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/tab.svg");
 }
 
-#characterencoding-button {
-  list-style-image: url("chrome://browser/skin/characterEncoding.svg");
+#characterencoding-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/characterEncoding.svg");
 }
 
-#new-window-button {
-  list-style-image: url("chrome://browser/skin/new-window.svg");
+#new-window-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/new-window.svg");
 }
 
-#new-tab-button {
-  list-style-image: url("chrome://browser/skin/new-tab.svg");
+#new-tab-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/new-tab.svg");
 }
 
-#privatebrowsing-button {
-  list-style-image: url("chrome://browser/skin/privateBrowsing.svg");
+#privatebrowsing-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/privateBrowsing.svg");
 }
 
-#find-button {
-  list-style-image: url("chrome://browser/skin/search-glass.svg");
+#find-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/search-glass.svg");
 }
 
-#print-button {
-  list-style-image: url("chrome://browser/skin/print.svg");
+#print-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/print.svg");
 }
 
 %ifdef XP_MACOSX
-#restore-button,
+#restore-button > .toolbarbutton-icon ,
 %endif
-#fullscreen-button {
-  list-style-image: url("chrome://browser/skin/fullscreen.svg");
+#fullscreen-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/fullscreen.svg");
 }
 
-#developer-button {
-  list-style-image: url("chrome://browser/skin/developer.svg");
+#developer-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/developer.svg");
 }
 
-#profiler-button {
-  list-style-image: url("chrome://devtools/skin/images/profiler-stopwatch.svg");
+#profiler-button > .toolbarbutton-icon {
+  content: url("chrome://devtools/skin/images/profiler-stopwatch.svg");
 }
 
 #PanelUI-profilerIframe {
   width: 450px;
 }
 
-#preferences-button {
-  list-style-image: url("chrome://browser/skin/settings.svg");
+#preferences-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/settings.svg");
 }
 
-#PanelUI-menu-button {
-  list-style-image: url("chrome://browser/skin/menu.svg");
+#PanelUI-menu-button .toolbarbutton-icon {
+  content: url("chrome://browser/skin/menu.svg");
 }
 
-#PanelUI-menu-button[badge-status="update-available"],
-#PanelUI-menu-button[badge-status="update-manual"],
-#PanelUI-menu-button[badge-status="update-restart"] {
-  list-style-image: url("chrome://browser/skin/menu-badged.svg");
+#PanelUI-menu-button[badge-status="update-available"] .toolbarbutton-icon,
+#PanelUI-menu-button[badge-status="update-manual"] .toolbarbutton-icon,
+#PanelUI-menu-button[badge-status="update-restart"] .toolbarbutton-icon {
+  content: url("chrome://browser/skin/menu-badged.svg");
 }
 
-#cut-button {
-  list-style-image: url("chrome://browser/skin/edit-cut.svg");
+#cut-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/edit-cut.svg");
 }
 
-#copy-button {
-  list-style-image: url("chrome://browser/skin/edit-copy.svg");
+#copy-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/edit-copy.svg");
 }
 
-#paste-button {
-  list-style-image: url("chrome://browser/skin/edit-paste.svg");
+#paste-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/edit-paste.svg");
 }
 
-#zoom-out-button {
-  list-style-image: url("chrome://browser/skin/zoom-out.svg");
+#zoom-out-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/zoom-out.svg");
 }
 
-#zoom-in-button {
-  list-style-image: url("chrome://browser/skin/zoom-in.svg");
+#zoom-in-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/zoom-in.svg");
 }
 
-#PlacesChevron,
-#nav-bar-overflow-button {
-  list-style-image: url("chrome://browser/skin/chevron.svg");
+#PlacesChevron > .toolbarbutton-icon,
+#nav-bar-overflow-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/chevron.svg");
 }
 
 #nav-bar-overflow-button[animate] > .toolbarbutton-icon {
   fill: transparent;
 }
 
 @keyframes overflow-animation {
   from {
@@ -379,39 +379,39 @@ toolbar[brighttext] {
   animation-timing-function: ease-out;
   animation-duration: 730ms;
 }
 
 #nav-bar-overflow-button[animate][fade]:-moz-locale-dir(rtl) > .toolbarbutton-animatable-box > .toolbarbutton-animatable-image {
   transform: scaleX(-1);
 }
 
-#email-link-button {
-  list-style-image: url("chrome://browser/skin/mail.svg");
+#email-link-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/mail.svg");
 }
 
-#sidebar-button {
-  list-style-image: url("chrome://browser/skin/sidebars-right.svg");
+#sidebar-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/sidebars-right.svg");
 }
 
-#sidebar-button:-moz-locale-dir(ltr):not([positionend]),
-#sidebar-button:-moz-locale-dir(rtl)[positionend] {
-  list-style-image: url("chrome://browser/skin/sidebars.svg");
+#sidebar-button:-moz-locale-dir(ltr):not([positionend]) > .toolbarbutton-icon,
+#sidebar-button:-moz-locale-dir(rtl)[positionend] > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/sidebars.svg");
 }
 
-#panic-button {
-  list-style-image: url("chrome://browser/skin/forget.svg");
+#panic-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/forget.svg");
 }
 
 #panic-button[open] {
   fill: rgb(213, 32, 20);
 }
 
-#library-button {
-  list-style-image: url("chrome://browser/skin/library.svg");
+#library-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/library.svg");
 }
 
 @keyframes library-bookmark-animation {
   from {
     transform: translateX(0);
     fill: inherit;
   }
   25% {
@@ -558,45 +558,45 @@ toolbar[brighttext] {
 }
 
 #library-animatable-box[animate="pocket"][fade] > .toolbarbutton-animatable-image {
   animation-name: library-pocket-fade;
 }
 
 /* ----- BOOKMARK BUTTONS ----- */
 
-.bookmark-item {
-  list-style-image: url("chrome://mozapps/skin/places/defaultFavicon.svg");
+.bookmark-item  > .toolbarbutton-icon {
+  content: url("chrome://mozapps/skin/places/defaultFavicon.svg");
   -moz-context-properties: fill;
   fill: currentColor;
 }
 
 toolbarbutton.bookmark-item {
   -moz-context-properties: fill, fill-opacity;
   fill: var(--lwt-toolbarbutton-icon-fill, currentColor);
   fill-opacity: var(--toolbarbutton-icon-fill-opacity);
 }
 
-.bookmark-item[container] {
-  list-style-image: url("chrome://browser/skin/places/folder.svg");
+.bookmark-item[container] > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/places/folder.svg");
 }
 
-.bookmark-item[container][query] {
-  list-style-image: url("chrome://browser/skin/places/folder-smart.svg");
+.bookmark-item[container][query] > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/places/folder-smart.svg");
 }
 
-.bookmark-item[query][tagContainer] {
-  list-style-image: url("chrome://browser/skin/places/tag.svg");
+.bookmark-item[query][tagContainer] > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/places/tag.svg");
   -moz-image-region: auto;
 }
 
-.bookmark-item[query][dayContainer] {
-  list-style-image: url("chrome://browser/skin/places/history.svg");
+.bookmark-item[query][dayContainer] > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/places/history.svg");
   -moz-image-region: auto;
 }
 
-.bookmark-item[query][hostContainer] {
-  list-style-image: url("chrome://browser/skin/places/folder.svg");
+.bookmark-item[query][hostContainer] > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/places/folder.svg");
 }
 
-#whats-new-menu-button {
-  list-style-image: url("chrome://browser/skin/whatsnew.svg");
+#whats-new-menu-button > .toolbarbutton-icon {
+  content: url("chrome://browser/skin/whatsnew.svg");
 }
diff --git a/toolkit/content/widgets/general.js b/toolkit/content/widgets/general.js
--- a/toolkit/content/widgets/general.js
+++ b/toolkit/content/widgets/general.js
@@ -2,16 +2,75 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 "use strict";
 
 // This is loaded into chrome windows with the subscript loader. Wrap in
 // a block to prevent accidentally leaking globals onto `window`.
 {
+  let convertedImages = new Map();
+  let unconvertedImages = new Map();
+  let unknownImages = new Map();
+  document.addEventListener("DOMContentLoaded", () => {
+    console.group(`Image report for ${document.documentURI}`);
+    console.log(`Converted images: ${convertedImages.size}`, convertedImages);
+    console.log(
+      `Unconverted images: ${unconvertedImages.size}`,
+      unconvertedImages
+    );
+    console.log(`Unknown images: ${unknownImages.size}`, unknownImages);
+    console.groupEnd(`Image report for ${document.documentURI}`);
+  });
+  class MozImage extends HTMLElement {
+    connectedCallback() {
+      if (this.hasAttribute("src")) {
+        this.src = this.getAttribute("src");
+      }
+
+      // Debugging for missed consumers
+      let listStyleImage = window
+        .getComputedStyle(this)
+        .getPropertyValue("list-style-image");
+      let content = window.getComputedStyle(this).getPropertyValue("content");
+      if (listStyleImage != "none") {
+        let el = this;
+        let id = this.closest("[id]") && this.closest("[id]").id;
+        while (!id && el.getRootNode()) {
+          let host = el.getRootNode().host;
+          el = host;
+          id = host.closest("[id]") && host.closest("[id]").id;
+        }
+        unconvertedImages.set(this, `${id}: ${listStyleImage}`);
+      } else if (content != "none") {
+        convertedImages.set(this, content);
+      } else {
+        unknownImages.set(this, this.outerHTML);
+      }
+    }
+
+    set src(val) {
+      // TODO: Set/remove content: <url> as inline style
+    }
+
+    removeAttribute(name) {
+      if (name == "src") {
+        this.src = null;
+      }
+      super.removeAttribute(name);
+    }
+    setAttribute(name, val) {
+      if (name == "src") {
+        this.src = val;
+      }
+      super.setAttribute(name, val);
+    }
+  }
+  customElements.define("moz-image", MozImage);
+
   class MozDeck extends MozXULElement {
     set selectedIndex(val) {
       if (this.selectedIndex == val) {
         return val;
       }
       this.setAttribute("selectedIndex", val);
       var event = document.createEvent("Events");
       event.initEvent("select", true, true);
diff --git a/toolkit/content/widgets/toolbarbutton.js b/toolkit/content/widgets/toolbarbutton.js
--- a/toolkit/content/widgets/toolbarbutton.js
+++ b/toolkit/content/widgets/toolbarbutton.js
@@ -41,31 +41,31 @@
 
         ".toolbarbutton-badge": "value=badge,style=badgeStyle",
       };
     }
 
     static get fragment() {
       let frag = document.importNode(
         MozXULElement.parseXULToFragment(`
-        <image class="toolbarbutton-icon"></image>
+        <html:moz-image class="toolbarbutton-icon" />
         <label class="toolbarbutton-text" crop="right" flex="1"></label>
         <label class="toolbarbutton-multiline-text" flex="1"></label>
         <dropmarker type="menu" class="toolbarbutton-menu-dropmarker"></dropmarker>`),
         true
       );
       Object.defineProperty(this, "fragment", { value: frag });
       return frag;
     }
 
     static get badgedFragment() {
       let frag = document.importNode(
         MozXULElement.parseXULToFragment(`
         <stack class="toolbarbutton-badge-stack">
-          <image class="toolbarbutton-icon"/>
+          <html:moz-image class="toolbarbutton-icon"/>
           <label class="toolbarbutton-badge" top="0" end="0" crop="none"/>
         </stack>
         <label class="toolbarbutton-text" crop="right" flex="1"/>
         <label class="toolbarbutton-multiline-text" flex="1"/>
         <dropmarker anonid="dropmarker" type="menu"
                     class="toolbarbutton-menu-dropmarker"/>`),
         true
       );
diff --git a/toolkit/content/xul.css b/toolkit/content/xul.css
--- a/toolkit/content/xul.css
+++ b/toolkit/content/xul.css
@@ -105,16 +105,24 @@ vbox {
 label.text-link, label[onclick] {
   -moz-user-focus: normal;
 }
 
 label html|span.accesskey {
   text-decoration: underline;
 }
 
+html|moz-image {
+  /* Copied from minimal xul - some of these should be removable */
+  -moz-user-focus: ignore;
+  -moz-user-select: none;
+  display: -moz-box;
+  box-sizing: border-box;
+}
+
 /********** toolbarbutton **********/
 
 .toolbarbutton-badge:not([value]),
 .toolbarbutton-badge[value=""] {
   display: none;
 }
 
 toolbarbutton:not([type="menu"]) > .toolbarbutton-menu-dropmarker,
