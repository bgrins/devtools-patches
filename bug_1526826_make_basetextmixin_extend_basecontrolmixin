# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1549840691 28800
#      Sun Feb 10 15:18:11 2019 -0800
# Node ID f8e27fc992f2019795e3f43253a93436fb0ff2fc
# Parent  ee8f4ea3d62070b919093b6159ab87943f55ca99
Bug 1526826 - Make BaseTextMixin extend BaseControlMixin

Differential Revision: https://phabricator.services.mozilla.com/D19316

diff --git a/toolkit/content/customElements.js b/toolkit/content/customElements.js
--- a/toolkit/content/customElements.js
+++ b/toolkit/content/customElements.js
@@ -308,17 +308,17 @@ const BaseControlMixin = Base => {
   }
 
   Base.implementCustomInterface(BaseControl,
                                 [Ci.nsIDOMXULControlElement]);
   return BaseControl;
 };
 MozElements.BaseControl = BaseControlMixin(MozXULElement);
 
-const BaseTextMixin = Base => class extends Base {
+const BaseTextMixin = Base => class extends BaseControlMixin(Base) {
   set label(val) {
     this.setAttribute("label", val);
     return val;
   }
 
   get label() {
     return this.getAttribute("label");
   }
diff --git a/toolkit/content/tests/chrome/test_custom_element_base.xul b/toolkit/content/tests/chrome/test_custom_element_base.xul
--- a/toolkit/content/tests/chrome/test_custom_element_base.xul
+++ b/toolkit/content/tests/chrome/test_custom_element_base.xul
@@ -24,16 +24,17 @@
 
   SimpleTest.waitForExplicitFinish();
 
   async function runTests() {
     ok(MozXULElement, "MozXULElement defined on the window");
     testMixin();
     testBaseControl();
     testBaseControlMixin();
+    testBaseText();
     testParseXULToFragment();
     testInherits();
     await testCustomInterface();
 
     let htmlWin = await new Promise(resolve => {
       let htmlIframe = document.createElement("iframe");
       htmlIframe.src = "file_empty.xhtml";
       htmlIframe.onload = () => resolve(htmlIframe.contentWindow);
@@ -58,16 +59,24 @@
 
   function testBaseControlMixin() {
     ok(BaseControlMixin, "Mixin exists");
     let MixedHTMLSpanElement = MozElementMixin(HTMLSpanElement);
     let HTMLSpanBaseControl = BaseControlMixin(MixedHTMLSpanElement);
     ok("disabled" in HTMLSpanBaseControl.prototype, "Mixed in class prototype contains base control attributes");
   }
 
+  function testBaseText() {
+    ok(MozElements.BaseText, "BaseText exists");
+    ok("label" in MozElements.BaseText.prototype,
+      "BaseText prototype inherits BaseText attributes");
+    ok("disabled" in MozElements.BaseText.prototype,
+      "BaseText prototype inherits BaseControl attributes");
+  }
+
   function testParseXULToFragment() {
     ok(MozXULElement.parseXULToFragment, "parseXULToFragment helper exists");
 
     let frag = MozXULElement.parseXULToFragment(`<deck id='foo' />`);
     ok(frag instanceof DocumentFragment);
 
     document.documentElement.appendChild(frag);
 
