# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1570467165 25200
#      Mon Oct 07 09:52:45 2019 -0700
# Node ID 1d9695d5a717172c83a83e0f417569eac065ed1c
# Parent  3955e0a93047dec7ae5aebba4143aa61feed56ee
Bug 1586831 - Switch xul:textbox to html:input in browser_clipboard_pastefile.js

Differential Revision: https://phabricator.services.mozilla.com/D48386

diff --git a/browser/base/content/test/general/browser_clipboard_pastefile.js b/browser/base/content/test/general/browser_clipboard_pastefile.js
--- a/browser/base/content/test/general/browser_clipboard_pastefile.js
+++ b/browser/base/content/test/general/browser_clipboard_pastefile.js
@@ -1,21 +1,21 @@
 // This test is used to check that pasting files removes all non-file data from
 // event.clipboardData.
 
 add_task(async function() {
-  var textbox = document.createXULElement("textbox");
-  document.documentElement.appendChild(textbox);
+  var input = document.createElement("input");
+  document.documentElement.appendChild(input);
 
-  textbox.focus();
-  textbox.value = "Text";
-  textbox.select();
+  input.focus();
+  input.value = "Text";
+  input.select();
 
   await new Promise((resolve, reject) => {
-    textbox.addEventListener(
+    input.addEventListener(
       "copy",
       function(event) {
         event.clipboardData.setData("text/plain", "Alternate");
         // For this test, it doesn't matter that the file isn't actually a file.
         event.clipboardData.setData("application/x-moz-file", "Sample");
         event.preventDefault();
         resolve();
       },
@@ -37,20 +37,20 @@ add_task(async function() {
 
   await BrowserTestUtils.synthesizeKey("v", { accelKey: true }, browser);
 
   let output = await ContentTask.spawn(browser, {}, async function(arg) {
     return content.document.getElementById("output").textContent;
   });
   is(output, "Passed", "Paste file");
 
-  textbox.focus();
+  input.focus();
 
   await new Promise((resolve, reject) => {
-    textbox.addEventListener(
+    input.addEventListener(
       "paste",
       function(event) {
         let dt = event.clipboardData;
         is(dt.types.length, 3, "number of types");
         ok(dt.types.includes("text/plain"), "text/plain exists in types");
         ok(
           dt.mozTypesAt(0).contains("text/plain"),
           "text/plain exists in mozTypesAt"
@@ -69,12 +69,12 @@ add_task(async function() {
         resolve();
       },
       { capture: true, once: true }
     );
 
     EventUtils.synthesizeKey("v", { accelKey: true });
   });
 
-  document.documentElement.removeChild(textbox);
+  input.remove();
 
   BrowserTestUtils.removeTab(tab);
 });
