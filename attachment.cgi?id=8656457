# HG changeset patch
# User Patrick Brosset <pbrosset@mozilla.com>
# Date 1441265728 -7200
#      Thu Sep 03 09:35:28 2015 +0200
# Node ID 27c794e5d3b610ea485aebc196ee54058888e53a
# Parent  8224cf643d973daab6d09e84199ee535650be568
Bug 1174060 - 2 - Display negative delays like normal delays

This ensure animations with negative delays are fully displayed
in the animation-inspector panel, and that negative and positive
delays look the same.

diff --git a/browser/devtools/animationinspector/components.js b/browser/devtools/animationinspector/components.js
--- a/browser/devtools/animationinspector/components.js
+++ b/browser/devtools/animationinspector/components.js
@@ -562,17 +562,17 @@ let TimeScale = {
 
   /**
    * Add a new animation to time scale.
    * @param {Object} state A PlayerFront.state object.
    */
   addAnimation: function(state) {
     let {startTime, delay, duration, iterationCount, playbackRate} = state;
 
-    this.minStartTime = Math.min(this.minStartTime, startTime);
+    this.minStartTime = Math.min(this.minStartTime, startTime + (delay < 0 ? delay / playbackRate : 0));
     let length = (delay / playbackRate) +
                  ((duration / playbackRate) *
                   (!iterationCount ? 1 : iterationCount));
     this.maxEndTime = Math.max(this.maxEndTime, startTime + length);
   },
 
   /**
    * Reset the current time scale.
@@ -948,31 +948,39 @@ AnimationsTimeline.prototype = {
         // repeating linear-gradient.
         "style": `left:${x}px;
                   width:${w * (count || 1)}px;
                   background-size:${Math.max(w, 2)}px 100%;`
       }
     });
 
     // The animation name is displayed over the iterations.
+    // Note that in case of negative delay, we push the name towards the right
+    // so the delay can be shown.
     createNode({
       parent: iterations,
       attributes: {
         "class": "name",
-        "title": this.getAnimationTooltipText(state)
+        "title": this.getAnimationTooltipText(state),
+        "style": delay < 0
+                 ? "margin-left:" +
+                   TimeScale.durationToDistance(Math.abs(delay), width) + "px"
+                 : ""
       },
       textContent: state.name
     });
 
     // Delay.
     if (delay) {
-      let w = TimeScale.durationToDistance(delay / rate, width);
+      // Negative delays need to start at 0.
+      let x = TimeScale.durationToDistance((delay < 0 ? 0 : delay) / rate, width);
+      let w = TimeScale.durationToDistance(Math.abs(delay) / rate, width);
       createNode({
         parent: iterations,
         attributes: {
           "class": "delay",
-          "style": `left:-${w}px;
+          "style": `left:-${x}px;
                     width:${w}px;`
         }
       });
     }
   }
 };
diff --git a/browser/themes/shared/devtools/animationinspector.css b/browser/themes/shared/devtools/animationinspector.css
--- a/browser/themes/shared/devtools/animationinspector.css
+++ b/browser/themes/shared/devtools/animationinspector.css
@@ -282,35 +282,24 @@ body {
   white-space: nowrap;
   line-height: 150%;
   padding: 0 2px;
 }
 
 .animation-timeline .animation .delay {
   position: absolute;
   top: 0;
+  /* Make sure the delay covers up the animation border */
+  transform: translate(-1px, -1px);
   height: 100%;
-  background-image: linear-gradient(to bottom,
-                                    transparent,
-                                    transparent 9px,
-                                    var(--timelime-border-color) 9px,
-                                    var(--timelime-border-color) 11px,
-                                    transparent 11px,
-                                    transparent);
-}
-
-.animation-timeline .animation .delay::before {
-  position: absolute;
-  content: "";
-  left: 0;
-  width: 2px;
-  height: 8px;
-  top: 50%;
-  margin-top: -4px;
-  background: var(--timelime-border-color);
+  background-image: repeating-linear-gradient(45deg,
+                                              transparent, transparent 1px,
+                                              white 1px, white 4px);
+  background-color: var(--timelime-border-color);
+  border: 1px solid var(--timelime-border-color);
 }
 
 /* Animation target node gutter, contains a preview of the dom node */
 
 .animation-target {
   background-color: var(--theme-toolbar-background);
   padding: 1px 4px;
   box-sizing: border-box;
