# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  cca1ff142217a2ac14435a72fe28acd7a5f44501
Idle render hidden labels in prefs

diff --git a/toolkit/content/widgets/text.js b/toolkit/content/widgets/text.js
--- a/toolkit/content/widgets/text.js
+++ b/toolkit/content/widgets/text.js
@@ -3,16 +3,38 @@
   * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 "use strict";
 
 // This is loaded into all XUL windows. Wrap in a block to prevent
 // leaking to window scope.
 {
 
+const idleLabelsToRender = new Set();
+let idleCallbackWaiting = null;
+
+function idleCallback(deadline) {
+  for (let label of idleLabelsToRender) {
+    if (deadline.timeRemaining() <= 0) {
+      break;
+    }
+    label.formatAccessKey(true);
+    idleLabelsToRender.delete(label);
+  }
+  idleCallbackWaiting = null;
+  idleRenderLabels();
+}
+
+function idleRenderLabels() {
+  if (!idleCallbackWaiting && idleLabelsToRender.size > 0) {
+    idleCallbackWaiting = requestIdleCallback(idleCallback);
+  }
+}
+
+
 /* globals MozElementMixin,XULTextElement */
 class MozTextLabel extends MozElementMixin(XULTextElement) {
   static get observedAttributes() {
     return ["accesskey", "highlightable"];
   }
 
   attributeChangedCallback(name, oldValue, newValue) {
     if (!this.isConnectedAndReady || oldValue == newValue) {
@@ -115,24 +137,33 @@ class MozTextLabel extends MozElementMix
   }
 
   get href() {
     return this.getAttribute("href");
   }
 
   // This is used to match the rendering of accesskeys from nsTextBoxFrame.cpp (i.e. when the
   // label uses [value]). So this is just for when we have textContent.
-  formatAccessKey() {
+  formatAccessKey(force) {
     // Skip doing any DOM manipulation whenever possible:
     let accessKey = this.accessKey;
     if (!gUnderlineAccesskey || this._lastFormattedAccessKey == accessKey || !this.textContent || this.isHiddenHighlightable) {
       return;
     }
+
+    // Special case for hidden labels, wait to render them until idle:
+    if (!force && this.closest("groupbox[hidden]")) {
+      idleLabelsToRender.add(this);
+      idleRenderLabels();
+      return;
+    }
+
     this._lastFormattedAccessKey = accessKey;
 
+
     if (!this.accessKeyParens) {
       this.accessKeyParens = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
       this.appendChild(this.accessKeyParens);
     }
 
     var afterLabel = this.accessKeyParens;
     afterLabel.textContent = "";
 
