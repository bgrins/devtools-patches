# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  ad7c97f1cb136438ccd48797eed2e3f02f441132
Make observer a field instead adding the observer directly on the node

diff --git a/browser/components/search/content/search.xml b/browser/components/search/content/search.xml
--- a/browser/components/search/content/search.xml
+++ b/browser/components/search/content/search.xml
@@ -56,22 +56,22 @@
           <xul:image class="search-go-button urlbar-icon" hidden="true"
                      anonid="search-go-button"
                      onclick="handleSearchCommand(event);"
                      tooltiptext="&contentSearchSubmit.tooltip;"/>
         </xul:hbox>
       </xul:textbox>
     </content>
 
-    <implementation implements="nsIObserver">
+    <implementation>
       <constructor><![CDATA[
         if (this.parentNode.parentNode.localName == "toolbarpaletteitem")
           return;
 
-        Services.obs.addObserver(this, "browser-search-engine-modified");
+        Services.obs.addObserver(this.observer, "browser-search-engine-modified");
 
         this._initialized = true;
 
         (window.delayedStartupPromise || Promise.resolve()).then(() => {
           window.requestIdleCallback(() => {
             Services.search.init(aStatus => {
               // Bail out if the binding's been destroyed
               if (!this._initialized)
@@ -108,17 +108,17 @@
         this.destroy();
       ]]></destructor>
 
       <method name="destroy">
         <body><![CDATA[
         if (this._initialized) {
           this._initialized = false;
 
-          Services.obs.removeObserver(this, "browser-search-engine-modified");
+          Services.obs.removeObserver(this.observer, "browser-search-engine-modified");
         }
 
         // Make sure to break the cycle from _textbox to us. Otherwise we leak
         // the world. But make sure it's actually pointing to us.
         // Also make sure the textbox has ever been constructed, otherwise the
         // _textbox getter will cause the textbox constructor to run, add an
         // observer, and leak the world too.
         if (this._textboxInitialized && this._textbox.mController.input == this)
@@ -132,16 +132,28 @@
           "anonid", "searchbar-stringbundle");</field>
       <field name="_textboxInitialized">false</field>
       <field name="_textbox">document.getAnonymousElementByAttribute(this,
           "anonid", "searchbar-textbox");</field>
       <field name="_engines">null</field>
       <field name="FormHistory" readonly="true">
         (ChromeUtils.import("resource://gre/modules/FormHistory.jsm", {})).FormHistory;
       </field>
+      <field name="observer">({
+        observe: (aEngine, aTopic, aVerb) => {
+          if (aTopic == "browser-search-engine-modified") {
+            // Make sure the engine list is refetched next time it's needed
+            this._engines = null;
+
+            // Update the popup header and update the display after any modification.
+            this._textbox.popup.updateHeader();
+            this.updateDisplay();
+          }
+        }
+      })</field>
 
       <property name="engines" readonly="true">
         <getter><![CDATA[
           if (!this._engines)
             this._engines = Services.search.getVisibleEngines();
           return this._engines;
         ]]></getter>
       </property>
@@ -173,32 +185,16 @@
       </method>
 
       <method name="select">
         <body><![CDATA[
           this._textbox.select();
         ]]></body>
       </method>
 
-      <method name="observe">
-        <parameter name="aEngine"/>
-        <parameter name="aTopic"/>
-        <parameter name="aVerb"/>
-        <body><![CDATA[
-          if (aTopic == "browser-search-engine-modified") {
-            // Make sure the engine list is refetched next time it's needed
-            this._engines = null;
-
-            // Update the popup header and update the display after any modification.
-            this._textbox.popup.updateHeader();
-            this.updateDisplay();
-          }
-        ]]></body>
-      </method>
-
       <method name="setIcon">
         <parameter name="element"/>
         <parameter name="uri"/>
         <body><![CDATA[
           element.setAttribute("src", uri);
         ]]></body>
       </method>
 
