# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  d885f3e6cf5ac6241ee85569456687d4de86c451

diff --git a/browser/base/content/test/webrtc/head.js b/browser/base/content/test/webrtc/head.js
--- a/browser/base/content/test/webrtc/head.js
+++ b/browser/base/content/test/webrtc/head.js
@@ -322,22 +322,27 @@ function promiseNoPopupNotification(aNam
 const kActionAlways = 1;
 const kActionDeny = 2;
 const kActionNever = 3;
 
 function activateSecondaryAction(aAction) {
   let notification = PopupNotifications.panel.firstElementChild;
   switch (aAction) {
     case kActionNever:
-      notification.checkbox.setAttribute("checked", true); // fallthrough
+      if (!notification.checkbox.checked) {
+        notification.checkbox.click();
+      }
+      // fallthrough
     case kActionDeny:
       notification.secondaryButton.click();
       break;
     case kActionAlways:
-      notification.checkbox.setAttribute("checked", true);
+      if (!notification.checkbox.checked) {
+        notification.checkbox.click();
+      }
       notification.button.click();
       break;
   }
 }
 
 function getMediaCaptureState() {
   return new Promise(resolve => {
     let mm = _mm();
diff --git a/toolkit/modules/PopupNotifications.jsm b/toolkit/modules/PopupNotifications.jsm
--- a/toolkit/modules/PopupNotifications.jsm
+++ b/toolkit/modules/PopupNotifications.jsm
@@ -918,21 +918,21 @@ PopupNotifications.prototype = {
           popupnotification.setAttribute("dropmarkerhidden", "true");
         }
       } else {
         popupnotification.setAttribute("secondarybuttonhidden", "true");
         popupnotification.setAttribute("dropmarkerhidden", "true");
       }
 
       let checkbox = n.options.checkbox;
+      let checked = false;
       if (checkbox && checkbox.label) {
-        let checked = n._checkboxChecked != null ? n._checkboxChecked : !!checkbox.checked;
+        checked = n._checkboxChecked != null ? n._checkboxChecked : !!checkbox.checked;
 
         popupnotification.setAttribute("checkboxhidden", "false");
-        popupnotification.setAttribute("checkboxchecked", checked);
         popupnotification.setAttribute("checkboxlabel", checkbox.label);
 
         popupnotification.setAttribute("checkboxcommand", "PopupNotifications._onCheckboxCommand(event);");
 
         if (checked) {
           this._setNotificationUIState(popupnotification, checkbox.checkedState);
         } else {
           this._setNotificationUIState(popupnotification, checkbox.uncheckedState);
@@ -943,16 +943,17 @@ PopupNotifications.prototype = {
       }
 
       this.panel.appendChild(popupnotification);
 
       // The popupnotification may be hidden if we got it from the chrome
       // document rather than creating it ad hoc.
       popupnotification.show();
 
+      popupnotification.checkbox.checked = checked;
       popupnotification.menupopup.textContent = "";
       popupnotification.menupopup.append(...menuitems);
     }, this);
   },
 
   _setNotificationUIState(notification, state = {}) {
     if (state.disableMainAction ||
         notification.hasAttribute("invalidselection")) {
