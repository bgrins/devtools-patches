# vim: se ft=diff :
# HG changeset patch
# User Gabriel Luong <gabriel.luong@gmail.com>
# Date 2015-09-25 03:07
Bug 1132557 - Part 11: Scratchpad should use capture on the paste event r=bgrins

diff --git a/devtools/client/scratchpad/scratchpad.js b/devtools/client/scratchpad/scratchpad.js
--- a/devtools/client/scratchpad/scratchpad.js
+++ b/devtools/client/scratchpad/scratchpad.js
@@ -1727,17 +1727,17 @@ var Scratchpad = {
       // Keep a reference to the bound version for use in onUnload.
       this.updateStatusBar = Scratchpad.updateStatusBar.bind(this);
       this.editor.on("cursorActivity", this.updateStatusBar);
       let okstring = this.strings.GetStringFromName("selfxss.okstring");
       let msg = this.strings.formatStringFromName("selfxss.msg", [okstring], 1);
       this._onPaste = WebConsoleUtils.pasteHandlerGen(this.editor.container.contentDocument.body,
                                                       document.querySelector('#scratchpad-notificationbox'),
                                                       msg, okstring);
-      editorElement.addEventListener("paste", this._onPaste);
+      editorElement.addEventListener("paste", this._onPaste, true);
       editorElement.addEventListener("drop", this._onPaste);
       this.editor.on("saveRequested", () => this.saveFile());
       this.editor.focus();
       this.editor.setCursor({ line: lines.length, ch: lines.pop().length });
 
       if (state)
         this.dirty = !state.saved;
 
@@ -1803,17 +1803,17 @@ var Scratchpad = {
       this.gBrowser.selectedBrowser.removeEventListener("load",
           this._reloadAndRunEvent, true);
     }
 
     PreferenceObserver.uninit();
     CloseObserver.uninit();
     if (this._onPaste) {
       let editorElement = document.querySelector("#scratchpad-editor");
-      editorElement.removeEventListener("paste", this._onPaste);
+      editorElement.removeEventListener("paste", this._onPaste, true);
       editorElement.removeEventListener("drop", this._onPaste);
       this._onPaste = null;
     }
     this.editor.off("change", this._onChanged);
     this.editor.off("cursorActivity", this.updateStatusBar);
     this.editor.destroy();
     this.editor = null;
 
