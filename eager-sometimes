# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  ea5777bca5979a100a27bd95ff7802fca5b5994b

diff --git a/toolkit/content/widgets/menu.js b/toolkit/content/widgets/menu.js
--- a/toolkit/content/widgets/menu.js
+++ b/toolkit/content/widgets/menu.js
@@ -224,16 +224,40 @@ class MozMenuItem extends MozMenuItemBas
     } else if (this.isIconic) {
       this.append(this.constructor.iconicFragment.cloneNode(true));
     } else {
       this.append(this.constructor.plainFragment.cloneNode(true));
     }
 
     this.initializeAttributeInheritance();
   }
+
+  get isInHiddenMenupopup() {
+    return this.matches("menupopup:not([hasbeenopened]) menuitem");
+  }
+
+  connectedCallback() {
+    // On OSX we will have a bunch of menus in the hidden window. They get converted
+    // into native menus based on the host attributes, so the inner DOM doesn't need
+    // to be created.
+    if (isHiddenWindow) {
+      return;
+    }
+
+    if (this.delayConnectedCallback()) {
+      return;
+    }
+
+    // Wait until we are going to be visible or required for sizing a popup.
+    if (this.isInHiddenMenupopup) {
+      return;
+    }
+
+    this.render();
+  }
 }
 
 customElements.define("menuitem", MozMenuItem);
 
 const isHiddenWindow = document.documentURI == "chrome://browser/content/hiddenWindow.xul";
 
 class MozMenu extends MozMenuBaseMixin(MozElements.MozElementMixin(XULMenuElement)) {
   static get inheritedAttributes() {
