# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  4e08c3a92dcd99d4c5b527bab0f1f11f21ab8851
Moves documentReadyForIdle into prototype preview on XULDocument

diff --git a/devtools/client/webconsole/test/mochitest/browser_console_consolejsm_output.js b/devtools/client/webconsole/test/mochitest/browser_console_consolejsm_output.js
--- a/devtools/client/webconsole/test/mochitest/browser_console_consolejsm_output.js
+++ b/devtools/client/webconsole/test/mochitest/browser_console_consolejsm_output.js
@@ -43,16 +43,18 @@ add_task(async function testCategoryLogs
   await checkMessageExists(hud, "bug851231-info");
   await checkMessageExists(hud, "bug851231-warn");
   await checkMessageExists(hud, "bug851231-error");
   await checkMessageExists(hud, "bug851231-debug");
   await checkMessageExists(hud, "XULDocument");
   await checkMessageExists(hud, "console.trace()");
   await checkMessageExists(hud, "foobarTimer");
 
+  await new Promise(r=>r);
+
   hud.ui.clearOutput(true);
   await HUDService.toggleBrowserConsole();
 });
 
 add_task(async function testFilter() {
   const consoleStorage = Cc["@mozilla.org/consoleAPI-storage;1"];
   const storage = consoleStorage.getService(Ci.nsIConsoleAPIStorage);
   storage.clearEvents();
diff --git a/devtools/server/actors/object.js b/devtools/server/actors/object.js
--- a/devtools/server/actors/object.js
+++ b/devtools/server/actors/object.js
@@ -348,16 +348,19 @@ const proto = {
     if (isArray(this.obj) || ["Object", "String"].includes(this.obj.class)) {
       obj = obj.proto;
       level++;
     }
 
     while (obj && DevToolsUtils.isSafeDebuggerObject(obj)) {
       const getters = this._findSafeGetters(obj);
       for (const name of getters) {
+        if (name === "documentReadyForIdle") {
+          console.log("XXX - found documentReadyForIdle", name in safeGetterValues, obj, this.obj, ownProperties.includes(name))
+        }
         // Avoid overwriting properties from prototypes closer to this.obj. Also
         // avoid providing safeGetterValues from prototypes if property |name|
         // is already defined as an own property.
         if (name in safeGetterValues ||
             (obj != this.obj && ownProperties.includes(name))) {
           continue;
         }
 
