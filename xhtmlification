# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  9302fd8c95c05e5a5cd295dde3bbdac2d58d6256

diff --git a/browser/base/content/browser-menubar.inc b/browser/base/content/browser-menubar.inc
--- a/browser/base/content/browser-menubar.inc
+++ b/browser/base/content/browser-menubar.inc
@@ -1,630 +1,631 @@
 # -*- Mode: Java; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
-
-       <menubar id="main-menubar"
+      <box xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
+       <xul:menubar id="main-menubar"
                 onpopupshowing="if (event.target.parentNode.parentNode == this &amp;&amp;
                                     !('@mozilla.org/widget/nativemenuservice;1' in Cc))
                                   this.setAttribute('openedwithkey',
                                                     event.target.parentNode.openedWithKey);">
-            <menu id="file-menu" label="&fileMenu.label;"
+            <xul:menu id="file-menu" label="&fileMenu.label;"
                   accesskey="&fileMenu.accesskey;">
-              <menupopup id="menu_FilePopup"
+              <xul:menupopup id="menu_FilePopup"
                          onpopupshowing="updateFileMenuUserContextUIVisibility('menu_newUserContext');">
-                <menuitem id="menu_newNavigatorTab"
+                <xul:menuitem id="menu_newNavigatorTab"
                           label="&tabCmd.label;"
                           command="cmd_newNavigatorTab"
                           key="key_newNavigatorTab"
                           accesskey="&tabCmd.accesskey;"/>
-                <menu id="menu_newUserContext"
+                <xul:menu id="menu_newUserContext"
                       label="&newUserContext.label;"
                       accesskey="&newUserContext.accesskey;"
                       hidden="true">
-                  <menupopup onpopupshowing="return createUserContextMenu(event);" />
-                </menu>
-                <menuitem id="menu_newNavigator"
+                  <xul:menupopup onpopupshowing="return createUserContextMenu(event);" />
+                </xul:menu>
+                <xul:menuitem id="menu_newNavigator"
                           label="&newNavigatorCmd.label;"
                           accesskey="&newNavigatorCmd.accesskey;"
                           key="key_newNavigator"
                           command="cmd_newNavigator"/>
-                <menuitem id="menu_newPrivateWindow"
+                <xul:menuitem id="menu_newPrivateWindow"
                           label="&newPrivateWindow.label;"
                           accesskey="&newPrivateWindow.accesskey;"
                           command="Tools:PrivateBrowsing"
                           key="key_privatebrowsing"/>
-                <menuitem id="menu_openLocation"
+                <xul:menuitem id="menu_openLocation"
                           hidden="true"
                           label="&openLocationCmd.label;"
                           command="Browser:OpenLocation"
                           key="focusURLBar"/>
-                <menuitem id="menu_openFile"
+                <xul:menuitem id="menu_openFile"
                           label="&openFileCmd.label;"
                           command="Browser:OpenFile"
                           key="openFileKb"
                           accesskey="&openFileCmd.accesskey;"/>
-                <menuitem id="menu_close"
+                <xul:menuitem id="menu_close"
                           class="show-only-for-keyboard"
                           label="&closeCmd.label;"
                           key="key_close"
                           accesskey="&closeCmd.accesskey;"
                           command="cmd_close"/>
-                <menuitem id="menu_closeWindow"
+                <xul:menuitem id="menu_closeWindow"
                           class="show-only-for-keyboard"
                           hidden="true"
                           command="cmd_closeWindow"
                           key="key_closeWindow"
                           label="&closeWindow.label;"
                           accesskey="&closeWindow.accesskey;"/>
-                <menuseparator/>
-                <menuitem id="menu_savePage"
+                <xul:menuseparator/>
+                <xul:menuitem id="menu_savePage"
                           label="&savePageCmd.label;"
                           accesskey="&savePageCmd.accesskey;"
                           key="key_savePage"
                           command="Browser:SavePage"/>
-                <menuitem id="menu_sendLink"
+                <xul:menuitem id="menu_sendLink"
                           label="&emailPageCmd.label;"
                           accesskey="&emailPageCmd.accesskey;"
                           command="Browser:SendLink"/>
-                <menuseparator/>
+                <xul:menuseparator/>
 #if !defined(MOZ_WIDGET_GTK)
-                <menuitem id="menu_printSetup"
+                <xul:menuitem id="menu_printSetup"
                           label="&printSetupCmd.label;"
                           accesskey="&printSetupCmd.accesskey;"
                           command="cmd_pageSetup"/>
 #endif
 #ifndef XP_MACOSX
-                <menuitem id="menu_printPreview"
+                <xul:menuitem id="menu_printPreview"
                           label="&printPreviewCmd.label;"
                           accesskey="&printPreviewCmd.accesskey;"
                           command="cmd_printPreview"/>
 #endif
-                <menuitem id="menu_print"
+                <xul:menuitem id="menu_print"
                           label="&printCmd.label;"
                           accesskey="&printCmd.accesskey;"
                           key="printKb"
                           command="cmd_print"/>
-                <menuseparator/>
-                <menuitem id="goOfflineMenuitem"
+                <xul:menuseparator/>
+                <xul:menuitem id="goOfflineMenuitem"
                           label="&goOfflineCmd.label;"
                           accesskey="&goOfflineCmd.accesskey;"
                           type="checkbox"
                           observes="workOfflineMenuitemState"
                           oncommand="BrowserOffline.toggleOfflineStatus();"/>
-                <menuitem id="menu_FileQuitItem"
+                <xul:menuitem id="menu_FileQuitItem"
 #ifdef XP_WIN
                           label="&quitApplicationCmdWin2.label;"
                           accesskey="&quitApplicationCmdWin2.accesskey;"
 #elifdef XP_MACOSX
                           label="&quitApplicationCmdMac2.label;"
 #else
                           label="&quitApplicationCmd.label;"
                           accesskey="&quitApplicationCmd.accesskey;"
 #endif
                           key="key_quitApplication"
                           command="cmd_quitApplication"/>
-              </menupopup>
-            </menu>
+              </xul:menupopup>
+            </xul:menu>
 
-            <menu id="edit-menu" label="&editMenu.label;"
+            <xul:menu id="edit-menu" label="&editMenu.label;"
                   accesskey="&editMenu.accesskey;">
-              <menupopup id="menu_EditPopup"
+              <xul:menupopup id="menu_EditPopup"
                          onpopupshowing="updateEditUIVisibility()"
                          onpopuphidden="updateEditUIVisibility()">
-                <menuitem id="menu_undo"
+                <xul:menuitem id="menu_undo"
                           label="&undoCmd.label;"
                           key="key_undo"
                           accesskey="&undoCmd.accesskey;"
                           command="cmd_undo"/>
-                <menuitem id="menu_redo"
+                <xul:menuitem id="menu_redo"
                           label="&redoCmd.label;"
                           key="key_redo"
                           accesskey="&redoCmd.accesskey;"
                           command="cmd_redo"/>
-                <menuseparator/>
-                <menuitem id="menu_cut"
+                <xul:menuseparator/>
+                <xul:menuitem id="menu_cut"
                           label="&cutCmd.label;"
                           key="key_cut"
                           accesskey="&cutCmd.accesskey;"
                           command="cmd_cut"/>
-                <menuitem id="menu_copy"
+                <xul:menuitem id="menu_copy"
                           label="&copyCmd.label;"
                           key="key_copy"
                           accesskey="&copyCmd.accesskey;"
                           command="cmd_copy"/>
-                <menuitem id="menu_paste"
+                <xul:menuitem id="menu_paste"
                           label="&pasteCmd.label;"
                           key="key_paste"
                           accesskey="&pasteCmd.accesskey;"
                           command="cmd_paste"/>
-                <menuitem id="menu_delete"
+                <xul:menuitem id="menu_delete"
                           label="&deleteCmd.label;"
                           key="key_delete"
                           accesskey="&deleteCmd.accesskey;"
                           command="cmd_delete"/>
-                <menuseparator/>
-                <menuitem id="menu_selectAll"
+                <xul:menuseparator/>
+                <xul:menuitem id="menu_selectAll"
                           label="&selectAllCmd.label;"
                           key="key_selectAll"
                           accesskey="&selectAllCmd.accesskey;"
                           command="cmd_selectAll"/>
-                <menuseparator/>
-                <menuitem id="menu_find"
+                <xul:menuseparator/>
+                <xul:menuitem id="menu_find"
                           label="&findOnCmd.label;"
                           accesskey="&findOnCmd.accesskey;"
                           key="key_find"
                           command="cmd_find"/>
-                <menuitem id="menu_findAgain"
+                <xul:menuitem id="menu_findAgain"
                           class="show-only-for-keyboard"
                           label="&findAgainCmd.label;"
                           accesskey="&findAgainCmd.accesskey;"
                           key="key_findAgain"
                           command="cmd_findAgain"/>
-                <menuseparator hidden="true" id="textfieldDirection-separator"/>
-                <menuitem id="textfieldDirection-swap"
+                <xul:menuseparator hidden="true" id="textfieldDirection-separator"/>
+                <xul:menuitem id="textfieldDirection-swap"
                           command="cmd_switchTextDirection"
                           key="key_switchTextDirection"
                           label="&bidiSwitchTextDirectionItem.label;"
                           accesskey="&bidiSwitchTextDirectionItem.accesskey;"
                           hidden="true"/>
 #ifdef XP_UNIX
 #ifndef XP_MACOSX
-                <menuseparator/>
-                <menuitem id="menu_preferences"
+                <xul:menuseparator/>
+                <xul:menuitem id="menu_preferences"
                           label="&preferencesCmdUnix.label;"
                           accesskey="&preferencesCmdUnix.accesskey;"
                           oncommand="openPreferences(undefined, {origin: 'menubar'});"/>
 #endif
 #endif
-              </menupopup>
-            </menu>
+              </xul:menupopup>
+            </xul:menu>
 
-            <menu id="view-menu" label="&viewMenu.label;"
+            <xul:menu id="view-menu" label="&viewMenu.label;"
                   accesskey="&viewMenu.accesskey;">
-              <menupopup id="menu_viewPopup"
+              <xul:menupopup id="menu_viewPopup"
                          onpopupshowing="updateCharacterEncodingMenuState();">
-                <menu id="viewToolbarsMenu"
+                <xul:menu id="viewToolbarsMenu"
                       label="&viewToolbarsMenu.label;"
                       accesskey="&viewToolbarsMenu.accesskey;">
-                  <menupopup onpopupshowing="onViewToolbarsPopupShowing(event);">
-                    <menuseparator/>
-                    <menuitem id="menu_customizeToolbars"
+                  <xul:menupopup onpopupshowing="onViewToolbarsPopupShowing(event);">
+                    <xul:menuseparator/>
+                    <xul:menuitem id="menu_customizeToolbars"
                               label="&viewCustomizeToolbar.label;"
                               accesskey="&viewCustomizeToolbar.accesskey;"
                               command="cmd_CustomizeToolbars"/>
-                  </menupopup>
-                </menu>
-                <menu id="viewSidebarMenuMenu"
+                  </xul:menupopup>
+                </xul:menu>
+                <xul:menu id="viewSidebarMenuMenu"
                       label="&viewSidebarMenu.label;"
                       accesskey="&viewSidebarMenu.accesskey;">
-                  <menupopup id="viewSidebarMenu">
-                    <menuitem id="menu_bookmarksSidebar"
+                  <xul:menupopup id="viewSidebarMenu">
+                    <xul:menuitem id="menu_bookmarksSidebar"
                               key="viewBookmarksSidebarKb"
                               observes="viewBookmarksSidebar"/>
-                    <menuitem id="menu_historySidebar"
+                    <xul:menuitem id="menu_historySidebar"
                               key="key_gotoHistory"
                               observes="viewHistorySidebar"
                               label="&historyButton.label;"/>
-                    <menuitem id="menu_tabsSidebar"
+                    <xul:menuitem id="menu_tabsSidebar"
                               class="sync-ui-item"
                               observes="viewTabsSidebar"
                               label="&syncedTabs.sidebar.label;"/>
-                  </menupopup>
-                </menu>
-                <menuseparator/>
-                <menu id="viewFullZoomMenu" label="&fullZoom.label;"
+                  </xul:menupopup>
+                </xul:menu>
+                <xul:menuseparator/>
+                <xul:menu id="viewFullZoomMenu" label="&fullZoom.label;"
                       accesskey="&fullZoom.accesskey;"
                       onpopupshowing="FullZoom.updateMenu();">
-                  <menupopup>
-                    <menuitem id="menu_zoomEnlarge"
+                  <xul:menupopup>
+                    <xul:menuitem id="menu_zoomEnlarge"
                               key="key_fullZoomEnlarge"
                               label="&fullZoomEnlargeCmd.label;"
                               accesskey="&fullZoomEnlargeCmd.accesskey;"
                               command="cmd_fullZoomEnlarge"/>
-                    <menuitem id="menu_zoomReduce"
+                    <xul:menuitem id="menu_zoomReduce"
                               key="key_fullZoomReduce"
                               label="&fullZoomReduceCmd.label;"
                               accesskey="&fullZoomReduceCmd.accesskey;"
                               command="cmd_fullZoomReduce"/>
-                    <menuseparator/>
-                    <menuitem id="menu_zoomReset"
+                    <xul:menuseparator/>
+                    <xul:menuitem id="menu_zoomReset"
                               key="key_fullZoomReset"
                               label="&fullZoomResetCmd.label;"
                               accesskey="&fullZoomResetCmd.accesskey;"
                               command="cmd_fullZoomReset"/>
-                    <menuseparator/>
-                    <menuitem id="toggle_zoom"
+                    <xul:menuseparator/>
+                    <xul:menuitem id="toggle_zoom"
                               label="&fullZoomToggleCmd.label;"
                               accesskey="&fullZoomToggleCmd.accesskey;"
                               type="checkbox"
                               command="cmd_fullZoomToggle"
                               checked="false"/>
-                  </menupopup>
-                </menu>
-                <menu id="pageStyleMenu" label="&pageStyleMenu.label;"
+                  </xul:menupopup>
+                </xul:menu>
+                <xul:menu id="pageStyleMenu" label="&pageStyleMenu.label;"
                       accesskey="&pageStyleMenu.accesskey;" observes="isImage">
-                  <menupopup onpopupshowing="gPageStyleMenu.fillPopup(this);">
-                    <menuitem id="menu_pageStyleNoStyle"
+                  <xul:menupopup onpopupshowing="gPageStyleMenu.fillPopup(this);">
+                    <xul:menuitem id="menu_pageStyleNoStyle"
                               label="&pageStyleNoStyle.label;"
                               accesskey="&pageStyleNoStyle.accesskey;"
                               oncommand="gPageStyleMenu.disableStyle();"
                               type="radio"/>
-                    <menuitem id="menu_pageStylePersistentOnly"
+                    <xul:menuitem id="menu_pageStylePersistentOnly"
                               label="&pageStylePersistentOnly.label;"
                               accesskey="&pageStylePersistentOnly.accesskey;"
                               oncommand="gPageStyleMenu.switchStyleSheet('');"
                               type="radio"
                               checked="true"/>
-                    <menuseparator/>
-                  </menupopup>
-                </menu>
-                <menu id="charsetMenu"
+                    <xul:menuseparator/>
+                  </xul:menupopup>
+                </xul:menu>
+                <xul:menu id="charsetMenu"
                     label="&charsetMenu2.label;"
                     accesskey="&charsetMenu2.accesskey;"
                     oncommand="BrowserSetForcedCharacterSet(event.target.getAttribute('charset'));"
                     onpopupshowing="CharsetMenu.build(event.target); UpdateCurrentCharset(this);">
-                  <menupopup>
-                  </menupopup>
-                </menu>
-                <menuseparator/>
+                  <xul:menupopup>
+                  </xul:menupopup>
+                </xul:menu>
+                <xul:menuseparator/>
 #ifdef XP_MACOSX
-                <menuitem id="enterFullScreenItem"
+                <xul:menuitem id="enterFullScreenItem"
                           accesskey="&enterFullScreenCmd.accesskey;"
                           label="&enterFullScreenCmd.label;"
                           key="key_fullScreen">
                   <observes element="View:FullScreen" attribute="oncommand"/>
                   <observes element="View:FullScreen" attribute="disabled"/>
-                </menuitem>
-                <menuitem id="exitFullScreenItem"
+                </xul:menuitem>
+                <xul:menuitem id="exitFullScreenItem"
                           accesskey="&exitFullScreenCmd.accesskey;"
                           label="&exitFullScreenCmd.label;"
                           key="key_fullScreen"
                           hidden="true">
                   <observes element="View:FullScreen" attribute="oncommand"/>
                   <observes element="View:FullScreen" attribute="disabled"/>
-                </menuitem>
+                </xul:menuitem>
 #else
-                <menuitem id="fullScreenItem"
+                <xul:menuitem id="fullScreenItem"
                           accesskey="&fullScreenCmd.accesskey;"
                           label="&fullScreenCmd.label;"
                           key="key_fullScreen"
                           type="checkbox"
                           observes="View:FullScreen"/>
 #endif
-                <menuitem id="menu_readerModeItem"
+                <xul:menuitem id="menu_readerModeItem"
                           observes="View:ReaderView"
                           key="key_toggleReaderMode"
                           hidden="true"/>
-                <menuitem id="menu_showAllTabs"
+                <xul:menuitem id="menu_showAllTabs"
                           hidden="true"
                           accesskey="&showAllTabsCmd.accesskey;"
                           label="&showAllTabsCmd.label;"
                           command="Browser:ShowAllTabs"
                           key="key_showAllTabs"/>
-                <menuseparator hidden="true" id="documentDirection-separator"/>
-                <menuitem id="documentDirection-swap"
+                <xul:menuseparator hidden="true" id="documentDirection-separator"/>
+                <xul:menuitem id="documentDirection-swap"
                           hidden="true"
                           label="&bidiSwitchPageDirectionItem.label;"
                           accesskey="&bidiSwitchPageDirectionItem.accesskey;"
                           oncommand="gBrowser.selectedBrowser
                                              .messageManager
                                              .sendAsyncMessage('SwitchDocumentDirection');"/>
-              </menupopup>
-            </menu>
+              </xul:menupopup>
+            </xul:menu>
 
-            <menu id="history-menu"
+            <xul:menu id="history-menu"
                   label="&historyMenu.label;"
                   accesskey="&historyMenu.accesskey;">
-              <menupopup id="goPopup"
+              <xul:menupopup id="goPopup"
 #ifndef XP_MACOSX
                          placespopup="true"
 #endif
                          oncommand="this.parentNode._placesView._onCommand(event);"
                          onclick="checkForMiddleClick(this, event);"
                          onpopupshowing="if (!this.parentNode._placesView)
                                            new HistoryMenu(event);"
                          tooltip="bhTooltip"
                          popupsinherittooltip="true">
-                <menuitem id="menu_showAllHistory"
+                <xul:menuitem id="menu_showAllHistory"
                           label="&showAllHistoryCmd2.label;"
 #ifndef XP_MACOSX
                           key="showAllHistoryKb"
 #endif
                           command="Browser:ShowAllHistory"/>
-                <menuitem id="sanitizeItem"
+                <xul:menuitem id="sanitizeItem"
                           label="&clearRecentHistory.label;"
                           key="key_sanitize"
                           command="Tools:Sanitize"/>
-                <menuseparator id="sanitizeSeparator"/>
-                <menuitem id="sync-tabs-menuitem"
+                <xul:menuseparator id="sanitizeSeparator"/>
+                <xul:menuitem id="sync-tabs-menuitem"
                           label="&syncTabsMenu3.label;"
                           oncommand="BrowserOpenSyncTabs();"
                           hidden="true"/>
-                <menuitem id="historyRestoreLastSession"
+                <xul:menuitem id="historyRestoreLastSession"
                           label="&historyRestoreLastSession.label;"
                           command="Browser:RestoreLastSession"/>
-                <menuitem id="hiddenTabsMenu"
+                <xul:menuitem id="hiddenTabsMenu"
                           label="&hiddenTabs.label;"
                           oncommand="gTabsPanel.showHiddenTabsPanel();"
                           hidden="true"/>
-                <menu id="historyUndoMenu"
+                <xul:menu id="historyUndoMenu"
                       label="&historyUndoMenu.label;"
                       disabled="true">
-                  <menupopup id="historyUndoPopup"
+                  <xul:menupopup id="historyUndoPopup"
 #ifndef XP_MACOSX
                              placespopup="true"
 #endif
                              onpopupshowing="document.getElementById('history-menu')._placesView.populateUndoSubmenu();"/>
-                </menu>
-                <menu id="historyUndoWindowMenu"
+                </xul:menu>
+                <xul:menu id="historyUndoWindowMenu"
                       label="&historyUndoWindowMenu.label;"
                       disabled="true">
-                  <menupopup id="historyUndoWindowPopup"
+                  <xul:menupopup id="historyUndoWindowPopup"
 #ifndef XP_MACOSX
                              placespopup="true"
 #endif
                              onpopupshowing="document.getElementById('history-menu')._placesView.populateUndoWindowSubmenu();"/>
-                </menu>
-                <menuseparator id="startHistorySeparator"
+                </xul:menu>
+                <xul:menuseparator id="startHistorySeparator"
                                class="hide-if-empty-places-result"/>
-              </menupopup>
-            </menu>
+              </xul:menupopup>
+            </xul:menu>
 
-  <menu id="bookmarksMenu"
+  <xul:menu id="bookmarksMenu"
         label="&bookmarksMenu.label;"
         accesskey="&bookmarksMenu.accesskey;"
         ondragenter="PlacesMenuDNDHandler.onDragEnter(event);"
         ondragover="PlacesMenuDNDHandler.onDragOver(event);"
         ondrop="PlacesMenuDNDHandler.onDrop(event);">
-    <menupopup id="bookmarksMenuPopup"
+    <xul:menupopup id="bookmarksMenuPopup"
 #ifndef XP_MACOSX
                placespopup="true"
 #endif
                context="placesContext"
                openInTabs="children"
                onmouseup="BookmarksEventHandler.onMouseUp(event);"
                oncommand="BookmarksEventHandler.onCommand(event);"
                onclick="BookmarksEventHandler.onClick(event, this.parentNode._placesView);"
                onpopupshowing="BookmarkingUI.onMainMenuPopupShowing(event);
                                if (!this.parentNode._placesView)
                                  new PlacesMenu(event, `place:parent=${PlacesUtils.bookmarks.menuGuid}`);"
                tooltip="bhTooltip" popupsinherittooltip="true">
-      <menuitem id="bookmarksShowAll"
+      <xul:menuitem id="bookmarksShowAll"
                 label="&showAllBookmarks2.label;"
                 command="Browser:ShowAllBookmarks"
                 key="manBookmarkKb"/>
-      <menuseparator id="organizeBookmarksSeparator"/>
-      <menuitem id="menu_bookmarkThisPage"
+      <xul:menuseparator id="organizeBookmarksSeparator"/>
+      <xul:menuitem id="menu_bookmarkThisPage"
                 command="Browser:AddBookmarkAs"
                 observes="bookmarkThisPageBroadcaster"
                 key="addBookmarkAsKb"/>
-      <menuitem id="subscribeToPageMenuitem"
+      <xul:menuitem id="subscribeToPageMenuitem"
 #ifndef XP_MACOSX
                 class="menuitem-iconic"
 #endif
                 label="&subscribeToPageMenuitem.label;"
                 oncommand="return FeedHandler.subscribeToFeed(null, event);"
                 onclick="checkForMiddleClick(this, event);"
                 observes="singleFeedMenuitemState"/>
-      <menu id="subscribeToPageMenupopup"
+      <xul:menu id="subscribeToPageMenupopup"
 #ifndef XP_MACOSX
             class="menu-iconic"
 #endif
             label="&subscribeToPageMenupopup.label;"
             observes="multipleFeedsMenuState">
-        <menupopup id="subscribeToPageSubmenuMenupopup"
+        <xul:menupopup id="subscribeToPageSubmenuMenupopup"
                    onpopupshowing="return FeedHandler.buildFeedList(event.target);"
                    oncommand="return FeedHandler.subscribeToFeed(null, event);"
                    onclick="checkForMiddleClick(this, event);"/>
-      </menu>
-      <menuitem id="menu_bookmarkAllTabs"
+      </xul:menu>
+      <xul:menuitem id="menu_bookmarkAllTabs"
                 label="&addCurPagesCmd.label;"
                 class="show-only-for-keyboard"
                 command="Browser:BookmarkAllTabs"
                 key="bookmarkAllTabsKb"/>
-      <menuseparator id="bookmarksToolbarSeparator"/>
-      <menu id="bookmarksToolbarFolderMenu"
+      <xul:menuseparator id="bookmarksToolbarSeparator"/>
+      <xul:menu id="bookmarksToolbarFolderMenu"
             class="menu-iconic bookmark-item"
             label="&personalbarCmd.label;"
             container="true">
-        <menupopup id="bookmarksToolbarFolderPopup"
+        <xul:menupopup id="bookmarksToolbarFolderPopup"
 #ifndef XP_MACOSX
                    placespopup="true"
 #endif
                    context="placesContext"
                    onpopupshowing="if (!this.parentNode._placesView)
                                      new PlacesMenu(event, `place:parent=${PlacesUtils.bookmarks.toolbarGuid}`);"/>
-      </menu>
-      <menu id="menu_unsortedBookmarks"
+      </xul:menu>
+      <xul:menu id="menu_unsortedBookmarks"
             class="menu-iconic bookmark-item"
             label="&otherBookmarksCmd.label;"
             container="true">
-        <menupopup id="otherBookmarksFolderPopup"
+        <xul:menupopup id="otherBookmarksFolderPopup"
 #ifndef XP_MACOSX
                    placespopup="true"
 #endif
                    context="placesContext"
                    onpopupshowing="if (!this.parentNode._placesView)
                                      new PlacesMenu(event, `place:parent=${PlacesUtils.bookmarks.unfiledGuid}`);"/>
-      </menu>
-      <menu id="menu_mobileBookmarks"
+      </xul:menu>
+      <xul:menu id="menu_mobileBookmarks"
             class="menu-iconic bookmark-item"
             label="&mobileBookmarksCmd.label;"
             hidden="true"
             container="true">
-        <menupopup id="mobileBookmarksFolderPopup"
+        <xul:menupopup id="mobileBookmarksFolderPopup"
 #ifndef XP_MACOSX
                    placespopup="true"
 #endif
                    context="placesContext"
                    onpopupshowing="if (!this.parentNode._placesView)
                                      new PlacesMenu(event, `place:parent=${PlacesUtils.bookmarks.mobileGuid}`);"/>
-      </menu>
-      <menuseparator id="bookmarksMenuItemsSeparator"/>
+      </xul:menu>
+      <xul:menuseparator id="bookmarksMenuItemsSeparator"/>
       <!-- Bookmarks menu items -->
-    </menupopup>
-  </menu>
+    </xul:menupopup>
+  </xul:menu>
 
-            <menu id="tools-menu"
+            <xul:menu id="tools-menu"
                   label="&toolsMenu.label;"
                   accesskey="&toolsMenu.accesskey;">
-              <menupopup id="menu_ToolsPopup">
-              <menuitem id="menu_openDownloads"
+              <xul:menupopup id="menu_ToolsPopup">
+              <xul:menuitem id="menu_openDownloads"
                         label="&downloads.label;"
                         accesskey="&downloads.accesskey;"
                         key="key_openDownloads"
                         command="Tools:Downloads"/>
-              <menuitem id="menu_openAddons"
+              <xul:menuitem id="menu_openAddons"
                         label="&addons.label;"
                         accesskey="&addons.accesskey;"
                         key="key_openAddons"
                         command="Tools:Addons"/>
 
               <!-- only one of sync-setup, sync-unverifieditem, sync-syncnowitem or sync-reauthitem will be showing at once -->
-              <menuitem id="sync-setup"
+              <xul:menuitem id="sync-setup"
                         class="sync-ui-item"
                         label="&syncSignIn.label;"
                         accesskey="&syncSignIn.accesskey;"
                         observes="sync-setup-state"
                         oncommand="gSync.openPrefs('menubar')"/>
-              <menuitem id="sync-unverifieditem"
+              <xul:menuitem id="sync-unverifieditem"
                         class="sync-ui-item"
                         label="&syncSignIn.label;"
                         accesskey="&syncSignIn.accesskey;"
                         observes="sync-unverified-state"
                         oncommand="gSync.openPrefs('menubar')"/>
-              <menuitem id="sync-syncnowitem"
+              <xul:menuitem id="sync-syncnowitem"
                         class="sync-ui-item"
                         label="&syncSyncNowItem.label;"
                         accesskey="&syncSyncNowItem.accesskey;"
                         observes="sync-syncnow-state"
                         oncommand="gSync.doSync(event);"/>
-              <menuitem id="sync-reauthitem"
+              <xul:menuitem id="sync-reauthitem"
                         class="sync-ui-item"
                         label="&syncReAuthItem.label;"
                         accesskey="&syncReAuthItem.accesskey;"
                         observes="sync-reauth-state"
                         oncommand="gSync.openSignInAgainPage('menubar');"/>
-              <menuseparator id="devToolsSeparator"/>
-              <menu id="webDeveloperMenu"
+              <xul:menuseparator id="devToolsSeparator"/>
+              <xul:menu id="webDeveloperMenu"
                     label="&webDeveloperMenu.label;"
                     accesskey="&webDeveloperMenu.accesskey;">
-                <menupopup id="menuWebDeveloperPopup">
-                  <menuitem id="menu_pageSource"
+                <xul:menupopup id="menuWebDeveloperPopup">
+                  <xul:menuitem id="menu_pageSource"
                             observes="devtoolsMenuBroadcaster_PageSource"
                             accesskey="&pageSourceCmd.accesskey;"/>
-                </menupopup>
-              </menu>
-              <menuitem id="menu_pageInfo"
+                </xul:menupopup>
+              </xul:menu>
+              <xul:menuitem id="menu_pageInfo"
                         accesskey="&pageInfoCmd.accesskey;"
                         label="&pageInfoCmd.label;"
 #ifndef XP_WIN
                         key="key_viewInfo"
 #endif
                         command="View:PageInfo"/>
 #ifndef XP_UNIX
-              <menuseparator id="prefSep"/>
-              <menuitem id="menu_preferences"
+              <xul:menuseparator id="prefSep"/>
+              <xul:menuitem id="menu_preferences"
                         label="&preferencesCmd2.label;"
                         accesskey="&preferencesCmd2.accesskey;"
                         oncommand="openPreferences(undefined, {origin: 'menubar'});"/>
 #endif
 #ifdef MOZ_DEBUG
-              <menuitem label="&ldbCmd.label;"
+              <xul:menuitem label="&ldbCmd.label;"
                         accesskey="&ldbCmd.accesskey;"
                         oncommand="toOpenWindowByType('mozapp:layoutdebug',
                                           'chrome://layoutdebug/content/');"/>
 #endif
 #ifdef XP_MACOSX
 <!-- nsMenuBarX hides these and uses them to build the Application menu. -->
-              <menuitem id="menu_preferences" label="&preferencesCmdMac.label;" key="key_preferencesCmdMac" oncommand="openPreferences(undefined, {origin: 'commandLineLegacy'});"/>
-              <menuitem id="menu_mac_services" label="&servicesMenuMac.label;"/>
-              <menuitem id="menu_mac_hide_app" label="&hideThisAppCmdMac2.label;" key="key_hideThisAppCmdMac"/>
-              <menuitem id="menu_mac_hide_others" label="&hideOtherAppsCmdMac.label;" key="key_hideOtherAppsCmdMac"/>
-              <menuitem id="menu_mac_show_all" label="&showAllAppsCmdMac.label;"/>
+              <xul:menuitem id="menu_preferences" label="&preferencesCmdMac.label;" key="key_preferencesCmdMac" oncommand="openPreferences(undefined, {origin: 'commandLineLegacy'});"/>
+              <xul:menuitem id="menu_mac_services" label="&servicesMenuMac.label;"/>
+              <xul:menuitem id="menu_mac_hide_app" label="&hideThisAppCmdMac2.label;" key="key_hideThisAppCmdMac"/>
+              <xul:menuitem id="menu_mac_hide_others" label="&hideOtherAppsCmdMac.label;" key="key_hideOtherAppsCmdMac"/>
+              <xul:menuitem id="menu_mac_show_all" label="&showAllAppsCmdMac.label;"/>
 #endif
-              </menupopup>
-            </menu>
+              </xul:menupopup>
+            </xul:menu>
 #ifdef XP_MACOSX
-            <menu id="windowMenu"
+            <xul:menu id="windowMenu"
                   label="&windowMenu.label;"
                   onpopupshowing="macWindowMenuDidShow();"
                   onpopuphidden="macWindowMenuDidHide();"
                   >
-                <menupopup id="windowPopup">
-                    <menuitem command="minimizeWindow" key="key_minimizeWindow"/>
-                    <menuitem command="zoomWindow"/>
+                <xul:menupopup id="windowPopup">
+                    <xul:menuitem command="minimizeWindow" key="key_minimizeWindow"/>
+                    <xul:menuitem command="zoomWindow"/>
                     <!-- decomment when "BringAllToFront" is implemented
-                        <menuseparator/>
-                        <menuitem label="&bringAllToFront.label;" disabled="true"/> -->
-                    <menuseparator id="sep-window-list"/>
-                </menupopup>
-            </menu>
+                        <xul:menuseparator/>
+                        <xul:menuitem label="&bringAllToFront.label;" disabled="true"/> -->
+                    <xul:menuseparator id="sep-window-list"/>
+                </xul:menupopup>
+            </xul:menu>
 #endif
-            <menu id="helpMenu"
+            <xul:menu id="helpMenu"
 #ifdef XP_WIN
                   label="&helpMenuWin.label;"
                   accesskey="&helpMenuWin.accesskey;"
 #else
                   label="&helpMenu.label;"
                   accesskey="&helpMenu.accesskey;"
 #endif
                   >
-              <menupopup id="menu_HelpPopup" onpopupshowing="buildHelpMenu();">
-                <menuitem id="menu_openHelp"
+              <xul:menupopup id="menu_HelpPopup" onpopupshowing="buildHelpMenu();">
+                <xul:menuitem id="menu_openHelp"
                           oncommand="openHelpLink('firefox-help')"
                           onclick="checkForMiddleClick(this, event);"
                           label="&productHelp2.label;"
                           accesskey="&productHelp2.accesskey;"
 #ifdef XP_MACOSX
                           key="key_openHelpMac"/>
 #else
                           />
 #endif
-                <menuitem id="menu_openTour"
+                <xul:menuitem id="menu_openTour"
                           oncommand="openTourPage();"
                           label="&helpShowTour2.label;"
                           accesskey="&helpShowTour2.accesskey;"/>
-                <menuitem id="menu_keyboardShortcuts"
+                <xul:menuitem id="menu_keyboardShortcuts"
                           oncommand="openHelpLink('keyboard-shortcuts')"
                           onclick="checkForMiddleClick(this, event);"
                           label="&helpKeyboardShortcuts.label;"
                           accesskey="&helpKeyboardShortcuts.accesskey;"/>
-                <menuitem id="troubleShooting"
+                <xul:menuitem id="troubleShooting"
                           accesskey="&helpTroubleshootingInfo.accesskey;"
                           label="&helpTroubleshootingInfo.label;"
                           oncommand="openTroubleshootingPage()"
                           onclick="checkForMiddleClick(this, event);"/>
-                <menuitem id="feedbackPage"
+                <xul:menuitem id="feedbackPage"
                           accesskey="&helpFeedbackPage.accesskey;"
                           label="&helpFeedbackPage.label;"
                           oncommand="openFeedbackPage()"
                           onclick="checkForMiddleClick(this, event);"/>
-                <menuitem id="helpSafeMode"
+                <xul:menuitem id="helpSafeMode"
                           accesskey="&helpSafeMode.accesskey;"
                           label="&helpSafeMode.label;"
                           stopaccesskey="&helpSafeMode.stop.accesskey;"
                           stoplabel="&helpSafeMode.stop.label;"
                           oncommand="safeModeRestart();"/>
-                <menuitem id="menu_HelpPopup_reportPhishingtoolmenu"
+                <xul:menuitem id="menu_HelpPopup_reportPhishingtoolmenu"
                           label="&reportDeceptiveSiteMenu.title;"
                           accesskey="&reportDeceptiveSiteMenu.accesskey;"
                           observes="reportPhishingBroadcaster"
                           oncommand="openUILink(gSafeBrowsing.getReportURL('Phish'), event, {triggeringPrincipal: Services.scriptSecurityManager.createNullPrincipal({})});"
                           onclick="checkForMiddleClick(this, event);"
                           hidden="true"/>
-                <menuitem id="menu_HelpPopup_reportPhishingErrortoolmenu"
+                <xul:menuitem id="menu_HelpPopup_reportPhishingErrortoolmenu"
                           label="&safeb.palm.notdeceptive.label;"
                           accesskey="&safeb.palm.notdeceptive.accesskey;"
                           observes="reportPhishingErrorBroadcaster"
                           oncommand="ReportFalseDeceptiveSite();"
                           onclick="checkForMiddleClick(this, event);"
                           hidden="true"/>
-                <menuseparator id="aboutSeparator"/>
-                <menuitem id="aboutName"
+                <xul:menuseparator id="aboutSeparator"/>
+                <xul:menuitem id="aboutName"
                           accesskey="&aboutProduct2.accesskey;"
                           label="&aboutProduct2.label;"
                           oncommand="openAboutDialog();"/>
-              </menupopup>
-          </menu>
-        </menubar>
+              </xul:menupopup>
+          </xul:menu>
+        </xul:menubar>
+      </box>
\ No newline at end of file
diff --git a/browser/base/content/browser-sets.inc b/browser/base/content/browser-sets.inc
--- a/browser/base/content/browser-sets.inc
+++ b/browser/base/content/browser-sets.inc
@@ -3,204 +3,204 @@
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
 #ifdef XP_UNIX
 #ifndef XP_MACOSX
 #define XP_GNOME 1
 #endif
 #endif
-
-  <stringbundleset id="stringbundleset">
-    <stringbundle id="bundle_brand" src="chrome://branding/locale/brand.properties"/>
-    <stringbundle id="bundle_shell" src="chrome://browser/locale/shellservice.properties"/>
-    <stringbundle id="bundle_preferences" src="chrome://browser/locale/preferences/preferences.properties"/>
-  </stringbundleset>
+<box xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
+  <xul:stringbundleset id="stringbundleset">
+    <xul:stringbundle id="bundle_brand" src="chrome://branding/locale/brand.properties"/>
+    <xul:stringbundle id="bundle_shell" src="chrome://browser/locale/shellservice.properties"/>
+    <xul:stringbundle id="bundle_preferences" src="chrome://browser/locale/preferences/preferences.properties"/>
+  </xul:stringbundleset>
 
-  <commandset id="mainCommandSet">
-    <command id="cmd_newNavigator" oncommand="OpenBrowserWindow()"/>
-    <command id="cmd_handleBackspace" oncommand="BrowserHandleBackspace();" />
-    <command id="cmd_handleShiftBackspace" oncommand="BrowserHandleShiftBackspace();" />
+  <xul:commandset id="mainCommandSet">
+    <xul:command id="cmd_newNavigator" oncommand="OpenBrowserWindow()"/>
+    <xul:command id="cmd_handleBackspace" oncommand="BrowserHandleBackspace();" />
+    <xul:command id="cmd_handleShiftBackspace" oncommand="BrowserHandleShiftBackspace();" />
 
-    <command id="cmd_newNavigatorTab" oncommand="BrowserOpenTab(event);"/>
-    <command id="cmd_newNavigatorTabNoEvent" oncommand="BrowserOpenTab();"/>
-    <command id="Browser:OpenFile"  oncommand="BrowserOpenFileWindow();"/>
-    <command id="Browser:SavePage" oncommand="saveBrowser(gBrowser.selectedBrowser);"/>
+    <xul:command id="cmd_newNavigatorTab" oncommand="BrowserOpenTab(event);"/>
+    <xul:command id="cmd_newNavigatorTabNoEvent" oncommand="BrowserOpenTab();"/>
+    <xul:command id="Browser:OpenFile"  oncommand="BrowserOpenFileWindow();"/>
+    <xul:command id="Browser:SavePage" oncommand="saveBrowser(gBrowser.selectedBrowser);"/>
 
-    <command id="Browser:SendLink"
+    <xul:command id="Browser:SendLink"
              oncommand="MailIntegration.sendLinkForBrowser(gBrowser.selectedBrowser);"/>
 
-    <command id="cmd_pageSetup" oncommand="PrintUtils.showPageSetup();"/>
-    <command id="cmd_print" oncommand="PrintUtils.printWindow(window.gBrowser.selectedBrowser.outerWindowID, window.gBrowser.selectedBrowser);"/>
-    <command id="cmd_printPreview" oncommand="PrintUtils.printPreview(PrintPreviewListener);"/>
-    <command id="cmd_close" oncommand="BrowserCloseTabOrWindow(event);"/>
-    <command id="cmd_closeWindow" oncommand="BrowserTryToCloseWindow()"/>
-    <command id="cmd_toggleMute" oncommand="gBrowser.selectedTab.toggleMuteAudio()"/>
-    <command id="cmd_CustomizeToolbars" oncommand="gCustomizeMode.enter()"/>
-    <command id="cmd_quitApplication" oncommand="goQuitApplication()"/>
+    <xul:command id="cmd_pageSetup" oncommand="PrintUtils.showPageSetup();"/>
+    <xul:command id="cmd_print" oncommand="PrintUtils.printWindow(window.gBrowser.selectedBrowser.outerWindowID, window.gBrowser.selectedBrowser);"/>
+    <xul:command id="cmd_printPreview" oncommand="PrintUtils.printPreview(PrintPreviewListener);"/>
+    <xul:command id="cmd_close" oncommand="BrowserCloseTabOrWindow(event);"/>
+    <xul:command id="cmd_closeWindow" oncommand="BrowserTryToCloseWindow()"/>
+    <xul:command id="cmd_toggleMute" oncommand="gBrowser.selectedTab.toggleMuteAudio()"/>
+    <xul:command id="cmd_CustomizeToolbars" oncommand="gCustomizeMode.enter()"/>
+    <xul:command id="cmd_quitApplication" oncommand="goQuitApplication()"/>
 
 #include ../../../toolkit/content/editMenuCommands.inc.xul
 
-    <command id="View:PageSource" oncommand="BrowserViewSource(window.gBrowser.selectedBrowser);" observes="canViewSource"/>
-    <command id="View:PageInfo" oncommand="BrowserPageInfo();"/>
-    <command id="View:FullScreen" oncommand="BrowserFullScreen();"/>
-    <command id="View:ReaderView" oncommand="ReaderParent.toggleReaderMode(event);"/>
-    <command id="cmd_find"
+    <xul:command id="View:PageSource" oncommand="BrowserViewSource(window.gBrowser.selectedBrowser);" observes="canViewSource"/>
+    <xul:command id="View:PageInfo" oncommand="BrowserPageInfo();"/>
+    <xul:command id="View:FullScreen" oncommand="BrowserFullScreen();"/>
+    <xul:command id="View:ReaderView" oncommand="ReaderParent.toggleReaderMode(event);"/>
+    <xul:command id="cmd_find"
              oncommand="gLazyFindCommand('onFindCommand')"
              observes="isImage"/>
-    <command id="cmd_findAgain"
+    <xul:command id="cmd_findAgain"
              oncommand="gLazyFindCommand('onFindAgainCommand', false)"
              observes="isImage"/>
-    <command id="cmd_findPrevious"
+    <xul:command id="cmd_findPrevious"
              oncommand="gLazyFindCommand('onFindAgainCommand', true)"
              observes="isImage"/>
 #ifdef XP_MACOSX
-    <command id="cmd_findSelection" oncommand="gLazyFindCommand('onFindSelectionCommand')"/>
+    <xul:command id="cmd_findSelection" oncommand="gLazyFindCommand('onFindSelectionCommand')"/>
 #endif
     <!-- work-around bug 392512 -->
-    <command id="Browser:AddBookmarkAs"
+    <xul:command id="Browser:AddBookmarkAs"
              oncommand="PlacesCommandHook.bookmarkPage();"/>
     <!-- The command disabled state must be manually updated through
          PlacesCommandHook.updateBookmarkAllTabsCommand() -->
-    <command id="Browser:BookmarkAllTabs"
+    <xul:command id="Browser:BookmarkAllTabs"
              oncommand="PlacesCommandHook.bookmarkCurrentPages();"/>
-    <command id="Browser:Home"    oncommand="BrowserHome();"/>
-    <command id="Browser:Back"    oncommand="BrowserBack();" disabled="true"/>
-    <command id="Browser:BackOrBackDuplicate" oncommand="BrowserBack(event);" disabled="true">
+    <xul:command id="Browser:Home"    oncommand="BrowserHome();"/>
+    <xul:command id="Browser:Back"    oncommand="BrowserBack();" disabled="true"/>
+    <xul:command id="Browser:BackOrBackDuplicate" oncommand="BrowserBack(event);" disabled="true">
       <observes element="Browser:Back" attribute="disabled"/>
-    </command>
-    <command id="Browser:Forward" oncommand="BrowserForward();" disabled="true"/>
-    <command id="Browser:ForwardOrForwardDuplicate" oncommand="BrowserForward(event);" disabled="true">
+    </xul:command>
+    <xul:command id="Browser:Forward" oncommand="BrowserForward();" disabled="true"/>
+    <xul:command id="Browser:ForwardOrForwardDuplicate" oncommand="BrowserForward(event);" disabled="true">
       <observes element="Browser:Forward" attribute="disabled"/>
-    </command>
-    <command id="Browser:Stop"    oncommand="BrowserStop();" disabled="true"/>
-    <command id="Browser:Reload"  oncommand="if (event.shiftKey) BrowserReloadSkipCache(); else BrowserReload()" disabled="true"/>
-    <command id="Browser:ReloadOrDuplicate" oncommand="BrowserReloadOrDuplicate(event)" disabled="true">
+    </xul:command>
+    <xul:command id="Browser:Stop"    oncommand="BrowserStop();" disabled="true"/>
+    <xul:command id="Browser:Reload"  oncommand="if (event.shiftKey) BrowserReloadSkipCache(); else BrowserReload()" disabled="true"/>
+    <xul:command id="Browser:ReloadOrDuplicate" oncommand="BrowserReloadOrDuplicate(event)" disabled="true">
       <observes element="Browser:Reload" attribute="disabled"/>
-    </command>
-    <command id="Browser:ReloadSkipCache" oncommand="BrowserReloadSkipCache()" disabled="true">
+    </xul:command>
+    <xul:command id="Browser:ReloadSkipCache" oncommand="BrowserReloadSkipCache()" disabled="true">
       <observes element="Browser:Reload" attribute="disabled"/>
-    </command>
-    <command id="Browser:NextTab" oncommand="gBrowser.tabContainer.advanceSelectedTab(1, true);"/>
-    <command id="Browser:PrevTab" oncommand="gBrowser.tabContainer.advanceSelectedTab(-1, true);"/>
-    <command id="Browser:ShowAllTabs" oncommand="allTabs.open();"/>
-    <command id="cmd_fullZoomReduce"  oncommand="FullZoom.reduce()"/>
-    <command id="cmd_fullZoomEnlarge" oncommand="FullZoom.enlarge()"/>
-    <command id="cmd_fullZoomReset"   oncommand="FullZoom.reset()"/>
-    <command id="cmd_fullZoomToggle"  oncommand="ZoomManager.toggleZoom();"/>
-    <command id="cmd_gestureRotateLeft" oncommand="gGestureSupport.rotate(event.sourceEvent)"/>
-    <command id="cmd_gestureRotateRight" oncommand="gGestureSupport.rotate(event.sourceEvent)"/>
-    <command id="cmd_gestureRotateEnd" oncommand="gGestureSupport.rotateEnd()"/>
-    <command id="Browser:OpenLocation" oncommand="openLocation();"/>
-    <command id="Browser:RestoreLastSession" oncommand="restoreLastSession();" disabled="true"/>
-    <command id="Browser:NewUserContextTab" oncommand="openNewUserContextTab(event.sourceEvent);"/>
-    <command id="Browser:OpenAboutContainers" oncommand="openPreferences('paneContainers', {origin: 'ContainersCommand'});"/>
+    </xul:command>
+    <xul:command id="Browser:NextTab" oncommand="gBrowser.tabContainer.advanceSelectedTab(1, true);"/>
+    <xul:command id="Browser:PrevTab" oncommand="gBrowser.tabContainer.advanceSelectedTab(-1, true);"/>
+    <xul:command id="Browser:ShowAllTabs" oncommand="allTabs.open();"/>
+    <xul:command id="cmd_fullZoomReduce"  oncommand="FullZoom.reduce()"/>
+    <xul:command id="cmd_fullZoomEnlarge" oncommand="FullZoom.enlarge()"/>
+    <xul:command id="cmd_fullZoomReset"   oncommand="FullZoom.reset()"/>
+    <xul:command id="cmd_fullZoomToggle"  oncommand="ZoomManager.toggleZoom();"/>
+    <xul:command id="cmd_gestureRotateLeft" oncommand="gGestureSupport.rotate(event.sourceEvent)"/>
+    <xul:command id="cmd_gestureRotateRight" oncommand="gGestureSupport.rotate(event.sourceEvent)"/>
+    <xul:command id="cmd_gestureRotateEnd" oncommand="gGestureSupport.rotateEnd()"/>
+    <xul:command id="Browser:OpenLocation" oncommand="openLocation();"/>
+    <xul:command id="Browser:RestoreLastSession" oncommand="restoreLastSession();" disabled="true"/>
+    <xul:command id="Browser:NewUserContextTab" oncommand="openNewUserContextTab(event.sourceEvent);"/>
+    <xul:command id="Browser:OpenAboutContainers" oncommand="openPreferences('paneContainers', {origin: 'ContainersCommand'});"/>
 
-    <command id="Tools:Search" oncommand="BrowserSearch.webSearch();"/>
-    <command id="Tools:Downloads" oncommand="BrowserDownloadsUI();"/>
-    <command id="Tools:Addons" oncommand="BrowserOpenAddonsMgr();"/>
-    <command id="Tools:Sanitize" oncommand="Sanitizer.showUI(window);"/>
-    <command id="Tools:PrivateBrowsing"
+    <xul:command id="Tools:Search" oncommand="BrowserSearch.webSearch();"/>
+    <xul:command id="Tools:Downloads" oncommand="BrowserDownloadsUI();"/>
+    <xul:command id="Tools:Addons" oncommand="BrowserOpenAddonsMgr();"/>
+    <xul:command id="Tools:Sanitize" oncommand="Sanitizer.showUI(window);"/>
+    <xul:command id="Tools:PrivateBrowsing"
       oncommand="OpenBrowserWindow({private: true});"/>
-    <command id="History:UndoCloseTab" oncommand="undoCloseTab();"/>
-    <command id="History:UndoCloseWindow" oncommand="undoCloseWindow();"/>
+    <xul:command id="History:UndoCloseTab" oncommand="undoCloseTab();"/>
+    <xul:command id="History:UndoCloseWindow" oncommand="undoCloseWindow();"/>
 
 #ifdef NIGHTLY_BUILD
-    <command id="wrCaptureCmd" oncommand="gWebRender.capture();"/>
+    <xul:command id="wrCaptureCmd" oncommand="gWebRender.capture();"/>
 #endif
 #ifdef XP_MACOSX
-    <command id="minimizeWindow"
+    <xul:command id="minimizeWindow"
              label="&minimizeWindow.label;"
              oncommand="window.minimize();" />
-    <command id="zoomWindow"
+    <xul:command id="zoomWindow"
              label="&zoomWindow.label;"
              oncommand="zoomWindow();" />
 #endif
-  </commandset>
+  </xul:commandset>
 
 #include ../../components/places/content/placesCommands.inc.xul
 
-  <broadcasterset id="mainBroadcasterSet">
-    <broadcaster id="viewBookmarksSidebar" autoCheck="false" label="&bookmarksButton.label;"
+  <xul:broadcasterset id="mainBroadcasterSet">
+    <xul:broadcaster id="viewBookmarksSidebar" autoCheck="false" label="&bookmarksButton.label;"
                  type="checkbox" group="sidebar"
                  sidebarurl="chrome://browser/content/places/bookmarksSidebar.xul"
                  oncommand="SidebarUI.toggle('viewBookmarksSidebar');"/>
 
-    <broadcaster id="viewHistorySidebar" autoCheck="false" sidebartitle="&historyButton.label;"
+    <xul:broadcaster id="viewHistorySidebar" autoCheck="false" sidebartitle="&historyButton.label;"
                  type="checkbox" group="sidebar"
                  sidebarurl="chrome://browser/content/places/historySidebar.xul"
                  oncommand="SidebarUI.toggle('viewHistorySidebar');"/>
 
-    <broadcaster id="bookmarkThisPageBroadcaster"
+    <xul:broadcaster id="bookmarkThisPageBroadcaster"
                  label="&bookmarkThisPageCmd.label;"
                  bookmarklabel="&bookmarkThisPageCmd.label;"
                  editlabel="&editThisBookmarkCmd.label;"/>
 
     <!-- popup blocking menu items -->
-    <broadcaster id="blockedPopupAllowSite"
+    <xul:broadcaster id="blockedPopupAllowSite"
                  accesskey="&allowPopups.accesskey;"
                  oncommand="gPopupBlockerObserver.toggleAllowPopupsForSite(event);"/>
-    <broadcaster id="blockedPopupEditSettings"
+    <xul:broadcaster id="blockedPopupEditSettings"
 #ifdef XP_WIN
                  label="&editPopupSettings.label;"
 #else
                  label="&editPopupSettingsUnix.label;"
 #endif
                  accesskey="&editPopupSettings.accesskey;"
                  oncommand="gPopupBlockerObserver.editPopupSettings();"/>
-    <broadcaster id="blockedPopupDontShowMessage"
+    <xul:broadcaster id="blockedPopupDontShowMessage"
                  accesskey="&dontShowMessage.accesskey;"
                  type="checkbox"
                  oncommand="gPopupBlockerObserver.dontShowMessage();"/>
-    <broadcaster id="blockedPopupsSeparator"/>
-    <broadcaster id="isImage"/>
-    <broadcaster id="canViewSource"/>
-    <broadcaster id="isFrameImage"/>
-    <broadcaster id="singleFeedMenuitemState" disabled="true"/>
-    <broadcaster id="multipleFeedsMenuState" hidden="true"/>
+    <xul:broadcaster id="blockedPopupsSeparator"/>
+    <xul:broadcaster id="isImage"/>
+    <xul:broadcaster id="canViewSource"/>
+    <xul:broadcaster id="isFrameImage"/>
+    <xul:broadcaster id="singleFeedMenuitemState" disabled="true"/>
+    <xul:broadcaster id="multipleFeedsMenuState" hidden="true"/>
 
     <!-- Sync broadcasters -->
     <!-- A broadcaster of a number of attributes suitable for "sync now" UI -
         A 'syncstatus' attribute is set while actively syncing, and the label
         attribute which changes from "sync now" to "syncing" etc. -->
-    <broadcaster id="sync-status" onmouseover="gSync.refreshSyncButtonsTooltip();"/>
+    <xul:broadcaster id="sync-status" onmouseover="gSync.refreshSyncButtonsTooltip();"/>
     <!-- broadcasters of the "hidden" attribute to reflect setup state for
          menus -->
-    <broadcaster id="sync-setup-state" hidden="true"/>
-    <broadcaster id="sync-unverified-state" hidden="true"/>
-    <broadcaster id="sync-syncnow-state" hidden="true"/>
-    <broadcaster id="sync-reauth-state" hidden="true"/>
-    <broadcaster id="viewTabsSidebar" autoCheck="false" sidebartitle="&syncedTabs.sidebar.label;"
+    <xul:broadcaster id="sync-setup-state" hidden="true"/>
+    <xul:broadcaster id="sync-unverified-state" hidden="true"/>
+    <xul:broadcaster id="sync-syncnow-state" hidden="true"/>
+    <xul:broadcaster id="sync-reauth-state" hidden="true"/>
+    <xul:broadcaster id="viewTabsSidebar" autoCheck="false" sidebartitle="&syncedTabs.sidebar.label;"
                  type="checkbox" group="sidebar"
                  sidebarurl="chrome://browser/content/syncedtabs/sidebar.xhtml"
                  oncommand="SidebarUI.toggle('viewTabsSidebar');"/>
-    <broadcaster id="workOfflineMenuitemState"/>
+    <xul:broadcaster id="workOfflineMenuitemState"/>
 
-    <broadcaster id="devtoolsMenuBroadcaster_PageSource"
+    <xul:broadcaster id="devtoolsMenuBroadcaster_PageSource"
                  label="&pageSourceCmd.label;"
                  key="key_viewSource"
                  command="View:PageSource">
       <observes element="canViewSource" attribute="disabled"/>
-    </broadcaster>
-    <broadcaster id="reportPhishingBroadcaster" disabled="true"/>
-    <broadcaster id="reportPhishingErrorBroadcaster" disabled="true"/>
-    <broadcaster id="trackingProtectionBroadcaster" enabled="false"/>
-  </broadcasterset>
+    </xul:broadcaster>
+    <xul:broadcaster id="reportPhishingBroadcaster" disabled="true"/>
+    <xul:broadcaster id="reportPhishingErrorBroadcaster" disabled="true"/>
+    <xul:broadcaster id="trackingProtectionBroadcaster" enabled="false"/>
+  </xul:broadcasterset>
 
-  <keyset id="mainKeyset">
-    <key id="key_newNavigator"
+  <xul:keyset id="mainKeyset">
+    <xul:key id="key_newNavigator"
          key="&newNavigatorCmd.key;"
          command="cmd_newNavigator"
          modifiers="accel" reserved="true"/>
-    <key id="key_newNavigatorTab" key="&tabCmd.commandkey;" modifiers="accel"
+    <xul:key id="key_newNavigatorTab" key="&tabCmd.commandkey;" modifiers="accel"
          command="cmd_newNavigatorTabNoEvent" reserved="true"/>
-    <key id="focusURLBar" key="&openCmd.commandkey;" command="Browser:OpenLocation"
+    <xul:key id="focusURLBar" key="&openCmd.commandkey;" command="Browser:OpenLocation"
          modifiers="accel"/>
 #ifndef XP_MACOSX
-    <key id="focusURLBar2" key="&urlbar.accesskey;" command="Browser:OpenLocation"
+    <xul:key id="focusURLBar2" key="&urlbar.accesskey;" command="Browser:OpenLocation"
          modifiers="alt"/>
 #endif
 
 #
 # Search Command Key Logic works like this:
 #
 # Unix: Ctrl+K (cross platform binding)
 #       Ctrl+J (in case of emacs Ctrl-K conflict)
@@ -211,206 +211,207 @@
 #
 # We support Ctrl+K on all platforms now and advertise it in the menu since it is
 # our standard - it is a "safe" choice since it is near no harmful keys like "W" as
 # "E" is. People mourning the loss of Ctrl+K for emacs compat can switch their GTK
 # system setting to use emacs emulation, and we should respect it. Focus-Search-Box
 # is a fundamental keybinding and we are maintaining a XP binding so that it is easy
 # for people to switch to Linux.
 #
-    <key id="key_search" key="&searchFocus.commandkey;" command="Tools:Search" modifiers="accel"/>
+    <xul:key id="key_search" key="&searchFocus.commandkey;" command="Tools:Search" modifiers="accel"/>
 #ifdef XP_MACOSX
-    <key id="key_search2" key="&findOnCmd.commandkey;" command="Tools:Search" modifiers="accel,alt"/>
+    <xul:key id="key_search2" key="&findOnCmd.commandkey;" command="Tools:Search" modifiers="accel,alt"/>
 #endif
 #ifdef XP_WIN
-    <key id="key_search2" key="&searchFocus.commandkey2;" command="Tools:Search" modifiers="accel"/>
+    <xul:key id="key_search2" key="&searchFocus.commandkey2;" command="Tools:Search" modifiers="accel"/>
 #endif
 #ifdef XP_GNOME
-    <key id="key_search2" key="&searchFocusUnix.commandkey;" command="Tools:Search" modifiers="accel"/>
-    <key id="key_openDownloads" key="&downloadsUnix.commandkey;" command="Tools:Downloads" modifiers="accel,shift"/>
+    <xul:key id="key_search2" key="&searchFocusUnix.commandkey;" command="Tools:Search" modifiers="accel"/>
+    <xul:key id="key_openDownloads" key="&downloadsUnix.commandkey;" command="Tools:Downloads" modifiers="accel,shift"/>
 #else
-    <key id="key_openDownloads" key="&downloads.commandkey;" command="Tools:Downloads" modifiers="accel"/>
+    <xul:key id="key_openDownloads" key="&downloads.commandkey;" command="Tools:Downloads" modifiers="accel"/>
 #endif
-    <key id="key_openAddons" key="&addons.commandkey;" command="Tools:Addons" modifiers="accel,shift"/>
-    <key id="openFileKb" key="&openFileCmd.commandkey;" command="Browser:OpenFile"  modifiers="accel"/>
-    <key id="key_savePage" key="&savePageCmd.commandkey;" command="Browser:SavePage" modifiers="accel"/>
-    <key id="printKb" key="&printCmd.commandkey;" command="cmd_print"  modifiers="accel"/>
-    <key id="key_close" key="&closeCmd.key;" command="cmd_close" modifiers="accel" reserved="true"/>
-    <key id="key_closeWindow" key="&closeCmd.key;" command="cmd_closeWindow" modifiers="accel,shift" reserved="true"/>
-    <key id="key_toggleMute" key="&toggleMuteCmd.key;" command="cmd_toggleMute" modifiers="control"/>
-    <key id="key_undo"
+    <xul:key id="key_openAddons" key="&addons.commandkey;" command="Tools:Addons" modifiers="accel,shift"/>
+    <xul:key id="openFileKb" key="&openFileCmd.commandkey;" command="Browser:OpenFile"  modifiers="accel"/>
+    <xul:key id="key_savePage" key="&savePageCmd.commandkey;" command="Browser:SavePage" modifiers="accel"/>
+    <xul:key id="printKb" key="&printCmd.commandkey;" command="cmd_print"  modifiers="accel"/>
+    <xul:key id="key_close" key="&closeCmd.key;" command="cmd_close" modifiers="accel" reserved="true"/>
+    <xul:key id="key_closeWindow" key="&closeCmd.key;" command="cmd_closeWindow" modifiers="accel,shift" reserved="true"/>
+    <xul:key id="key_toggleMute" key="&toggleMuteCmd.key;" command="cmd_toggleMute" modifiers="control"/>
+    <xul:key id="key_undo"
          key="&undoCmd.key;"
          modifiers="accel"/>
 #ifdef XP_UNIX
-    <key id="key_redo" key="&undoCmd.key;" modifiers="accel,shift"/>
+    <xul:key id="key_redo" key="&undoCmd.key;" modifiers="accel,shift"/>
 #else
-    <key id="key_redo" key="&redoCmd.key;" modifiers="accel"/>
+    <xul:key id="key_redo" key="&redoCmd.key;" modifiers="accel"/>
 #endif
-    <key id="key_cut"
+    <xul:key id="key_cut"
          key="&cutCmd.key;"
          modifiers="accel"/>
-    <key id="key_copy"
+    <xul:key id="key_copy"
          key="&copyCmd.key;"
          modifiers="accel"/>
-    <key id="key_paste"
+    <xul:key id="key_paste"
          key="&pasteCmd.key;"
          modifiers="accel"/>
-    <key id="key_delete" keycode="VK_DELETE" command="cmd_delete"/>
-    <key id="key_selectAll" key="&selectAllCmd.key;" modifiers="accel"/>
+    <xul:key id="key_delete" keycode="VK_DELETE" command="cmd_delete"/>
+    <xul:key id="key_selectAll" key="&selectAllCmd.key;" modifiers="accel"/>
 
-    <key keycode="VK_BACK" command="cmd_handleBackspace"/>
-    <key keycode="VK_BACK" command="cmd_handleShiftBackspace" modifiers="shift"/>
+    <xul:key keycode="VK_BACK" command="cmd_handleBackspace"/>
+    <xul:key keycode="VK_BACK" command="cmd_handleShiftBackspace" modifiers="shift"/>
 #ifndef XP_MACOSX
-    <key id="goBackKb"  keycode="VK_LEFT" command="Browser:Back" modifiers="alt"/>
-    <key id="goForwardKb"  keycode="VK_RIGHT" command="Browser:Forward" modifiers="alt"/>
+    <xul:key id="goBackKb"  keycode="VK_LEFT" command="Browser:Back" modifiers="alt"/>
+    <xul:key id="goForwardKb"  keycode="VK_RIGHT" command="Browser:Forward" modifiers="alt"/>
 #else
-    <key id="goBackKb" keycode="VK_LEFT" command="Browser:Back" modifiers="accel" />
-    <key id="goForwardKb" keycode="VK_RIGHT" command="Browser:Forward" modifiers="accel" />
+    <xul:key id="goBackKb" keycode="VK_LEFT" command="Browser:Back" modifiers="accel" />
+    <xul:key id="goForwardKb" keycode="VK_RIGHT" command="Browser:Forward" modifiers="accel" />
 #endif
 #ifdef XP_UNIX
-    <key id="goBackKb2" key="&goBackCmd.commandKey;" command="Browser:Back" modifiers="accel"/>
-    <key id="goForwardKb2" key="&goForwardCmd.commandKey;" command="Browser:Forward" modifiers="accel"/>
+    <xul:key id="goBackKb2" key="&goBackCmd.commandKey;" command="Browser:Back" modifiers="accel"/>
+    <xul:key id="goForwardKb2" key="&goForwardCmd.commandKey;" command="Browser:Forward" modifiers="accel"/>
 #endif
-    <key id="goHome" keycode="VK_HOME" command="Browser:Home" modifiers="alt"/>
-    <key keycode="VK_F5" command="Browser:Reload"/>
+    <xul:key id="goHome" keycode="VK_HOME" command="Browser:Home" modifiers="alt"/>
+    <xul:key keycode="VK_F5" command="Browser:Reload"/>
 #ifndef XP_MACOSX
-    <key id="showAllHistoryKb" key="&showAllHistoryCmd.commandkey;" command="Browser:ShowAllHistory" modifiers="accel,shift"/>
-    <key keycode="VK_F5" command="Browser:ReloadSkipCache" modifiers="accel"/>
-    <key id="key_fullScreen" keycode="VK_F11" command="View:FullScreen"/>
+    <xul:key id="showAllHistoryKb" key="&showAllHistoryCmd.commandkey;" command="Browser:ShowAllHistory" modifiers="accel,shift"/>
+    <xul:key keycode="VK_F5" command="Browser:ReloadSkipCache" modifiers="accel"/>
+    <xul:key id="key_fullScreen" keycode="VK_F11" command="View:FullScreen"/>
 #else
-    <key id="key_fullScreen" key="&fullScreenCmd.macCommandKey;" command="View:FullScreen" modifiers="accel,control"/>
-    <key id="key_fullScreen_old" key="&fullScreenCmd.macCommandKey;" command="View:FullScreen" modifiers="accel,shift"/>
-    <key keycode="VK_F11" command="View:FullScreen"/>
+    <xul:key id="key_fullScreen" key="&fullScreenCmd.macCommandKey;" command="View:FullScreen" modifiers="accel,control"/>
+    <xul:key id="key_fullScreen_old" key="&fullScreenCmd.macCommandKey;" command="View:FullScreen" modifiers="accel,shift"/>
+    <xul:key keycode="VK_F11" command="View:FullScreen"/>
 #endif
 #ifndef XP_WIN
-    <key id="key_toggleReaderMode" key="&toggleReaderMode.key;" command="View:ReaderView" modifiers="accel,alt" disabled="true"/>
+    <xul:key id="key_toggleReaderMode" key="&toggleReaderMode.key;" command="View:ReaderView" modifiers="accel,alt" disabled="true"/>
 #else
-    <key id="key_toggleReaderMode" keycode="&toggleReaderMode.win.keycode;" command="View:ReaderView" disabled="true"/>
+    <xul:key id="key_toggleReaderMode" keycode="&toggleReaderMode.win.keycode;" command="View:ReaderView" disabled="true"/>
 #endif
-    <key key="&reloadCmd.commandkey;" command="Browser:Reload" modifiers="accel" id="key_reload"/>
-    <key key="&reloadCmd.commandkey;" command="Browser:ReloadSkipCache" modifiers="accel,shift"/>
-    <key id="key_viewSource" key="&pageSourceCmd.commandkey;" command="View:PageSource" modifiers="accel"/>
+    <xul:key key="&reloadCmd.commandkey;" command="Browser:Reload" modifiers="accel" id="key_reload"/>
+    <xul:key key="&reloadCmd.commandkey;" command="Browser:ReloadSkipCache" modifiers="accel,shift"/>
+    <xul:key id="key_viewSource" key="&pageSourceCmd.commandkey;" command="View:PageSource" modifiers="accel"/>
 #ifdef XP_MACOSX
-    <key id="key_viewSourceSafari" key="&pageSourceCmd.SafariCommandKey;" command="View:PageSource" modifiers="accel,alt"/>
+    <xul:key id="key_viewSourceSafari" key="&pageSourceCmd.SafariCommandKey;" command="View:PageSource" modifiers="accel,alt"/>
 #endif
 #ifndef XP_WIN
-    <key id="key_viewInfo"   key="&pageInfoCmd.commandkey;"   command="View:PageInfo"   modifiers="accel"/>
+    <xul:key id="key_viewInfo"   key="&pageInfoCmd.commandkey;"   command="View:PageInfo"   modifiers="accel"/>
 #endif
-    <key id="key_find" key="&findOnCmd.commandkey;" command="cmd_find" modifiers="accel"/>
-    <key id="key_findAgain" key="&findAgainCmd.commandkey;" command="cmd_findAgain" modifiers="accel"/>
-    <key id="key_findPrevious" key="&findAgainCmd.commandkey;" command="cmd_findPrevious" modifiers="accel,shift"/>
+    <xul:key id="key_find" key="&findOnCmd.commandkey;" command="cmd_find" modifiers="accel"/>
+    <xul:key id="key_findAgain" key="&findAgainCmd.commandkey;" command="cmd_findAgain" modifiers="accel"/>
+    <xul:key id="key_findPrevious" key="&findAgainCmd.commandkey;" command="cmd_findPrevious" modifiers="accel,shift"/>
 #ifdef XP_MACOSX
-    <key id="key_findSelection" key="&findSelectionCmd.commandkey;" command="cmd_findSelection" modifiers="accel"/>
+    <xul:key id="key_findSelection" key="&findSelectionCmd.commandkey;" command="cmd_findSelection" modifiers="accel"/>
 #endif
-    <key keycode="&findAgainCmd.commandkey2;" command="cmd_findAgain"/>
-    <key keycode="&findAgainCmd.commandkey2;"  command="cmd_findPrevious" modifiers="shift"/>
+    <xul:key keycode="&findAgainCmd.commandkey2;" command="cmd_findAgain"/>
+    <xul:key keycode="&findAgainCmd.commandkey2;"  command="cmd_findPrevious" modifiers="shift"/>
 
-    <key id="addBookmarkAsKb" key="&bookmarkThisPageCmd.commandkey;" command="Browser:AddBookmarkAs" modifiers="accel"/>
+    <xul:key id="addBookmarkAsKb" key="&bookmarkThisPageCmd.commandkey;" command="Browser:AddBookmarkAs" modifiers="accel"/>
 # Accel+Shift+A-F are reserved on GTK
 #ifndef MOZ_WIDGET_GTK
-    <key id="bookmarkAllTabsKb" key="&bookmarkThisPageCmd.commandkey;" oncommand="PlacesCommandHook.bookmarkCurrentPages();" modifiers="accel,shift"/>
-    <key id="manBookmarkKb" key="&bookmarksCmd.commandkey;" command="Browser:ShowAllBookmarks" modifiers="accel,shift"/>
+    <xul:key id="bookmarkAllTabsKb" key="&bookmarkThisPageCmd.commandkey;" oncommand="PlacesCommandHook.bookmarkCurrentPages();" modifiers="accel,shift"/>
+    <xul:key id="manBookmarkKb" key="&bookmarksCmd.commandkey;" command="Browser:ShowAllBookmarks" modifiers="accel,shift"/>
 #else
-    <key id="manBookmarkKb" key="&bookmarksGtkCmd.commandkey;" command="Browser:ShowAllBookmarks" modifiers="accel,shift"/>
+    <xul:key id="manBookmarkKb" key="&bookmarksGtkCmd.commandkey;" command="Browser:ShowAllBookmarks" modifiers="accel,shift"/>
 #endif
-    <key id="viewBookmarksSidebarKb" key="&bookmarksCmd.commandkey;" command="viewBookmarksSidebar" modifiers="accel"/>
+    <xul:key id="viewBookmarksSidebarKb" key="&bookmarksCmd.commandkey;" command="viewBookmarksSidebar" modifiers="accel"/>
 #ifdef XP_WIN
 # Cmd+I is conventially mapped to Info on MacOS X, thus it should not be
 # overridden for other purposes there.
-    <key id="viewBookmarksSidebarWinKb" key="&bookmarksWinCmd.commandkey;" command="viewBookmarksSidebar" modifiers="accel"/>
+    <xul:key id="viewBookmarksSidebarWinKb" key="&bookmarksWinCmd.commandkey;" command="viewBookmarksSidebar" modifiers="accel"/>
 #endif
 
-    <key id="key_stop" keycode="VK_ESCAPE" command="Browser:Stop"/>
+    <xul:key id="key_stop" keycode="VK_ESCAPE" command="Browser:Stop"/>
 
 #ifdef XP_MACOSX
-    <key id="key_stop_mac" modifiers="accel" key="&stopCmd.macCommandKey;" command="Browser:Stop"/>
+    <xul:key id="key_stop_mac" modifiers="accel" key="&stopCmd.macCommandKey;" command="Browser:Stop"/>
 #endif
 
-    <key id="key_gotoHistory"
+    <xul:key id="key_gotoHistory"
          key="&historySidebarCmd.commandKey;"
 #ifdef XP_MACOSX
          modifiers="accel,shift"
 #else
          modifiers="accel"
 #endif
          command="viewHistorySidebar"/>
 
-    <key id="key_fullZoomReduce"  key="&fullZoomReduceCmd.commandkey;"   command="cmd_fullZoomReduce"  modifiers="accel"/>
-    <key                          key="&fullZoomReduceCmd.commandkey2;"  command="cmd_fullZoomReduce"  modifiers="accel"/>
-    <key id="key_fullZoomEnlarge" key="&fullZoomEnlargeCmd.commandkey;"  command="cmd_fullZoomEnlarge" modifiers="accel"/>
-    <key                          key="&fullZoomEnlargeCmd.commandkey2;" command="cmd_fullZoomEnlarge" modifiers="accel"/>
-    <key                          key="&fullZoomEnlargeCmd.commandkey3;" command="cmd_fullZoomEnlarge" modifiers="accel"/>
-    <key id="key_fullZoomReset"   key="&fullZoomResetCmd.commandkey;"    command="cmd_fullZoomReset"   modifiers="accel"/>
-    <key                          key="&fullZoomResetCmd.commandkey2;"   command="cmd_fullZoomReset"   modifiers="accel"/>
+    <xul:key id="key_fullZoomReduce"  key="&fullZoomReduceCmd.commandkey;"   command="cmd_fullZoomReduce"  modifiers="accel"/>
+    <xul:key                          key="&fullZoomReduceCmd.commandkey2;"  command="cmd_fullZoomReduce"  modifiers="accel"/>
+    <xul:key id="key_fullZoomEnlarge" key="&fullZoomEnlargeCmd.commandkey;"  command="cmd_fullZoomEnlarge" modifiers="accel"/>
+    <xul:key                          key="&fullZoomEnlargeCmd.commandkey2;" command="cmd_fullZoomEnlarge" modifiers="accel"/>
+    <xul:key                          key="&fullZoomEnlargeCmd.commandkey3;" command="cmd_fullZoomEnlarge" modifiers="accel"/>
+    <xul:key id="key_fullZoomReset"   key="&fullZoomResetCmd.commandkey;"    command="cmd_fullZoomReset"   modifiers="accel"/>
+    <xul:key                          key="&fullZoomResetCmd.commandkey2;"   command="cmd_fullZoomReset"   modifiers="accel"/>
 
-    <key id="key_showAllTabs" command="Browser:ShowAllTabs" keycode="VK_TAB" modifiers="control,shift" disabled="true"/>
+    <xul:key id="key_showAllTabs" command="Browser:ShowAllTabs" keycode="VK_TAB" modifiers="control,shift" disabled="true"/>
 
-    <key id="key_switchTextDirection" key="&bidiSwitchTextDirectionItem.commandkey;" command="cmd_switchTextDirection" modifiers="accel,shift" />
+    <xul:key id="key_switchTextDirection" key="&bidiSwitchTextDirectionItem.commandkey;" command="cmd_switchTextDirection" modifiers="accel,shift" />
 
-    <key id="key_privatebrowsing" command="Tools:PrivateBrowsing" key="&privateBrowsingCmd.commandkey;"
+    <xul:key id="key_privatebrowsing" command="Tools:PrivateBrowsing" key="&privateBrowsingCmd.commandkey;"
          modifiers="accel,shift" reserved="true"/>
-    <key id="key_sanitize" command="Tools:Sanitize" keycode="VK_DELETE" modifiers="accel,shift"/>
+    <xul:key id="key_sanitize" command="Tools:Sanitize" keycode="VK_DELETE" modifiers="accel,shift"/>
 #ifdef XP_MACOSX
-    <key id="key_sanitize_mac" command="Tools:Sanitize" keycode="VK_BACK" modifiers="accel,shift"/>
+    <xul:key id="key_sanitize_mac" command="Tools:Sanitize" keycode="VK_BACK" modifiers="accel,shift"/>
 #endif
-    <key id="key_quitApplication" key="&quitApplicationCmd.key;"
+    <xul:key id="key_quitApplication" key="&quitApplicationCmd.key;"
 #ifdef XP_WIN
          modifiers="accel,shift"
 #else
          modifiers="accel"
 #endif
 # On OS X, dark voodoo magic invokes the quit code for this key.
 # So we're not adding the attribute on OSX because of backwards/add-on compat.
 # See bug 1369909 for background on this.
 #ifndef XP_MACOSX
          command="cmd_quitApplication"
 #endif
          reserved="true"/>
 
-    <key id="key_undoCloseTab" command="History:UndoCloseTab" key="&tabCmd.commandkey;" modifiers="accel,shift"/>
-    <key id="key_undoCloseWindow" command="History:UndoCloseWindow" key="&newNavigatorCmd.key;" modifiers="accel,shift"/>
+    <xul:key id="key_undoCloseTab" command="History:UndoCloseTab" key="&tabCmd.commandkey;" modifiers="accel,shift"/>
+    <xul:key id="key_undoCloseWindow" command="History:UndoCloseWindow" key="&newNavigatorCmd.key;" modifiers="accel,shift"/>
 
 #ifdef XP_GNOME
 #define NUM_SELECT_TAB_MODIFIER alt
 #else
 #define NUM_SELECT_TAB_MODIFIER accel
 #endif
 
-#expand    <key id="key_selectTab1" oncommand="gBrowser.selectTabAtIndex(0, event);" key="1" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
-#expand    <key id="key_selectTab2" oncommand="gBrowser.selectTabAtIndex(1, event);" key="2" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
-#expand    <key id="key_selectTab3" oncommand="gBrowser.selectTabAtIndex(2, event);" key="3" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
-#expand    <key id="key_selectTab4" oncommand="gBrowser.selectTabAtIndex(3, event);" key="4" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
-#expand    <key id="key_selectTab5" oncommand="gBrowser.selectTabAtIndex(4, event);" key="5" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
-#expand    <key id="key_selectTab6" oncommand="gBrowser.selectTabAtIndex(5, event);" key="6" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
-#expand    <key id="key_selectTab7" oncommand="gBrowser.selectTabAtIndex(6, event);" key="7" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
-#expand    <key id="key_selectTab8" oncommand="gBrowser.selectTabAtIndex(7, event);" key="8" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
-#expand    <key id="key_selectLastTab" oncommand="gBrowser.selectTabAtIndex(-1, event);" key="9" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
+#expand    <xul:key id="key_selectTab1" oncommand="gBrowser.selectTabAtIndex(0, event);" key="1" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
+#expand    <xul:key id="key_selectTab2" oncommand="gBrowser.selectTabAtIndex(1, event);" key="2" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
+#expand    <xul:key id="key_selectTab3" oncommand="gBrowser.selectTabAtIndex(2, event);" key="3" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
+#expand    <xul:key id="key_selectTab4" oncommand="gBrowser.selectTabAtIndex(3, event);" key="4" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
+#expand    <xul:key id="key_selectTab5" oncommand="gBrowser.selectTabAtIndex(4, event);" key="5" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
+#expand    <xul:key id="key_selectTab6" oncommand="gBrowser.selectTabAtIndex(5, event);" key="6" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
+#expand    <xul:key id="key_selectTab7" oncommand="gBrowser.selectTabAtIndex(6, event);" key="7" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
+#expand    <xul:key id="key_selectTab8" oncommand="gBrowser.selectTabAtIndex(7, event);" key="8" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
+#expand    <xul:key id="key_selectLastTab" oncommand="gBrowser.selectTabAtIndex(-1, event);" key="9" modifiers="__NUM_SELECT_TAB_MODIFIER__"/>
 
 #ifdef NIGHTLY_BUILD
-    <key id="key_wrCaptureCmd"
+    <xul:key id="key_wrCaptureCmd"
 #ifdef XP_MACOSX
     key="3" modifiers="control,shift"
 #else
     key="#" modifiers="control"
 #endif
     command="wrCaptureCmd"/>
 #endif
 #ifdef XP_MACOSX
-    <key id="key_minimizeWindow"
+    <xul:key id="key_minimizeWindow"
          command="minimizeWindow"
          key="&minimizeWindow.key;"
          modifiers="accel"/>
-    <key id="key_openHelpMac"
+    <xul:key id="key_openHelpMac"
          oncommand="openHelpLink('firefox-osxkey');"
          key="&helpMac.commandkey;"
          modifiers="accel"/>
     <!-- These are used to build the Application menu -->
-    <key id="key_preferencesCmdMac"
+    <xul:key id="key_preferencesCmdMac"
          key="&preferencesCmdMac.commandkey;"
          modifiers="accel"/>
-    <key id="key_hideThisAppCmdMac"
+    <xul:key id="key_hideThisAppCmdMac"
          key="&hideThisAppCmdMac2.commandkey;"
          modifiers="accel"/>
-    <key id="key_hideOtherAppsCmdMac"
+    <xul:key id="key_hideOtherAppsCmdMac"
          key="&hideOtherAppsCmdMac.commandkey;"
          modifiers="accel,alt"/>
 #endif
-  </keyset>
+  </xul:keyset>
+</box>
\ No newline at end of file
diff --git a/browser/components/places/content/placesCommands.inc.xul b/browser/components/places/content/placesCommands.inc.xul
--- a/browser/components/places/content/placesCommands.inc.xul
+++ b/browser/components/places/content/placesCommands.inc.xul
@@ -1,48 +1,48 @@
-<commandset id="placesCommands"
+<xul:commandset id="placesCommands"
             commandupdater="true"
             events="focus,sort,places"
             oncommandupdate="PlacesUIUtils.updateCommands(window);">
-  <command id="Browser:ShowAllBookmarks"
+  <xul:command id="Browser:ShowAllBookmarks"
            oncommand="PlacesCommandHook.showPlacesOrganizer('UnfiledBookmarks');"/>
-  <command id="Browser:ShowAllHistory"
+  <xul:command id="Browser:ShowAllHistory"
            oncommand="PlacesCommandHook.showPlacesOrganizer('History');"/>
 
-  <command id="placesCmd_open"
+  <xul:command id="placesCmd_open"
            oncommand="PlacesUIUtils.doCommand(window, 'placesCmd_open');"/>
-  <command id="placesCmd_open:window"
+  <xul:command id="placesCmd_open:window"
            oncommand="PlacesUIUtils.doCommand(window, 'placesCmd_open:window');"/>
-  <command id="placesCmd_open:privatewindow"
+  <xul:command id="placesCmd_open:privatewindow"
            oncommand="PlacesUIUtils.doCommand(window, 'placesCmd_open:privatewindow');"/>
-  <command id="placesCmd_open:tab"
+  <xul:command id="placesCmd_open:tab"
            oncommand="PlacesUIUtils.doCommand(window, 'placesCmd_open:tab');"/>
 
-  <command id="placesCmd_new:bookmark"
+  <xul:command id="placesCmd_new:bookmark"
            oncommand="PlacesUIUtils.doCommand(window, 'placesCmd_new:bookmark');"/>
-  <command id="placesCmd_new:folder"
+  <xul:command id="placesCmd_new:folder"
            oncommand="PlacesUIUtils.doCommand(window, 'placesCmd_new:folder');"/>
-  <command id="placesCmd_new:separator"
+  <xul:command id="placesCmd_new:separator"
            oncommand="PlacesUIUtils.doCommand(window, 'placesCmd_new:separator');"/>
-  <command id="placesCmd_show:info"
+  <xul:command id="placesCmd_show:info"
            oncommand="PlacesUIUtils.doCommand(window, 'placesCmd_show:info');"/>
-  <command id="placesCmd_rename"
+  <xul:command id="placesCmd_rename"
            oncommand="PlacesUIUtils.doCommand(window, 'placesCmd_show:info');"
            observes="placesCmd_show:info"/>
-  <command id="placesCmd_reload"
+  <xul:command id="placesCmd_reload"
            oncommand="PlacesUIUtils.doCommand(window, 'placesCmd_reload');"/>
-  <command id="placesCmd_sortBy:name"
+  <xul:command id="placesCmd_sortBy:name"
            oncommand="PlacesUIUtils.doCommand(window, 'placesCmd_sortBy:name');"/>
-  <command id="placesCmd_deleteDataHost"
+  <xul:command id="placesCmd_deleteDataHost"
            oncommand="PlacesUIUtils.doCommand(window, 'placesCmd_deleteDataHost');"/>
-  <command id="placesCmd_createBookmark"
+  <xul:command id="placesCmd_createBookmark"
            oncommand="PlacesUIUtils.doCommand(window, 'placesCmd_createBookmark');"/>
 
   <!-- Special versions of cut/copy/paste/delete which check for an open context menu. -->
-  <command id="placesCmd_cut"
+  <xul:command id="placesCmd_cut"
            oncommand="PlacesUIUtils.doCommand(window, 'placesCmd_cut');"/>
-  <command id="placesCmd_copy"
+  <xul:command id="placesCmd_copy"
            oncommand="PlacesUIUtils.doCommand(window, 'placesCmd_copy');"/>
-  <command id="placesCmd_paste"
+  <xul:command id="placesCmd_paste"
            oncommand="PlacesUIUtils.doCommand(window, 'placesCmd_paste');"/>
-  <command id="placesCmd_delete"
+  <xul:command id="placesCmd_delete"
            oncommand="PlacesUIUtils.doCommand(window, 'placesCmd_delete');"/>
-</commandset>
+</xul:commandset>
diff --git a/toolkit/content/editMenuCommands.inc.xul b/toolkit/content/editMenuCommands.inc.xul
--- a/toolkit/content/editMenuCommands.inc.xul
+++ b/toolkit/content/editMenuCommands.inc.xul
@@ -1,17 +1,21 @@
+<box xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
+
 <script type="application/javascript" src="chrome://global/content/editMenuOverlay.js"/>
-<commandset id="editMenuCommands">
-  <commandset id="editMenuCommandSetAll" commandupdater="true" events="focus,select"
+<xul:commandset id="editMenuCommands">
+  <xul:commandset id="editMenuCommandSetAll" commandupdater="true" events="focus,select"
               oncommandupdate="goUpdateGlobalEditMenuItems()"/>
-  <commandset id="editMenuCommandSetUndo" commandupdater="true" events="undo"
+  <xul:commandset id="editMenuCommandSetUndo" commandupdater="true" events="undo"
               oncommandupdate="goUpdateUndoEditMenuItems()"/>
-  <commandset id="editMenuCommandSetPaste" commandupdater="true" events="clipboard"
+  <xul:commandset id="editMenuCommandSetPaste" commandupdater="true" events="clipboard"
               oncommandupdate="goUpdatePasteMenuItems()"/>
-  <command id="cmd_undo" oncommand="goDoCommand('cmd_undo')"/>
-  <command id="cmd_redo" oncommand="goDoCommand('cmd_redo')"/>
-  <command id="cmd_cut" oncommand="goDoCommand('cmd_cut')"/>
-  <command id="cmd_copy" oncommand="goDoCommand('cmd_copy')"/>
-  <command id="cmd_paste" oncommand="goDoCommand('cmd_paste')"/>
-  <command id="cmd_delete" oncommand="goDoCommand('cmd_delete')"/>
-  <command id="cmd_selectAll" oncommand="goDoCommand('cmd_selectAll')"/>
-  <command id="cmd_switchTextDirection" oncommand="goDoCommand('cmd_switchTextDirection');"/>
-</commandset>
+  <xul:command id="cmd_undo" oncommand="goDoCommand('cmd_undo')"/>
+  <xul:command id="cmd_redo" oncommand="goDoCommand('cmd_redo')"/>
+  <xul:command id="cmd_cut" oncommand="goDoCommand('cmd_cut')"/>
+  <xul:command id="cmd_copy" oncommand="goDoCommand('cmd_copy')"/>
+  <xul:command id="cmd_paste" oncommand="goDoCommand('cmd_paste')"/>
+  <xul:command id="cmd_delete" oncommand="goDoCommand('cmd_delete')"/>
+  <xul:command id="cmd_selectAll" oncommand="goDoCommand('cmd_selectAll')"/>
+  <xul:command id="cmd_switchTextDirection" oncommand="goDoCommand('cmd_switchTextDirection');"/>
+</xul:commandset>
+
+</box>
