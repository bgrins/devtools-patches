# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  1c6df58616257675c80e743c7161bbb33155e458
Bug 1186925 - Convert tests using bad-content notification to use gIdentityHandle

diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -6699,16 +6699,20 @@ var gIdentityHandler = {
     delete this._permissionsContainer;
     return this._permissionsContainer = document.getElementById("identity-popup-permissions");
   },
   get _permissionList () {
     delete this._permissionList;
     return this._permissionList = document.getElementById("identity-popup-permission-list");
   },
 
+  get isMixedContentBlocked() {
+    return this._secState == "active-blocked";
+  },
+
   /**
    * Rebuild cache of the elements that may or may not exist depending
    * on whether there's a location bar.
    */
   _cacheElements : function() {
     delete this._identityBox;
     delete this._identityIcons;
     delete this._identityIconLabel;
diff --git a/browser/base/content/test/general/browser.ini b/browser/base/content/test/general/browser.ini
--- a/browser/base/content/test/general/browser.ini
+++ b/browser/base/content/test/general/browser.ini
@@ -254,22 +254,25 @@ skip-if = os == "mac" # Bug 1102331 - do
 [browser_bug734076.js]
 [browser_bug735471.js]
 [browser_bug749738.js]
 [browser_bug763468_perwindowpb.js]
 [browser_bug767836_perwindowpb.js]
 [browser_bug783614.js]
 [browser_bug817947.js]
 [browser_bug822367.js]
+tags = mcb
 [browser_bug832435.js]
 [browser_bug839103.js]
 [browser_bug880101.js]
 [browser_bug882977.js]
 [browser_bug902156.js]
+tags = mcb
 [browser_bug906190.js]
+tags = mcb
 skip-if = buildapp == "mulet" || e10s # Bug 1093642 - test manipulates content and relies on content focus
 [browser_mixedContentFromOnunload.js]
 [browser_bug970746.js]
 [browser_bug1015721.js]
 skip-if = os == 'win' || e10s # Bug 1159268 - Need a content-process safe version of synthesizeWheel
 [browser_bug1064280_changeUrlInPinnedTab.js]
 [browser_bug1070778.js]
 [browser_canonizeURL.js]
@@ -481,16 +484,17 @@ skip-if = e10s # Bug 1094240 - has findb
 [browser_no_mcb_on_http_site.js]
 [browser_bug1104165-switchtab-decodeuri.js]
 [browser_bug1003461-switchtab-override.js]
 [browser_bug1024133-switchtab-override-keynav.js]
 [browser_bug1025195_switchToTabHavingURI_aOpenParams.js]
 [browser_addCertException.js]
 skip-if = e10s # Bug 1100687 - test directly manipulates content (content.document.getElementById)
 [browser_bug1045809.js]
+tags = mcb
 [browser_e10s_switchbrowser.js]
 [browser_e10s_about_process.js]
 [browser_e10s_chrome_process.js]
 [browser_e10s_javascript.js]
 [browser_blockHPKP.js]
 tags = psm
 skip-if = e10s # bug 1100687 - test directly manipulates content (content.document.getElementById)
 [browser_mcb_redirect.js]
diff --git a/browser/base/content/test/general/browser_bug1045809.js b/browser/base/content/test/general/browser_bug1045809.js
--- a/browser/base/content/test/general/browser_bug1045809.js
+++ b/browser/base/content/test/general/browser_bug1045809.js
@@ -30,48 +30,39 @@ add_task(function* () {
   yield* test2(gBrowser.getBrowserForTab(tab));
 
   // Test 3: mixed content must be blocked again
   yield promiseTabLoadEvent(tab);
   yield* test3(gBrowser.getBrowserForTab(tab));
 });
 
 function* test1(gTestBrowser) {
-  var notification =
-    PopupNotifications.getNotification("bad-content", gTestBrowser);
-  isnot(notification, null, "Mixed Content Doorhanger did appear in Test1");
-  yield promiseNotificationShown(notification);
-  isnot(PopupNotifications.panel.firstChild.isMixedContentBlocked, 0,
+  let {gIdentityHandler} = gTestBrowser.ownerGlobal;
+  ok(gIdentityHandler.isMixedContentBlocked,
     "Mixed Content is being blocked in Test1");
 
   var x = content.document.getElementsByTagName('iframe')[0].contentDocument.getElementById('mixedContentContainer');
   is(x, null, "Mixed Content is NOT to be found in Test1");
 
   // Disable Mixed Content Protection for the page (and reload)
-  PopupNotifications.panel.firstChild.disableMixedContentProtection();
+  gIdentityHandler.disableMixedContentProtection();
 }
 
 function* test2(gTestBrowser) {
-  var notification =
-    PopupNotifications.getNotification("bad-content", gTestBrowser);
-  isnot(notification, null, "Mixed Content Doorhanger did appear in Test2");
-  yield promiseNotificationShown(notification);
-  is(PopupNotifications.panel.firstChild.isMixedContentBlocked, 0,
+  let {gIdentityHandler} = gTestBrowser.ownerGlobal;
+  ok(!gIdentityHandler.isMixedContentBlocked,
     "Mixed Content is NOT being blocked in Test2");
 
   var x = content.document.getElementsByTagName('iframe')[0].contentDocument.getElementById('mixedContentContainer');
   isnot(x, null, "Mixed Content is to be found in Test2");
 
   // Re-enable Mixed Content Protection for the page (and reload)
-  PopupNotifications.panel.firstChild.enableMixedContentProtection();
+  gIdentityHandler.enableMixedContentProtection();
 }
 
 function* test3(gTestBrowser) {
-  var notification =
-    PopupNotifications.getNotification("bad-content", gTestBrowser);
-  isnot(notification, null, "Mixed Content Doorhanger did appear in Test3");
-  yield promiseNotificationShown(notification);
-  isnot(PopupNotifications.panel.firstChild.isMixedContentBlocked, 0,
+  let {gIdentityHandler} = gTestBrowser.ownerGlobal;
+  ok(gIdentityHandler.isMixedContentBlocked,
     "Mixed Content is being blocked in Test3");
 
   var x = content.document.getElementsByTagName('iframe')[0].contentDocument.getElementById('mixedContentContainer');
   is(x, null, "Mixed Content is NOT to be found in Test3");
 }
diff --git a/browser/base/content/test/general/browser_bug822367.js b/browser/base/content/test/general/browser_bug822367.js
--- a/browser/base/content/test/general/browser_bug822367.js
+++ b/browser/base/content/test/general/browser_bug822367.js
@@ -45,21 +45,20 @@ function test() {
   var url = gHttpTestRoot + "file_bug822367_1.html";
   gTestBrowser.contentWindow.location = url;
 }
 
 // Mixed Script Test
 function MixedTest1A() {
   gTestBrowser.removeEventListener("load", MixedTest1A, true);
   gTestBrowser.addEventListener("load", MixedTest1B, true);
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  ok(notification, "Mixed Content Doorhanger did appear");
-  notification.reshow();
-  ok(PopupNotifications.panel.firstChild.isMixedContentBlocked, "OK: Mixed Content is being blocked");
-  PopupNotifications.panel.firstChild.disableMixedContentProtection();
+
+  let {gIdentityHandler} = gTestBrowser.ownerGlobal;
+  ok(gIdentityHandler.isMixedContentBlocked, "OK: Mixed Content is being blocked");
+  gIdentityHandler.disableMixedContentProtection();
 }
 function MixedTest1B() {
   waitForCondition(function() content.document.getElementById('p1').innerHTML == "hello", MixedTest1C, "Waited too long for mixed script to run in Test 1");
 }
 function MixedTest1C() {
   ok(content.document.getElementById('p1').innerHTML == "hello","Mixed script didn't load in Test 1");
   gTestBrowser.removeEventListener("load", MixedTest1B, true);
   MixedTest2();
@@ -68,36 +67,35 @@ function MixedTest1C() {
 //Mixed Display Test - Doorhanger should not appear
 function MixedTest2() {
   gTestBrowser.addEventListener("load", MixedTest2A, true);
   var url = gHttpTestRoot2 + "file_bug822367_2.html";
   gTestBrowser.contentWindow.location = url;
 }
 
 function MixedTest2A() {
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  ok(!notification, "Mixed Content Doorhanger did not appear for mixed display content!");
+  let {gIdentityHandler} = gTestBrowser.ownerGlobal;
+  ok(!gIdentityHandler.isMixedContentBlocked, "OK: Mixed Content did not appear for mixed display content");
   MixedTest3();
 }
 
 // Mixed Script and Display Test - User Override should cause both the script and the image to load.
 function MixedTest3() {
   gTestBrowser.removeEventListener("load", MixedTest2A, true);
   gTestBrowser.addEventListener("load", MixedTest3A, true);
   var url = gHttpTestRoot + "file_bug822367_3.html";
   gTestBrowser.contentWindow.location = url;
 }
 function MixedTest3A() {
   gTestBrowser.removeEventListener("load", MixedTest3A, true);
   gTestBrowser.addEventListener("load", MixedTest3B, true);
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  ok(notification, "Mixed Content Doorhanger did appear for test 3");
-  notification.reshow();
-  ok(PopupNotifications.panel.firstChild.isMixedContentBlocked, "OK: Mixed Content is being blocked in test 3");
-  PopupNotifications.panel.firstChild.disableMixedContentProtection();
+
+  let {gIdentityHandler} = gTestBrowser.ownerGlobal;
+  ok(gIdentityHandler.isMixedContentBlocked, "OK: Mixed Content is being blocked in test 3");
+  gIdentityHandler.disableMixedContentProtection();
 }
 function MixedTest3B() {
   waitForCondition(function() content.document.getElementById('p1').innerHTML == "hello", MixedTest3C, "Waited too long for mixed script to run in Test 3");
 }
 function MixedTest3C() {
   waitForCondition(function() content.document.getElementById('p2').innerHTML == "bye", MixedTest3D, "Waited too long for mixed image to load in Test 3");
 }
 function MixedTest3D() {
@@ -111,32 +109,29 @@ function MixedTest4() {
   gTestBrowser.removeEventListener("load", MixedTest3B, true);
   gTestBrowser.addEventListener("load", MixedTest4A, true);
   var url = gHttpTestRoot2 + "file_bug822367_4.html";
   gTestBrowser.contentWindow.location = url;
 }
 function MixedTest4A() {
   gTestBrowser.removeEventListener("load", MixedTest4A, true);
   gTestBrowser.addEventListener("load", MixedTest4B, true);
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  ok(notification, "Mixed Content Doorhanger did appear for Test 4");
-  notification.reshow();
-  ok(PopupNotifications.panel.firstChild.isMixedContentBlocked, "OK: Mixed Content is being blocked in Test 4");
-  PopupNotifications.panel.firstChild.disableMixedContentProtection();
+
+  let {gIdentityHandler} = gTestBrowser.ownerGlobal;
+  ok(gIdentityHandler.isMixedContentBlocked, "OK: Mixed Content is being blocked in Test 4");
+  gIdentityHandler.disableMixedContentProtection();
 }
 function MixedTest4B() {
   waitForCondition(function() content.document.location == gHttpTestRoot + "file_bug822367_4B.html", MixedTest4C, "Waited too long for mixed script to run in Test 4");
 }
 function MixedTest4C() {
   ok(content.document.location == gHttpTestRoot + "file_bug822367_4B.html", "Location didn't change in test 4");
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  ok(notification, "Mixed Content Doorhanger did appear after location change in Test 4");
-  notification.reshow();
-  ok(PopupNotifications.panel.firstChild.isMixedContentBlocked, "OK: Mixed Content is being blocked in test 4");
-  notification.remove();
+
+  let {gIdentityHandler} = gTestBrowser.ownerGlobal;
+  ok(gIdentityHandler.isMixedContentBlocked, "OK: Mixed Content is being blocked in test 4");
   waitForCondition(function() content.document.getElementById('p1').innerHTML == "", MixedTest4D, "Mixed script loaded in test 4 after location change!");
 }
 function MixedTest4D() {
   ok(content.document.getElementById('p1').innerHTML == "","p1.innerHTML changed; mixed script loaded after location change in Test 4");
   MixedTest5();
 }
 
 // Mixed script attempts to load in a document.open()
@@ -144,21 +139,20 @@ function MixedTest5() {
   gTestBrowser.removeEventListener("load", MixedTest4B, true);
   gTestBrowser.addEventListener("load", MixedTest5A, true);
   var url = gHttpTestRoot + "file_bug822367_5.html";
   gTestBrowser.contentWindow.location = url;
 }
 function MixedTest5A() {
   gTestBrowser.removeEventListener("load", MixedTest5A, true);
   gTestBrowser.addEventListener("load", MixedTest5B, true);
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  ok(notification, "Mixed Content Doorhanger did appear for Test 5");
-  notification.reshow();
-  ok(PopupNotifications.panel.firstChild.isMixedContentBlocked, "OK: Mixed Content is being blocked in Test 5");
-  PopupNotifications.panel.firstChild.disableMixedContentProtection();
+
+  let {gIdentityHandler} = gTestBrowser.ownerGlobal;
+  ok(gIdentityHandler.isMixedContentBlocked, "OK: Mixed Content is being blocked in Test 5");
+  gIdentityHandler.disableMixedContentProtection();
 }
 function MixedTest5B() {
   waitForCondition(function() content.document.getElementById('p1').innerHTML == "hello", MixedTest5C, "Waited too long for mixed script to run in Test 5");
 }
 function MixedTest5C() {
   ok(content.document.getElementById('p1').innerHTML == "hello","Mixed script didn't load in Test 5");
   MixedTest6();
 }
@@ -167,26 +161,25 @@ function MixedTest5C() {
 function MixedTest6() {
   gTestBrowser.removeEventListener("load", MixedTest5B, true);
   gTestBrowser.addEventListener("load", MixedTest6A, true);
   var url = gHttpTestRoot2 + "file_bug822367_6.html";
   gTestBrowser.contentWindow.location = url;
 }
 function MixedTest6A() {
   gTestBrowser.removeEventListener("load", MixedTest6A, true);
-  waitForCondition(function() PopupNotifications.getNotification("bad-content", gTestBrowser), MixedTest6B, "waited too long for doorhanger");
+  let {gIdentityHandler} = gTestBrowser.ownerGlobal;
+  waitForCondition(() => gIdentityHandler.isMixedContentBlocked, MixedTest6B, "waited too long for doorhanger");
 }
 
 function MixedTest6B() {
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  ok(notification, "Mixed Content Doorhanger did appear for Test 6");
   gTestBrowser.addEventListener("load", MixedTest6C, true);
-  notification.reshow();
-  ok(PopupNotifications.panel.firstChild.isMixedContentBlocked, "OK: Mixed Content is being blocked in Test 6");
-  PopupNotifications.panel.firstChild.disableMixedContentProtection();
+  let {gIdentityHandler} = gTestBrowser.ownerGlobal;
+  ok(gIdentityHandler.isMixedContentBlocked, "OK: Mixed Content is being blocked in Test 6");
+  gIdentityHandler.disableMixedContentProtection();
 }
 
 function MixedTest6C() {
   gTestBrowser.removeEventListener("load", MixedTest6C, true);
   waitForCondition(function() {
     try {
       return content.document.getElementById('f1').contentDocument.getElementById('p1').innerHTML == "hello";
     } catch (e) {
diff --git a/browser/base/content/test/general/browser_bug902156.js b/browser/base/content/test/general/browser_bug902156.js
--- a/browser/base/content/test/general/browser_bug902156.js
+++ b/browser/base/content/test/general/browser_bug902156.js
@@ -45,24 +45,21 @@ function cleanUpAfterTests() {
 //------------------------ Test 1 ------------------------------
 
 function test1A() {
   // Removing EventListener because we have to register a new
   // one once the page is loaded with mixed content blocker disabled
   gTestBrowser.removeEventListener("load", test1A, true);
   gTestBrowser.addEventListener("load", test1B, true);
 
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  ok(notification, "OK: Mixed Content Doorhanger did appear in Test1A!");
-  notification.reshow();
-  ok(PopupNotifications.panel.firstChild.isMixedContentBlocked, "OK: Mixed Content is being blocked in Test1A!");
+  let {gIdentityHandler} = gTestBrowser.ownerGlobal;
+  ok(gIdentityHandler.isMixedContentBlocked, "OK: Mixed Content is being blocked in Test1A!");
 
   // Disable Mixed Content Protection for the page (and reload)
-  PopupNotifications.panel.firstChild.disableMixedContentProtection();
-  notification.remove();
+  gIdentityHandler.disableMixedContentProtection();
 }
 
 function test1B() {
   var expected = "Mixed Content Blocker disabled";
   waitForCondition(
     function() content.document.getElementById('mctestdiv').innerHTML == expected,
     test1C, "Error: Waited too long for mixed script to run in Test 1B");
 }
@@ -80,21 +77,18 @@ function test1C() {
   gTestBrowser.contentWindow.location = url;
 }
 
 function test1D() {
   gTestBrowser.removeEventListener("load", test1D, true);
 
   // The Doorhanger should appear but isMixedContentBlocked should be NOT true,
   // because our decision of disabling the mixed content blocker is persistent.
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  ok(notification, "OK: Mixed Content Doorhanger did appear in Test1D!");
-  notification.reshow();
-  ok(!PopupNotifications.panel.firstChild.isMixedContentBlocked, "OK: Mixed Content is NOT being blocked in Test1D!");
-  notification.remove();
+  let {gIdentityHandler} = gTestBrowser.ownerGlobal;
+  ok(!gIdentityHandler.isMixedContentBlocked, "OK: Mixed Content is NOT being blocked in Test1D!");
 
   var actual = content.document.getElementById('mctestdiv').innerHTML;
   is(actual, "Mixed Content Blocker disabled", "OK: Executed mixed script in Test 1D");
 
   // move on to Test 2
   test2();
 }
 
@@ -107,24 +101,21 @@ function test2() {
 }
 
 function test2A() {
   // Removing EventListener because we have to register a new
   // one once the page is loaded with mixed content blocker disabled
   gTestBrowser.removeEventListener("load", test2A, true);
   gTestBrowser.addEventListener("load", test2B, true);
 
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  ok(notification, "OK: Mixed Content Doorhanger did appear in Test 2A!");
-  notification.reshow();
-  ok(PopupNotifications.panel.firstChild.isMixedContentBlocked, "OK: Mixed Content is being blocked in Test 2A!");
+  let {gIdentityHandler} = gTestBrowser.ownerGlobal;
+  ok(gIdentityHandler.isMixedContentBlocked, "OK: Mixed Content is being blocked in Test 2A!");
 
   // Disable Mixed Content Protection for the page (and reload)
-  PopupNotifications.panel.firstChild.disableMixedContentProtection();
-  notification.remove();
+  gIdentityHandler.disableMixedContentProtection();
 }
 
 function test2B() {
   var expected = "Mixed Content Blocker disabled";
   waitForCondition(
     function() content.document.getElementById('mctestdiv').innerHTML == expected,
     test2C, "Error: Waited too long for mixed script to run in Test 2B");
 }
@@ -143,21 +134,18 @@ function test2C() {
   mctestlink.click();
 }
 
 function test2D() {
   gTestBrowser.removeEventListener("load", test2D, true);
 
   // The Doorhanger should appear but isMixedContentBlocked should be NOT true,
   // because our decision of disabling the mixed content blocker is persistent.
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  ok(notification, "OK: Mixed Content Doorhanger did appear in Test2D!");
-  notification.reshow();
-  ok(!PopupNotifications.panel.firstChild.isMixedContentBlocked, "OK: Mixed Content is NOT being blocked");
-  notification.remove();
+  let {gIdentityHandler} = gTestBrowser.ownerGlobal;
+  ok(!gIdentityHandler.isMixedContentBlocked, "OK: Mixed Content is NOT being blocked");
 
   var actual = content.document.getElementById('mctestdiv').innerHTML;
   is(actual, "Mixed Content Blocker disabled", "OK: Executed mixed script in Test 2D");
 
   // move on to Test 3
   test3();
 }
 
@@ -169,21 +157,18 @@ function test3() {
   gTestBrowser.contentWindow.location = url;
 }
 
 function test3A() {
   // Removing EventListener because we have to register a new
   // one once the page is loaded with mixed content blocker disabled
   gTestBrowser.removeEventListener("load", test3A, true);
 
-  var notification = PopupNotifications.getNotification("bad-content", gTestBrowser);
-  ok(notification, "OK: Mixed Content Doorhanger did appear in Test 3A!");
-  notification.reshow();
-  ok(PopupNotifications.panel.firstChild.isMixedContentBlocked, "OK: Mixed Content is being blocked in Test 3A");
-  notification.remove();
+  let {gIdentityHandler} = gTestBrowser.ownerGlobal;
+  ok(gIdentityHandler.isMixedContentBlocked, "OK: Mixed Content is being blocked in Test 3A");
 
   // We are done with tests, clean up
   cleanUpAfterTests();
 }
 
 //------------------------------------------------------
 
 function test() {
