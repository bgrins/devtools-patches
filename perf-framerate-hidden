# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  f7e955227c2092e8828f5b019079ee28d16ea441
Bug 1246884 - Make sure hidden graphs display isn't overridden by Graphs.js;r=vporof

MozReview-Commit-ID: DH0nt70KTQq

diff --git a/devtools/client/performance/test/browser_perf-options-enable-framerate-01.js b/devtools/client/performance/test/browser_perf-options-enable-framerate-01.js
--- a/devtools/client/performance/test/browser_perf-options-enable-framerate-01.js
+++ b/devtools/client/performance/test/browser_perf-options-enable-framerate-01.js
@@ -16,16 +16,25 @@ const { isVisible } = require("devtools/
 add_task(function*() {
   let { panel } = yield initPerformanceInNewTab({
     url: SIMPLE_URL,
     win: window
   });
 
   let { $, PerformanceController } = panel.panelWin;
 
+  // Start with default framerate setting (visible)
+  yield startRecording(panel);
+  yield stopRecording(panel);
+
+  is(PerformanceController.getCurrentRecording().getConfiguration().withTicks, true,
+    "PerformanceFront started with ticks recording.");
+  ok(isVisible($("#time-framerate")),
+    "The fps graph is not hidden when ticks enabled before recording.");
+
   // Disable framerate to test.
   Services.prefs.setBoolPref(UI_ENABLE_FRAMERATE_PREF, false);
 
   yield startRecording(panel);
   yield stopRecording(panel);
 
   is(PerformanceController.getCurrentRecording().getConfiguration().withTicks, false,
     "PerformanceFront started without ticks recording.");
diff --git a/devtools/client/performance/test/browser_perf-options-enable-framerate-02.js b/devtools/client/performance/test/browser_perf-options-enable-framerate-02.js
--- a/devtools/client/performance/test/browser_perf-options-enable-framerate-02.js
+++ b/devtools/client/performance/test/browser_perf-options-enable-framerate-02.js
@@ -1,14 +1,14 @@
 /* Any copyright is dedicated to the Public Domain.
    http://creativecommons.org/publicdomain/zero/1.0/ */
 "use strict";
 
 /**
- * Tests that toggling `enable-memory` during a recording doesn't change that
+ * Tests that toggling `enable-framerate` during a recording doesn't change that
  * recording's state and does not break.
  */
 
 const { SIMPLE_URL } = require("devtools/client/performance/test/helpers/urls");
 const { UI_ENABLE_FRAMERATE_PREF } = require("devtools/client/performance/test/helpers/prefs");
 const { initPerformanceInNewTab, teardownToolboxAndRemoveTab } = require("devtools/client/performance/test/helpers/panel-utils");
 const { startRecording, stopRecording } = require("devtools/client/performance/test/helpers/actions");
 
diff --git a/devtools/client/performance/test/helpers/dom-utils.js b/devtools/client/performance/test/helpers/dom-utils.js
--- a/devtools/client/performance/test/helpers/dom-utils.js
+++ b/devtools/client/performance/test/helpers/dom-utils.js
@@ -3,17 +3,21 @@
 "use strict";
 
 const Services = require("Services");
 const { waitForMozAfterPaint } = require("devtools/client/performance/test/helpers/wait-utils");
 
 /**
  * Checks if a DOM node is considered visible.
  */
-exports.isVisible = (element) => {
+function isVisible (element) {
+  if (element.ownerDocument.defaultView.getComputedStyle(element).display !== "none") {
+    return true;
+  }
+
   return !element.classList.contains("hidden") && !element.hidden;
 };
 
 /**
  * Appends the provided element to the provided parent node. If run in e10s
  * mode, will also wait for MozAfterPaint to make sure the tab is rendered.
  * Should be reviewed if Bug 1240509 lands.
  */
diff --git a/devtools/client/themes/performance.css b/devtools/client/themes/performance.css
--- a/devtools/client/themes/performance.css
+++ b/devtools/client/themes/performance.css
@@ -20,17 +20,17 @@
   --row-hover-background-color: rgba(76,158,217,0.2);
 }
 
 /**
  * A generic class to hide elements, replacing the `element.hidden` attribute
  * that we use to hide elements that can later be active
  */
 .hidden {
-  display: none;
+  display: none !important;
   width: 0px;
   height: 0px;
 }
 
 /* Toolbar */
 
 #performance-toolbar-control-other {
   -moz-padding-end: 5px;
