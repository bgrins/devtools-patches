
# HG changeset patch
# User Shane Caraveo <scaraveo@mozilla.com>
# Date 1495049958 25200
# Node ID a5d11cd5b15804fa4798448c45a171638e7d8a95
# Parent  85e5d15c31691c89b82d6068c26260416493071f
Bug 1365637 place WE sidebars into the photon sidebar dropdwon, r?mattw,aswan

MozReview-Commit-ID: 91ksKoryZpr

diff --git a/browser/components/extensions/ext-sidebarAction.js b/browser/components/extensions/ext-sidebarAction.js
--- a/browser/components/extensions/ext-sidebarAction.js
+++ b/browser/components/extensions/ext-sidebarAction.js
@@ -135,27 +135,30 @@
     broadcaster.setAttribute("id", this.id);
     broadcaster.setAttribute("autoCheck", "false");
     broadcaster.setAttribute("type", "checkbox");
     broadcaster.setAttribute("group", "sidebar");
     broadcaster.setAttribute("label", details.title);
     broadcaster.setAttribute("sidebarurl", this.sidebarUrl(details.panel));
     // oncommand gets attached to menuitem, so we use the observes attribute to
     // get the command id we pass to SidebarUI.
-    broadcaster.setAttribute("oncommand", "SidebarUI.toggle(this.getAttribute('observes'))");
+    broadcaster.setAttribute("oncommand", "SidebarUI.show(this.getAttribute('observes'))");
 
-    let menuitem = document.createElementNS(XUL_NS, "menuitem");
+    let menuitem = document.createElementNS(XUL_NS, "toolbarbutton");
     menuitem.setAttribute("id", this.menuId);
     menuitem.setAttribute("observes", this.id);
-    menuitem.setAttribute("class", "menuitem-iconic webextension-menuitem");
+    menuitem.setAttribute("class", "subviewbutton subviewbutton-iconic webextension-menuitem");
 
     this.setMenuIcon(menuitem, details);
 
     document.getElementById("mainBroadcasterSet").appendChild(broadcaster);
-    document.getElementById("viewSidebarMenu").appendChild(menuitem);
+    let popup = document.getElementById("sidebarMenu-popup");
+    // Insert before the separator and close items.
+    let before = popup.lastChild.previousSibling;
+    popup.insertBefore(menuitem, before);
 
     return menuitem;
   }
 
   setMenuIcon(menuitem, details) {
     let getIcon = size => IconDetails.escapeUrl(
       IconDetails.getPreferredIcon(details.icon, this.extension, size).icon);
 

