# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  66f91bb7011f2934544de83d9737b611d238cd5b
Bug 1044365 - wait to append the evalled message until after it finsihes

diff --git a/devtools/client/webconsole/webconsole.js b/devtools/client/webconsole/webconsole.js
--- a/devtools/client/webconsole/webconsole.js
+++ b/devtools/client/webconsole/webconsole.js
@@ -3349,18 +3349,23 @@ JSTerm.prototype = {
    * @param function [aCallback]
    *        Optional function to invoke when the result is displayed.
    *        This is deprecated - please use the promise return value instead.
    * @returns Promise
    *          Resolves with the message once the result is displayed.
    */
   execute: function JST_execute(aExecuteString, aCallback)
   {
+    let message = new Messages.Simple(aExecuteString, {
+      category: "input",
+      severity: "log",
+    });
     let deferred = promise.defer();
     let callback = function(msg) {
+      this.hud.output.addMessage(message);
       deferred.resolve(msg);
       if (aCallback) {
         aCallback(msg);
       }
     }
 
     // attempt to execute the content of the inputNode
     aExecuteString = aExecuteString || this.inputNode.value;
@@ -3369,21 +3374,16 @@ JSTerm.prototype = {
     }
 
     let selectedNodeActor = null;
     let inspectorSelection = this.hud.owner.getInspectorSelection();
     if (inspectorSelection && inspectorSelection.nodeFront) {
       selectedNodeActor = inspectorSelection.nodeFront.actorID;
     }
 
-    let message = new Messages.Simple(aExecuteString, {
-      category: "input",
-      severity: "log",
-    });
-    this.hud.output.addMessage(message);
     let onResult = this._executeResultCallback.bind(this, message, callback);
 
     let options = {
       frame: this.SELECTED_FRAME,
       selectedNodeActor: selectedNodeActor,
     };
 
     this.requestEvaluation(aExecuteString, options).then(onResult, onResult);
diff --git a/devtools/server/actors/webconsole.js b/devtools/server/actors/webconsole.js
--- a/devtools/server/actors/webconsole.js
+++ b/devtools/server/actors/webconsole.js
@@ -815,19 +815,21 @@ WebConsoleActor.prototype =
       from: this.actorID,
       resultID: resultID
     });
 
     // Then, execute the script that may pause.
     let response = this.onEvaluateJS(aRequest);
     response.resultID = resultID;
 
-    // Finally, send an unsolicited evaluationResult packet with
-    // the normal return value
-    this.conn.sendActorEvent(this.actorID, "evaluationResult", response);
+    // DevToolsUtils.executeSoon(() => {
+      // Finally, send an unsolicited evaluationResult packet with
+      // the normal return value
+      this.conn.sendActorEvent(this.actorID, "evaluationResult", response);
+    // });
   },
 
   /**
    * Handler for the "evaluateJS" request. This method evaluates the given
    * JavaScript string and sends back the result.
    *
    * @param object aRequest
    *        The JSON request object received from the Web Console client.
