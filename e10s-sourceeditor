# HG changeset patch
# Parent a5be9b4e46e9eb8caaf9196340a318de876e8c81
# User Brian Grinstead <bgrinstead@mozilla.com>
Bug 1030347 - Enable devtools/sourceeditor tests with e10s;r=jwalker

diff --git a/browser/devtools/sourceeditor/test/browser.ini b/browser/devtools/sourceeditor/test/browser.ini
--- a/browser/devtools/sourceeditor/test/browser.ini
+++ b/browser/devtools/sourceeditor/test/browser.ini
@@ -1,10 +1,9 @@
 [DEFAULT]
-skip-if = e10s # Bug ?????? - devtools tests disabled with e10s
 subsuite = devtools
 support-files =
   cm_comment_test.js
   cm_doc_test.js
   cm_driver.js
   cm_emacs_test.js
   cm_mode_test.css
   cm_mode_test.js
diff --git a/browser/devtools/sourceeditor/test/browser_codemirror.js b/browser/devtools/sourceeditor/test/browser_codemirror.js
--- a/browser/devtools/sourceeditor/test/browser_codemirror.js
+++ b/browser/devtools/sourceeditor/test/browser_codemirror.js
@@ -10,29 +10,36 @@ const URI  = "http://" + HOST + "/browse
 function test() {
   requestLongerTimeout(3);
   waitForExplicitFinish();
 
   let tab = gBrowser.addTab();
   gBrowser.selectedTab = tab;
 
   let browser = gBrowser.getBrowserForTab(tab);
+  browser.addEventListener("load", function onLoad() {
+    browser.removeEventListener("load", onLoad, true);
+
+    let mm = browser.messageManager;
+    mm.addMessageListener('setStatus', function listener({data}) {
+      let {statusMsg, type, customMsg} = data;
+      codeMirror_setStatus(statusMsg, type, customMsg);
+    });
+    mm.addMessageListener('done', function listener({data}) {
+      ok (!data.failed, "CodeMirror tests all passed");
+      while (gBrowser.tabs.length > 1) gBrowser.removeCurrentTab();
+      finish();
+    });
+    mm.loadFrameScript('data:,' +
+      'content.wrappedJSObject.mozilla_setStatus = function(statusMsg, type, customMsg) {' +
+      '  sendSyncMessage("setStatus", {statusMsg: statusMsg, type: type, customMsg: customMsg});' +
+      '};' +
+      'function check() { ' +
+      'var win = content; var doc = win.document; var out = doc.getElementById("status"); ' +
+      'if (!out || !out.classList.contains("done")) { return setTimeout(check, 100); }' +
+      '  sendSyncMessage("done", { failed: win.failed });' +
+      '}' +
+      'check();'
+    , true);
+  }, true);
+
   browser.loadURI(URI);
-
-  function check() {
-    var win = browser.contentWindow.wrappedJSObject;
-    var doc = win.document;
-    var out = doc.getElementById("status");
-    if (out && !win.mozilla_setStatus)
-      win.mozilla_setStatus = codeMirror_setStatus;
-
-    if (!out || !out.classList.contains("done"))
-      return void setTimeout(check, 100);
-
-    ok(!win.failed, "CodeMirror tests all passed");
-    win.mozilla_setStatus = null;
-
-    while (gBrowser.tabs.length > 1) gBrowser.removeCurrentTab();
-    finish();
-  }
-
-  setTimeout(check, 100);
 }
diff --git a/browser/devtools/sourceeditor/test/browser_vimemacs.js b/browser/devtools/sourceeditor/test/browser_vimemacs.js
--- a/browser/devtools/sourceeditor/test/browser_vimemacs.js
+++ b/browser/devtools/sourceeditor/test/browser_vimemacs.js
@@ -9,29 +9,36 @@ const URI  = "http://" + HOST + "/browse
 function test() {
   requestLongerTimeout(3);
   waitForExplicitFinish();
 
   let tab = gBrowser.addTab();
   gBrowser.selectedTab = tab;
 
   let browser = gBrowser.getBrowserForTab(tab);
+  browser.addEventListener("load", function onLoad() {
+    browser.removeEventListener("load", onLoad, true);
+
+    let mm = browser.messageManager;
+    mm.addMessageListener('setStatus', function listener({data}) {
+      let {statusMsg, type, customMsg} = data;
+      codeMirror_setStatus(statusMsg, type, customMsg);
+    });
+    mm.addMessageListener('done', function listener({data}) {
+      ok (!data.failed, "CodeMirror tests all passed");
+      while (gBrowser.tabs.length > 1) gBrowser.removeCurrentTab();
+      finish();
+    });
+    mm.loadFrameScript('data:,' +
+      'content.wrappedJSObject.mozilla_setStatus = function(statusMsg, type, customMsg) {' +
+      '  sendSyncMessage("setStatus", {statusMsg: statusMsg, type: type, customMsg: customMsg});' +
+      '};' +
+      'function check() { ' +
+      'var win = content; var doc = win.document; var out = doc.getElementById("status"); ' +
+      'if (!out || !out.classList.contains("done")) { return setTimeout(check, 100); }' +
+      '  sendSyncMessage("done", { failed: win.failed });' +
+      '}' +
+      'check();'
+    , true);
+  }, true);
+
   browser.loadURI(URI);
-
-  function check() {
-    var win = browser.contentWindow.wrappedJSObject;
-    var doc = win.document;
-    var out = doc.getElementById("status");
-    if (out && !win.mozilla_setStatus)
-      win.mozilla_setStatus = codeMirror_setStatus;
-
-    if (!out || !out.classList.contains("done"))
-      return void setTimeout(check, 100);
-
-    ok(!win.failed, "CodeMirror tests all passed");
-    win.mozilla_setStatus = null;
-
-    while (gBrowser.tabs.length > 1) gBrowser.removeCurrentTab();
-    finish();
-  }
-
-  setTimeout(check, 100);
 }
