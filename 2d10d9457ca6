
# HG changeset patch
# User Julian Descottes <jdescottes@mozilla.com>
# Date 1471723743 -7200
# Node ID 2d10d9457ca610ffa4a9e4a1fe8d819059efec3d
# Parent  3ebc785598eee4e31ff83b7cb859cb5b9c9147ce
Bug 1294220 - part1: Move ellipsis character to a localized string in properties file;r=bgrins

The ellipsis character displayed by devtools is now relying on a localized string
in devtools/client/shared.properties instead of a complex preference.

The lazy loading of the ellipsis string has been removed, the ellipsis is retrieved
once when the client/shared/l10n.js file is loaded.

The ellipsis property on the LocalizationHelper instances has been removed in favor
of an ELLIPSIS export on the l10n.js module.

All the previous callers using either LocalizationHelper::ellipsis or retrieving the
intl.ellipsis preference have been migrated to rely on the ELLIPSIS export of l10n.js

MozReview-Commit-ID: 4JG0qbJGCw9

diff --git a/devtools/client/debugger/debugger-controller.js b/devtools/client/debugger/debugger-controller.js
--- a/devtools/client/debugger/debugger-controller.js
+++ b/devtools/client/debugger/debugger-controller.js
@@ -146,7 +146,7 @@
 var DebuggerEditor = require("devtools/client/sourceeditor/debugger");
 var {Tooltip} = require("devtools/client/shared/widgets/Tooltip");
 var FastListWidget = require("devtools/client/shared/widgets/FastListWidget");
-var {LocalizationHelper} = require("devtools/client/shared/l10n");
+var {LocalizationHelper, ELLIPSIS} = require("devtools/client/shared/l10n");
 var {PrefsHelper} = require("devtools/client/shared/prefs");
 var {Task} = require("devtools/shared/task");
 
diff --git a/devtools/client/debugger/test/mochitest/browser_dbg_sources-labels.js b/devtools/client/debugger/test/mochitest/browser_dbg_sources-labels.js
--- a/devtools/client/debugger/test/mochitest/browser_dbg_sources-labels.js
+++ b/devtools/client/debugger/test/mochitest/browser_dbg_sources-labels.js
@@ -8,6 +8,7 @@
  */
 
 const TAB_URL = EXAMPLE_URL + "doc_recursion-stack.html";
+const { ELLIPSIS } = require("devtools/client/shared/l10n");
 
 function test() {
   let gTab, gPanel, gDebugger;
@@ -24,7 +25,6 @@
     gSources = gDebugger.DebuggerView.Sources;
     gUtils = gDebugger.SourceUtils;
 
-    let ellipsis = gPanel.panelWin.L10N.ellipsis;
     let nananana = new Array(20).join(NaN);
 
     // Test trimming url queries.
@@ -40,8 +40,8 @@
     let trimmedLargeLabel = gUtils.trimUrlLength(largeLabel, 1234);
     is(trimmedLargeLabel.length, 1235,
       "Trimming large labels isn't done properly.");
-    ok(trimmedLargeLabel.endsWith(ellipsis),
-      "Trimming large labels should add an ellipsis at the end.");
+    ok(trimmedLargeLabel.endsWith(ELLIPSIS),
+      "Trimming large labels should add an ellipsis at the end : " + ELLIPSIS);
 
     // Test the sources list behaviour with certain urls.
 
@@ -147,7 +147,7 @@
     ok(gSources.getItemForAttachment(e => e.label == "script_t3_3.js"),
       "Source (14) label is incorrect.");
 
-    ok(gSources.getItemForAttachment(e => e.label == nananana + "Batman!" + ellipsis),
+    ok(gSources.getItemForAttachment(e => e.label == nananana + "Batman!" + ELLIPSIS),
       "Source (15) label is incorrect.");
 
     is(gSources.itemCount, urls.filter(({ dupe }) => !dupe).length + 1,
diff --git a/devtools/client/debugger/test/mochitest/browser_dbg_variables-view-large-array-buffer.js b/devtools/client/debugger/test/mochitest/browser_dbg_variables-view-large-array-buffer.js
--- a/devtools/client/debugger/test/mochitest/browser_dbg_variables-view-large-array-buffer.js
+++ b/devtools/client/debugger/test/mochitest/browser_dbg_variables-view-large-array-buffer.js
@@ -11,9 +11,10 @@
 "use strict";
 
 const TAB_URL = EXAMPLE_URL + "doc_large-array-buffer.html";
+const {ELLIPSIS} = require("devtools/client/shared/l10n");
 
-var gTab, gPanel, gDebugger;
-var gVariables, gEllipsis;
+
+var gTab, gPanel, gDebugger, gVariables;
 
 function test() {
   // this test does a lot of work on large objects, default 45s is not enough
@@ -28,7 +29,6 @@
     gPanel = aPanel;
     gDebugger = gPanel.panelWin;
     gVariables = gDebugger.DebuggerView.Variables;
-    gEllipsis = Services.prefs.getComplexValue("intl.ellipsis", Ci.nsIPrefLocalizedString).data;
 
     waitForCaretAndScopes(gPanel, 28, 1)
       .then(() => performTests())
@@ -90,7 +90,7 @@
 ];
 
 function toPageNames(ranges) {
-  return ranges.map(([ from, to ]) => "[" + from + gEllipsis + to + "]");
+  return ranges.map(([ from, to ]) => "[" + from + ELLIPSIS + to + "]");
 }
 
 function performTests() {
@@ -250,5 +250,4 @@
   gPanel = null;
   gDebugger = null;
   gVariables = null;
-  gEllipsis = null;
 });
diff --git a/devtools/client/debugger/utils.js b/devtools/client/debugger/utils.js
--- a/devtools/client/debugger/utils.js
+++ b/devtools/client/debugger/utils.js
@@ -207,13 +207,13 @@
     if (aUrl.length > aLength) {
       switch (aSection) {
         case "start":
-          return L10N.ellipsis + aUrl.slice(-aLength);
+          return ELLIPSIS + aUrl.slice(-aLength);
           break;
         case "center":
-          return aUrl.substr(0, aLength / 2 - 1) + L10N.ellipsis + aUrl.slice(-aLength / 2 + 1);
+          return aUrl.substr(0, aLength / 2 - 1) + ELLIPSIS + aUrl.slice(-aLength / 2 + 1);
           break;
         case "end":
-          return aUrl.substr(0, aLength) + L10N.ellipsis;
+          return aUrl.substr(0, aLength) + ELLIPSIS;
           break;
       }
     }
diff --git a/devtools/client/debugger/views/global-search-view.js b/devtools/client/debugger/views/global-search-view.js
--- a/devtools/client/debugger/views/global-search-view.js
+++ b/devtools/client/debugger/views/global-search-view.js
@@ -666,7 +666,7 @@
   _ellipsis: (function () {
     let label = document.createElement("label");
     label.className = "plain dbg-results-line-contents-string";
-    label.setAttribute("value", L10N.ellipsis);
+    label.setAttribute("value", ELLIPSIS);
     return label;
   })(),
 
diff --git a/devtools/client/inspector/breadcrumbs.js b/devtools/client/inspector/breadcrumbs.js
--- a/devtools/client/inspector/breadcrumbs.js
+++ b/devtools/client/inspector/breadcrumbs.js
@@ -6,15 +6,10 @@
 
 "use strict";
 
-/* eslint-disable mozilla/reject-some-requires */
-const {Ci} = require("chrome");
-/* eslint-enable mozilla/reject-some-requires */
-const Services = require("Services");
 const promise = require("promise");
 
-const ELLIPSIS = Services.prefs.getComplexValue(
-    "intl.ellipsis",
-    Ci.nsIPrefLocalizedString).data;
+const {ELLIPSIS} = require("devtools/client/shared/l10n");
+
 const MAX_LABEL_LENGTH = 40;
 
 const NS_XHTML = "http://www.w3.org/1999/xhtml";
diff --git a/devtools/client/locales/en-US/shared.properties b/devtools/client/locales/en-US/shared.properties
--- a/devtools/client/locales/en-US/shared.properties
+++ b/devtools/client/locales/en-US/shared.properties
@@ -6,6 +6,9 @@
 # of a node or image, like 100×200.
 dimensions=%S\u00D7%S
 
+# LOCALIZATION NOTE (ellipsis): The ellipsis (three dots) character
+ellipsis=…
+
 # LOCALIZATION NOTE (groupCheckbox.tooltip): This is used in the SideMenuWidget
 # as the default tooltip of a group checkbox
 sideMenu.groupCheckbox.tooltip=Toggle all checkboxes in this group
\ No newline at end of file
diff --git a/devtools/client/shared/l10n.js b/devtools/client/shared/l10n.js
--- a/devtools/client/shared/l10n.js
+++ b/devtools/client/shared/l10n.js
@@ -3,7 +3,6 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 "use strict";
 
-const { Ci } = require("chrome");
 const Services = require("Services");
 
 /**
@@ -15,9 +14,6 @@
 function LocalizationHelper(stringBundleName) {
   loader.lazyGetter(this, "stringBundle", () =>
     Services.strings.createBundle(stringBundleName));
-  loader.lazyGetter(this, "ellipsis", () =>
-    Services.prefs.getComplexValue("intl.ellipsis", Ci.nsIPrefLocalizedString)
-                  .data);
 }
 
 LocalizationHelper.prototype = {
@@ -96,6 +92,9 @@
   }
 };
 
+const sharedL10N = new LocalizationHelper("chrome://devtools/locale/shared.properties");
+const ELLIPSIS = sharedL10N.getStr("ellipsis");
+
 /**
  * A helper for having the same interface as LocalizationHelper, but for more
  * than one file. Useful for abstracting l10n string locations.
@@ -131,3 +130,4 @@
 
 exports.LocalizationHelper = LocalizationHelper;
 exports.MultiLocalizationHelper = MultiLocalizationHelper;
+exports.ELLIPSIS = ELLIPSIS;
diff --git a/devtools/client/shared/test/browser_flame-graph-04.js b/devtools/client/shared/test/browser_flame-graph-04.js
--- a/devtools/client/shared/test/browser_flame-graph-04.js
+++ b/devtools/client/shared/test/browser_flame-graph-04.js
@@ -4,13 +4,11 @@
 // Tests that text metrics in the flame graph widget work properly.
 
 var HTML_NS = "http://www.w3.org/1999/xhtml";
-var {LocalizationHelper} = require("devtools/client/shared/l10n");
+var {ELLIPSIS} = require("devtools/client/shared/l10n");
 var {FlameGraph} = require("devtools/client/shared/widgets/FlameGraph");
 var {FLAME_GRAPH_BLOCK_TEXT_FONT_SIZE} = require("devtools/client/shared/widgets/FlameGraph");
 var {FLAME_GRAPH_BLOCK_TEXT_FONT_FAMILY} = require("devtools/client/shared/widgets/FlameGraph");
 
-var L10N = new LocalizationHelper();
-
 add_task(function* () {
   yield addTab("about:blank");
   yield performTest();
@@ -31,7 +29,7 @@
 function testGraph(graph) {
   is(graph._averageCharWidth, getAverageCharWidth(),
     "The average char width was calculated correctly.");
-  is(graph._overflowCharWidth, getCharWidth(L10N.ellipsis),
+  is(graph._overflowCharWidth, getCharWidth(ELLIPSIS),
     "The ellipsis char width was calculated correctly.");
 
   let text = "This text is maybe overflowing";
@@ -54,10 +52,10 @@
   isnot(text50px, text,
     "The fitted text for 50px width is correct (1).");
 
-  ok(text50px.includes(L10N.ellipsis),
+  ok(text50px.includes(ELLIPSIS),
     "The fitted text for 50px width is correct (2).");
 
-  is(graph._getFittedText(text, FLAME_GRAPH_BLOCK_TEXT_FONT_SIZE + 1), L10N.ellipsis,
+  is(graph._getFittedText(text, FLAME_GRAPH_BLOCK_TEXT_FONT_SIZE + 1), ELLIPSIS,
     "The fitted text for text font size width is correct.");
 
   is(graph._getFittedText(text, 1), "",
diff --git a/devtools/client/shared/widgets/FlameGraph.js b/devtools/client/shared/widgets/FlameGraph.js
--- a/devtools/client/shared/widgets/FlameGraph.js
+++ b/devtools/client/shared/widgets/FlameGraph.js
@@ -5,7 +5,7 @@
 
 const { Task } = require("devtools/shared/task");
 const { ViewHelpers, setNamedTimeout } = require("devtools/client/shared/widgets/view-helpers");
-const { LocalizationHelper } = require("devtools/client/shared/l10n");
+const { ELLIPSIS } = require("devtools/client/shared/l10n");
 
 loader.lazyRequireGetter(this, "defer", "devtools/shared/defer");
 loader.lazyRequireGetter(this, "EventEmitter",
@@ -30,8 +30,6 @@
 
 const GRAPH_SRC = "chrome://devtools/content/shared/widgets/graphs-frame.xhtml";
 
-const L10N = new LocalizationHelper();
-
 // ms
 const GRAPH_RESIZE_EVENTS_DRAIN = 100;
 
@@ -301,7 +299,7 @@
    * Character used when a block's text is overflowing.
    * Defaults to an ellipsis.
    */
-  overflowChar: L10N.ellipsis,
+  overflowChar: ELLIPSIS,
 
   /**
    * Sets the data source for this graph.
diff --git a/devtools/client/shared/widgets/VariablesView.jsm b/devtools/client/shared/widgets/VariablesView.jsm
--- a/devtools/client/shared/widgets/VariablesView.jsm
+++ b/devtools/client/shared/widgets/VariablesView.jsm
@@ -29,6 +29,7 @@
 const { Task } = require("devtools/shared/task");
 const nodeConstants = require("devtools/shared/dom-node-constants");
 const {KeyCodes} = require("devtools/client/shared/keycodes");
+const {ELLIPSIS} = require("devtools/client/shared/l10n");
 
 XPCOMUtils.defineLazyModuleGetter(this, "PluralForm",
   "resource://gre/modules/PluralForm.jsm");
@@ -2151,10 +2152,6 @@
 DevToolsUtils.defineLazyPrototypeGetter(Scope.prototype, "_enumItems", Array);
 DevToolsUtils.defineLazyPrototypeGetter(Scope.prototype, "_nonEnumItems", Array);
 
-// An ellipsis symbol (usually "…") used for localization.
-XPCOMUtils.defineLazyGetter(Scope, "ellipsis", () =>
-  Services.prefs.getComplexValue("intl.ellipsis", Ci.nsIPrefLocalizedString).data);
-
 /**
  * A Variable is a Scope holding Property instances.
  * Iterable via "for (let [name, property] of instance) { }".
@@ -3463,7 +3460,7 @@
   },
 
   longString: function ({initial}, {noStringQuotes, noEllipsis}) {
-    let ellipsis = noEllipsis ? "" : Scope.ellipsis;
+    let ellipsis = noEllipsis ? "" : ELLIPSIS;
     if (noStringQuotes) {
       return initial + ellipsis;
     }
@@ -3814,7 +3811,7 @@
             n++;
           }
           if (preview.attributesLength > n) {
-            result += " " + Scope.ellipsis;
+            result += " " + ELLIPSIS;
           }
           return result + ">";
         }
diff --git a/devtools/client/shared/widgets/VariablesViewController.jsm b/devtools/client/shared/widgets/VariablesViewController.jsm
--- a/devtools/client/shared/widgets/VariablesViewController.jsm
+++ b/devtools/client/shared/widgets/VariablesViewController.jsm
@@ -13,7 +13,7 @@
 var Services = require("Services");
 var promise = require("promise");
 var defer = require("devtools/shared/defer");
-var {LocalizationHelper} = require("devtools/client/shared/l10n");
+var {LocalizationHelper, ELLIPSIS} = require("devtools/client/shared/l10n");
 
 Object.defineProperty(this, "WebConsoleUtils", {
   get: function () {
@@ -196,7 +196,7 @@
       // Query the name of the first and last items for this slice
       let deferred = defer();
       iterator.names([start, start + count - 1], ({ names }) => {
-        let label = "[" + names[0] + L10N.ellipsis + names[1] + "]";
+          let label = "[" + names[0] + ELLIPSIS + names[1] + "]";
         let item = aTarget.addItem(label, {}, { internalItem: true });
         item.showArrow();
         this.addExpander(item, sliceGrip);
@@ -343,7 +343,7 @@
       deferred.resolve();
       return deferred.promise;
     }
-    
+
     if (aGrip.class === "Promise" && aGrip.promiseState) {
       const { state, value, reason } = aGrip.promiseState;
       aTarget.addItem("<state>", { value: state }, { internalItem: true });
diff --git a/devtools/client/storage/ui.js b/devtools/client/storage/ui.js
--- a/devtools/client/storage/ui.js
+++ b/devtools/client/storage/ui.js
@@ -7,7 +7,7 @@
 
 const {Task} = require("devtools/shared/task");
 const EventEmitter = require("devtools/shared/event-emitter");
-const {LocalizationHelper} = require("devtools/client/shared/l10n");
+const {LocalizationHelper, ELLIPSIS} = require("devtools/client/shared/l10n");
 const {KeyShortcuts} = require("devtools/client/shared/key-shortcuts");
 const JSOL = require("devtools/client/shared/vendor/jsol");
 const {KeyCodes} = require("devtools/client/shared/keycodes");
@@ -56,7 +56,7 @@
 
 function addEllipsis(name) {
   if (name.length > ITEM_NAME_MAX_LENGTH) {
-    return name.substr(0, ITEM_NAME_MAX_LENGTH) + L10N.ellipsis;
+    return name.substr(0, ITEM_NAME_MAX_LENGTH) + ELLIPSIS;
   }
 
   return name;
diff --git a/devtools/client/webconsole/console-output.js b/devtools/client/webconsole/console-output.js
--- a/devtools/client/webconsole/console-output.js
+++ b/devtools/client/webconsole/console-output.js
@@ -8,8 +8,6 @@
 
 const {Ci, Cu} = require("chrome");
 
-const Services = require("Services");
-
 loader.lazyImporter(this, "VariablesView", "resource://devtools/client/shared/widgets/VariablesView.jsm");
 loader.lazyImporter(this, "escapeHTML", "resource://devtools/client/shared/widgets/VariablesView.jsm");
 loader.lazyImporter(this, "PluralForm", "resource://gre/modules/PluralForm.jsm");
@@ -31,7 +29,7 @@
 const nodeConstants = require("devtools/shared/dom-node-constants");
 
 const MAX_STRING_GRIP_LENGTH = 36;
-const ELLIPSIS = Services.prefs.getComplexValue("intl.ellipsis", Ci.nsIPrefLocalizedString).data;
+const {ELLIPSIS} = require("devtools/client/shared/l10n");
 
 const validProtocols = /^(http|https|ftp|data|javascript|resource|chrome):/i;
 
diff --git a/devtools/client/webconsole/test/browser_webconsole_output_05.js b/devtools/client/webconsole/test/browser_webconsole_output_05.js
--- a/devtools/client/webconsole/test/browser_webconsole_output_05.js
+++ b/devtools/client/webconsole/test/browser_webconsole_output_05.js
@@ -8,8 +8,7 @@
 "use strict";
 
 const TEST_URI = "data:text/html;charset=utf8,test for console output - 05";
-const ELLIPSIS = Services.prefs.getComplexValue("intl.ellipsis",
-  Ci.nsIPrefLocalizedString).data;
+const {ELLIPSIS} = require("devtools/client/shared/l10n");
 
 // March, 1960: The first implementation of Lisp. From Wikipedia:
 //
diff --git a/devtools/client/webconsole/test/browser_webconsole_output_06.js b/devtools/client/webconsole/test/browser_webconsole_output_06.js
--- a/devtools/client/webconsole/test/browser_webconsole_output_06.js
+++ b/devtools/client/webconsole/test/browser_webconsole_output_06.js
@@ -8,8 +8,8 @@
 // Test the webconsole output for various arrays.
 
 const TEST_URI = "data:text/html;charset=utf8,test for console output - 06";
-const ELLIPSIS = Services.prefs.getComplexValue("intl.ellipsis",
-  Ci.nsIPrefLocalizedString).data;
+const {ELLIPSIS} = require("devtools/client/shared/l10n");
+
 const testStrIn = "SHOW\\nALL\\nOF\\nTHIS\\nON\\nA\\nSINGLE" +
                   "\\nLINE ONLY. ESCAPE ALL NEWLINE";
 const testStrOut = "SHOW ALL OF THIS ON A SINGLE LINE O" + ELLIPSIS;

