# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  1aa4c60fbfdbf868dc9f6775053b686889fb379a
Bug 1224073 - Instead of unsafeDereference to get the string of an error in a worker, pass it back to the debugger

diff --git a/devtools/client/debugger/test/mochitest/browser_dbg_worker-console.js b/devtools/client/debugger/test/mochitest/browser_dbg_worker-console.js
--- a/devtools/client/debugger/test/mochitest/browser_dbg_worker-console.js
+++ b/devtools/client/debugger/test/mochitest/browser_dbg_worker-console.js
@@ -83,18 +83,17 @@ add_task(function* testWhilePaused() {
 
   info ("Trying to get the result of command2");
   executed = yield command2;
   ok(executed.textContent.includes("10003"),
       "command2 executed successfully");
 
   info ("Trying to get the result of command3")
   executed = yield command3;
-  // XXXworkers This is failing until Bug 1215120 is resolved.
-  todo(executed.textContent.includes("ReferenceError: foobar is not defined"),
+  ok(executed.textContent.includes("ReferenceError: foobar is not defined"),
       "command3 executed successfully");
 
   let onceResumed = gTarget.once("thread-resumed");
   EventUtils.sendMouseEvent({ type: "mousedown" }, gResumeButton, gDebugger);
   yield onceResumed;
 
   yield gDevTools.closeToolbox(TargetFactory.forWorker(workerClient));
   terminateWorkerInTab(tab, WORKER_URL);
diff --git a/devtools/server/actors/webconsole.js b/devtools/server/actors/webconsole.js
--- a/devtools/server/actors/webconsole.js
+++ b/devtools/server/actors/webconsole.js
@@ -837,23 +837,31 @@ WebConsoleActor.prototype =
     if (evalResult) {
       if ("return" in evalResult) {
         result = evalResult.return;
       } else if ("yield" in evalResult) {
         result = evalResult.yield;
       } else if ("throw" in evalResult) {
         let error = evalResult.throw;
         errorGrip = this.createValueGrip(error);
-        // XXXworkers: Calling unsafeDereference() returns an object with no
-        // toString method in workers. See Bug 1215120.
-        let unsafeDereference = error && (typeof error === "object") &&
-                                error.unsafeDereference();
-        errorMessage = unsafeDereference && unsafeDereference.toString
-          ? unsafeDereference.toString()
-          : "" + error;
+        if (isWorker) {
+          // XXXworkers: Calling unsafeDereference() returns an object with no
+          // toString method in workers. See Bug 1224073.
+          let dbgWindow = this.dbg.makeGlobalObjectReference(this.evalWindow);
+          let evalErrorString = dbgWindow.executeInGlobalWithBindings("_self.toString()",
+                                                                      {_self: error});
+          errorMessage = evalErrorString.return;
+        } else {
+          let unsafeDereference = error && (typeof error === "object") &&
+                                  error.unsafeDereference();
+          errorMessage = unsafeDereference
+            ? unsafeDereference.toString()
+            : "" + error;
+
+        }
       }
     }
 
     // If a value is encountered that the debugger server doesn't support yet,
     // the console should remain functional.
     let resultGrip;
     try {
       resultGrip = this.createValueGrip(result);
