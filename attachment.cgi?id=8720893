# HG changeset patch
# User Helen V. Holmes <helen.v.holmes@gmail.com>

Bug 1242709, refresh the light theme

Change over gcli colors and address code review

Change splitter colors for two themes

Remove dark theme changes, r=bgrins
---
 1243406.patch                                      | 384 +++++++++++++++++++++
 browser/themes/shared/devedition.inc.css           |   6 +-
 .../dev-edition-promo/dev-edition-promo.css        |   2 +-
 .../test/browser_perf-theme-toggle-01.js           |   2 +-
 devtools/client/themes/commandline.css             |   8 +-
 devtools/client/themes/commandline.inc.css         |  12 +-
 devtools/client/themes/dark-theme.css              |   8 +-
 devtools/client/themes/images/itemArrow-ltr.svg    |   4 +-
 devtools/client/themes/images/itemArrow-rtl.svg    |   4 +-
 devtools/client/themes/light-theme.css             |   6 +-
 .../client/themes/projecteditor/projecteditor.css  |   2 +-
 devtools/client/themes/splitters.css               |  14 +-
 devtools/client/themes/toolbars.css                |  10 -
 devtools/client/themes/variables.css               |  18 +-
 devtools/client/themes/webconsole.css              |   2 +-
 devtools/client/themes/widgets.css                 |   6 +-
 16 files changed, 434 insertions(+), 54 deletions(-)
 create mode 100644 1243406.patch

diff --git a/1243406.patch b/1243406.patch
new file mode 100644
index 0000000..d97f684
--- /dev/null
+++ b/1243406.patch
@@ -0,0 +1,384 @@
+commit a7c6c0598ced6470900f81b8c47a887c2ec5f8a8
+Author: James Long <longster@gmail.com>
+Date:   Thu Feb 4 10:03:08 2016 -0500
+
+    Bug 1243406 - enable CSS/SVG/PNG hot reloading for all devtools panels r=bgrins
+
+diff --git a/devtools/client/debugger/debugger.xul b/devtools/client/debugger/debugger.xul
+index 18fa32f..b71d154 100644
+--- a/devtools/client/debugger/debugger.xul
++++ b/devtools/client/debugger/debugger.xul
+@@ -1,15 +1,15 @@
+ <?xml version="1.0" encoding="utf-8"?>
+ <!-- This Source Code Form is subject to the terms of the Mozilla Public
+    - License, v. 2.0. If a copy of the MPL was not distributed with this
+    - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
+ <?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
+ <?xml-stylesheet href="chrome://devtools/content/shared/widgets/widgets.css" type="text/css"?>
+-<?xml-stylesheet href="debugger.css" type="text/css"?>
++<?xml-stylesheet href="chrome://devtools/content/debugger/debugger.css" type="text/css"?>
+ <?xml-stylesheet href="chrome://devtools/skin/common.css" type="text/css"?>
+ <?xml-stylesheet href="chrome://devtools/skin/widgets.css" type="text/css"?>
+ <?xml-stylesheet href="chrome://devtools/skin/debugger.css" type="text/css"?>
+ <!DOCTYPE window [
+   <!ENTITY % debuggerDTD SYSTEM "chrome://devtools/locale/debugger.dtd">
+   %debuggerDTD;
+ ]>
+ <?xul-overlay href="chrome://global/content/editMenuOverlay.xul"?>
+diff --git a/devtools/client/shared/browser-loader.js b/devtools/client/shared/browser-loader.js
+index 66d3dc6..03778f5 100644
+--- a/devtools/client/shared/browser-loader.js
++++ b/devtools/client/shared/browser-loader.js
+@@ -18,42 +18,26 @@ const BROWSER_BASED_DIRS = [
+   "resource://devtools/client/shared/redux"
+ ];
+ 
+ function clearCache() {
+   Services.obs.notifyObservers(null, "startupcache-invalidate", null);
+ }
+ 
+ function hotReloadFile(window, require, loader, componentProxies, fileURI) {
+-  dump("Hot reloading: " + fileURI + "\n");
+-
+   if (fileURI.match(/\.js$/)) {
+     // Test for React proxy components
+     const proxy = componentProxies.get(fileURI);
+     if (proxy) {
+       // Remove the old module and re-require the new one; the require
+       // hook in the loader will take care of the rest
+       delete loader.modules[fileURI];
+       clearCache();
+       require(fileURI);
+     }
+-  } else if (fileURI.match(/\.css$/)) {
+-    const links = [...window.document.getElementsByTagNameNS("http://www.w3.org/1999/xhtml", "link")];
+-    links.forEach(link => {
+-      if (link.href.indexOf(fileURI) === 0) {
+-        const parentNode = link.parentNode;
+-        const newLink = window.document.createElementNS("http://www.w3.org/1999/xhtml", "link");
+-        newLink.rel = "stylesheet";
+-        newLink.type = "text/css";
+-        newLink.href = fileURI + "?s=" + Math.random();
+-
+-        parentNode.insertBefore(newLink, link);
+-        parentNode.removeChild(link);
+-      }
+-    });
+   }
+ }
+ 
+ /*
+  * Create a loader to be used in a browser environment. This evaluates
+  * modules in their own environment, but sets window (the normal
+  * global object) as the sandbox prototype, so when a variable is not
+  * defined it checks `window` before throwing an error. This makes all
+@@ -146,18 +130,21 @@ function BrowserLoader(baseURI, window) {
+ 
+ 
+   const mainModule = loaders.Module(baseURI, joinURI(baseURI, "main.js"));
+   const mainLoader = loaders.Loader(opts);
+   const require = loaders.Require(mainLoader, mainModule);
+ 
+   if (hotReloadEnabled) {
+     const watcher = devtools.require("devtools/client/shared/file-watcher");
+-    function onFileChanged(_, fileURI) {
+-      hotReloadFile(window, require, mainLoader, componentProxies, fileURI);
++    function onFileChanged(_, relativePath) {
++      hotReloadFile(
++        window, require, mainLoader, componentProxies,
++        "resource://devtools/" + relativePath
++      );
+     }
+     watcher.on("file-changed", onFileChanged);
+ 
+     window.addEventListener("unload", () => {
+       watcher.off("file-changed", onFileChanged);
+     });
+   }
+ 
+diff --git a/devtools/client/shared/css-reload.js b/devtools/client/shared/css-reload.js
+new file mode 100644
+index 0000000..0638986
+--- /dev/null
++++ b/devtools/client/shared/css-reload.js
+@@ -0,0 +1,138 @@
++const { Services } = require("resource://gre/modules/Services.jsm");
++const { getTheme } = require("devtools/client/shared/theme");
++
++function iterStyleNodes(window, func) {
++  for (let node of window.document.childNodes) {
++    if (node.nodeType === 7) {
++      func(node);
++    }
++  }
++
++  const links = window.document.getElementsByTagNameNS(
++    "http://www.w3.org/1999/xhtml", "link"
++  );
++  for (let node of links) {
++    func(node);
++  }
++}
++
++function replaceCSS(window, fileURI) {
++  const document = window.document;
++  Services.obs.notifyObservers(null, "startupcache-invalidate", null);
++
++  // Special-case these two files that are imported by the theme and
++  // reload the entire theme file instead.
++  if (fileURI === "chrome://devtools/skin/variables.css" ||
++     fileURI === "chrome://devtools/skin/toolbars.css") {
++    fileURI = "chrome://devtools/skin/" + getTheme() + "-theme.css"
++  }
++
++  // Scan every CSS tag and reload ones that match the file we are
++  // looking for.
++  iterStyleNodes(window, node => {
++    if (node.nodeType === 7) {
++      // xml-stylesheet declaration
++      if (node.data.includes(fileURI)) {
++        const newNode = window.document.createProcessingInstruction(
++          "xml-stylesheet",
++          "href=\"" + fileURI + "?s=" + Math.random() +
++            "\" type=\"text/css\""
++        );
++        document.insertBefore(newNode, node);
++        document.removeChild(node);
++      }
++    } else {
++      if (node.href.includes(fileURI)) {
++        const parentNode = node.parentNode;
++        const newNode = window.document.createElementNS(
++          "http://www.w3.org/1999/xhtml",
++          "link"
++        );
++        newNode.rel = "stylesheet";
++        newNode.type = "text/css";
++        newNode.href = fileURI + "?s=" + Math.random();
++
++        parentNode.insertBefore(newNode, node);
++        parentNode.removeChild(node);
++      }
++    }
++  });
++}
++
++function _replaceResourceInSheet(sheet, filename) {
++  for (var i = 0; i < sheet.cssRules.length; i++) {
++    const rule = sheet.cssRules[i];
++    if (rule.type === rule.IMPORT_RULE) {
++      _replaceResourceInSheet(rule.styleSheet, filename);
++    }
++    else if (rule.cssText.includes(filename)) {
++      // Strip off any existing query strings. This might lose
++      // updates for files if there are multiple resources
++      // referenced in the same rule, but the chances of someone hot
++      // reloading multiple resources in the same rule is very low.
++      const text = rule.cssText.replace(/\?s=0.\d+/g, '');
++      const newRule = (
++        text.replace(filename, filename + "?s=" + Math.random())
++      );
++
++      sheet.deleteRule(i);
++      sheet.insertRule(newRule, i);
++    }
++  }
++}
++
++function replaceCSSResource(window, fileURI) {
++  const document = window.document;
++
++  // Only match the filename. False positives are much better than
++  // missing updates, as all that would happen is we reload more
++  // resources than we need. We do this because many resources only
++  // use relative paths.
++  const parts = fileURI.split('/');
++  const file = parts[parts.length - 1];
++
++  // Scan every single rule in the entire page for any reference to
++  // this resource, and re-insert the rule to force it to update.
++  for (let sheet of document.styleSheets) {
++    _replaceResourceInSheet(sheet, file);
++  }
++
++  for(let node of document.querySelectorAll('img,image')) {
++    if(node.src.startsWith(fileURI)) {
++      node.src = fileURI + "?s=" + Math.random();
++    }
++  }
++}
++
++function watchCSS(window) {
++  if (Services.prefs.getBoolPref("devtools.loader.hotreload")) {
++    const watcher = require("devtools/client/shared/file-watcher");
++
++    function onFileChanged(_, relativePath) {
++      if (relativePath.match(/\.css$/)) {
++        if (relativePath.startsWith("client/themes")) {
++          relativePath = relativePath.replace(/^client\/themes\//, "")
++          replaceCSS(window, "chrome://devtools/skin/" + relativePath);
++          return;
++        }
++
++        replaceCSS(
++          window,
++          "chrome://devtools/content/" +
++            relativePath.replace(/^client\//, "")
++        );
++        replaceCSS(window, "resource://devtools/" + relativePath);
++      } else if (relativePath.match(/\.(svg|png)$/)) {
++        relativePath = relativePath.replace(/^client\/themes\//, '');
++        replaceCSSResource(window, "chrome://devtools/skin/" + relativePath);
++      }
++    }
++    watcher.on("file-changed", onFileChanged);
++
++    window.addEventListener("unload", () => {
++      watcher.off("file-changed", onFileChanged);
++    });
++  }
++}
++
++module.exports = { watchCSS };
+diff --git a/devtools/client/shared/file-watcher.js b/devtools/client/shared/file-watcher.js
+index f423a64..6cdceee 100644
+--- a/devtools/client/shared/file-watcher.js
++++ b/devtools/client/shared/file-watcher.js
+@@ -1,16 +1,18 @@
+ /* This Source Code Form is subject to the terms of the Mozilla Public
+  * License, v. 2.0. If a copy of the MPL was not distributed with this
+  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+ "use strict";
+ 
+-const { Ci, ChromeWorker } = require("chrome");
++const { Ci, Cu, ChromeWorker } = require("chrome");
+ const { Services } = require("resource://gre/modules/Services.jsm");
+ const EventEmitter = require("devtools/shared/event-emitter");
++const { joinURI } = require("devtools/shared/path");
++Cu.import("resource://gre/modules/AppConstants.jsm");
+ 
+ const HOTRELOAD_PREF = "devtools.loader.hotreload";
+ 
+ function resolveResourceURI(uri) {
+   const handler = Services.io.getProtocolHandler("resource")
+         .QueryInterface(Ci.nsIResProtocolHandler);
+   return handler.resolveURI(Services.io.newURI(uri, null, null));
+ }
+@@ -18,51 +20,52 @@ function resolveResourceURI(uri) {
+ function watchFiles(path, onFileChanged) {
+   if (!path.startsWith("devtools/")) {
+     throw new Error("`watchFiles` expects a devtools path");
+   }
+ 
+   // We need to figure out a local path to watch. We start with
+   // whatever devtools points to.
+   let resolvedRootURI = resolveResourceURI("resource://devtools");
+-  if (resolvedRootURI.match(/\/obj\-.*/)) {
++
++  const appNameIndex = resolvedRootURI.indexOf(AppConstants.MOZ_MACBUNDLE_NAME);
++  if (appNameIndex !== -1) {
+     // Move from the built directory to the user's local files
+-    resolvedRootURI = resolvedRootURI.replace(/\/obj\-.*/, "") + "/devtools";
++    resolvedRootURI = resolvedRootURI.slice(0, appNameIndex);
++    resolvedRootURI = joinURI(resolvedRootURI, "../..") + "devtools/";
+   }
++
+   resolvedRootURI = resolvedRootURI.replace(/^file:\/\//, "");
+-  const localURI = resolvedRootURI + "/" + path.replace(/^devtools\//, "");
++  const localURI = resolvedRootURI + path.replace(/^devtools\//, "");
+ 
+   const watchWorker = new ChromeWorker(
+     "resource://devtools/client/shared/file-watcher-worker.js"
+   );
+ 
+   watchWorker.onmessage = event => {
+     // We need to turn a local path back into a resource URI (or
+     // chrome). This means that this system will only work when built
+     // files are symlinked, so that these URIs actually read from
+     // local sources. There might be a better way to do this.
+-    const relativePath = event.data.replace(resolvedRootURI + "/", "");
+-    if (relativePath.startsWith("client/themes")) {
+-      onFileChanged(relativePath.replace("client/themes",
+-                                         "chrome://devtools/skin"));
+-    }
+-    onFileChanged("resource://devtools/" + relativePath);
++    const fullPath = event.data;
++    const relativePath = event.data.replace(resolvedRootURI, "");
++    onFileChanged(relativePath, fullPath);
+   };
+ 
+-  watchWorker.postMessage({ path: localURI, fileRegex: /\.(js|css)$/ });
++  watchWorker.postMessage({ path: localURI, fileRegex: /\.(js|css|svg|png)$/ });
+   return watchWorker;
+ }
+ 
+ EventEmitter.decorate(module.exports);
+ 
+ let watchWorker;
+ function onPrefChange() {
+   if (Services.prefs.getBoolPref(HOTRELOAD_PREF) && !watchWorker) {
+-    watchWorker = watchFiles("devtools/client", changedFile => {
+-      module.exports.emit("file-changed", changedFile);
++    watchWorker = watchFiles("devtools/client", (relativePath, fullPath) => {
++      module.exports.emit("file-changed", relativePath, fullPath);
+     });
+   }
+   else if(watchWorker) {
+     watchWorker.terminate();
+     watchWorker = null;
+   }
+ }
+ 
+diff --git a/devtools/client/shared/moz.build b/devtools/client/shared/moz.build
+index 21f2dbb..41831a4 100644
+--- a/devtools/client/shared/moz.build
++++ b/devtools/client/shared/moz.build
+@@ -14,16 +14,17 @@ DIRS += [
+     'widgets',
+ ]
+ 
+ DevToolsModules(
+     'AppCacheUtils.jsm',
+     'autocomplete-popup.js',
+     'browser-loader.js',
+     'css-parsing-utils.js',
++    'css-reload.js',
+     'Curl.jsm',
+     'demangle.js',
+     'DeveloperToolbar.jsm',
+     'devices.js',
+     'DOMHelpers.jsm',
+     'doorhanger.js',
+     'file-watcher-worker.js',
+     'file-watcher.js',
+diff --git a/devtools/client/shared/theme-switching.js b/devtools/client/shared/theme-switching.js
+index c5c85ec..84946ed 100644
+--- a/devtools/client/shared/theme-switching.js
++++ b/devtools/client/shared/theme-switching.js
+@@ -155,22 +155,25 @@
+     if (data.pref == "devtools.theme") {
+       switchTheme(data.newValue, data.oldValue);
+     }
+   }
+ 
+   const { classes: Cc, interfaces: Ci, utils: Cu } = Components;
+   Cu.import("resource://gre/modules/Services.jsm");
+   Cu.import("resource://devtools/client/framework/gDevTools.jsm");
+-  const {require} = Components.utils.import("resource://devtools/shared/Loader.jsm", {});
++  const { require } = Cu.import("resource://devtools/shared/Loader.jsm", {});
+   const StylesheetUtils = require("sdk/stylesheet/utils");
++  const { watchCSS } = require("devtools/client/shared/css-reload");
+ 
+   if (documentElement.hasAttribute("force-theme")) {
+     switchTheme(documentElement.getAttribute("force-theme"));
+   } else {
+     switchTheme(Services.prefs.getCharPref("devtools.theme"));
+ 
+     gDevTools.on("pref-changed", handlePrefChange);
+     window.addEventListener("unload", function() {
+       gDevTools.off("pref-changed", handlePrefChange);
+     });
+   }
++
++  watchCSS(window);
+ })();
diff --git a/browser/themes/shared/devedition.inc.css b/browser/themes/shared/devedition.inc.css
index 43ebbc3..c755dba 100644
--- a/browser/themes/shared/devedition.inc.css
+++ b/browser/themes/shared/devedition.inc.css
@@ -75,7 +75,7 @@
   --chrome-secondary-background-color: #f5f6f7;
   --chrome-navigator-toolbox-separator-color: #cccccc;
   --chrome-nav-bar-separator-color: #B6B6B8;
-  --chrome-nav-buttons-background: #fcfcfc;
+  --chrome-nav-buttons-background: #ffffff; /* --theme-body-background */
   --chrome-nav-buttons-hover-background: #DADBDB;
   --chrome-nav-bar-controls-border-color: #ccc;
   --chrome-selection-color: #f5f7fa;
@@ -85,9 +85,7 @@
   --tab-hover-background-color: #D7D8DA;
   --tab-selection-color: #f5f7fa;
   --tab-selection-background-color: #4c9ed9;
-  --tab-selection-box-shadow: 0 2px 0 #9FDFFF inset,
-                              0 -2px 0 rgba(0,0,0,.05) inset,
-                              0 -1px 0 rgba(0,0,0,.2) inset;
+  --tab-selection-box-shadow: none;
   --pinned-tab-glow: radial-gradient(22px at center calc(100% - 2px), rgba(76,158,217,0.9) 13%, transparent 16%);
 
 
diff --git a/devtools/client/framework/dev-edition-promo/dev-edition-promo.css b/devtools/client/framework/dev-edition-promo/dev-edition-promo.css
index 01489fd..93bf601 100644
--- a/devtools/client/framework/dev-edition-promo/dev-edition-promo.css
+++ b/devtools/client/framework/dev-edition-promo/dev-edition-promo.css
@@ -90,5 +90,5 @@ window {
 #go {
   margin-left: 100px;
   background-color: #70bf53; /* green */
-  color: #f5f7fa; /* selection text color */
+  color: white; /* --theme-body-color */
 }
diff --git a/devtools/client/performance/test/browser_perf-theme-toggle-01.js b/devtools/client/performance/test/browser_perf-theme-toggle-01.js
index c437a9f..8d78dcb 100644
--- a/devtools/client/performance/test/browser_perf-theme-toggle-01.js
+++ b/devtools/client/performance/test/browser_perf-theme-toggle-01.js
@@ -8,7 +8,7 @@
 
 const { setTheme } = require("devtools/client/shared/theme");
 
-const LIGHT_BG = "#fcfcfc";
+const LIGHT_BG = "white";
 const DARK_BG = "#14171a";
 
 setTheme("dark");
diff --git a/devtools/client/themes/commandline.css b/devtools/client/themes/commandline.css
index 7666eed..8a62c71 100644
--- a/devtools/client/themes/commandline.css
+++ b/devtools/client/themes/commandline.css
@@ -8,10 +8,10 @@
    since they aren't loaded in this context (within commandlineoutput.xhtml
    and commandlinetooltip.xhtml). */
 :root[devtoolstheme="light"] {
-  --gcli-background-color: #ebeced; /* --theme-tab-toolbar-background */
-  --gcli-input-focused-background: #f7f7f7; /* --theme-sidebar-background */
-  --gcli-input-color: #18191a; /* --theme-body-color */
-  --gcli-border-color: #aaaaaa; /* --theme-splitter-color */
+  --gcli-background-color: #fcfcfc; /* --theme-tab-toolbar-background */
+  --gcli-input-focused-background: #ffffff; /* --theme-sidebar-background */
+  --gcli-input-color: #393f4c; /* --theme-body-color */
+  --gcli-border-color: #dde1e4; /* --theme-splitter-color */
 }
 
 :root[devtoolstheme="dark"] {
diff --git a/devtools/client/themes/commandline.inc.css b/devtools/client/themes/commandline.inc.css
index 54a4924..65cdb0e 100644
--- a/devtools/client/themes/commandline.inc.css
+++ b/devtools/client/themes/commandline.inc.css
@@ -10,13 +10,13 @@
    We are copy/pasting variables from light-theme and dark-theme,
    since they aren't loaded in this context (within browser.css). */
 :root[devtoolstheme="light"] #developer-toolbar {
-  --gcli-background-color: #ebeced; /* --theme-tab-toolbar-background */
-  --gcli-input-background: #f0f1f2; /* --theme-toolbar-background */
-  --gcli-input-focused-background: #f7f7f7; /* --theme-sidebar-background */
-  --gcli-input-color: #18191a; /* --theme-body-color */
-  --gcli-border-color: #aaaaaa; /* --theme-splitter-color */
+  --gcli-background-color: #fcfcfc; /* --theme-tab-toolbar-background */
+  --gcli-input-background: #fcfcfc; /* --theme-toolbar-background */
+  --gcli-input-focused-background: #ffffff; /* --theme-sidebar-background */
+  --gcli-input-color: #393f4c; /* --theme-body-color */
+  --gcli-border-color: #dde1e4; /* --theme-splitter-color */
   --selection-background: #4c9ed9; /* --theme-selection-background */
-  --selection-color: #f5f7fa; /* --theme-selection-color */
+  --selection-color: #ffffff; /* --theme-selection-color */
 }
 
 :root[devtoolstheme="dark"] #developer-toolbar {
diff --git a/devtools/client/themes/dark-theme.css b/devtools/client/themes/dark-theme.css
index 573110b..5d0c74ba 100644
--- a/devtools/client/themes/dark-theme.css
+++ b/devtools/client/themes/dark-theme.css
@@ -68,13 +68,13 @@ body {
 }
 
 .theme-gutter {
-  background-color: #0f171f;
+  background-color: var(--theme-tab-toolbar-background);
   color: var(--theme-content-color3);
-  border-color: #303b47;
+  border-color: var(--theme-splitter-color);
 }
 
-.theme-separator { /* grey */
-  border-color: #303b47;
+.theme-separator {
+  border-color: var(--theme-splitter-color);
 }
 
 .theme-fg-color1,
diff --git a/devtools/client/themes/images/itemArrow-ltr.svg b/devtools/client/themes/images/itemArrow-ltr.svg
index bca667a..a9f7b33 100644
--- a/devtools/client/themes/images/itemArrow-ltr.svg
+++ b/devtools/client/themes/images/itemArrow-ltr.svg
@@ -2,6 +2,6 @@
    - License, v. 2.0. If a copy of the MPL was not distributed with this
    - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
 <svg width="7" xmlns="http://www.w3.org/2000/svg" height="12" viewBox="0 0 7 12">
-  <path fill="#f7f7f7" d="M7,11.6 7,.4 1.5,6z"/>
-  <path fill="#ababab" d="M7,0 6,0 0,6 6,12 7,12 7,11.6 1.5,6 7,.4z"/>
+  <path fill="#ffffff" d="M7,11.6 7,.4 1.5,6z"/>
+  <path fill="#dde1e4" d="M7,0 6,0 0,6 6,12 7,12 7,11.6 1.5,6 7,.4z"/>
 </svg>
diff --git a/devtools/client/themes/images/itemArrow-rtl.svg b/devtools/client/themes/images/itemArrow-rtl.svg
index e83fa63..80ea9e8 100755
--- a/devtools/client/themes/images/itemArrow-rtl.svg
+++ b/devtools/client/themes/images/itemArrow-rtl.svg
@@ -2,6 +2,6 @@
    - License, v. 2.0. If a copy of the MPL was not distributed with this
    - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
 <svg width="7" xmlns="http://www.w3.org/2000/svg" height="12" viewBox="0 0 7 12">
-  <path fill="#f7f7f7" d="M0,11.6 0,.4 5.5,6z"/>
-  <path fill="#ababab" d="M1,0 0,0 0,.4 5.5,6 0,11.6 0,12 1,12 7,6z"/>
+  <path fill="#ffffff" d="M0,11.6 0,.4 5.5,6z"/>
+  <path fill="#dde1e4" d="M1,0 0,0 0,.4 5.5,6 0,11.6 0,12 1,12 7,6z"/>
 </svg>
diff --git a/devtools/client/themes/light-theme.css b/devtools/client/themes/light-theme.css
index 2cd32d7..f98d58c 100644
--- a/devtools/client/themes/light-theme.css
+++ b/devtools/client/themes/light-theme.css
@@ -67,9 +67,9 @@ body {
 }
 
 .theme-gutter {
-  background-color: hsl(0,0%,90%);
+  background-color: var(--theme-tab-toolbar-background);
   color: var(--theme-content-color3);
-  border-color: hsl(0,0%,65%);
+  border-color: var(--theme-splitter-color);
 }
 
 .theme-separator { /* grey */
@@ -173,7 +173,7 @@ body {
 .devtools-sidebar-tabs tabs,
 .devtools-sidebar-alltabs,
 .cm-s-mozilla .CodeMirror-dialog { /* General toolbar styling */
-  color: var(--theme-body-color-alt);
+  color: var(--theme-body-color);
   background-color: var(--theme-toolbar-background);
   border-color: var(--theme-splitter-color);
 }
diff --git a/devtools/client/themes/projecteditor/projecteditor.css b/devtools/client/themes/projecteditor/projecteditor.css
index bf87e40..a006eab 100644
--- a/devtools/client/themes/projecteditor/projecteditor.css
+++ b/devtools/client/themes/projecteditor/projecteditor.css
@@ -4,7 +4,7 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
  :root {
-  color: #18191a;
+  color: #696969; /* --theme-body-color */
 }
 
 .view-project-detail {
diff --git a/devtools/client/themes/splitters.css b/devtools/client/themes/splitters.css
index c712186..a4c33bc 100644
--- a/devtools/client/themes/splitters.css
+++ b/devtools/client/themes/splitters.css
@@ -3,12 +3,22 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 /* Splitters */
+:root[devtoolstheme="light"] .devtools-horizontal-splitter {
+  --devtools-splitter-color: #dde1e4; /* These variables are used in 
+  browser.xul but inside the toolbox they are overridden by 
+  --theme-splitter-color */
+}
+
+:root[devtoolstheme="dark"] .devtools-horizontal-splitter {
+  --devtools-splitter-color: #42484f;
+}
+
 .devtools-horizontal-splitter {
   -moz-appearance: none;
   background-image: none;
   background-color: transparent;
   border: 0;
-  border-bottom: 1px solid rgba(118, 121, 125, .5);
+  border-bottom: 1px solid var(--devtools-splitter-color);
   min-height: 3px;
   height: 3px;
   margin-top: -3px;
@@ -20,7 +30,7 @@
   background-image: none;
   background-color: transparent;
   border: 0;
-  -moz-border-end: 1px solid rgba(118, 121, 125, .5);
+  -moz-border-end: 1px solid var(--devtools-splitter-color);
   min-width: 3px;
   width: 3px;
   -moz-margin-start: -3px;
diff --git a/devtools/client/themes/toolbars.css b/devtools/client/themes/toolbars.css
index f06e129..5794fdb 100644
--- a/devtools/client/themes/toolbars.css
+++ b/devtools/client/themes/toolbars.css
@@ -818,10 +818,6 @@
   border-bottom-color: var(--theme-splitter-color);
 }
 
-.theme-light .devtools-tabbar {
-  box-shadow: 0 -2px 0 rgba(170,170,170,.1) inset;
-}
-
 .theme-dark .devtools-tabbar {
   box-shadow: 0 -2px 0 rgba(0,0,0,.1) inset;
 }
@@ -920,12 +916,6 @@
               0 -2px 0 rgba(0,0,0,.2) inset;
 }
 
-.theme-light .devtools-tabbar .devtools-tab[selected] {
-  box-shadow: 0 2px 0 #d7f1ff inset,
-              0 8px 3px -5px #2b82bf inset,
-              0 -2px 0 rgba(0,0,0,.06) inset;
-}
-
 #toolbox-tabs .devtools-tab[selected],
 #toolbox-tabs .devtools-tab[highlighted] {
   border-width: 0;
diff --git a/devtools/client/themes/variables.css b/devtools/client/themes/variables.css
index 06f0eea..301512f 100644
--- a/devtools/client/themes/variables.css
+++ b/devtools/client/themes/variables.css
@@ -15,19 +15,19 @@
  */
 
 :root.theme-light {
-  --theme-body-background: #fcfcfc;
-  --theme-sidebar-background: #f7f7f7;
+  --theme-body-background: white;
+  --theme-sidebar-background: white;
   --theme-contrast-background: #e6b064;
 
-  --theme-tab-toolbar-background: #ebeced;
-  --theme-toolbar-background: #f0f1f2;
+  --theme-tab-toolbar-background: #fcfcfc;
+  --theme-toolbar-background: #fcfcfc;
   --theme-selection-background: #4c9ed9;
-  --theme-selection-background-semitransparent: rgba(76, 158, 217, .23);
-  --theme-selection-color: #f5f7fa;
-  --theme-splitter-color: #aaaaaa;
-  --theme-comment: #757873;
+  --theme-selection-background-semitransparent: rgba(76, 158, 217, 0.15);
+  --theme-selection-color: white;
+  --theme-splitter-color: #dde1e4;
+  --theme-comment: #696969;
 
-  --theme-body-color: #18191a;
+  --theme-body-color: #393f4c;
   --theme-body-color-alt: #585959;
   --theme-content-color1: #292e33;
   --theme-content-color2: #8fa1b2;
diff --git a/devtools/client/themes/webconsole.css b/devtools/client/themes/webconsole.css
index f5edf47..c6bb89e 100644
--- a/devtools/client/themes/webconsole.css
+++ b/devtools/client/themes/webconsole.css
@@ -211,7 +211,7 @@ a {
 .theme-selected .cm-number,
 .theme-selected .cm-variable,
 .theme-selected .kind-ArrayLike {
-  color: #f5f7fa !important; /* Selection Text Color */
+  color: #ffffff !important; /* --theme-selection-color */
 }
 
 .message[category=network] > .indent {
diff --git a/devtools/client/themes/widgets.css b/devtools/client/themes/widgets.css
index c4b1f4b..3b77e55 100644
--- a/devtools/client/themes/widgets.css
+++ b/devtools/client/themes/widgets.css
@@ -6,14 +6,12 @@
 .theme-dark {
   --table-splitter-color: rgba(255,255,255,0.15);
   --table-zebra-background: rgba(255,255,255,0.05);
-  --smw-margin: #000;
   --smw-item-top-border: rgba(0,0,0,0.2);
   --smw-item-bottom-border: rgba(128,128,128,0.15);
 }
 .theme-light {
   --table-splitter-color: rgba(0,0,0,0.15);
   --table-zebra-background: rgba(0,0,0,0.05);
-  --smw-margin: #aaa;
   --smw-item-top-border: rgba(128,128,128,0.15);
   --smw-item-bottom-border: transparent;
 }
@@ -357,12 +355,12 @@
 
 .side-menu-widget-container:-moz-locale-dir(ltr),
 .side-menu-widget-empty-text:-moz-locale-dir(ltr) {
-  box-shadow: inset -1px 0 0 var(--smw-margin);
+  box-shadow: inset -1px 0 0 var(--theme-splitter-color);
 }
 
 .side-menu-widget-container:-moz-locale-dir(rtl),
 .side-menu-widget-empty-text:-moz-locale-dir(rtl) {
-  box-shadow: inset 1px 0 0 var(--smw-margin);
+  box-shadow: inset 1px 0 0 var(--theme-splitter-color);
 }
 
 .side-menu-widget-group {

