# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  e755879c138c1a3ca96ba9da9f9244cb5bfd755f
Bug 943306 - Add an unload notification to the devtools loader on shutdown;r=jryans

diff --git a/toolkit/devtools/Loader.jsm b/toolkit/devtools/Loader.jsm
--- a/toolkit/devtools/Loader.jsm
+++ b/toolkit/devtools/Loader.jsm
@@ -7,16 +7,17 @@
 /**
  * Manages the addon-sdk loader instance used to load the developer tools.
  */
 
 let { Constructor: CC, classes: Cc, interfaces: Ci, utils: Cu } = Components;
 
 Cu.import("resource://gre/modules/XPCOMUtils.jsm");
 Cu.import("resource://gre/modules/Services.jsm");
+Cu.import("resource://gre/modules/AsyncShutdown.jsm");
 
 XPCOMUtils.defineLazyModuleGetter(this, "NetUtil", "resource://gre/modules/NetUtil.jsm");
 XPCOMUtils.defineLazyModuleGetter(this, "FileUtils", "resource://gre/modules/FileUtils.jsm");
 XPCOMUtils.defineLazyModuleGetter(this, "OS", "resource://gre/modules/osfile.jsm");
 
 let loader = Cu.import("resource://gre/modules/commonjs/toolkit/loader.js", {}).Loader;
 let promise = Cu.import("resource://gre/modules/Promise.jsm", {}).Promise;
 
@@ -261,16 +262,25 @@ SrcdirProvider.prototype = {
  * then a new one can also be created.
  */
 this.DevToolsLoader = function DevToolsLoader() {
   this.require = this.require.bind(this);
   this.lazyGetter = XPCOMUtils.defineLazyGetter.bind(XPCOMUtils);
   this.lazyImporter = XPCOMUtils.defineLazyModuleGetter.bind(XPCOMUtils);
   this.lazyServiceGetter = XPCOMUtils.defineLazyServiceGetter.bind(XPCOMUtils);
   this.lazyRequireGetter = this.lazyRequireGetter.bind(this);
+
+  // Notify the provider when a shutdown happens, so that the loader can be
+  // unloaded. This is important so that addon sdk objects (like simple-storage)
+  // will clean up after themselves.
+  AsyncShutdown.profileBeforeChange.addBlocker("Unload event from devtools", () => {
+    if (this._provider) {
+      this._provider.unload("shutdown");
+    }
+  });
 };
 
 DevToolsLoader.prototype = {
   get provider() {
     if (!this._provider) {
       this._chooseProvider();
     }
     return this._provider;
