# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1542063323 28800
#      Mon Nov 12 14:55:23 2018 -0800
# Node ID 18122580d9f5c09a982a15dc3368e977e61ff9c0
# Parent  05331fb8f5338974b913217bc67815df25a32e86
Bug 1501065 - Replace a hardcoded browser.xul reference in pageloader talos tests;r=mconley

Differential Revision: https://phabricator.services.mozilla.com/D11698

diff --git a/testing/talos/talos/pageloader/api.js b/testing/talos/talos/pageloader/api.js
--- a/testing/talos/talos/pageloader/api.js
+++ b/testing/talos/talos/pageloader/api.js
@@ -32,16 +32,17 @@
  * use your version of this file under the terms of the MPL, indicate your
  * decision by deleting the provisions above and replace them with the notice
  * and other provisions required by the GPL or the LGPL. If you do not delete
  * the provisions above, a recipient may use your version of this file under
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
+ChromeUtils.import("resource://gre/modules/AppConstants.jsm");
 ChromeUtils.import("resource://gre/modules/Services.jsm");
 ChromeUtils.import("resource://gre/modules/XPCOMUtils.jsm");
 ChromeUtils.import("resource://gre/modules/Timer.jsm");
 
 XPCOMUtils.defineLazyServiceGetter(this, "aomStartup",
                                    "@mozilla.org/addons/addon-manager-startup;1",
                                    "amIAddonManagerStartup");
 
@@ -51,21 +52,20 @@ XPCOMUtils.defineLazyServiceGetter(this,
 
 async function talosStart() {
   // Tests are driven from pageloader.xul.  We need to be careful to open
   // pageloader.xul before dismissing the default browser window or we
   // may inadvertently cause the browser to exit before the pageloader.xul
   // window is opened.  Start by finding or waiting for the default window.
   let defaultWin = Services.wm.getMostRecentWindow("navigator:browser");
   if (!defaultWin) {
-    const BROWSER_XUL = "chrome://browser/content/browser.xul";
     defaultWin = await new Promise(resolve => {
       const listener = {
         onOpenWindow(win) {
-          if (win.docShell.domWindow.location.href == BROWSER_XUL) {
+          if (win.docShell.domWindow.location.href == AppConstants.BROWSER_CHROME_URL) {
             Services.wm.removeListener(listener);
             resolve(win);
           }
         },
       };
       Services.wm.addListener(listener);
     });
   }
