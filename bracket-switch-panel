# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  bc08f3773fb4fbe6e19e137111afb1f2b4f9c422
Bug 999299 - Style Editor interferes with next / prev tool bindings

diff --git a/browser/devtools/sourceeditor/editor.js b/browser/devtools/sourceeditor/editor.js
--- a/browser/devtools/sourceeditor/editor.js
+++ b/browser/devtools/sourceeditor/editor.js
@@ -164,21 +164,16 @@ function Editor(config) {
   };
 
   // Additional shortcuts.
   this.config.extraKeys[Editor.keyFor("jumpToLine")] = () => this.jumpToLine();
   this.config.extraKeys[Editor.keyFor("moveLineUp", { noaccel: true })] = () => this.moveLineUp();
   this.config.extraKeys[Editor.keyFor("moveLineDown", { noaccel: true })] = () => this.moveLineDown();
   this.config.extraKeys[Editor.keyFor("toggleComment")] = "toggleComment";
 
-  // Disable ctrl-[ and ctrl-] because toolbox uses those shortcuts.
-  this.config.extraKeys[Editor.keyFor("indentLess")] = false;
-  this.config.extraKeys[Editor.keyFor("indentMore")] = false;
-
-
   // Overwrite default config with user-provided, if needed.
   Object.keys(config).forEach((k) => {
     if (k != "extraKeys") {
       this.config[k] = config[k];
       return;
     }
 
     if (!config.extraKeys)
@@ -272,20 +267,23 @@ Editor.prototype = {
       let scssSpec = win.CodeMirror.resolveMode("text/x-scss");
       scssSpec.propertyKeywords = cssProperties;
       scssSpec.colorKeywords = cssColors;
       scssSpec.valueKeywords = cssValues;
       win.CodeMirror.defineMIME("text/x-scss", scssSpec);
 
       win.CodeMirror.commands.save = () => this.emit("save");
 
+      // Disable ctrl-[ and ctrl-] because toolbox uses those shortcuts.
+      win.CodeMirror.keyMap.pcDefault["Ctrl-["] = win.CodeMirror.keyMap.pcDefault["Ctrl-]"] = null;
+      win.CodeMirror.keyMap.macDefault["Cmd-["] = win.CodeMirror.keyMap.macDefault["Cmd-]"] = (cm) => { console.log("Indent!!");};
+
       // Create a CodeMirror instance add support for context menus,
       // overwrite the default controller (otherwise items in the top and
       // context menus won't work).
-
       cm = win.CodeMirror(win.document.body, this.config);
       cm.getWrapperElement().addEventListener("contextmenu", (ev) => {
         ev.preventDefault();
         if (!this.config.contextMenu) return;
         let popup = this.config.contextMenu;
         if (typeof popup == "string")
           popup = el.ownerDocument.getElementById(this.config.contextMenu);
         popup.openPopupAtScreen(ev.screenX, ev.screenY, true);
