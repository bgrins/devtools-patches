# HG changeset patch
# Parent 14a43400007efbe1212307e09db3475126e4fe5b
# User Brian Grinstead <bgrinstead@mozilla.com>
Bug 991810 - Move the inspector button to the top left

diff --git a/browser/devtools/framework/toolbox.js b/browser/devtools/framework/toolbox.js
--- a/browser/devtools/framework/toolbox.js
+++ b/browser/devtools/framework/toolbox.js
@@ -550,17 +550,17 @@ Toolbox.prototype = {
    * since we want it to work for remote targets too
    */
   _buildPickerButton: function() {
     this._pickerButton = this.doc.createElement("toolbarbutton");
     this._pickerButton.id = "command-button-pick";
     this._pickerButton.className = "command-button command-button-invertable";
     this._pickerButton.setAttribute("tooltiptext", toolboxStrings("pickButton.tooltip"));
 
-    let container = this.doc.querySelector("#toolbox-buttons");
+    let container = this.doc.querySelector("#toolbox-picker-container");
     container.appendChild(this._pickerButton);
 
     this._togglePicker = this.highlighterUtils.togglePicker.bind(this.highlighterUtils);
     this._pickerButton.addEventListener("command", this._togglePicker, false);
   },
 
   /**
    * Return all toolbox buttons (command buttons, plus any others that were
@@ -685,32 +685,40 @@ Toolbox.prototype = {
     let vbox = this.doc.createElement("vbox");
     vbox.className = "toolbox-panel " + toolDefinition.bgTheme;
 
     // There is already a container for the webconsole frame.
     if (!this.doc.getElementById("toolbox-panel-" + id)) {
       vbox.id = "toolbox-panel-" + id;
     }
 
+
+
+    if (id === "options") {
+      let tabs = this.doc.getElementById("toolbox-option-container");
+      tabs.appendChild(radio);
+      // deck.appendChild(vbox);
+    } else {
     // If there is no tab yet, or the ordinal to be added is the largest one.
     if (tabs.childNodes.length == 0 ||
         +tabs.lastChild.getAttribute("ordinal") <= toolDefinition.ordinal) {
       tabs.appendChild(radio);
       deck.appendChild(vbox);
     } else {
       // else, iterate over all the tabs to get the correct location.
       Array.some(tabs.childNodes, (node, i) => {
         if (+node.getAttribute("ordinal") > toolDefinition.ordinal) {
           tabs.insertBefore(radio, node);
           deck.insertBefore(vbox, deck.childNodes[i]);
           return true;
         }
         return false;
       });
     }
+    }
 
     this._addKeysToWindow();
   },
 
   /**
    * Ensure the tool with the given id is loaded.
    *
    * @param {string} id
diff --git a/browser/devtools/framework/toolbox.xul b/browser/devtools/framework/toolbox.xul
--- a/browser/devtools/framework/toolbox.xul
+++ b/browser/devtools/framework/toolbox.xul
@@ -46,36 +46,28 @@
     <key id="toolbox-zoom-reset-key"
          key="&toolboxZoomReset.key;"
          oncommand="void(0);"
          modifiers="accel"/>
   </keyset>
 
   <notificationbox id="toolbox-notificationbox" flex="1">
     <toolbar class="devtools-tabbar">
-#ifdef XP_MACOSX
-      <hbox id="toolbox-controls">
-        <toolbarbutton id="toolbox-close"
-                       class="devtools-closebutton"
-                       tooltiptext="&toolboxCloseButton.tooltip;"/>
-        <hbox id="toolbox-dock-buttons"/>
-      </hbox>
-#endif
+      <hbox id="toolbox-picker-container"></hbox>
       <hbox id="toolbox-tabs" flex="1">
       </hbox>
       <hbox id="toolbox-buttons" pack="end"/>
-#ifndef XP_MACOSX
+      <hbox id="toolbox-option-container"/>
       <vbox id="toolbox-controls-separator"/>
       <hbox id="toolbox-controls">
         <hbox id="toolbox-dock-buttons"/>
         <toolbarbutton id="toolbox-close"
                        class="devtools-closebutton"
                        tooltiptext="&toolboxCloseButton.tooltip;"/>
       </hbox>
-#endif
     </toolbar>
     <vbox flex="1">
       <deck id="toolbox-deck" flex="1" minheight="75" />
       <splitter id="toolbox-console-splitter" class="devtools-horizontal-splitter" hidden="true" />
       <box minheight="75" flex="1" id="toolbox-panel-webconsole" collapsed="true" />
     </vbox>
   </notificationbox>
 </window>
diff --git a/browser/devtools/main.js b/browser/devtools/main.js
--- a/browser/devtools/main.js
+++ b/browser/devtools/main.js
@@ -81,17 +81,17 @@ Tools.options = {
   }
 }
 
 Tools.webConsole = {
   id: "webconsole",
   key: l10n("cmd.commandkey", webConsoleStrings),
   accesskey: l10n("webConsoleCmd.accesskey", webConsoleStrings),
   modifiers: Services.appinfo.OS == "Darwin" ? "accel,alt" : "accel,shift",
-  ordinal: 1,
+  ordinal: 2,
   icon: "chrome://browser/skin/devtools/tool-webconsole.svg",
   invertIconForLightTheme: true,
   url: "chrome://browser/content/devtools/webconsole.xul",
   label: l10n("ToolboxTabWebconsole.label", webConsoleStrings),
   menuLabel: l10n("MenuWebconsole.label", webConsoleStrings),
   tooltip: l10n("ToolboxWebconsole.tooltip", webConsoleStrings),
   inMenu: true,
   commands: "devtools/webconsole/console-commands",
@@ -112,17 +112,17 @@ Tools.webConsole = {
     return panel.open();
   }
 };
 
 Tools.inspector = {
   id: "inspector",
   accesskey: l10n("inspector.accesskey", inspectorStrings),
   key: l10n("inspector.commandkey", inspectorStrings),
-  ordinal: 2,
+  ordinal: 1,
   modifiers: osString == "Darwin" ? "accel,alt" : "accel,shift",
   icon: "chrome://browser/skin/devtools/tool-inspector.svg",
   invertIconForLightTheme: true,
   url: "chrome://browser/content/devtools/inspector/inspector.xul",
   label: l10n("inspector.label", inspectorStrings),
   tooltip: l10n("inspector.tooltip", inspectorStrings),
   inMenu: true,
   commands: [
diff --git a/browser/themes/shared/devtools/toolbars.inc.css b/browser/themes/shared/devtools/toolbars.inc.css
--- a/browser/themes/shared/devtools/toolbars.inc.css
+++ b/browser/themes/shared/devtools/toolbars.inc.css
@@ -273,17 +273,17 @@
 /* Close button */
 
 .devtools-closebutton {
   -moz-appearance: none;
   border: none;
   margin: 0 4px;
   min-width: 16px;
   width: 16px;
-  opacity: 0.6;
+  opacity: 0.8;
 }
 
 .devtools-closebutton > image {
   width: 16px;
   height: 16px;
   -moz-appearance: none;
   background-size: 16px 16px;
   background-image: url("chrome://browser/skin/devtools/close@2x.png");
@@ -297,17 +297,17 @@
   margin: -4px;
 }
 
 .devtools-closebutton > .toolbarbutton-text {
   display: none;
 }
 
 .devtools-closebutton:hover {
-  opacity: 0.8;
+  opacity: .9;
 }
 
 .devtools-closebutton:hover:active {
   opacity: 1;
 }
 
 /* In-tools sidebar */
 
@@ -494,17 +494,17 @@
 
 #toolbox-dock-window > image {
   background-image: url("chrome://browser/skin/devtools/undock@2x.png");
 }
 
 #toolbox-dock-window,
 #toolbox-dock-bottom,
 #toolbox-dock-side {
-  opacity: 0.6;
+  opacity: 0.8;
 }
 
 #toolbox-dock-window:hover,
 #toolbox-dock-bottom:hover,
 #toolbox-dock-side:hover {
   opacity: 1;
 }
 
@@ -685,28 +685,28 @@
   background-color: hsla(99,100%,14%,.2);
   box-shadow: 0 2px 0 #7bc107 inset;
 }
 
 .theme-light .devtools-tab:not([selected])[highlighted] {
   background-color: rgba(44, 187, 15, .2);
 }
 
-.devtools-tab:first-child {
-  -moz-border-start-width: 0;
-}
-
-.theme-light .devtools-tab:last-child {
+.theme-light .devtools-tabbar .devtools-tab:last-child {
   -moz-border-end: 1px solid #aaa;
 }
 
-.theme-dark .devtools-tab:last-child {
+.theme-dark .devtools-tabbar .devtools-tab:last-child {
   -moz-border-end: 1px solid #42484f;
 }
 
+#toolbox-option-container .devtools-tab {
+  border: none;
+}
+
 .devtools-tab > image {
   border: none;
   -moz-margin-end: 0;
   -moz-margin-start: 4px;
   opacity: 0.6;
   max-height: 16px;
   width: 16px; /* Prevents collapse during theme switching */
 }
