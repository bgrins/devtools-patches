# HG changeset patch
# User Girish Sharma <scrapmachines@gmail.com>
# Date 1397816489 -19800
#      Fri Apr 18 15:51:29 2014 +0530
# Node ID d28b1c80de1e18984638b94e94b84bff52fe3c18
# Parent 0299d0f9505741079986b31a39ef329c14507437
imported patch storage

diff --git a/browser/devtools/jar.mn b/browser/devtools/jar.mn
--- a/browser/devtools/jar.mn
+++ b/browser/devtools/jar.mn
@@ -15,16 +15,17 @@ browser.jar:
     content/browser/devtools/webconsole.xul                            (webconsole/webconsole.xul)
 *   content/browser/devtools/scratchpad.xul                            (scratchpad/scratchpad.xul)
     content/browser/devtools/scratchpad.js                             (scratchpad/scratchpad.js)
     content/browser/devtools/scratchpad-commands.js                    (scratchpad/scratchpad-commands.js)
     content/browser/devtools/splitview.css                             (shared/splitview.css)
     content/browser/devtools/theme-switching.js                        (shared/theme-switching.js)
     content/browser/devtools/styleeditor.xul                           (styleeditor/styleeditor.xul)
     content/browser/devtools/styleeditor.css                           (styleeditor/styleeditor.css)
+    content/browser/devtools/storage.xul                               (storage/storage.xul)
     content/browser/devtools/computedview.xhtml                        (styleinspector/computedview.xhtml)
     content/browser/devtools/cssruleview.xhtml                         (styleinspector/cssruleview.xhtml)
     content/browser/devtools/ruleview.css                              (styleinspector/ruleview.css)
     content/browser/devtools/layoutview/view.js                        (layoutview/view.js)
     content/browser/devtools/layoutview/view.xhtml                     (layoutview/view.xhtml)
     content/browser/devtools/layoutview/view.css                       (layoutview/view.css)
     content/browser/devtools/fontinspector/font-inspector.js           (fontinspector/font-inspector.js)
     content/browser/devtools/fontinspector/font-inspector.xhtml        (fontinspector/font-inspector.xhtml)
diff --git a/browser/devtools/main.js b/browser/devtools/main.js
--- a/browser/devtools/main.js
+++ b/browser/devtools/main.js
@@ -22,46 +22,48 @@ loader.lazyGetter(this, "osString", () =
 let events = require("sdk/system/events");
 
 // Panels
 loader.lazyGetter(this, "OptionsPanel", () => require("devtools/framework/toolbox-options").OptionsPanel);
 loader.lazyGetter(this, "InspectorPanel", () => require("devtools/inspector/inspector-panel").InspectorPanel);
 loader.lazyGetter(this, "WebConsolePanel", () => require("devtools/webconsole/panel").WebConsolePanel);
 loader.lazyGetter(this, "DebuggerPanel", () => require("devtools/debugger/panel").DebuggerPanel);
 loader.lazyGetter(this, "StyleEditorPanel", () => require("devtools/styleeditor/styleeditor-panel").StyleEditorPanel);
+loader.lazyGetter(this, "StoragePanel", () => require("devtools/storage/panel").StoragePanel);
 loader.lazyGetter(this, "ShaderEditorPanel", () => require("devtools/shadereditor/panel").ShaderEditorPanel);
 loader.lazyGetter(this, "CanvasDebuggerPanel", () => require("devtools/canvasdebugger/panel").CanvasDebuggerPanel);
 loader.lazyGetter(this, "WebAudioEditorPanel", () => require("devtools/webaudioeditor/panel").WebAudioEditorPanel);
 loader.lazyGetter(this, "ProfilerPanel", () => require("devtools/profiler/panel"));
 loader.lazyGetter(this, "NetMonitorPanel", () => require("devtools/netmonitor/panel").NetMonitorPanel);
 loader.lazyGetter(this, "ScratchpadPanel", () => require("devtools/scratchpad/scratchpad-panel").ScratchpadPanel);
 
 // Strings
 const toolboxProps = "chrome://browser/locale/devtools/toolbox.properties";
 const inspectorProps = "chrome://browser/locale/devtools/inspector.properties";
 const debuggerProps = "chrome://browser/locale/devtools/debugger.properties";
 const styleEditorProps = "chrome://browser/locale/devtools/styleeditor.properties";
 const shaderEditorProps = "chrome://browser/locale/devtools/shadereditor.properties";
 const canvasDebuggerProps = "chrome://browser/locale/devtools/canvasdebugger.properties";
 const webAudioEditorProps = "chrome://browser/locale/devtools/webaudioeditor.properties";
-
+const storageProps = "chrome://browser/locale/devtools/storage.properties";
 const webConsoleProps = "chrome://browser/locale/devtools/webconsole.properties";
 const profilerProps = "chrome://browser/locale/devtools/profiler.properties";
 const netMonitorProps = "chrome://browser/locale/devtools/netmonitor.properties";
 const scratchpadProps = "chrome://browser/locale/devtools/scratchpad.properties";
 loader.lazyGetter(this, "toolboxStrings", () => Services.strings.createBundle(toolboxProps));
 loader.lazyGetter(this, "webConsoleStrings", () => Services.strings.createBundle(webConsoleProps));
 loader.lazyGetter(this, "debuggerStrings", () => Services.strings.createBundle(debuggerProps));
 loader.lazyGetter(this, "styleEditorStrings", () => Services.strings.createBundle(styleEditorProps));
 loader.lazyGetter(this, "shaderEditorStrings", () => Services.strings.createBundle(shaderEditorProps));
 loader.lazyGetter(this, "canvasDebuggerStrings", () => Services.strings.createBundle(canvasDebuggerProps));
 loader.lazyGetter(this, "webAudioEditorStrings", () => Services.strings.createBundle(webAudioEditorProps));
 loader.lazyGetter(this, "inspectorStrings", () => Services.strings.createBundle(inspectorProps));
 loader.lazyGetter(this, "profilerStrings",() => Services.strings.createBundle(profilerProps));
 loader.lazyGetter(this, "netMonitorStrings", () => Services.strings.createBundle(netMonitorProps));
+loader.lazyGetter(this, "storageStrings", () => Services.strings.createBundle(storageProps));
 loader.lazyGetter(this, "scratchpadStrings", () => Services.strings.createBundle(scratchpadProps));
 
 let Tools = {};
 exports.Tools = Tools;
 
 // Definitions
 Tools.options = {
   id: "options",
@@ -296,19 +298,43 @@ Tools.netMonitor = {
   },
 
   build: function(iframeWindow, toolbox) {
     let panel = new NetMonitorPanel(iframeWindow, toolbox);
     return panel.open();
   }
 };
 
+Tools.storage = {
+  id: "storage",
+  key: l10n("open.commandkey", storageStrings),
+  ordinal: 9,
+  accesskey: l10n("open.accesskey", storageStrings),
+  modifiers: "shift",
+  visibilityswitch: "devtools.storage.enabled",
+  icon: "chrome://browser/skin/devtools/tool-storage.svg",
+  invertIconForLightTheme: true,
+  url: "chrome://browser/content/devtools/storage.xul",
+  label: l10n("storage.label", storageStrings),
+  tooltip: l10n("storage.tooltip", storageStrings),
+  inMenu: true,
+
+  isTargetSupported: function(target) {
+    return target.isLocalTab || target.client.traits.storageInspector;
+  },
+
+  build: function(iframeWindow, toolbox) {
+    let panel = new StoragePanel(iframeWindow, toolbox);
+    return panel.open();
+  }
+};
+
 Tools.scratchpad = {
   id: "scratchpad",
-  ordinal: 9,
+  ordinal: 10,
   visibilityswitch: "devtools.scratchpad.enabled",
   icon: "chrome://browser/skin/devtools/tool-scratchpad.svg",
   invertIconForLightTheme: true,
   url: "chrome://browser/content/devtools/scratchpad.xul",
   label: l10n("scratchpad.label", scratchpadStrings),
   tooltip: l10n("scratchpad.tooltip", scratchpadStrings),
   inMenu: false,
   commands: "devtools/scratchpad/scratchpad-commands",
@@ -329,16 +355,17 @@ let defaultTools = [
   Tools.inspector,
   Tools.jsdebugger,
   Tools.styleEditor,
   Tools.shaderEditor,
   Tools.canvasDebugger,
   Tools.webAudioEditor,
   Tools.jsprofiler,
   Tools.netMonitor,
+  Tools.storage,
   Tools.scratchpad
 ];
 
 exports.defaultTools = defaultTools;
 
 for (let definition of defaultTools) {
   gDevTools.registerTool(definition);
 }
diff --git a/browser/devtools/moz.build b/browser/devtools/moz.build
--- a/browser/devtools/moz.build
+++ b/browser/devtools/moz.build
@@ -17,16 +17,17 @@ DIRS += [
     'markupview',
     'netmonitor',
     'profiler',
     'responsivedesign',
     'scratchpad',
     'shadereditor',
     'shared',
     'sourceeditor',
+    'storage',
     'styleeditor',
     'styleinspector',
     'tilt',
     'webaudioeditor',
     'webconsole',
 ]
 
 EXTRA_COMPONENTS += [
diff --git a/browser/devtools/storage/Makefile.in b/browser/devtools/storage/Makefile.in
new file mode 100644
--- /dev/null
+++ b/browser/devtools/storage/Makefile.in
@@ -0,0 +1,10 @@
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+include $(topsrcdir)/config/rules.mk
+
+libs::
+	$(NSINSTALL) $(srcdir)/*.jsm $(FINAL_TARGET)/modules/devtools/
+	$(NSINSTALL) $(srcdir)/*.js $(FINAL_TARGET)/modules/devtools/storage
+
diff --git a/browser/devtools/storage/StorageUI.jsm b/browser/devtools/storage/StorageUI.jsm
new file mode 100644
--- /dev/null
+++ b/browser/devtools/storage/StorageUI.jsm
@@ -0,0 +1,498 @@
+/* vim:set ts=2 sw=2 sts=2 et: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+"use strict";
+
+this.EXPORTED_SYMBOLS = ["StorageUI"];
+
+const Cu = Components.utils;
+const STORAGE_STRINGS = "chrome://browser/locale/devtools/storage.properties";
+
+Cu.import("resource://gre/modules/Services.jsm");
+Cu.import("resource://gre/modules/XPCOMUtils.jsm");
+const {devtools} = Cu.import("resource://gre/modules/devtools/Loader.jsm", {})
+XPCOMUtils.defineLazyGetter(this, "TreeWidget",
+  () => devtools.require("devtools/shared/widgets/TreeWidget").TreeWidget);
+XPCOMUtils.defineLazyGetter(this, "TableWidget",
+  () => devtools.require("devtools/shared/widgets/TableWidget").TableWidget);
+XPCOMUtils.defineLazyModuleGetter(this, "EventEmitter",
+  "resource://gre/modules/devtools/event-emitter.js");
+XPCOMUtils.defineLazyModuleGetter(this, "ViewHelpers",
+  "resource:///modules/devtools/ViewHelpers.jsm");
+XPCOMUtils.defineLazyModuleGetter(this, "VariablesView",
+  "resource:///modules/devtools/VariablesView.jsm");
+
+/**
+ * Localization convenience methods.
+ */
+let L10N = new ViewHelpers.L10N(STORAGE_STRINGS);
+
+const GENERIC_VARIABLES_VIEW_SETTINGS = {
+  lazyEmpty: true,
+  lazyEmptyDelay: 10, // ms
+  searchEnabled: true,
+  editableValueTooltip: "",
+  editableNameTooltip: "",
+  preventDisableOnChange: true,
+  preventDescriptorModifiers: true,
+  eval: () => {}
+};
+
+/**
+ * StorageUI is controls and builds the UI of the Storage Inspector.
+ *
+ * @param {Front} front
+ *        Front for the storage actor
+ * @param {Target} target
+ *        Interface for the page we're debugging
+ * @param {Window} panelWin
+ *        Window of the toolbox panel to populate UI in.
+ */
+function StorageUI(front, target, panelWin) {
+  EventEmitter.decorate(this);
+
+  this._target = target;
+  this._window = panelWin;
+  this._panelDoc = panelWin.document;
+  this.front = front;
+
+  let treeNode = this._panelDoc.getElementById("storage-tree");
+  this.tree = new TreeWidget(treeNode, {defaultType: "store"});
+  this.onHostSelect = this.onHostSelect.bind(this);
+  this.tree.on("select", this.onHostSelect);
+
+  let tableNode = this._panelDoc.getElementById("storage-table");
+  this.table = new TableWidget(tableNode, {
+    emptyText: L10N.getStr("table.emptyText"),
+    highlightUpdated: true,
+    removableColumns: true,
+  });
+  this.displayObjectSidebar = this.displayObjectSidebar.bind(this);
+  this.table.on(TableWidget.EVENTS.ROW_SELECTED, this.displayObjectSidebar)
+
+  this.sidebar = this._panelDoc.getElementById("storage-sidebar");
+  this.sidebar.setAttribute("width", "300");
+  this.view = new VariablesView(this.sidebar.firstChild,
+                                GENERIC_VARIABLES_VIEW_SETTINGS);
+
+  this.onUpdate = this.onUpdate.bind(this);
+  this.front.on("stores-update", this.onUpdate);
+  this.front.listStores().then(storageTypes => {
+    this.populateStorageTree(storageTypes);
+  });
+}
+
+StorageUI.prototype = {
+
+  storageTypes: null,
+  shouldResetColumns: true,
+
+  destroy: function() {
+    this.front.off("stores-update", this.onUpdate);
+  },
+
+  /**
+   * Empties and hides the object viewer sidebar
+   */
+  hideSidebar: function() {
+    this.view.empty();
+    this.view.hidden = true;
+  },
+
+  /**
+   * Removes the given item from the storage table. Also hides the sidebar if
+   * the item was selected.
+   */
+  removeItemFromTable: function(name) {
+    if (this.table.isSelected(name)) {
+      this.table.selectPreviousRow();
+      this.table.remove(name);
+      this.displayObjectSidebar();
+    }
+    else {
+      this.table.remove(name);
+    }
+  },
+
+  /**
+   * Event handler for "stores-update" event coming from the storage actor.
+   *
+   * @param {object} argument0
+   *        An object containing the details of the added, changed and deleted
+   *        storage objects.
+   */
+  onUpdate: function({ changed, added, deleted }) {
+    if (deleted) {
+      for (let type in deleted) {
+        for (let host in deleted[type]) {
+          if (!deleted[type][host].length) {
+            // This means that the whole host is deleted, thus the item should
+            // be removed from the storage tree
+            if (this.tree.isSelected([type, host])) {
+              this.table.clear();
+              this.hideSidebar();
+              this.tree.selectPreviousItem();
+            }
+
+            this.tree.remove([type, host]);
+          }
+          else if (this.tree.isSelected([type, host])) {
+            for (let name of deleted[type][host]) {
+              try {
+                // trying to parse names in case its for indexedDB
+                let names = JSON.parse(name);
+                if (!names[2]) {
+                  if (this.tree.isSelected([type, host, names[0], names[1]])) {
+                    this.tree.selectPreviousItem();
+                    this.tree.remove([type, host, names[0], names[1]]);
+                    this.table.clear();
+                    this.hideSidebar();
+                  }
+                }
+                else if (this.tree.isSelected([type, host, names[0], names[1]])) {
+                  this.removeItemFromTable(names[2]);
+                }
+              }
+              catch (ex) {
+                this.removeItemFromTable(name);
+              }
+            }
+          }
+        }
+      }
+    }
+
+    if (added) {
+      for (let type in added) {
+        for (let host in added[type]) {
+          this.tree.add([[type, host]], {type: "url"});
+          for (let name of added[type][host]) {
+            try {
+              name = JSON.parse(name);
+              if (name.length == 3) {
+                name.splice(2, 1);
+              }
+              this.tree.add([[type, host, ...name]], {type: "dir"});
+            } catch(ex) {}
+          }
+
+          if (this.tree.isSelected([type, host])) {
+            this.fetchStorageObjects(type, host, added[type][host], 1);
+          }
+        }
+      }
+    }
+
+    if (changed) {
+      let [type, host, db, objectStore] = this.tree.selectedItem[0];
+      if (changed[type] && changed[type][host]) {
+        if (changed[type][host].length) {
+          try {
+            let toUpdate = [];
+            for (let name of changed[type][host]) {
+              let names = JSON.parse(name);
+              if (names[0] == db && names[1] == objectStore && names[2]) {
+                toUpdate.push(name);
+              }
+            }
+            this.fetchStorageObjects(type, host, toUpdate, 2);
+          }
+          catch (ex) {
+            this.fetchStorageObjects(type, host, changed[type][host], 1);
+          }
+        }
+      }
+    }
+  },
+
+  /**
+   * Fetches the storage objects from the storage actor and populates the
+   * storage table with the returned data.
+   *
+   * @param {string} type
+   *        The type of storage. Ex. "cookies"
+   * @param {string} host
+   *        Hostname
+   * @param {array} names
+   *        Names of particular store objects. Empty if all are requested
+   * @param {number} reason
+   *        2 for update, 1 for new row in an existing table and 1 when
+   *        populating a table for the first time for the given host/type
+   */
+  fetchStorageObjects: function(type, host, names, reason) {
+    this.storageTypes[type].getStoreObjects(host, names).then(({data}) => {
+      if (!data.length) {
+        return;
+      }
+      if (this.shouldResetColumns) {
+        this.resetColumns(data[0], type);
+      }
+      this.populateTable(data, reason);
+    });
+  },
+
+  /**
+   * Populates the storage tree which displays the list of storages present for
+   * the page.
+   *
+   * @param {object} storageTypes
+   *        List of storages and their corresponding hosts returned by the
+   *        StorageFront.listStores call.
+   */
+  populateStorageTree: function(storageTypes) {
+    this.storageTypes = {};
+    for (let type in storageTypes) {
+      let typeLabel = L10N.getStr("tree.labels." + type);
+      this.tree.add([[type], [typeLabel]]);
+      if (storageTypes[type].hosts) {
+        this.storageTypes[type] = storageTypes[type];
+        for (let host in storageTypes[type].hosts) {
+          this.tree.add([[type, host]], {type: "url"});
+
+          for (let name of storageTypes[type].hosts[host]) {
+            try {
+              let names = JSON.parse(name);
+              this.tree.add([[type, host, ...names]], {type: "dir"});
+              if (!this.tree.selectedItem) {
+                this.tree.selectedItem = [type, host, names[0], names[1]];
+                this.fetchStorageObjects(type, host, name, 0);
+              }
+            } catch(ex) {}
+          }
+          if (!this.tree.selectedItem) {
+            this.tree.selectedItem = [type, host];
+            this.fetchStorageObjects(type, host, null, 0);
+          }
+        }
+      }
+    }
+  },
+
+  /**
+   * Populates the selected entry from teh table in the sidebar for a more
+   * detailed view.
+   */
+  displayObjectSidebar: function() {
+    this.sidebar.hidden = false;
+    this.view.empty();
+    let item = this.table.selectedRow;
+    let mainScope = this.view.addScope(L10N.getStr("store.data.label"));
+    mainScope.expanded = true;
+
+    if (item.name && item.valueActor) {
+      let itemVar = mainScope.addItem(item.name + "", {}, true);
+
+      item.valueActor.string().then(value => {
+        // The main area where the value will be displayed
+        itemVar.setGrip(value);
+
+        // May be the item value is a json or a key value pair itself
+        this.parseItemValue(item.name, value);
+
+        // By default the item name and value are shown. If this is the only
+        // information available, then nothing else is to be displayed.
+        let itemProps = Object.keys(item);
+        if (itemProps.length == 3) {
+          return;
+        }
+
+        // Display any other information other than the item name and value
+        // which may be available.
+        let rawObject = Object.create(null);
+        let otherProps =
+          itemProps.filter(e => e != "name" && e != "value" && e != "valueActor");
+        for (let prop of otherProps) {
+          rawObject[prop] = item[prop];
+        }
+        itemVar.populate(rawObject, {sorted: true});
+        itemVar.twisty = true;
+        itemVar.expanded = true;
+      });
+      return;
+    }
+
+    // Case when displaying IndexedDB db/object store properties.
+    for (let key in item) {
+      mainScope.addItem(key, {}, true).setGrip(item[key]);
+      this.parseItemValue(key, item[key]);
+    }
+  },
+
+  /**
+   * Tries to parse a string value into either a json or a key-value separated
+   * object and populates the sidebar with the parsed value. The value can also
+   * be a key separated array.
+   *
+   * @param {string} name
+   *        The key corresponding to the `value` string in the object
+   * @param {string} value
+   *        The string to be parsed into an object
+   */
+  parseItemValue: function(name, value) {
+    let json = null
+    try {
+      json = JSON.parse(value);
+    }
+    catch (ex) {
+      json = null;
+    }
+
+    if (!json && value) {
+      json = this._extractKeyValPairs(value);
+    }
+
+    if (!json || json == value) {
+      return;
+    }
+
+    let jsonObject = Object.create(null);
+    jsonObject[name] = json;
+    let valueScope = this.view.getScopeAtIndex(1) ||
+                     this.view.addScope(L10N.getStr("store.parsedValue.label"));
+    valueScope.expanded = true;
+    let jsonVar = valueScope.addItem("", Object.create(null), true);
+    jsonVar.expanded = true;
+    jsonVar.twisty = true;
+    jsonVar.populate(jsonObject, {expanded: true});
+  },
+
+  /**
+   * Tries to parse a string into an object on the basis of key-value pairs,
+   * separated by various separators. If failed, tries to parse for single
+   * separator separated values to form an array.
+   *
+   * @param {string} value
+   *        The string to be parsed into an object or array
+   */
+  _extractKeyValPairs: function(value) {
+    let makeObject = (keySep, pairSep) => {
+      let object = {};
+      for (let pair of value.split(pairSep)) {
+        let [key, val] = pair.split(keySep);
+        object[key] = val;
+      }
+      return object;
+    };
+
+    // Possible separators.
+    const separators = ["=", ":", "~", "#", "&", "\\*", ",", "\\."];
+    // Testing for object
+    for (let i = 0; i < separators.length; i++) {
+      let kv = separators[i];
+      for (let j = 0; j < separators.length; j++) {
+        if (i == j) {
+          continue;
+        }
+        let p = separators[j];
+        let regex = new RegExp("^([^" + kv + p + "]*" + kv + "+[^" + kv + p +
+                               "]*" + p + "*)+$", "g");
+        if (value.match(regex) && value.contains(kv) &&
+            (value.contains(p) || value.split(kv).length == 2)) {
+          return makeObject(kv, p);
+        }
+      }
+    }
+    // Testing for array
+    for (let i = 0; i < separators.length; i++) {
+      let p = separators[i];
+      let regex = new RegExp("^[^" + p + "]+(" + p + "+[^" + p + "]*)+$", "g");
+      if (value.match(regex)) {
+        return value.split(p.replace(/\\*/g, ""));
+      }
+    }
+    return null;
+  },
+
+  /**
+   * Select handler for the storage tree. Fetches details of the selected item
+   * from the storage details and populates the storage tree.
+   *
+   * @param {string} event
+   *        The name of the event fired
+   * @param {array} item
+   *        An array of ids which represent the location of the selected item in
+   *        the storage tree
+   */
+  onHostSelect: function(event, item) {
+    this.table.clear();
+    this.sidebar.hidden = true;
+    this.view.empty();
+
+    let [type, host] = item;
+    let names = null;
+    if (!host) {
+      return;
+    }
+    if (item.length > 2) {
+      names = [JSON.stringify(item.slice(2))];
+    }
+    this.shouldResetColumns = true;
+    this.fetchStorageObjects(type, host, names, 0);
+  },
+
+  /**
+   * Resets the column headers in the storage table with the pased object `data`
+   *
+   * @param {object} data
+   *        The object from which key and values will be used for naming the
+   *        headers of the columns
+   * @param {string} type
+   *        The type of storage corresponding to the after-reset columns in the
+   *        table.
+   */
+  resetColumns: function(data, type) {
+    let columns = {};
+    let uniqueKey = null;
+    for (let key in data) {
+      if (!uniqueKey) {
+        this.table.uniqueId = uniqueKey = key;
+      }
+      columns[key] = L10N.getStr("table.headers." + type + "." + key);
+    }
+    this.table.setColumns(columns);
+    this.shouldResetColumns = false;
+    this.sidebar.hidden = true;
+    this.view.empty();
+  },
+
+  /**
+   * Populates or updates the rows in the storage table.
+   *
+   * @param {array[object]} data
+   *        Array of objects to be populated in the storage table
+   * @param {number} reason
+   *        The reason of this populateTable call. 2 for update, 1 for new row
+   *        in an existing table and 1 when populating a table for the first
+   *        time for the given host/type
+   */
+  populateTable: function(data, reason) {
+    for (let item of data) {
+      if (item.value) {
+        item.valueActor = item.value;
+        item.value = item.value.initial || "";
+      }
+      if (item.expires != null) {
+        item.expires = item.expires
+          ? new Date(item.expires).toLocaleString()
+          : L10N.getStr("label.expires.session");
+      }
+      if (item.creationTime != null) {
+        item.creationTime = new Date(item.creationTime).toLocaleString();
+      }
+      if (item.lastAccessed != null) {
+        item.lastAccessed = new Date(item.lastAccessed).toLocaleString();
+      }
+      if (reason < 2) {
+        this.table.push(item, reason == 0);
+      }
+      else {
+        this.table.update(item);
+        if (item == this.table.selectedRow && !this.sidebar.hidden) {
+          this.displayObjectSidebar();
+        }
+      }
+    }
+  }
+}
diff --git a/browser/devtools/storage/moz.build b/browser/devtools/storage/moz.build
new file mode 100644
--- /dev/null
+++ b/browser/devtools/storage/moz.build
@@ -0,0 +1,6 @@
+# -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
+# vim: set filetype=python:
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
diff --git a/browser/devtools/storage/panel.js b/browser/devtools/storage/panel.js
new file mode 100644
--- /dev/null
+++ b/browser/devtools/storage/panel.js
@@ -0,0 +1,82 @@
+/* -*- Mode: Javascript; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ft=javascript ts=2 et sw=2 tw=80: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+const {Cc, Ci, Cu, Cr} = require("chrome");
+
+Cu.import("resource://gre/modules/XPCOMUtils.jsm");
+Cu.import("resource://gre/modules/Services.jsm");
+Cu.import("resource://gre/modules/Promise.jsm");
+
+Cu.import("resource:///modules/devtools/StorageUI.jsm");
+
+let EventEmitter = require("devtools/toolkit/event-emitter");
+
+loader.lazyGetter(this, "StorageFront",
+  () => require("devtools/server/actors/storage").StorageFront);
+
+this.StoragePanel = function StoragePanel(panelWin, toolbox) {
+  EventEmitter.decorate(this);
+
+  this._toolbox = toolbox;
+  this._target = toolbox.target;
+  this._panelWin = panelWin;
+
+  this.destroy = this.destroy.bind(this);
+}
+
+exports.StoragePanel = StoragePanel;
+
+StoragePanel.prototype = {
+  get target() this._toolbox.target,
+
+  get panelWindow() this._panelWin,
+
+  /**
+   * open is effectively an asynchronous constructor
+   */
+  open: function() {
+    let targetPromise;
+    // We always interact with the target as if it were remote
+    if (!this.target.isRemote) {
+      targetPromise = this.target.makeRemote();
+    } else {
+      targetPromise = Promise.resolve(this.target);
+    }
+
+    return targetPromise.then(() => {
+      this.target.on("close", this.destroy);
+      this._front = new StorageFront(this.target.client, this.target.form);
+
+      this.UI = new StorageUI(this._front, this._target, this._panelWin);
+      this.isReady = true;
+      this.emit("ready");
+      return this;
+    }, console.error);
+  },
+
+  /**
+   * Destroy the style editor.
+   */
+  destroy: function() {
+    if (!this._destroyed) {
+      this.UI.destroy();
+      this._destroyed = true;
+
+      this._target.off("close", this.destroy);
+      this._target = null;
+      this._toolbox = null;
+      this._panelDoc = null;
+    }
+
+    return Promise.resolve(null);
+  },
+}
+
+XPCOMUtils.defineLazyGetter(StoragePanel.prototype, "strings",
+  function () {
+    return Services.strings.createBundle(
+            "chrome://browser/locale/devtools/storage.properties");
+  });
diff --git a/browser/devtools/storage/storage.xul b/browser/devtools/storage/storage.xul
new file mode 100644
--- /dev/null
+++ b/browser/devtools/storage/storage.xul
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- This Source Code Form is subject to the terms of the Mozilla Public
+   - License, v. 2.0. If a copy of the MPL was not distributed with this
+   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
+<?xml-stylesheet href="chrome://browser/skin/" type="text/css"?>
+<?xml-stylesheet href="chrome://browser/content/devtools/widgets.css" type="text/css"?>
+<?xml-stylesheet href="chrome://browser/skin/devtools/common.css" type="text/css"?>
+<?xml-stylesheet href="chrome://browser/skin/devtools/widgets.css" type="text/css"?>
+<?xml-stylesheet href="chrome://browser/skin/devtools/storage.css" type="text/css"?>
+
+<?xul-overlay href="chrome://global/content/editMenuOverlay.xul"?>
+
+<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
+
+  <script type="application/javascript;version=1.8"
+          src="chrome://browser/content/devtools/theme-switching.js"/>
+  <script type="text/javascript" src="chrome://global/content/globalOverlay.js"/>
+
+  <commandset id="editMenuCommands"/>
+
+  <popupset id="storagePopupset">
+  </popupset>
+
+  <box flex="1" class="devtools-responsive-container theme-body">
+    <vbox id="storage-tree"/>
+    <splitter class="devtools-side-splitter"/>
+    <vbox id="storage-table" class="theme-sidebar" flex="1"/>
+    <splitter class="devtools-side-splitter"/>
+    <vbox id="storage-sidebar" class="devtools-sidebar-tabs" hidden="true">
+      <vbox flex="1"/>
+    </vbox>
+  </box>
+
+</window>
diff --git a/browser/locales/en-US/chrome/browser/devtools/storage.properties b/browser/locales/en-US/chrome/browser/devtools/storage.properties
new file mode 100644
--- /dev/null
+++ b/browser/locales/en-US/chrome/browser/devtools/storage.properties
@@ -0,0 +1,96 @@
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+# LOCALIZATION NOTE These strings are used inside the Storage Editor tool.
+# LOCALIZATION NOTE The correct localization of this file might be to keep it
+# in English, or another language commonly spoken among web developers.
+# You want to make that choice consistent across the developer tools.
+# A good criteria is the language in which you'd find the best documentation
+# on web development on the web.
+
+# LOCALIZATION NOTE  (chromeWindowTitle): This is the title of the Storage
+# 'chrome' window. That is, the main window with all the cookies, etc.
+# The argument is either the content document's title or its href if no title
+# is available.
+chromeWindowTitle=Storage [%S]
+
+# LOCALIZATION NOTE  (open.commandkey): This the key to use in
+# conjunction with shift to open the storage editor
+open.commandkey=VK_F9
+
+# LOCALIZATION NOTE (open.accesskey): The access key used to open the storage
+# editor.
+open.accesskey=d
+
+# LOCALIZATION NOTE (storage.label):
+# This string is displayed in the title of the tab when the storage editor is
+# displayed inside the developer tools window and in the Developer Tools Menu.
+storage.label=Storage
+
+# LOCALIZATION NOTE (storage.tooltip):
+# This string is displayed in the tooltip of the tab when the storage editor is
+# displayed inside the developer tools window.
+storage.tooltip=Storage Inspector (Cookies, Local Storage ...)
+
+# LOCALIZATION NOTE (tree.emptyText):
+# This string is displayed when the Storage Tree is empty. This can happen when
+# there are no websites on the current page (about:blank)
+tree.emptyText=No hosts on the page
+
+# LOCALIZATION NOTE (table.emptyText):
+# This string is displayed when there are no rows in the Storage Table for the
+# selected host.
+table.emptyText=No data present for selected host
+
+# LOCALIZATION NOTE (tree.labels.*):
+# These strings are the labels for Storage type groups present in the Storage
+# Tree, like cookies, local storage etc.
+tree.labels.cookies=Cookies
+tree.labels.localStorage=Local Storage
+tree.labels.sessionStorage=Session Storage
+tree.labels.indexedDB=Indexed DB
+
+# LOCALIZATION NOTE (table.headers.*.*):
+# These strings are the header names of the columns in the Storage Table for
+# each type of storage available through the Storage Tree to the side.
+table.headers.cookies.name=Name
+table.headers.cookies.path=Path
+table.headers.cookies.host=Domain
+table.headers.cookies.expires=Expires on
+table.headers.cookies.value=Value
+table.headers.cookies.lastAccessed:Last accessed on
+table.headers.cookies.creationTime:Created on
+table.headers.cookies.isHttpOnly:isHttpOnly
+table.headers.cookies.isSecure:isSecure
+table.headers.cookies.isDomain:isDomain
+
+table.headers.localStorage.name=Key
+table.headers.localStorage.value=Value
+
+table.headers.sessionStorage.name=Key
+table.headers.sessionStorage.name=Value
+
+table.headers.indexedDB.name=Key
+table.headers.indexedDB.db=Database Name
+table.headers.indexedDB.objectStore=Object Store Name
+table.headers.indexedDB.value=Value
+table.headers.indexedDB.origin=Origin
+table.headers.indexedDB.version=Version
+table.headers.indexedDB.objectStores=Object Stores
+table.headers.indexedDB.keyPath=Key
+table.headers.indexedDB.autoIncrement=Auto Increment
+table.headers.indexedDB.indexes=Indexes
+
+# LOCALIZATION NOTE (label.expires.session):
+# This string is displayed in the expires column when the cookie is Session
+# Cookie
+label.expires.session=Session
+
+# LOCALIZATION NOTE (storage.data.label):
+# This is the heading displayed over the item value in the sidebar
+store.data.label=Data
+
+# LOCALIZATION NOTE (storage.parsedValue.label):
+# This is the heading displayed over the item parsed value in the sidebar
+store.parsedValue.label=Parsed Value
diff --git a/browser/locales/jar.mn b/browser/locales/jar.mn
--- a/browser/locales/jar.mn
+++ b/browser/locales/jar.mn
@@ -38,16 +38,17 @@
     locale/browser/devtools/webaudioeditor.properties   (%chrome/browser/devtools/webaudioeditor.properties)
     locale/browser/devtools/gcli.properties           (%chrome/browser/devtools/gcli.properties)
     locale/browser/devtools/gclicommands.properties   (%chrome/browser/devtools/gclicommands.properties)
     locale/browser/devtools/webconsole.properties     (%chrome/browser/devtools/webconsole.properties)
     locale/browser/devtools/inspector.properties      (%chrome/browser/devtools/inspector.properties)
     locale/browser/devtools/tilt.properties           (%chrome/browser/devtools/tilt.properties)
     locale/browser/devtools/scratchpad.properties     (%chrome/browser/devtools/scratchpad.properties)
     locale/browser/devtools/scratchpad.dtd            (%chrome/browser/devtools/scratchpad.dtd)
+    locale/browser/devtools/storage.properties        (%chrome/browser/devtools/storage.properties)
     locale/browser/devtools/styleeditor.properties    (%chrome/browser/devtools/styleeditor.properties)
     locale/browser/devtools/styleeditor.dtd           (%chrome/browser/devtools/styleeditor.dtd)
     locale/browser/devtools/styleinspector.dtd        (%chrome/browser/devtools/styleinspector.dtd)
     locale/browser/devtools/webConsole.dtd            (%chrome/browser/devtools/webConsole.dtd)
     locale/browser/devtools/VariablesView.dtd         (%chrome/browser/devtools/VariablesView.dtd)
     locale/browser/devtools/sourceeditor.properties   (%chrome/browser/devtools/sourceeditor.properties)
     locale/browser/devtools/sourceeditor.dtd          (%chrome/browser/devtools/sourceeditor.dtd)
     locale/browser/devtools/profiler.dtd              (%chrome/browser/devtools/profiler.dtd)
diff --git a/browser/themes/osx/jar.mn b/browser/themes/osx/jar.mn
--- a/browser/themes/osx/jar.mn
+++ b/browser/themes/osx/jar.mn
@@ -304,16 +304,17 @@ browser.jar:
 * skin/classic/browser/devtools/dark-theme.css              (../shared/devtools/dark-theme.css)
 * skin/classic/browser/devtools/light-theme.css             (../shared/devtools/light-theme.css)
   skin/classic/browser/devtools/filters.svg                 (../shared/devtools/filters.svg)
   skin/classic/browser/devtools/controls.png                (../shared/devtools/images/controls.png)
   skin/classic/browser/devtools/controls@2x.png             (../shared/devtools/images/controls@2x.png)
   skin/classic/browser/devtools/filetype-dir-close.svg        (../shared/devtools/images/filetypes/dir-close.svg)
   skin/classic/browser/devtools/filetype-dir-open.svg         (../shared/devtools/images/filetypes/dir-open.svg)
   skin/classic/browser/devtools/filetype-globe.svg            (../shared/devtools/images/filetypes/globe.svg)
+  skin/classic/browser/devtools/filetype-store.svg            (../shared/devtools/images/filetypes/store.svg)
 * skin/classic/browser/devtools/widgets.css                   (devtools/widgets.css)
   skin/classic/browser/devtools/commandline-icon.png          (devtools/commandline-icon.png)
   skin/classic/browser/devtools/command-paintflashing.png     (../shared/devtools/images/command-paintflashing.png)
   skin/classic/browser/devtools/command-paintflashing@2x.png  (../shared/devtools/images/command-paintflashing@2x.png)
   skin/classic/browser/devtools/command-responsivemode.png    (../shared/devtools/images/command-responsivemode.png)
   skin/classic/browser/devtools/command-responsivemode@2x.png (../shared/devtools/images/command-responsivemode@2x.png)
   skin/classic/browser/devtools/command-scratchpad.png        (../shared/devtools/images/command-scratchpad.png)
   skin/classic/browser/devtools/command-scratchpad@2x.png     (../shared/devtools/images/command-scratchpad@2x.png)
@@ -342,16 +343,17 @@ browser.jar:
 * skin/classic/browser/devtools/debugger.css                (devtools/debugger.css)
   skin/classic/browser/devtools/eyedropper.css              (../shared/devtools/eyedropper.css)
 * skin/classic/browser/devtools/netmonitor.css              (devtools/netmonitor.css)
 * skin/classic/browser/devtools/profiler.css                (devtools/profiler.css)
 * skin/classic/browser/devtools/scratchpad.css              (devtools/scratchpad.css)
 * skin/classic/browser/devtools/shadereditor.css            (devtools/shadereditor.css)
 * skin/classic/browser/devtools/splitview.css               (../shared/devtools/splitview.css)
   skin/classic/browser/devtools/styleeditor.css             (../shared/devtools/styleeditor.css)
+  skin/classic/browser/devtools/storage.css                 (../shared/devtools/storage.css)
 * skin/classic/browser/devtools/webaudioeditor.css          (devtools/webaudioeditor.css)
   skin/classic/browser/devtools/magnifying-glass.png        (../shared/devtools/images/magnifying-glass.png)
   skin/classic/browser/devtools/magnifying-glass@2x.png     (../shared/devtools/images/magnifying-glass@2x.png)
   skin/classic/browser/devtools/magnifying-glass-light.png  (../shared/devtools/images/magnifying-glass-light.png)
   skin/classic/browser/devtools/magnifying-glass-light@2x.png (../shared/devtools/images/magnifying-glass-light@2x.png)
   skin/classic/browser/devtools/itemToggle.png              (../shared/devtools/images/itemToggle.png)
   skin/classic/browser/devtools/itemToggle-light.png        (../shared/devtools/images/itemToggle-light.png)
   skin/classic/browser/devtools/itemArrow-dark-rtl.png      (../shared/devtools/images/itemArrow-dark-rtl.png)
diff --git a/browser/themes/shared/devtools/images/filetypes/store.svg b/browser/themes/shared/devtools/images/filetypes/store.svg
new file mode 100644
--- /dev/null
+++ b/browser/themes/shared/devtools/images/filetypes/store.svg
@@ -0,0 +1,7 @@
+<svg width="16" xmlns="http://www.w3.org/2000/svg" height="16" viewBox="0 0 16 16" xmlns:xlink="http://www.w3.org/1999/xlink" enable-background="new 0 0 16 16">
+<g>
+<path d="m1.3,12.5v-2.4c0,0 0,2.5 6.7,2.5 6.7,0 6.7-2.5 6.7-2.5v2.4c0,0 0,2.7-6.8,2.7-6.6,0-6.6-2.7-6.6-2.7z"/>
+<path d="m14.7,3.4c0-1.4-3-2.5-6.7-2.5s-6.7,1.1-6.7,2.5c0,.2 0,.3 .1,.5-.1-.3-.1-.4-.1-.4v1.5c0,0 0,2.7 6.7,2.7 6.7,0 6.8-2.7 6.8-2.7v-1.6c0,.1 0,.2-.1,.5-0-.2-0-.3-0-.5z"/>
+<path d="m1.3,8.7v-2.4c0,0 0,2.5 6.7,2.5 6.7,0 6.7-2.5 6.7-2.5v2.4c0,0 0,2.7-6.8,2.7-6.6-0-6.6-2.7-6.6-2.7z"/>
+</g>
+</svg>
diff --git a/browser/themes/shared/devtools/images/tool-storage.svg b/browser/themes/shared/devtools/images/tool-storage.svg
new file mode 100644
--- /dev/null
+++ b/browser/themes/shared/devtools/images/tool-storage.svg
@@ -0,0 +1,7 @@
+<svg width="16" xmlns="http://www.w3.org/2000/svg" height="16" viewBox="0 0 16 16" xmlns:xlink="http://www.w3.org/1999/xlink" enable-background="new 0 0 16 16">
+<g fill="#edf0f1">
+<path d="m1.3,12.5v-2.4c0,0 0,2.5 6.7,2.5 6.7,0 6.7-2.5 6.7-2.5v2.4c0,0 0,2.7-6.8,2.7-6.6,0-6.6-2.7-6.6-2.7z"/>
+<path d="m14.7,3.4c0-1.4-3-2.5-6.7-2.5s-6.7,1.1-6.7,2.5c0,.2 0,.3 .1,.5-.1-.3-.1-.4-.1-.4v1.5c0,0 0,2.7 6.7,2.7 6.7,0 6.8-2.7 6.8-2.7v-1.6c0,.1 0,.2-.1,.5-0-.2-0-.3-0-.5z"/>
+<path d="m1.3,8.7v-2.4c0,0 0,2.5 6.7,2.5 6.7,0 6.7-2.5 6.7-2.5v2.4c0,0 0,2.7-6.8,2.7-6.6-0-6.6-2.7-6.6-2.7z"/>
+</g>
+</svg>
\ No newline at end of file
diff --git a/browser/themes/shared/devtools/storage.css b/browser/themes/shared/devtools/storage.css
new file mode 100644
--- /dev/null
+++ b/browser/themes/shared/devtools/storage.css
@@ -0,0 +1,51 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+/* Storage Host Tree */
+
+#storage-tree {
+  min-width: 220px;
+  max-width: 500px;
+  overflow: auto;
+}
+
+.theme-dark #storage-tree {
+  background: url(background-noise-toolbar.png), #343c45; /* Toolbars */
+}
+
+#storage-tree .tree-widget-empty-text {
+  color: rgb(182, 186, 191);
+  text-align: center;
+  padding-top: 50px;
+  font-size: larger;
+  color: inherit;
+}
+
+#storage-tree .tree-widget-item[type="store"]:after {
+  background-image: url(chrome://browser/skin/devtools/filetype-store.svg);
+  background-size: 18px 18px;
+  background-position: -1px 0;
+}
+
+/* Variables View Sidebar */
+
+#storage-sidebar {
+  max-width: 500px;
+  min-width: 250px;
+}
+
+/* Responsive sidebar */
+@media (max-width: 700px) {
+  #storage-tree {
+    max-width: 100%;
+  }
+
+  #storage-table #path {
+    display: none;
+  }
+
+  #storage-table .table-widget-cell {
+    min-width: 100px;
+  }
+}
diff --git a/browser/themes/windows/jar.mn b/browser/themes/windows/jar.mn
--- a/browser/themes/windows/jar.mn
+++ b/browser/themes/windows/jar.mn
@@ -256,16 +256,17 @@ browser.jar:
         skin/classic/browser/devtools/breadcrumbs-scrollbutton@2x.png (../shared/devtools/images/breadcrumbs-scrollbutton@2x.png)
         skin/classic/browser/devtools/eyedropper.css                (../shared/devtools/eyedropper.css)
 *       skin/classic/browser/devtools/canvasdebugger.css            (devtools/canvasdebugger.css)
 *       skin/classic/browser/devtools/debugger.css                  (devtools/debugger.css)
 *       skin/classic/browser/devtools/netmonitor.css                (devtools/netmonitor.css)
 *       skin/classic/browser/devtools/profiler.css                  (devtools/profiler.css)
 *       skin/classic/browser/devtools/scratchpad.css                (devtools/scratchpad.css)
 *       skin/classic/browser/devtools/shadereditor.css              (devtools/shadereditor.css)
+        skin/classic/browser/devtools/storage.css                   (../shared/devtools/storage.css)
 *       skin/classic/browser/devtools/splitview.css                 (../shared/devtools/splitview.css)
         skin/classic/browser/devtools/styleeditor.css               (../shared/devtools/styleeditor.css)
 *       skin/classic/browser/devtools/webaudioeditor.css            (devtools/webaudioeditor.css)
         skin/classic/browser/devtools/magnifying-glass.png          (../shared/devtools/images/magnifying-glass.png)
         skin/classic/browser/devtools/magnifying-glass@2x.png       (../shared/devtools/images/magnifying-glass@2x.png)
         skin/classic/browser/devtools/magnifying-glass-light.png    (../shared/devtools/images/magnifying-glass-light.png)
         skin/classic/browser/devtools/magnifying-glass-light@2x.png  (../shared/devtools/images/magnifying-glass-light@2x.png)
         skin/classic/browser/devtools/itemToggle.png                (../shared/devtools/images/itemToggle.png)
@@ -622,16 +623,17 @@ browser.jar:
         skin/classic/aero/browser/devtools/breadcrumbs-scrollbutton@2x.png (../shared/devtools/images/breadcrumbs-scrollbutton@2x.png)
 *       skin/classic/aero/browser/devtools/canvasdebugger.css        (devtools/canvasdebugger.css)
 *       skin/classic/aero/browser/devtools/debugger.css              (devtools/debugger.css)
         skin/classic/aero/browser/devtools/eyedropper.css            (../shared/devtools/eyedropper.css)
 *       skin/classic/aero/browser/devtools/netmonitor.css            (devtools/netmonitor.css)
 *       skin/classic/aero/browser/devtools/profiler.css              (devtools/profiler.css)
 *       skin/classic/aero/browser/devtools/scratchpad.css            (devtools/scratchpad.css)
 *       skin/classic/aero/browser/devtools/shadereditor.css          (devtools/shadereditor.css)
+        skin/classic/aero/browser/devtools/storage.css               (../shared/devtools/storage.css)
 *       skin/classic/aero/browser/devtools/splitview.css             (../shared/devtools/splitview.css)
         skin/classic/aero/browser/devtools/styleeditor.css           (../shared/devtools/styleeditor.css)
         skin/classic/aero/browser/devtools/magnifying-glass.png      (../shared/devtools/images/magnifying-glass.png)
         skin/classic/aero/browser/devtools/magnifying-glass@2x.png   (../shared/devtools/images/magnifying-glass@2x.png)
         skin/classic/aero/browser/devtools/magnifying-glass-light.png (../shared/devtools/images/magnifying-glass-light.png)
         skin/classic/aero/browser/devtools/magnifying-glass-light@2x.png  (../shared/devtools/images/magnifying-glass-light@2x.png)
         skin/classic/aero/browser/devtools/itemToggle.png            (../shared/devtools/images/itemToggle.png)
         skin/classic/aero/browser/devtools/itemToggle-light.png      (../shared/devtools/images/itemToggle-light.png)
