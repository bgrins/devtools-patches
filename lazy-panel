# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  b96ae997c8c3c8e71811b4d0d8e3cabbdd637e7e

diff --git a/toolkit/content/widgets/panel.js b/toolkit/content/widgets/panel.js
--- a/toolkit/content/widgets/panel.js
+++ b/toolkit/content/widgets/panel.js
@@ -7,54 +7,65 @@
 // This is loaded into all XUL windows. Wrap in a block to prevent
 // leaking to window scope.
 {
   class MozPanel extends MozElements.MozElementMixin(XULPopupElement) {
     constructor() {
       super();
 
       this._prevFocus = 0;
+      this._fadeTimer = null;
 
+      this.addEventListener(
+        "popupshowing",
+        () => {
+          this.shadowRoot;
+        },
+        true
+      );
       this.addEventListener("popupshowing", this);
       this.addEventListener("popupshown", this);
       this.addEventListener("popuphiding", this);
       this.addEventListener("popuphidden", this);
       this.addEventListener("popuppositioned", this);
 
       this.attachShadow({ mode: "open" });
     }
 
+    get shadowRoot() {
+      // We generate shadow DOM lazily on popupshowing event to avoid extra load
+      // on the system during browser startup.
+      if (!super.shadowRoot.firstElementChild) {
+        if (!this.isArrowPanel) {
+          super.shadowRoot.appendChild(document.createElement("slot"));
+        } else {
+          super.shadowRoot.appendChild(this.fragment);
+          this.initializeAttributeInheritance();
+        }
+      }
+      return super.shadowRoot;
+    }
+
     connectedCallback() {
       if (this.delayConnectedCallback()) {
         return;
       }
 
-      if (!this.isArrowPanel) {
-        this.shadowRoot.appendChild(document.createElement("slot"));
-        return;
-      }
-
-      this.shadowRoot.appendChild(this.fragment);
-
       if (!this.hasAttribute("flip")) {
         this.setAttribute("flip", "both");
       }
       if (!this.hasAttribute("side")) {
         this.setAttribute("side", "top");
       }
       if (!this.hasAttribute("position")) {
         this.setAttribute("position", "bottomcenter topleft");
       }
       if (!this.hasAttribute("consumeoutsideclicks")) {
         this.setAttribute("consumeoutsideclicks", "false");
       }
-
-      this.initializeAttributeInheritance();
-
-      this._fadeTimer = null;
     }
 
     get fragment() {
       if (!this.constructor.hasOwnProperty("_fragment")) {
         this.constructor._fragment = MozXULElement.parseXULToFragment(`
         <html:link rel="stylesheet" href="chrome://global/skin/global.css"/>
         <vbox class="panel-arrowcontainer" flex="1">
           <box class="panel-arrowbox" part="arrowbox">
