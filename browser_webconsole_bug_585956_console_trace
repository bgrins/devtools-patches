# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  a97eec37ec2d4ded719ad996d75c431b7043fa5a
Bug 1256826 - Fix eslint issues in browser_webconsole_bug_585956_console_trace.js;r=pbro

MozReview-Commit-ID: 4HrOKosYk5w

diff --git a/devtools/client/webconsole/test/browser_webconsole_bug_585956_console_trace.js b/devtools/client/webconsole/test/browser_webconsole_bug_585956_console_trace.js
--- a/devtools/client/webconsole/test/browser_webconsole_bug_585956_console_trace.js
+++ b/devtools/client/webconsole/test/browser_webconsole_bug_585956_console_trace.js
@@ -3,72 +3,68 @@
 /* Any copyright is dedicated to the Public Domain.
  * http://creativecommons.org/publicdomain/zero/1.0/ */
 
 "use strict";
 
 const TEST_URI = "http://example.com/browser/devtools/client/" +
                  "webconsole/test/test-bug-585956-console-trace.html";
 
-function test() {
-  Task.spawn(runner).then(finishTest);
+add_task(function* () {
+  let {tab} = yield loadTab("data:text/html;charset=utf8,<p>hello");
+  let hud = yield openConsole(tab);
 
-  function* runner() {
-    let {tab} = yield loadTab("data:text/html;charset=utf8,<p>hello");
-    let hud = yield openConsole(tab);
+  BrowserTestUtils.loadURI(gBrowser.selectedBrowser, TEST_URI);
 
-    content.location = TEST_URI;
+  let [result] = yield waitForMessages({
+    webconsole: hud,
+    messages: [{
+      name: "console.trace output",
+      consoleTrace: {
+        file: "test-bug-585956-console-trace.html",
+        fn: "window.foobar585956c",
+      },
+    }],
+  });
 
-    let [result] = yield waitForMessages({
-      webconsole: hud,
-      messages: [{
-        name: "console.trace output",
-        consoleTrace: {
-          file: "test-bug-585956-console-trace.html",
-          fn: "window.foobar585956c",
-        },
-      }],
-    });
+  let node = [...result.matched][0];
+  ok(node, "found trace log node");
 
-    let node = [...result.matched][0];
-    ok(node, "found trace log node");
+  let obj = node._messageObject;
+  ok(obj, "console.trace message object");
 
-    let obj = node._messageObject;
-    ok(obj, "console.trace message object");
+  // The expected stack trace object.
+  let stacktrace = [
+    {
+      columnNumber: 3,
+      filename: TEST_URI,
+      functionName: "window.foobar585956c",
+      language: 2,
+      lineNumber: 9
+    },
+    {
+      columnNumber: 10,
+      filename: TEST_URI,
+      functionName: "foobar585956b",
+      language: 2,
+      lineNumber: 14
+    },
+    {
+      columnNumber: 10,
+      filename: TEST_URI,
+      functionName: "foobar585956a",
+      language: 2,
+      lineNumber: 18
+    },
+    {
+      columnNumber: 1,
+      filename: TEST_URI,
+      functionName: "",
+      language: 2,
+      lineNumber: 21
+    }
+  ];
 
-    // The expected stack trace object.
-    let stacktrace = [
-      {
-        columnNumber: 3,
-        filename: TEST_URI,
-        functionName: "window.foobar585956c",
-        language: 2,
-        lineNumber: 9
-      },
-      {
-        columnNumber: 10,
-        filename: TEST_URI,
-        functionName: "foobar585956b",
-        language: 2,
-        lineNumber: 14
-      },
-      {
-        columnNumber: 10,
-        filename: TEST_URI,
-        functionName: "foobar585956a",
-        language: 2,
-        lineNumber: 18
-      },
-      {
-        columnNumber: 1,
-        filename: TEST_URI,
-        functionName: "",
-        language: 2,
-        lineNumber: 21
-      }
-    ];
-
-    ok(obj._stacktrace, "found stacktrace object");
-    is(obj._stacktrace.toSource(), stacktrace.toSource(),
-       "stacktrace is correct");
-    isnot(node.textContent.indexOf("bug-585956"), -1, "found file name");
-  }
-}
+  ok(obj._stacktrace, "found stacktrace object");
+  is(obj._stacktrace.toSource(), stacktrace.toSource(),
+     "stacktrace is correct");
+  isnot(node.textContent.indexOf("bug-585956"), -1, "found file name");
+});
