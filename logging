# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  7cef799bc6b3f664feb3036896156cc2c486eb3b
Exrta logging

diff --git a/browser/devtools/webconsole/test/browser_netmonitor_shows_reqs_in_webconsole.js b/browser/devtools/webconsole/test/browser_netmonitor_shows_reqs_in_webconsole.js
--- a/browser/devtools/webconsole/test/browser_netmonitor_shows_reqs_in_webconsole.js
+++ b/browser/devtools/webconsole/test/browser_netmonitor_shows_reqs_in_webconsole.js
@@ -15,59 +15,75 @@ const NET_PREF = "devtools.webconsole.fi
 Services.prefs.setBoolPref(NET_PREF, true);
 registerCleanupFunction(() => {
   Services.prefs.clearUserPref(NET_PREF);
 });
 
 add_task(function* () {
   let { tab, browser } = yield loadTab(TEST_URI);
 
+  const {console} = Cu.import("resource://gre/modules/devtools/Console.jsm", {});
+
   // Test that the request appears in the console.
   let hud = yield openConsole();
   info("Web console is open");
+  console.log("1");
 
   yield loadDocument(browser);
   info("Document loaded.");
+  console.log("2");
 
   yield waitForMessages({
     webconsole: hud,
     messages: [
       {
         name: "network message",
         text: TEST_FILE,
         category: CATEGORY_NETWORK,
         severity: SEVERITY_LOG
       }
     ]
   });
+  console.log("3");
 
   // Test that the request appears in the network panel.
   let target = TargetFactory.forTab(tab);
+  console.log("4");
   let toolbox = yield gDevTools.showToolbox(target, "netmonitor");
   info("Network panel is open.");
+  console.log("5");
 
   yield testNetmonitor(toolbox);
+  console.log("6");
 });
 
 
 function loadDocument(browser) {
+  const {console} = Cu.import("resource://gre/modules/devtools/Console.jsm", {});
   let deferred = promise.defer();
 
   browser.addEventListener("load", function onLoad() {
     browser.removeEventListener("load", onLoad, true);
+    console.log("Def.resolve");
     deferred.resolve();
   }, true);
+  console.log("Location - " + TEST_PATH);
   content.location = TEST_PATH;
 
   return deferred.promise;
 }
 
 function* testNetmonitor(toolbox) {
+  const {console} = Cu.import("resource://gre/modules/devtools/Console.jsm", {});
+
   let monitor = toolbox.getCurrentPanel();
   let { RequestsMenu } = monitor.panelWin.NetMonitorView;
+  console.log("testNetmonitor 1");
 
   yield monitor.panelWin.once(monitor.panelWin.EVENTS.REQUEST_ADDED);
+  console.log("testNetmonitor 2");
   is(RequestsMenu.itemCount, 1, "Network request appears in the network panel");
 
+  console.log("testNetmonitor 3");
   let item = RequestsMenu.getItemAtIndex(0);
   is(item.attachment.method, "GET", "The attached method is correct.");
   is(item.attachment.url, TEST_PATH, "The attached url is correct.");
 }
