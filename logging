# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  4cb60ab3d1231cb7ae9dc0e539a02cf423800304

diff --git a/browser/base/content/tabbrowser.js b/browser/base/content/tabbrowser.js
--- a/browser/base/content/tabbrowser.js
+++ b/browser/base/content/tabbrowser.js
@@ -11,16 +11,21 @@
  */
 const FAVICON_DEFAULTS = {
   "about:newtab": "chrome://branding/content/icon32.png",
   "about:home": "chrome://branding/content/icon32.png",
   "about:welcome": "chrome://branding/content/icon32.png",
   "about:privatebrowsing": "chrome://browser/skin/privatebrowsing/favicon.svg",
 };
 
+document.addEventListener("focusout", (e) => {
+  console.log("Got focusout", e.target);
+  console.trace();
+}, true);
+
 window._gBrowser = {
   init() {
     ChromeUtils.defineModuleGetter(this, "AsyncTabSwitcher",
       "resource:///modules/AsyncTabSwitcher.jsm");
 
     XPCOMUtils.defineLazyServiceGetters(this, {
       _unifiedComplete: ["@mozilla.org/autocomplete/search;1?name=unifiedcomplete", "mozIPlacesAutoComplete"],
       serializationHelper: ["@mozilla.org/network/serialization-helper;1", "nsISerializationHelper"],
@@ -1088,16 +1093,24 @@ window._gBrowser = {
 
     if (this.isFindBarInitialized(oldTab)) {
       let findBar = this.getCachedFindBar(oldTab);
       oldTab._findBarFocused = (!findBar.hidden &&
         findBar._findField.getAttribute("focused") == "true");
     }
 
     let activeEl = document.activeElement;
+    if (!activeEl) {
+      console.log("Got non active case...");
+      console.trace();
+    } else {
+      console.log("Got active case", document.activeElement);
+      console.trace();
+    }
+
     // If focus is on the old tab, move it to the new tab.
     if (activeEl == oldTab) {
       newTab.focus();
     } else if (activeEl && gMultiProcessBrowser && activeEl != newBrowser && activeEl != newTab) {
       // In e10s, if focus isn't already in the tabstrip or on the new browser,
       // and the new browser's previous focus wasn't in the url bar but focus is
       // there now, we need to adjust focus further.
       let keepFocusOnUrlBar = newBrowser &&
