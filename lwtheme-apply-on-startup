# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  70b8d85a0fcc961da0852912a54b3b8c65ec2337
1164954- Both Dev Edition and Default theme are showing up as selected

diff --git a/browser/app/profile/firefox.js b/browser/app/profile/firefox.js
--- a/browser/app/profile/firefox.js
+++ b/browser/app/profile/firefox.js
@@ -1331,23 +1331,25 @@ pref("services.sync.prefs.sync.security.
 pref("services.sync.prefs.sync.security.tls.version.min", true);
 pref("services.sync.prefs.sync.security.tls.version.max", true);
 pref("services.sync.prefs.sync.signon.rememberSignons", true);
 pref("services.sync.prefs.sync.spellchecker.dictionary", true);
 pref("services.sync.prefs.sync.xpinstall.whitelist.required", true);
 #endif
 
 // Developer edition preferences
-#ifdef MOZ_DEV_EDITION
+#ifndef MOZ_DEV_EDITION
 sticky_pref("lightweightThemes.selectedThemeID", "firefox-devedition@mozilla.org");
 sticky_pref("browser.devedition.theme.enabled", true);
 #else
 sticky_pref("lightweightThemes.selectedThemeID", "");
 #endif
 
+pref("browser.devedition.theme.installed", false);
+
 // Developer edition promo preferences
 pref("devtools.devedition.promo.shown", false);
 pref("devtools.devedition.promo.url", "https://www.mozilla.org/firefox/developer/?utm_source=firefox-dev-tools&utm_medium=firefox-browser&utm_content=betadoorhanger");
 
 // Only potentially show in beta release
 #if MOZ_UPDATE_CHANNEL == beta
   pref("devtools.devedition.promo.enabled", true);
 #else
diff --git a/browser/base/content/browser-devedition.js b/browser/base/content/browser-devedition.js
--- a/browser/base/content/browser-devedition.js
+++ b/browser/base/content/browser-devedition.js
@@ -3,37 +3,55 @@
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
 /**
  * Listeners for the DevEdition theme.  This adds an extra stylesheet
  * to browser.xul if a pref is set and no other themes are applied.
  */
 let DevEdition = {
   _devtoolsThemePrefName: "devtools.theme",
+  _themeInstalledPrefName: "browser.devedition.theme.installed",
   styleSheetLocation: "chrome://browser/skin/devedition.css",
   styleSheet: null,
   initialized: false,
 
   get isStyleSheetEnabled() {
     return this.styleSheet && !this.styleSheet.sheet.disabled;
   },
 
   get isThemeCurrentlyApplied() {
     let theme = LightweightThemeManager.currentTheme;
     return theme && theme.id == "firefox-devedition@mozilla.org";
   },
 
+  get hasThemeBeenInstalled() {
+    let installed = false;
+    try {
+      installed = Services.prefs.getBoolPref(this._themeInstalledPrefName);
+    } catch(e) { }
+    return installed;
+  },
+
   init: function () {
     this.initialized = true;
     Services.prefs.addObserver(this._devtoolsThemePrefName, this, false);
     Services.obs.addObserver(this, "lightweight-theme-styling-update", false);
     this._updateDevtoolsThemeAttribute();
 
     if (this.isThemeCurrentlyApplied) {
       this._toggleStyleSheet(true);
+
+      // Force the LightweightThemeManager to realize that this theme has been
+      // installed.  Since it could have been activated due to a default pref
+      // value and not via a user action, there's a chance the default theme
+      // still thinks that it's active.
+      if (!this.hasThemeBeenInstalled) {
+        LightweightThemeManager.currentTheme = LightweightThemeManager.currentTheme;
+        Services.prefs.setBoolPref(this._themeInstalledPrefName, true);
+      }
     }
   },
 
   createStyleSheet: function() {
     let styleSheetAttr = `href="${this.styleSheetLocation}" type="text/css"`;
     this.styleSheet = document.createProcessingInstruction(
       "xml-stylesheet", styleSheetAttr);
     this.styleSheet.addEventListener("load", this);
