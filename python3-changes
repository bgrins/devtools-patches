# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  f6d1a9f38653e119793ff0c5d50ef311babfff1a

diff --git a/python/l10n/convert_xul_to_fluent/lib/dtd.py b/python/l10n/convert_xul_to_fluent/lib/dtd.py
--- a/python/l10n/convert_xul_to_fluent/lib/dtd.py
+++ b/python/l10n/convert_xul_to_fluent/lib/dtd.py
@@ -16,12 +16,12 @@ def get_dtds(sources, base_path):
     return entries
 
 
 def get_dtd(dtd_source, base_path):
     entries = {}
 
     source = read_file(dtd_source, base_path)
 
-    dtd = etree.DTD(StringIO(source.decode("utf-8")))
+    dtd = etree.DTD(StringIO(source))
     for entity in dtd.entities():
         entries[entity.name] = entity.content
     return entries
diff --git a/python/l10n/convert_xul_to_fluent/lib/utils.py b/python/l10n/convert_xul_to_fluent/lib/utils.py
--- a/python/l10n/convert_xul_to_fluent/lib/utils.py
+++ b/python/l10n/convert_xul_to_fluent/lib/utils.py
@@ -10,9 +10,12 @@ def read_file(path, base_path=None):
         return fptr.read()
 
 
 def write_file(path, text, base_path=None):
     if base_path is not None:
         path = os.path.join(base_path, path)
         path = path.replace('\\', '/')
     with open(path, "w") as text_file:
-        text_file.write(text)
+        if isinstance(text, bytes):
+            text_file.write(text.decode("utf-8"))
+        else:
+            text_file.write(text)
