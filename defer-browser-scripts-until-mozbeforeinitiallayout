# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  19480c5351171537652af013289a595fa4d66ede

diff --git a/browser/base/content/browser.xul b/browser/base/content/browser.xul
--- a/browser/base/content/browser.xul
+++ b/browser/base/content/browser.xul
@@ -82,55 +82,58 @@
 # that they can be shared with macWindow.inc.xul.
 #include global-scripts.inc
 
 <script type="application/javascript"
 #ifdef BROWSER_XHTML
 xmlns="http://www.w3.org/1999/xhtml"
 #endif
 >
-  Services.scriptloader.loadSubScript("chrome://global/content/contentAreaUtils.js", this);
-  Services.scriptloader.loadSubScript("chrome://browser/content/browser-captivePortal.js", this);
-  Services.scriptloader.loadSubScript("chrome://browser/content/browser-compacttheme.js", this);
-  Services.scriptloader.loadSubScript("chrome://browser/content/browser-contentblocking.js", this);
+#ifdef BROWSER_XHTML
+  window.addEventListener("readystatechange", () => {
+#else
+  window.addEventListener("MozBeforeInitialXULLayout", () => {
+#endif
+    Services.scriptloader.loadSubScript("chrome://global/content/contentAreaUtils.js", this);
+    Services.scriptloader.loadSubScript("chrome://browser/content/browser-captivePortal.js", this);
+    Services.scriptloader.loadSubScript("chrome://browser/content/browser-compacttheme.js", this);
+    Services.scriptloader.loadSubScript("chrome://browser/content/browser-contentblocking.js", this);
 #ifdef MOZ_DATA_REPORTING
-  Services.scriptloader.loadSubScript("chrome://browser/content/browser-data-submission-info-bar.js", this);
+    Services.scriptloader.loadSubScript("chrome://browser/content/browser-data-submission-info-bar.js", this);
 #endif
 #ifndef MOZILLA_OFFICIAL
-  Services.scriptloader.loadSubScript("chrome://browser/content/browser-development-helpers.js", this);
+    Services.scriptloader.loadSubScript("chrome://browser/content/browser-development-helpers.js", this);
 #endif
-  Services.scriptloader.loadSubScript("chrome://browser/content/browser-media.js", this);
-  Services.scriptloader.loadSubScript("chrome://browser/content/browser-pageActions.js", this);
-  Services.scriptloader.loadSubScript("chrome://browser/content/browser-plugins.js", this);
-  Services.scriptloader.loadSubScript("chrome://browser/content/browser-sidebar.js", this);
-  Services.scriptloader.loadSubScript("chrome://browser/content/browser-tabsintitlebar.js", this);
-  Services.scriptloader.loadSubScript("chrome://browser/content/tabbrowser.js", this);
-  Services.scriptloader.loadSubScript("chrome://browser/content/search/searchbar.js", this);
+    Services.scriptloader.loadSubScript("chrome://browser/content/browser-media.js", this);
+    Services.scriptloader.loadSubScript("chrome://browser/content/browser-pageActions.js", this);
+    Services.scriptloader.loadSubScript("chrome://browser/content/browser-plugins.js", this);
+    Services.scriptloader.loadSubScript("chrome://browser/content/browser-sidebar.js", this);
+    Services.scriptloader.loadSubScript("chrome://browser/content/browser-tabsintitlebar.js", this);
+    Services.scriptloader.loadSubScript("chrome://browser/content/tabbrowser.js", this);
+    Services.scriptloader.loadSubScript("chrome://browser/content/search/searchbar.js", this);
 
-  window.onload = gBrowserInit.onLoad.bind(gBrowserInit);
-  window.onunload = gBrowserInit.onUnload.bind(gBrowserInit);
-  window.onclose = WindowIsClosing;
+    window.onload = gBrowserInit.onLoad.bind(gBrowserInit);
+    window.onunload = gBrowserInit.onUnload.bind(gBrowserInit);
+    window.onclose = WindowIsClosing;
 
+    // The listener of DOMContentLoaded must be set on window, rather than
+    // document, because the window can go away before the event is fired.
+    // In that case, we don't want to initialize anything, otherwise we
+    // may be leaking things because they will never be destroyed after.
+    window.addEventListener("DOMContentLoaded",
+      gBrowserInit.onDOMContentLoaded.bind(gBrowserInit), { once: true });
+
+    gBrowserInit.onBeforeInitialXULLayout();
 #ifdef BROWSER_XHTML
-  window.addEventListener("readystatechange", () => {
     // We initially hide the window to prevent layouts during parse. This lets us
     // avoid accidental XBL construction and better match browser.xul (see Bug 1497975).
-    gBrowserInit.onBeforeInitialXULLayout();
     document.documentElement.removeAttribute("hidden");
-  }, { once: true, capture: true });
-#else
-  window.addEventListener("MozBeforeInitialXULLayout",
-    gBrowserInit.onBeforeInitialXULLayout.bind(gBrowserInit), { once: true });
 #endif
-  // The listener of DOMContentLoaded must be set on window, rather than
-  // document, because the window can go away before the event is fired.
-  // In that case, we don't want to initialize anything, otherwise we
-  // may be leaking things because they will never be destroyed after.
-  window.addEventListener("DOMContentLoaded",
-    gBrowserInit.onDOMContentLoaded.bind(gBrowserInit), { once: true });
+
+  }, { once: true, capture: true });
 </script>
 
 # All sets except for popupsets (commands, keys, and stringbundles)
 # *must* go into the browser-sets.inc file so that they can be shared with other
 # top level windows in macWindow.inc.xul.
 #include browser-sets.inc
 
   <popupset id="mainPopupSet">
diff --git a/browser/base/content/global-scripts.inc b/browser/base/content/global-scripts.inc
--- a/browser/base/content/global-scripts.inc
+++ b/browser/base/content/global-scripts.inc
@@ -11,19 +11,23 @@
 # file so that ESLint works correctly:
 # tools/lint/eslint/eslint-plugin-mozilla/lib/environments/browser-window.js
 
 <script type="text/javascript"
 #ifdef BROWSER_XHTML
 xmlns="http://www.w3.org/1999/xhtml"
 #endif
 >
-Components.utils.import("resource://gre/modules/Services.jsm");
-
-Services.scriptloader.loadSubScript("chrome://browser/content/browser.js", this);
-Services.scriptloader.loadSubScript("chrome://browser/content/browser-places.js", this);
-Services.scriptloader.loadSubScript("chrome://global/content/globalOverlay.js", this);
-Services.scriptloader.loadSubScript("chrome://browser/content/utilityOverlay.js", this);
+  Components.utils.import("resource://gre/modules/Services.jsm");
+#ifdef BROWSER_XHTML
+  window.addEventListener("readystatechange", () => {
+#else
+  window.addEventListener("MozBeforeInitialXULLayout", () => {
+#endif
+    Services.scriptloader.loadSubScript("chrome://browser/content/browser.js", this);
+    Services.scriptloader.loadSubScript("chrome://browser/content/browser-places.js", this);
+    Services.scriptloader.loadSubScript("chrome://global/content/globalOverlay.js", this);
+    Services.scriptloader.loadSubScript("chrome://browser/content/utilityOverlay.js", this);
 #ifdef XP_MACOSX
-Services.scriptloader.loadSubScript("chrome://global/content/macWindowMenu.js", this);
+    Services.scriptloader.loadSubScript("chrome://global/content/macWindowMenu.js", this);
 #endif
-
+  }, { once: true, capture: true });
 </script>
