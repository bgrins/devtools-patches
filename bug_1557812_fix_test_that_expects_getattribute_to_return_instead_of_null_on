# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1559852145 25200
#      Thu Jun 06 13:15:45 2019 -0700
# Node ID a4fe77a022d1829e31a13ba4c698fc65ff6ed8e5
# Parent  bee3a910397d6ccdc5b7420c65508fead0bf1741
Bug 1557812 - Fix test that expects getAttribute to return "" instead of null on documentElement without the attribute

This is a difference between HTML and XUL elements. Updating the test to use hasAttribute instead.

Differential Revision: https://phabricator.services.mozilla.com/D34020

diff --git a/toolkit/components/extensions/test/browser/browser_ext_themes_autocomplete_popup.js b/toolkit/components/extensions/test/browser/browser_ext_themes_autocomplete_popup.js
--- a/toolkit/components/extensions/test/browser/browser_ext_themes_autocomplete_popup.js
+++ b/toolkit/components/extensions/test/browser/browser_ext_themes_autocomplete_popup.js
@@ -138,18 +138,18 @@ add_task(async function test_popup_url()
                `rgb(${hexToRGB(POPUP_URL_COLOR_DARK).join(", ")})`,
                `Urlbar popup url color should be set to ${POPUP_URL_COLOR_DARK}`);
 
   Assert.equal(window.getComputedStyle(actionResult.element.action).color,
                `rgb(${hexToRGB(POPUP_ACTION_COLOR_DARK).join(", ")})`,
                `Urlbar popup action color should be set to ${POPUP_ACTION_COLOR_DARK}`);
 
   let root = document.documentElement;
-  Assert.equal(root.getAttribute("lwt-popup-brighttext"),
-               "",
+  Assert.equal(root.hasAttribute("lwt-popup-brighttext"),
+               false,
                "brighttext should not be set!");
   Assert.equal(root.getAttribute("lwt-popup-darktext"),
                "true",
                "darktext should be set!");
 
   await extension.unload();
 
   Assert.equal(root.hasAttribute("lwt-popup-darktext"),
@@ -197,29 +197,29 @@ add_task(async function test_popup_url()
   // POPUP_TEXT_COLOR_BRIGHT with added alpha.
   Assert.equal(window.getComputedStyle(urlResult.element.separator, quantumbar ? ":before" : null).color,
                `rgba(${hexToRGB(POPUP_TEXT_COLOR_BRIGHT).join(", ")}, 0.5)`,
                `Urlbar popup separator color should be set to ${POPUP_TEXT_COLOR_BRIGHT} with alpha`);
 
   Assert.equal(root.getAttribute("lwt-popup-brighttext"),
                "true",
                "brighttext should be set to true!");
-  Assert.equal(root.getAttribute("lwt-popup-darktext"),
-               "",
+  Assert.equal(root.hasAttribute("lwt-popup-darktext"),
+               false,
                "darktext should not be set!");
 
   await extension.unload();
 
   // Check to see if popup-brighttext and secondary color are not set after
   // unload of theme
-  Assert.equal(root.getAttribute("lwt-popup-brighttext"),
-               "",
+  Assert.equal(root.hasAttribute("lwt-popup-brighttext"),
+               false,
                "brighttext should not be set!");
-  Assert.equal(root.getAttribute("lwt-popup-darktext"),
-               "",
+  Assert.equal(root.hasAttribute("lwt-popup-darktext"),
+               false,
                "darktext should not be set!");
 
   // Calculate what GrayText should be. May differ between platforms.
   let span = document.createXULElement("span");
   span.style.color = "GrayText";
   document.documentElement.appendChild(span);
   let GRAY_TEXT = window.getComputedStyle(span).color;
   span.remove();
