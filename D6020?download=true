diff --git a/devtools/client/sourceeditor/editor.js b/devtools/client/sourceeditor/editor.js
--- a/devtools/client/sourceeditor/editor.js
+++ b/devtools/client/sourceeditor/editor.js
@@ -28,7 +28,7 @@
 // line in text selection.
 const RE_SCRATCHPAD_ERROR = /(?:@Scratchpad\/\d+:|\()(\d+):?(\d+)?(?:\)|\n)/;
 const RE_JUMP_TO_LINE = /^(\d+):?(\d+)?/;
-const AUTOCOMPLETE_MARK_CLASSNAME = "cm-auto-complete-shadow-text";
+const AUTOCOMPLETE_TEXT_ATTRIBUTE = "data-completion-text";
 
 const Services = require("Services");
 const EventEmitter = require("devtools/shared/event-emitter");
@@ -1285,30 +1285,32 @@
 
   getAutoCompletionText() {
     const cm = editors.get(this);
-    const mark = cm.getAllMarks().find(m => m.className === AUTOCOMPLETE_MARK_CLASSNAME);
-    if (!mark) {
+    const el = cm.getWrapperElement();
+    const doc = el.ownerDocument;
+    const autoCompletedElement = doc.querySelector(`[${AUTOCOMPLETE_TEXT_ATTRIBUTE}]`);
+    if (!autoCompletedElement) {
       return "";
     }
 
-    return mark.title || "";
+    return autoCompletedElement.getAttribute(AUTOCOMPLETE_TEXT_ATTRIBUTE) || "";
   },
 
   setAutoCompletionText: function(text) {
     const cursor = this.getCursor();
     const cm = editors.get(this);
-    const className = AUTOCOMPLETE_MARK_CLASSNAME;
+    const el = cm.getWrapperElement();
+    const doc = el.ownerDocument;
+    const attrSelector = `[${AUTOCOMPLETE_TEXT_ATTRIBUTE}]`;
+    doc.querySelectorAll(attrSelector).forEach(n =>
+      n.removeAttribute(AUTOCOMPLETE_TEXT_ATTRIBUTE));
 
-    cm.operation(() => {
-      cm.getAllMarks().forEach(mark => {
-        if (mark.className === className) {
-          mark.clear();
-        }
-      });
-
-      if (text) {
-        cm.markText({...cursor, ch: cursor.ch - 1}, cursor, { className, title: text });
+    if (text) {
+      const lastSpanOnCursorLine = doc.querySelector(
+        `.CodeMirror-line:nth-of-type(${cursor.line + 1}) span[role]:last-child`);
+      if (lastSpanOnCursorLine) {
+        lastSpanOnCursorLine.setAttribute(AUTOCOMPLETE_TEXT_ATTRIBUTE, text);
       }
-    });
+    }
   },
 
   /**
diff --git a/devtools/client/themes/webconsole.css b/devtools/client/themes/webconsole.css
--- a/devtools/client/themes/webconsole.css
+++ b/devtools/client/themes/webconsole.css
@@ -416,8 +416,8 @@
   fill: var(--console-input-icon-focused);
 }
 
-.jsterm-cm .cm-auto-complete-shadow-text::after {
-  content: attr(title);
+.jsterm-cm [data-completion-text]::after {
+  content: attr(data-completion-text);
   color: var(--theme-comment);
 }
 

