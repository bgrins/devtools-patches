# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1539206982 25200
#      Wed Oct 10 14:29:42 2018 -0700
# Node ID 9fde79ff94ae55afe45aa52a725824c7bdefd53e
# Parent  9ba60bd4482561db2a86f7ebcee1f0b66b32746b
Bug 1497975 - Prevent layouts during parse of browser.xhtml;r=Gijs,r=emilio

By hiding the documentElement with display:none and then waiting to
show it until readystatechange, we can avoid inadvertently constructing
XBL bindings as a result scripts running during parse like connectedCallback.

This more closely matches XUL document behavior, where the initial
layout doesn't happen until everything is parsed and loaded. It also
lets us call gBrowserInit.onBeforeInitialXULLayout actually before
layout happens.

Differential Revision: https://phabricator.services.mozilla.com/D8297

diff --git a/browser/base/content/browser.xul b/browser/base/content/browser.xul
--- a/browser/base/content/browser.xul
+++ b/browser/base/content/browser.xul
@@ -65,17 +65,21 @@
         tabsintitlebar="true"
         titlemenuseparator="&mainWindow.titlemodifiermenuseparator;"
         windowtype="navigator:browser"
         macanimationtype="document"
         screenX="4" screenY="4"
         fullscreenbutton="true"
         sizemode="normal"
         retargetdocumentfocus="urlbar"
-        persist="screenX screenY width height sizemode">
+        persist="screenX screenY width height sizemode"
+#ifdef BROWSER_XHTML
+        hidden="true"
+#endif
+        >
 
 # All JS files which are needed by browser.xul and other top level windows to
 # support MacOS specific features *must* go into the global-scripts.inc file so
 # that they can be shared with macWindow.inc.xul.
 #include global-scripts.inc
 
 <script type="application/javascript"
 #ifdef BROWSER_XHTML
@@ -83,19 +87,24 @@ xmlns="http://www.w3.org/1999/xhtml"
 #endif
 >
   Services.scriptloader.loadSubScript("chrome://global/content/contentAreaUtils.js", this);
   Services.scriptloader.loadSubScript("chrome://browser/content/tabbrowser.js", this);
 
   window.onload = gBrowserInit.onLoad.bind(gBrowserInit);
   window.onunload = gBrowserInit.onUnload.bind(gBrowserInit);
   window.onclose = WindowIsClosing;
+
 #ifdef BROWSER_XHTML
-  window.addEventListener("DOMContentLoaded",
-    gBrowserInit.onBeforeInitialXULLayout.bind(gBrowserInit), { once: true });
+  window.addEventListener("readystatechange", () => {
+    // We initially hide the window to prevent layouts during parse. This lets us
+    // avoid accidental XBL construction and better match browser.xul (see Bug 1497975).
+    gBrowserInit.onBeforeInitialXULLayout();
+    document.documentElement.removeAttribute("hidden");
+  }, { once: true, capture: true });
 #else
   window.addEventListener("MozBeforeInitialXULLayout",
     gBrowserInit.onBeforeInitialXULLayout.bind(gBrowserInit), { once: true });
 #endif
   // The listener of DOMContentLoaded must be set on window, rather than
   // document, because the window can go away before the event is fired.
   // In that case, we don't want to initialize anything, otherwise we
   // may be leaking things because they will never be destroyed after.
