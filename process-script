# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  c50f5f846c2e6b4c8da1e80b6790926ad84c3450

diff --git a/browser/components/nsBrowserGlue.js b/browser/components/nsBrowserGlue.js
--- a/browser/components/nsBrowserGlue.js
+++ b/browser/components/nsBrowserGlue.js
@@ -920,16 +920,28 @@ BrowserGlue.prototype = {
     let scaling = aWindow.devicePixelRatio * 100;
     try {
       Services.telemetry.getHistogramById("DISPLAY_SCALING").add(scaling);
     } catch (ex) {}
   },
 
   // the first browser window has finished initializing
   _onFirstWindowLoaded: function BG__onFirstWindowLoaded(aWindow) {
+    Services.ppmm.loadProcessScript(`data:,
+      ChromeUtils.import("resource://gre/modules/XPCOMUtils.jsm");
+      ChromeUtils.import("resource://gre/modules/Services.jsm");
+      console.log("brian process script loaded!");
+      var foo = {
+        QueryInterface: XPCOMUtils.generateQI([Ci.nsIObserver]),
+        observe() { console.log(arguments); }
+      };
+      Services.obs.addObserver(foo, "DOMTitleChanged");
+    `, true);
+
+
     // Set up listeners and, if PdfJs is enabled, register the PDF stream converter.
     // We delay all of the parent's initialization other than stream converter
     // registration, because it requires file IO from nsHandlerService-json.js
     Services.ppmm.loadProcessScript("resource://pdf.js/pdfjschildbootstrap.js", true);
     if (PdfJs.enabled) {
       PdfJs.ensureRegistered();
       Services.ppmm.loadProcessScript("resource://pdf.js/pdfjschildbootstrap-enabled.js", true);
     }
