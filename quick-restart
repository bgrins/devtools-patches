# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  103d762c4795fe16e3b663f74cd89a34dbb2bae8
Bug 1385452 - Add a keyboard shortcut in local builds to restart the browser

diff --git a/browser/components/nsBrowserGlue.js b/browser/components/nsBrowserGlue.js
--- a/browser/components/nsBrowserGlue.js
+++ b/browser/components/nsBrowserGlue.js
@@ -970,16 +970,20 @@ BrowserGlue.prototype = {
     DirectoryLinksProvider.init();
     NewTabUtils.init();
     NewTabUtils.links.addProvider(DirectoryLinksProvider);
     AboutNewTab.init();
 
     this._firstWindowTelemetry(aWindow);
     this._firstWindowLoaded();
 
+    if (!AppConstants.MOZ_OFFICIAL) {
+      DevelopmentHelper.init();
+    }
+
     this._mediaTelemetryIdleObserver = {
       browserGlue: this,
       observe(aSubject, aTopic, aData) {
         if (aTopic != "idle") {
           return;
         }
         this.browserGlue._sendMediaTelemetry();
       }
@@ -2855,16 +2859,56 @@ var E10SAccessibilityCheck = {
 
     notification =
       win.PopupNotifications.show(browser, "a11y_enabled_with_e10s",
                                   promptMessage, null, mainAction,
                                   secondaryActions, options);
   },
 };
 
+var DevelopmentHelper = {
+  init() {
+    this.restart = this.restart.bind(this);
+    this.addRestartShortcutForWin = this.addRestartShortcutForWin.bind(this);
+    findWindowsAndRun(this.addRestartShortcutForWin.bind(this));
+  },
+
+  restart() {
+    Cc['@mozilla.org/toolkit/app-startup;1'].getService(Ci.nsIAppStartup)
+        .quit(Ci.nsIAppStartup.eAttemptQuit | Ci.nsIAppStartup.eRestart);
+  },
+
+  addRestartShortcutForWin(win) {
+    let doc = win.document;
+    let restartMI = doc.createElement("menuitem");
+    let fileMenu = doc.getElementById("menu_FilePopup");
+    let quitMI = doc.getElementById("menu_FileQuitItem");
+    restartMI.setAttribute("id", "menu_FileRestartItem");
+    restartMI.setAttribute("label", "Restart");
+    restartMI.addEventListener("command", this.restart, true);
+    fileMenu.insertBefore(restartMI, quitMI);
+  },
+
+  findWindowsAndRun(aFunc) {
+    let browserWins = Services.wm.getEnumerator("navigator:browser");
+    while (browserWins.hasMoreElements()) aFunc(browserWins.getNext());
+    function winObs(aSubject, aTopic) {
+      if ("domwindowopened" != aTopic) return;
+      let winLoad = function() {
+        aSubject.removeEventListener("load", winLoad, false);
+        if ("navigator:browser" ==
+            aSubject.document.documentElement.getAttribute("windowtype"))
+          aFunc(aSubject);
+      }
+      aSubject.addEventListener("load", winLoad, false);
+    }
+    Services.ww.registerNotification(winObs);
+  },
+};
+
 var components = [BrowserGlue, ContentPermissionPrompt];
 this.NSGetFactory = XPCOMUtils.generateNSGetFactory(components);
 
 
 // Listen for UITour messages.
 // Do it here instead of the UITour module itself so that the UITour module is lazy loaded
 // when the first message is received.
 var globalMM = Cc["@mozilla.org/globalmessagemanager;1"].getService(Ci.nsIMessageListenerManager);
