# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  1e856f0e6b727e582cb9bfabb82e1fd34542b131
Bug 1385452 - Add a keyboard shortcut in local builds to restart the browser

diff --git a/browser/components/nsBrowserGlue.js b/browser/components/nsBrowserGlue.js
--- a/browser/components/nsBrowserGlue.js
+++ b/browser/components/nsBrowserGlue.js
@@ -971,16 +971,20 @@ BrowserGlue.prototype = {
     NewTabUtils.links.addProvider(DirectoryLinksProvider);
     AboutNewTab.init();
 
     PageActions.init();
 
     this._firstWindowTelemetry(aWindow);
     this._firstWindowLoaded();
 
+    if (!AppConstants.MOZ_OFFICIAL) {
+      DevelopmentHelper.init();
+    }
+
     this._mediaTelemetryIdleObserver = {
       browserGlue: this,
       observe(aSubject, aTopic, aData) {
         if (aTopic != "idle") {
           return;
         }
         this.browserGlue._sendMediaTelemetry();
       }
@@ -2856,16 +2860,77 @@ var E10SAccessibilityCheck = {
 
     notification =
       win.PopupNotifications.show(browser, "a11y_enabled_with_e10s",
                                   promptMessage, null, mainAction,
                                   secondaryActions, options);
   },
 };
 
+var DevelopmentHelper = {
+  init() {
+    this.restart = this.restart.bind(this);
+    this.addRestartShortcutForWin = this.addRestartShortcutForWin.bind(this);
+    this.forEachWindow(this.addRestartShortcutForWin);
+  },
+
+  restart() {
+    Services.obs.notifyObservers(null, "startupcache-invalidate");
+
+    let env = Cc["@mozilla.org/process/environment;1"]
+            .getService(Components.interfaces.nsIEnvironment);
+    env.set("MOZ_DISABLE_SAFE_MODE_KEY", "1");
+
+    Cc["@mozilla.org/toolkit/app-startup;1"].getService(Ci.nsIAppStartup)
+        .quit(Ci.nsIAppStartup.eAttemptQuit | Ci.nsIAppStartup.eRestart);
+  },
+
+  addRestartShortcutForWin(win) {
+    let doc = win.document;
+
+    let command = doc.createElement("command");
+    command.setAttribute("id", "cmd_quickRestart");
+    command.addEventListener("command", this.restart, true);
+    command.setAttribute("oncommand", "void 0;"); // Needed - bug 371900
+    doc.getElementById("mainCommandSet").prepend(command);
+
+    let key = doc.createElement("key");
+    key.setAttribute("id", "key_quickRestart");
+    key.setAttribute("key", "r");
+    key.setAttribute("modifiers", "accel,alt");
+    key.setAttribute("command", "cmd_quickRestart");
+    key.setAttribute("oncommand", "void 0;");
+    doc.getElementById("mainKeyset").prepend(key);
+
+    let restartMI = doc.createElement("menuitem");
+    restartMI.setAttribute("id", "menu_FileRestartItem");
+    restartMI.setAttribute("key", "key_quickRestart");
+    restartMI.setAttribute("label", "Restart");
+    restartMI.addEventListener("command", this.restart, true);
+    doc.getElementById("menu_FilePopup").appendChild(restartMI);
+  },
+
+  forEachWindow(cb) {
+    let browserWins = Services.wm.getEnumerator("navigator:browser");
+    while (browserWins.hasMoreElements()) {
+      cb(browserWins.getNext());
+    }
+    Services.ww.registerNotification((aSubject, aTopic) => {
+      if (aTopic != "domwindowopened") {
+        return;
+      }
+      aSubject.addEventListener("load", () => {
+        if (aSubject.document.documentElement.getAttribute("windowtype") == "navigator:browser") {
+          cb(aSubject);
+        }
+      }, { once: true, capture: true });
+    });
+  },
+};
+
 var components = [BrowserGlue, ContentPermissionPrompt];
 this.NSGetFactory = XPCOMUtils.generateNSGetFactory(components);
 
 
 // Listen for UITour messages.
 // Do it here instead of the UITour module itself so that the UITour module is lazy loaded
 // when the first message is received.
 var globalMM = Cc["@mozilla.org/globalmessagemanager;1"].getService(Ci.nsIMessageListenerManager);
