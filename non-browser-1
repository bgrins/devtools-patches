# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  c0f15f1373fb5d38120784a9e3566b4d246a0267
Bug 1471734 - Move non-browser window scripting to browser.js

We are already relying on functionality defined for this case in browser.js,
so this puts the event listeners and helpers closer to the actual functions.

diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -1946,20 +1946,19 @@ var gBrowserInit = {
           .QueryInterface(Ci.nsIDocShellTreeItem).treeOwner
           .QueryInterface(Ci.nsIInterfaceRequestor)
           .getInterface(Ci.nsIXULWindow)
           .XULBrowserWindow = null;
     window.QueryInterface(Ci.nsIDOMChromeWindow).browserDOMWindow = null;
   },
 };
 
+// Special case for non-browser windows in OSX (basically: top-level windows
+// that show the application menubar but aren't browser.xul).
 if (AppConstants.platform == "macosx") {
-  // nonBrowserWindowStartup(), nonBrowserWindowDelayedStartup(), and
-  // nonBrowserWindowShutdown() are used for non-browser windows in
-  // macWindow.inc.xul
   gBrowserInit.nonBrowserWindowStartup = function() {
     // Disable inappropriate commands / submenus
     var disabledItems = ["Browser:SavePage",
                          "Browser:SendLink", "cmd_pageSetup", "cmd_print", "cmd_find", "cmd_findAgain",
                          "viewToolbarsMenu", "viewSidebarMenuMenu", "Browser:Reload",
                          "viewFullZoomMenu", "pageStyleMenu", "charsetMenu", "View:PageSource", "View:FullScreen",
                          "viewHistorySidebar", "Browser:AddBookmarkAs", "Browser:BookmarkAllTabs",
                          "View:PageInfo"];
@@ -4434,16 +4433,28 @@ function OpenBrowserWindow(options) {
       // homepage, if necessary.
       Services.obs.notifyObservers(win, "browser-open-homepage-start");
     }
   }, {once: true});
 
   return win;
 }
 
+function OpenBrowserWindowFromDockMenu(options) {
+  let win = OpenBrowserWindow(options);
+  win.addEventListener("load", function listener() {
+    win.removeEventListener("load", listener);
+    let dockSupport = Cc["@mozilla.org/widget/macdocksupport;1"]
+      .getService(Ci.nsIMacDockSupport);
+    dockSupport.activateApplication(true);
+  });
+
+  return win;
+}
+
 /**
  * Update the global flag that tracks whether or not any edit UI (the Edit menu,
  * edit-related items in the context menu, and edit-related toolbar buttons
  * is visible, then update the edit commands' enabled state accordingly.  We use
  * this flag to skip updating the edit commands on focus or selection changes
  * when no UI is visible to improve performance (including pageload performance,
  * since focus changes when you load a new page).
  *
diff --git a/browser/base/content/macWindow.inc.xul b/browser/base/content/macWindow.inc.xul
--- a/browser/base/content/macWindow.inc.xul
+++ b/browser/base/content/macWindow.inc.xul
@@ -13,28 +13,16 @@
 # browser-doctype.inc must also be included.
 
 # All JS files which are needed by browser.xul and other top level windows to
 # support MacOS specific features *must* go into the global-scripts.inc file so
 # that they can be shared with browser.xul.
 #include global-scripts.inc
 
 <script type="application/javascript">
-  function OpenBrowserWindowFromDockMenu(options) {
-    let win = OpenBrowserWindow(options);
-    win.addEventListener("load", function listener() {
-      win.removeEventListener("load", listener);
-      let dockSupport = Cc["@mozilla.org/widget/macdocksupport;1"]
-        .getService(Ci.nsIMacDockSupport);
-      dockSupport.activateApplication(true);
-    });
-
-    return win;
-  }
-
   addEventListener("load",   function() { gBrowserInit.nonBrowserWindowStartup()  }, false);
   addEventListener("unload", function() { gBrowserInit.nonBrowserWindowShutdown() }, false);
 </script>
 
 # All sets except for popupsets (commands, keys, stringbundles and broadcasters)
 # *must* go into the browser-sets.inc file so that they can be shared with
 # browser.xul
 #include browser-sets.inc
