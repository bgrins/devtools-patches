# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  5c08ee251ac2d157b9647bf0bf4a09c430bff1d4
Bug 1145784

diff --git a/browser/devtools/shared/test/browser_graphs-07a.js b/browser/devtools/shared/test/browser_graphs-07a.js
--- a/browser/devtools/shared/test/browser_graphs-07a.js
+++ b/browser/devtools/shared/test/browser_graphs-07a.js
@@ -165,34 +165,106 @@ function testGraph(graph, dragStop) {
     "The current selection start value is correct (17).");
   is(graph.getSelection().end, graph.width - 1,
     "The current selection end value is correct (17).");
 }
 
 // EventUtils just doesn't work!
 
 function hover(graph, x, y = 1) {
-  x /= window.devicePixelRatio;
-  y /= window.devicePixelRatio;
-  graph._onMouseMove({ testX: x, testY: y });
+  // let {screenX, screenY} = getScreenCoordinates(graph, x, y);
+  dispatchEvent(graph, x, y, "mousemove");
+  // x /= window.devicePixelRatio;
+  // y /= window.devicePixelRatio;
+  // graph._onMouseMove({ testX: x, testY: y });
 }
 
 function click(graph, x, y = 1) {
+  // x /= window.devicePixelRatio;
+  // y /= window.devicePixelRatio;
+  dispatchEvent(graph, x, y, "click");
+  // dispatchEvent(graph, x, y, "mousedown");
+  // dispatchEvent(graph, x, y, "mouseup");
+  // graph._onMouseMove({ testX: x, testY: y });
+  // graph._onMouseDown({ testX: x, testY: y });
+  // graph._onMouseUp({ testX: x, testY: y });
+}
+
+function dispatchEvent(graph, x, y, type) {
+  let {screenX, screenY} = getScreenCoordinates(graph, x, y);
+  graph._canvas.dispatchEvent(new MouseEvent(type, {
+    bubbles: true,
+    cancelable: true,
+    view: window,
+    screenX: screenX,
+    screenY: screenY,
+  }));
+}
+
+function getScreenCoordinates(graph, x, y) {
   x /= window.devicePixelRatio;
   y /= window.devicePixelRatio;
-  graph._onMouseMove({ testX: x, testY: y });
-  graph._onMouseDown({ testX: x, testY: y });
-  graph._onMouseUp({ testX: x, testY: y });
+  let quad = graph._canvas.getBoxQuads({
+    relativeTo: window.document
+  })[0];
+
+  let screenX = window.screenX + quad.p1.x + x;
+  let screenY = window.screenY + quad.p1.y + y;
+
+  return {screenX, screenY};
 }
 
 function dragStart(graph, x, y = 1) {
-  x /= window.devicePixelRatio;
-  y /= window.devicePixelRatio;
-  graph._onMouseMove({ testX: x, testY: y });
-  graph._onMouseDown({ testX: x, testY: y });
+
+  // let offsetX = graph._window.screenX - window.screenX;
+  // let offsetY = graph._window.screenY - window.screenY;
+
+  dispatchEvent(graph, x, y, "mousemove");
+  dispatchEvent(graph, x, y, "mousedown");
+
+return;
+  let {screenX, screenY} = getScreenCoordinates(graph, x, y);
+  // x /= window.devicePixelRatio;
+  // y /= window.devicePixelRatio;
+  // let quad = graph._canvas.getBoxQuads({
+  //   relativeTo: window.document
+  // })[0];
+
+  // let screenX = window.screenX + quad.p1.x + x;
+  // let screenY = window.screenY + quad.p1.y + y;
+  // screenX /= window.devicePixelRatio;
+  // screenY /= window.devicePixelRatio;
+  // let frame = graph._iframe;
+  // while (frame && frame.contentWindow !== window) {
+  //   console.log("Has frame", frame, frame.contentWindow.location.toString());
+  //   frame = frame.contentWindow.frameElement;
+  // }
+
+  console.log(window.screenX, window.screenY, graph._window.screenX, graph._window.screenY);
+
+  graph._canvas.dispatchEvent(new MouseEvent("mousemove", {
+    bubbles: true,
+    cancelable: true,
+    view: graph._window,
+    screenX: screenX,
+    screenY: screenY,
+  }));
+
+  graph._canvas.dispatchEvent(new MouseEvent("mousedown", {
+    bubbles: true,
+    cancelable: true,
+    view:  graph._window,
+    screenX: screenX,
+    screenY: screenY,
+  }));
+
+  // x /= window.devicePixelRatio;
+  // y /= window.devicePixelRatio;
+  // graph._onMouseMove({ testX: x, testY: y });
+  // graph._onMouseDown({ testX: x, testY: y });
 }
 
 function normalDragStop(graph, x, y = 1) {
   x /= window.devicePixelRatio;
   y /= window.devicePixelRatio;
   graph._onMouseMove({ testX: x, testY: y });
   graph._onMouseUp({ testX: x, testY: y });
 }
