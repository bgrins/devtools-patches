# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  138bfb083317b9834a4776e28a71c710c6d73181
Bug 1175318 - Import Console.jsm for mochitests;r=ted

diff --git a/browser/base/content/test/general/browser_trackingUI_2.js b/browser/base/content/test/general/browser_trackingUI_2.js
--- a/browser/base/content/test/general/browser_trackingUI_2.js
+++ b/browser/base/content/test/general/browser_trackingUI_2.js
@@ -40,9 +40,10 @@ add_task(function* () {
 
   info("Load a test page containing tracking elements");
   yield promiseTabLoadEvent(tab, TRACKING_PAGE);
   testTrackingPageOff();
 
   info("Load a test page not containing tracking elements");
   yield promiseTabLoadEvent(tab, BENIGN_PAGE);
   testBenignPageOff();
+  console.log("Hi");
 });
diff --git a/testing/mochitest/browser-test.js b/testing/mochitest/browser-test.js
--- a/testing/mochitest/browser-test.js
+++ b/testing/mochitest/browser-test.js
@@ -24,16 +24,19 @@ XPCOMUtils.defineLazyModuleGetter(this, 
   "resource:///modules/CustomizationTabPreloader.jsm");
 
 XPCOMUtils.defineLazyModuleGetter(this, "ContentSearch",
   "resource:///modules/ContentSearch.jsm");
 
 XPCOMUtils.defineLazyModuleGetter(this, "SelfSupportBackend",
   "resource:///modules/SelfSupportBackend.jsm");
 
+XPCOMUtils.defineLazyModuleGetter(this, "console",
+  "resource://gre/modules/devtools/Console.jsm");
+
 const SIMPLETEST_OVERRIDES =
   ["ok", "is", "isnot", "todo", "todo_is", "todo_isnot", "info", "expectAssertions", "requestCompleteLog"];
 
 window.addEventListener("load", function testOnLoad() {
   window.removeEventListener("load", testOnLoad);
   window.addEventListener("MozAfterPaint", function testOnMozAfterPaint() {
     window.removeEventListener("MozAfterPaint", testOnMozAfterPaint);
     setTimeout(testInit, 0);
diff --git a/toolkit/devtools/webconsole/test/test_basics.html b/toolkit/devtools/webconsole/test/test_basics.html
--- a/toolkit/devtools/webconsole/test/test_basics.html
+++ b/toolkit/devtools/webconsole/test/test_basics.html
@@ -13,17 +13,17 @@
 
 <script class="testbody" type="text/javascript;version=1.8">
 SimpleTest.waitForExplicitFinish();
 
 function startTest()
 {
   removeEventListener("load", startTest);
 
-  attachConsole(["PageError"], onStartPageError);
+  attachConsole(["PageError"], onStartPageError, true);
 }
 
 function onStartPageError(aState, aResponse)
 {
   is(aResponse.startedListeners.length, 1, "startedListeners.length");
   is(aResponse.startedListeners[0], "PageError", "startedListeners: PageError");
   ok(aResponse.nativeConsoleAPI, "nativeConsoleAPI");
 
@@ -40,27 +40,28 @@ function onStartPageErrorAndConsoleAPI(a
   let startedListeners = aResponse.startedListeners;
   is(startedListeners.length, 2, "startedListeners.length");
   isnot(startedListeners.indexOf("PageError"), -1, "startedListeners: PageError");
   isnot(startedListeners.indexOf("ConsoleAPI"), -1,
         "startedListeners: ConsoleAPI");
   is(startedListeners.indexOf("foo"), -1, "startedListeners: no foo");
   ok(!aResponse.nativeConsoleAPI, "!nativeConsoleAPI");
 
+  top.console = top.console_;
   aState.client.stopListeners(["ConsoleAPI", "foo"],
                               onStopConsoleAPI.bind(null, aState));
 }
 
 function onStopConsoleAPI(aState, aResponse)
 {
   is(aResponse.stoppedListeners.length, 1, "stoppedListeners.length");
   is(aResponse.stoppedListeners[0], "ConsoleAPI", "stoppedListeners: ConsoleAPI");
 
   closeDebugger(aState, function() {
-    attachConsole(["ConsoleAPI"], onStartConsoleAPI);
+    attachConsole(["ConsoleAPI"], onStartConsoleAPI, true);
   });
 }
 
 function onStartConsoleAPI(aState, aResponse)
 {
   is(aResponse.startedListeners.length, 1, "startedListeners.length");
   is(aResponse.startedListeners[0], "ConsoleAPI", "startedListeners: ConsoleAPI");
   ok(aResponse.nativeConsoleAPI, "nativeConsoleAPI");
