# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  38368c9387ed184c824fedbe49e5e5f80b908da3

Bug 1207107 - Modernize the UI of aboutCertError.xhtml

diff --git a/browser/base/content/aboutcerterror/aboutCertError.xhtml b/browser/base/content/aboutcerterror/aboutCertError.xhtml
--- a/browser/base/content/aboutcerterror/aboutCertError.xhtml
+++ b/browser/base/content/aboutcerterror/aboutCertError.xhtml
@@ -3,36 +3,39 @@
 <!DOCTYPE html [
   <!ENTITY % htmlDTD
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "DTD/xhtml1-strict.dtd">
   %htmlDTD;
   <!ENTITY % globalDTD
     SYSTEM "chrome://global/locale/global.dtd">
   %globalDTD;
+  <!ENTITY % netErrorDTD
+    SYSTEM "chrome://global/locale/netError.dtd">
+  %netErrorDTD;
   <!ENTITY % certerrorDTD
     SYSTEM "chrome://browser/locale/aboutCertError.dtd">
   %certerrorDTD;
 ]>
 
 <!-- This Source Code Form is subject to the terms of the Mozilla Public
    - License, v. 2.0. If a copy of the MPL was not distributed with this
    - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
 <html xmlns="http://www.w3.org/1999/xhtml">
   <head>
-    <title>&certerror.pagetitle;</title>
+    <title>&certerror.pagetitle1;</title>
     <link rel="stylesheet" href="chrome://browser/skin/aboutCertError.css" type="text/css" media="all" />
     <link rel="stylesheet" href="chrome://browser/content/certerror/aboutCertError.css" type="text/css" media="all" />
     <!-- This page currently uses the same favicon as neterror.xhtml.
          If the location of the favicon is changed for both pages, the
          FAVICON_ERRORPAGE_URL symbol in toolkit/components/places/src/nsFaviconService.h
          should be updated. If this page starts using a different favicon
          than neterror.xhtml nsFaviconService->SetAndLoadFaviconForPage
          should be updated to ignore this one as well. -->
-    <link rel="icon" type="image/png" id="favicon" href="chrome://global/skin/icons/warning-16.png"/>
+    <link rel="icon" type="image/png" id="favicon" href="chrome://global/skin/icons/warning-16.png" />
 
     <script type="application/javascript"><![CDATA[
       // Error url MUST be formatted like this:
       //   about:certerror?e=error&u=url&d=desc
 
       // Note that this file uses document.documentURI to get
       // the URL (with the format from above). This is because
       // document.location.href gets the current URI off the docshell,
@@ -46,49 +49,60 @@
         // s is optional, if no match just return nothing
         if (!matches || matches.length < 2)
           return "";
 
         // parenthetical match is the second entry
         return decodeURIComponent(matches[1]);
       }
 
+      function goBack(buttonEl)
+      {
+        if (history.length > 1) {
+          history.back();
+        } else {
+          location.href = "about:home";
+        }
+        buttonEl.disabled = true;
+      }
+
+      function toggleVisibility(id)
+      {
+        var node = document.getElementById(id);
+        var toggle = {
+          '': 'inherit',
+          'hidden': 'inherit',
+          'inherit': 'hidden'
+        };
+        node.style.visibility = toggle[node.style.visibility];
+      }
+
       function getDescription()
       {
         var url = document.documentURI;
         var desc = url.search(/d\=/);
 
         // desc == -1 if not found; if so, return an empty string
         // instead of what would turn out to be portions of the URI
         if (desc == -1)
           return "";
 
         return decodeURIComponent(url.slice(desc + 2));
       }
 
       function initPage()
       {
-        // Replace the "#1" string in the intro with the hostname.  Trickier
-        // than it might seem since we want to preserve the <b> tags, but
-        // not allow for any injection by just using innerHTML.  Instead,
-        // just find the right target text node.
-        var intro = document.getElementById('introContentP1');
-        function replaceWithHost(node) {
-          if (node.textContent == "#1")
-            node.textContent = location.host;
-          else
-            for(var i = 0; i < node.childNodes.length; i++)
-              replaceWithHost(node.childNodes[i]);
-        };
-        replaceWithHost(intro);
+        // Get the hostname and add it to the panel
+        [...document.querySelectorAll('.hostname')].forEach(host => {
+          host.textContent = document.location.hostname;
+        });
 
         var cssClass = getCSSClass();
         if (cssClass == "expertBadCert") {
-          toggle('technicalContent');
-          toggle('expertContent');
+          toggleVisibility('advancedPanel');
         }
 
         // Disallow overrides if this is a Strict-Transport-Security
         // host and the cert is bad (STS Spec section 7.3) or if the
         // certerror is in a frame (bug 633691).
         if (cssClass == "badStsCert" || window != top) {
           document.getElementById("expertContent").setAttribute("hidden", "true");
         }
@@ -96,16 +110,19 @@
           document.getElementById("badStsCertExplanation").setAttribute("hidden", "true");
         }
 
         var tech = document.getElementById("technicalContentText");
         if (tech)
           tech.textContent = getDescription();
 
         addDomainErrorLink();
+
+        var event = new CustomEvent("AboutCertErrorLoad", {bubbles:true});
+        document.dispatchEvent(event);
       }
 
       /* In the case of SSL error pages about domain mismatch, see if
          we can hyperlink the user to the correct site.  We don't want
          to do this generically since it allows MitM attacks to redirect
          users to a site under attacker control, but in certain cases
          it is safe (and helpful!) to do so.  Bug 402210
       */
@@ -176,72 +193,52 @@
          * The certificate is only valid for garage.maemo.org
          */
         if (endsWith(thisHost, "." + okHost))
           link.href = proto + okHost;
 
         // If we set a link, meaning there's something helpful for
         // the user here, expand the section by default
         if (link.href && getCSSClass() != "expertBadCert")
-          toggle("technicalContent");
+          toggleVisibility("advancedPanel");
       }
 
       function endsWith(haystack, needle) {
         return haystack.slice(-needle.length) == needle;
       }
-
-      function toggle(id) {
-        var el = document.getElementById(id);
-        if (el.getAttribute("collapsed"))
-          el.removeAttribute("collapsed");
-        else
-          el.setAttribute("collapsed", true);
-      }
     ]]></script>
   </head>
 
   <body dir="&locale.dir;">
-
     <!-- PAGE CONTAINER (for styling purposes only) -->
     <div id="errorPageContainer">
 
       <!-- Error Title -->
       <div id="errorTitle">
-        <h1 id="errorTitleText">&certerror.longpagetitle;</h1>
+        <h1 id="errorTitleText">&certerror.longpagetitle1;</h1>
       </div>
 
       <!-- LONG CONTENT (the section most likely to require scrolling) -->
       <div id="errorLongContent">
-        <div id="introContent">
-          <p id="introContentP1">&certerror.introPara1;</p>
-          <p>&certerror.introPara2;</p>
+
+        <!-- Short Description -->
+        <div id="errorShortDesc">
+          <p>&certerror.introPara;</p>
+        </div>
+        <p id="badStsCertExplanation">&certerror.whatShouldIDo.badStsCertExplanation;</p>
+        <div>
+          <p><a href="https://support.mozilla.org/kb/tls-error-reports" id="learnMoreLink" target="new">&errorReporting.learnMore;</a></p>
         </div>
 
-        <div id="whatShouldIDoContent">
-          <h2>&certerror.whatShouldIDo.heading;</h2>
-          <div id="whatShouldIDoContentText">
-            <p>&certerror.whatShouldIDo.content;</p>
-            <p id="badStsCertExplanation">&certerror.whatShouldIDo.badStsCertExplanation;</p>
-            <button id='getMeOutOfHereButton'>&certerror.getMeOutOfHere.label;</button>
-          </div>
-        </div>
+        <button id="returnButton" autocomplete="off" onclick="goBack(this);" autofocus="true" style="margin-left: 0;">&certerror.returnToPreviousPage.label;</button>
+        <button id="advancedButton" autocomplete="off" onclick="toggleVisibility('advancedPanel');" autofocus="true">&weakCryptoAdvanced.title;</button>
 
-        <!-- The following sections can be unhidden by default by setting the
-             "browser.xul.error_pages.expert_bad_cert" pref to true -->
-        <h2 id="technicalContent" class="expander" collapsed="true">
-          <button onclick="toggle('technicalContent');">&certerror.technical.heading;</button>
-        </h2>
-        <p id="technicalContentText"/>
-
-        <h2 id="expertContent" class="expander" collapsed="true">
-          <button onclick="toggle('expertContent');">&certerror.expert.heading;</button>
-        </h2>
-        <div>
-          <p>&certerror.expert.content;</p>
-          <p>&certerror.expert.contentPara2;</p>
+        <!-- Advanced panel, which is hidden by default -->
+        <div id="advancedPanel" style="visibility: hidden;">
+          <p id="technicalContentText"/>
           <button id='exceptionDialogButton'>&certerror.addException.label;</button>
         </div>
       </div>
     </div>
 
     <!--
     - Note: It is important to run the script this way, instead of using
     - an onload handler. This is because error pages are loaded as
diff --git a/browser/base/content/test/general/browser.ini b/browser/base/content/test/general/browser.ini
--- a/browser/base/content/test/general/browser.ini
+++ b/browser/base/content/test/general/browser.ini
@@ -117,16 +117,17 @@ support-files =
   file_bug1045809_2.html
 
 [browser_URLBarSetURI.js]
 skip-if = (os == "linux" || os == "mac") && debug # bug 970052, bug 970053
 [browser_aboutAccounts.js]
 skip-if = os == "linux" # Bug 958026
 support-files =
   content_aboutAccounts.js
+[browser_aboutCertError.js]
 [browser_aboutSupport_newtab_security_state.js]
 [browser_aboutHealthReport.js]
 skip-if = os == "linux" # Bug 924307
 [browser_aboutHome.js]
 skip-if = e10s # Bug 1093153 - no about:home support yet
 [browser_action_keyword.js]
 [browser_action_keyword_override.js]
 [browser_action_searchengine.js]
diff --git a/browser/base/content/test/general/browser_aboutCertError.js b/browser/base/content/test/general/browser_aboutCertError.js
new file mode 100644
--- /dev/null
+++ b/browser/base/content/test/general/browser_aboutCertError.js
@@ -0,0 +1,83 @@
+/* Any copyright is dedicated to the Public Domain.
+ * http://creativecommons.org/publicdomain/zero/1.0/ */
+
+const GOOD_PAGE = "https://example.com/";
+const BAD_CERT = "https://expired.example.com/";
+
+// XXX: See other possible URLs for testing at: https://dxr.mozilla.org/mozilla-central/source/build/pgo/server-locations.txt
+
+add_task(function* checkReturnToAboutHome() {
+  info("Loading a bad cert page directly and making sure 'return to previous page' goes to about:home");
+  let tab = yield BrowserTestUtils.openNewForegroundTab(gBrowser, BAD_CERT, false);
+  let browser = gBrowser.selectedBrowser;
+
+  info("Loading and waiting for the cert error");
+  yield waitForCertErrorLoad(browser);
+
+  is(browser.webNavigation.canGoBack, false, "!webNavigation.canGoBack");
+  is(browser.webNavigation.canGoForward, false, "!webNavigation.canGoForward");
+
+  info("Clicking the go back button on about:certerror");
+  let pageshowPromise = promiseWaitForEvent(browser, "pageshow");
+  yield ContentTask.spawn(browser, null, function* () {
+    let doc = content.document;
+    let returnButton = doc.getElementById("returnButton");
+    returnButton.click();
+  });
+  yield pageshowPromise;
+
+  is(browser.webNavigation.canGoBack, true, "webNavigation.canGoBack");
+  is(browser.webNavigation.canGoForward, false, "!webNavigation.canGoForward");
+  is(gBrowser.currentURI.spec, "about:home", "Went back");
+
+  gBrowser.removeCurrentTab();
+});
+
+add_task(function* checkReturnToPreviousPage() {
+  info("Loading a bad cert page and making sure 'return to previous page' goes back");
+  let tab = yield BrowserTestUtils.openNewForegroundTab(gBrowser, GOOD_PAGE);
+  let browser = gBrowser.selectedBrowser;
+
+  info("Loading and waiting for the cert error");
+  let certErrorLoaded = waitForCertErrorLoad(browser);
+  BrowserTestUtils.loadURI(browser, BAD_CERT);
+  yield certErrorLoaded;
+
+  is(browser.webNavigation.canGoBack, true, "webNavigation.canGoBack");
+  is(browser.webNavigation.canGoForward, false, "!webNavigation.canGoForward");
+
+  info("Clicking the go back button on about:certerror");
+  let pageshowPromise = promiseWaitForEvent(browser, "pageshow");
+  yield ContentTask.spawn(browser, null, function* () {
+    let doc = content.document;
+    let returnButton = doc.getElementById("returnButton");
+    returnButton.click();
+  });
+  yield pageshowPromise;
+
+  is(browser.webNavigation.canGoBack, false, "!webNavigation.canGoBack");
+  is(browser.webNavigation.canGoForward, true, "webNavigation.canGoForward");
+  is(gBrowser.currentURI.spec, GOOD_PAGE, "Went back");
+
+  gBrowser.removeCurrentTab();
+});
+
+add_task(function* checkCertDomainLink() {
+  // TODO: add simple test to ensure cert_domain_link shows up when it should
+  // (https://dxr.mozilla.org/mozilla-central/source/security/manager/locales/en-US/chrome/pipnss/pipnss.properties#285)
+});
+
+add_task(function* checkBadStsCert() {
+  // TODO: add test to ensure badStsCert is special cased as outlined in
+  // aboutCertError.html
+});
+
+function waitForCertErrorLoad(browser) {
+  return new Promise(resolve => {
+    info("Waiting for AboutCertErrorLoad event");
+    browser.addEventListener("AboutCertErrorLoad", function load() {
+      browser.removeEventListener("AboutCertErrorLoad", load, false, true);
+      resolve();
+    }, false, true);
+  });
+}
diff --git a/browser/locales/en-US/chrome/browser/aboutCertError.dtd b/browser/locales/en-US/chrome/browser/aboutCertError.dtd
--- a/browser/locales/en-US/chrome/browser/aboutCertError.dtd
+++ b/browser/locales/en-US/chrome/browser/aboutCertError.dtd
@@ -5,40 +5,35 @@
 <!ENTITY % brandDTD
     SYSTEM "chrome://branding/locale/brand.dtd">
   %brandDTD;
 
 <!-- These strings are used by Firefox's custom about:certerror page,
 a replacement for the standard security certificate errors produced
 by NSS/PSM via netError.xhtml. -->
 
-<!ENTITY certerror.pagetitle  "Untrusted Connection">
-<!ENTITY certerror.longpagetitle "This Connection is Untrusted">
+<!ENTITY certerror.pagetitle1  "Insecure Connection">
+<!ENTITY certerror.longpagetitle1 "Your connection is not secure">
 
-<!-- Localization note (certerror.introPara1) - The string "#1" will
+<!-- Localization note - The string "#1" in the following strings will
 be replaced at runtime with the name of the server to which the user
 was trying to connect. -->
-<!ENTITY certerror.introPara1 "You have asked &brandShortName; to connect
-securely to <b>#1</b>, but we can't confirm that your connection is secure.">
-<!ENTITY certerror.introPara2 "Normally, when you try to connect securely,
-sites will present trusted identification to prove that you are
-going to the right place. However, this site's identity can't be verified.">
+<!ENTITY certerror.introPara "The owner of <span class='hostname'>#1</span> has configured their website improperly.  To protect your information from being stolen, &brandShortName; has not connected to this website.">
+
+<!ENTITY certerror.returnToPreviousPage.label "Return to Previous Page">
 
 <!ENTITY certerror.whatShouldIDo.heading "What Should I Do?">
 <!ENTITY certerror.whatShouldIDo.content "If you usually connect to
 this site without problems, this error could mean that someone is
 trying to impersonate the site, and you shouldn't continue.">
 <!ENTITY certerror.whatShouldIDo.badStsCertExplanation "This site uses HTTP
 Strict Transport Security (HSTS) to specify that &brandShortName; only connect
 to it securely. As a result, it is not possible to add an exception for this
 certificate.">
-<!ENTITY certerror.getMeOutOfHere.label "Get me out of here!">
 
 <!ENTITY certerror.expert.heading "I Understand the Risks">
 <!ENTITY certerror.expert.content "If you understand what's going on, you
 can tell &brandShortName; to start trusting this site's identification.
 <b>Even if you trust the site, this error could mean that someone is
 tampering with your connection.</b>">
 <!ENTITY certerror.expert.contentPara2 "Don't add an exception unless
 you know there's a good reason why this site doesn't use trusted identification.">
 <!ENTITY certerror.addException.label "Add Exception…">
-
-<!ENTITY certerror.technical.heading "Technical Details">
diff --git a/browser/themes/shared/aboutCertError.css b/browser/themes/shared/aboutCertError.css
--- a/browser/themes/shared/aboutCertError.css
+++ b/browser/themes/shared/aboutCertError.css
@@ -1,72 +1,93 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
-
-html {
-  background: -moz-Dialog;
-}
+@import url("chrome://global/skin/in-content/common.css");
 
 body {
-  margin: 0;
-  padding: 0 1em;
-  color: -moz-FieldText;
-  font: message-box;
-}
-
-h1 {
-  margin: 0 0 .6em 0;
-  border-bottom: 1px solid ThreeDLightShadow;
-  font-size: 160%;
-}
-
-h2 {
-  font-size: 130%;
+  display: flex;
+  box-sizing: border-box;
+  min-height: 100vh;
+  padding: 0 48px;
+  align-items: center;
+  justify-content: center;
 }
 
 #errorPageContainer {
   position: relative;
-  min-width: 13em;
-  max-width: 52em;
-  margin: 4em auto;
-  border: 1px solid #FFBD09; /* pale yellow extracted from yellow passport icon */
-  border-radius: 10px;
-  padding: 3em;
-  -moz-padding-start: 30px;
-  background: url("chrome://global/skin/icons/sslWarning.png") left 0 no-repeat -moz-Field;
-  background-origin: content-box;
+  min-width: 320px;
+  max-width: 512px;
 }
 
-#errorPageContainer:-moz-dir(rtl) {
+#errorTitle {
+  background: url("chrome://browser/skin/cert-error.svg") left 0 no-repeat;
+  background-size: 3em;
+  -moz-margin-start: -5em;
+  -moz-padding-start: 5em;
+}
+
+#errorTitleText {
+  border-bottom: 1px solid #C1C1C1;
+  padding-bottom: 0.4em;
+}
+
+#errorTitleText:-moz-dir(rtl) {
   background-position: right 0;
 }
 
-#errorTitle {
-  -moz-margin-start: 80px;
+#errorTitleText[sslv3=true] {
+  background-image: url("aboutNetError_alert.svg");
 }
 
-#errorLongContent {
-  -moz-margin-start: 80px;
+@media (max-width: 675px) {
+  #errorTitle {
+    padding-top: 0;
+    background-image: none;
+    -moz-padding-start: 0;
+    -moz-margin-start: 0;
+  }
 }
 
-.expander > button {
-  -moz-padding-start: 20px;
-  -moz-margin-start: -20px;
-  background: url("chrome://browser/skin/aboutCertError_sectionExpanded.png") left center no-repeat;
-  border: none;
-  font: inherit;
-  color: inherit;
+/* Pressing the retry button will cause the cursor to flicker from a pointer to
+ * not-allowed. Override the disabled cursor behaviour since we will never show
+ * the button disabled as the initial state. */
+button:disabled {
   cursor: pointer;
 }
 
-.expander > button:-moz-dir(rtl) {
-  background-position: right center;
+#returnButton {
+  background-color: var(--in-content-primary-button-background);
+  border: none;
+  color: var(--in-content-selected-text);
+  min-width: 250px;
 }
 
-.expander[collapsed] > button {
-  background-image: url("chrome://browser/skin/aboutCertError_sectionCollapsed.png");
+#returnButton:hover {
+  background-color: var(--in-content-primary-button-background-hover) !important;
 }
 
-.expander[collapsed] > button:-moz-dir(rtl) {
-  background-image: url("chrome://browser/skin/aboutCertError_sectionCollapsed-rtl.png");
+#returnButton:hover:active {
+  background-color: var(--in-content-primary-button-background-active) !important;
 }
+
+#advancedButton {
+  float: right;
+  min-width: 150px;
+}
+
+/* Advanced section is hidden via inline styles until the link is clicked */
+#advancedPanel {
+  background-color: white;
+  border: 1px lightgray solid;
+  /* Don't use top padding because the default p style has top padding, and it
+   * makes the overall div look uneven */
+  padding: 0 12px 12px 12px;
+  box-shadow: 0 0 4px #ddd;
+  font-size: 0.9em;
+  margin-top: 10px;
+  padding-bottom: 10px;
+}
+
+.hostname {
+  font-weight: bold;
+}
diff --git a/browser/themes/shared/incontent-icons/cert-error.svg b/browser/themes/shared/incontent-icons/cert-error.svg
new file mode 100644
--- /dev/null
+++ b/browser/themes/shared/incontent-icons/cert-error.svg
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+
+<svg version="1.1"
+     xmlns="http://www.w3.org/2000/svg"
+     xmlns:xlink="http://www.w3.org/1999/xlink"
+     width="45"
+     height="45"
+     viewBox="0 0 45 45">
+
+  <style>
+    .icon-default {
+      fill: #999;
+    }
+  </style>
+
+  <defs>
+    <rect id="shape-lock-clasp-outer" x="8" y="2" width="28" height="40" rx="14" ry="14" />
+    <rect id="shape-lock-clasp-inner" x="14" y="8" width="16" height="28" rx="8" ry="8" />
+    <rect id="shape-lock-base" x="4" y="18" width="36" height="24" rx="3" ry="3" />
+
+    <mask id="mask-clasp-cutout">
+      <rect width="48" height="48" fill="#000" />
+      <use xlink:href="#shape-lock-clasp-outer" fill="#fff" />
+      <use xlink:href="#shape-lock-clasp-inner" fill="#000" />
+      <line x1="4" y1="38" x2="41" y2="3" stroke="#000" stroke-width="5.5" />
+      <line x1="4" y1="46" x2="41" y2="11" stroke="#000" stroke-width="5.5" />
+      <rect x="4" y="18" width="36" height="26" rx="6" ry="6" />
+    </mask>
+
+    <mask id="mask-base-cutout">
+      <rect width="45" height="45" fill="#000" />
+      <use xlink:href="#shape-lock-base" fill="#fff" />
+      <line x1="2.5" y1="41.5" x2="41" y2="5" stroke="#000" stroke-width="8.5" />
+    </mask>
+  </defs>
+
+  <use xlink:href="#shape-lock-clasp-outer" mask="url(#mask-clasp-cutout)" fill="#999" />
+  <use xlink:href="#shape-lock-base" mask="url(#mask-base-cutout)" fill="#999" />
+
+  <line x1="2.5" y1="41.5" x2="41" y2="5" stroke="#d92d21" stroke-width="5.5" />
+
+</svg>
diff --git a/browser/themes/shared/jar.inc.mn b/browser/themes/shared/jar.inc.mn
--- a/browser/themes/shared/jar.inc.mn
+++ b/browser/themes/shared/jar.inc.mn
@@ -109,16 +109,17 @@
   skin/classic/browser/translation-16@2x.png                   (../shared/translation/translation-16@2x.png)
   skin/classic/browser/undoCloseTab.png                        (../shared/undoCloseTab.png)
   skin/classic/browser/undoCloseTab@2x.png                     (../shared/undoCloseTab@2x.png)
   skin/classic/browser/update-badge.svg                        (../shared/update-badge.svg)
   skin/classic/browser/update-badge-failed.svg                 (../shared/update-badge-failed.svg)
   skin/classic/browser/urlbar-arrow.png                        (../shared/urlbar-arrow.png)
   skin/classic/browser/urlbar-arrow@2x.png                     (../shared/urlbar-arrow@2x.png)
   skin/classic/browser/warning.svg                             (../shared/warning.svg)
+  skin/classic/browser/cert-error.svg                          (../shared/incontent-icons/cert-error.svg)
   skin/classic/browser/session-restore.svg                     (../shared/incontent-icons/session-restore.svg)
   skin/classic/browser/tab-crashed.svg                         (../shared/incontent-icons/tab-crashed.svg)
   skin/classic/browser/welcome-back.svg                        (../shared/incontent-icons/welcome-back.svg)
   skin/classic/browser/reader-tour.png                         (../shared/reader/reader-tour.png)
   skin/classic/browser/reader-tour@2x.png                      (../shared/reader/reader-tour@2x.png)
   skin/classic/browser/readerMode.svg                          (../shared/reader/readerMode.svg)
   skin/classic/browser/notification-pluginNormal.png           (../shared/plugins/notification-pluginNormal.png)
   skin/classic/browser/notification-pluginNormal@2x.png        (../shared/plugins/notification-pluginNormal@2x.png)
