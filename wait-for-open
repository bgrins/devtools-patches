# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  a3a30d101267e85ba61270f030423110ea8c35b2

diff --git a/toolkit/content/widgets/menu.js b/toolkit/content/widgets/menu.js
--- a/toolkit/content/widgets/menu.js
+++ b/toolkit/content/widgets/menu.js
@@ -1,31 +1,19 @@
 {
 /* globals MozBaseText */
 
-// const openPopups = new Set();
-// window.addEventListener("popupshowing", (e) => {
-//   if (e.originalTarget.ownerDocument != document) {
-//     return;
-//   }
-//   openPopups.add(e.originalTarget);
-//   for (let menuitem of e.originalTarget.querySelectorAll("menuitem")) {
-//     if (menuitem.render) {
-//       menuitem.render();
-//     } else {
-//       // Let's see if this can happen. if it can (i.e. when inside of XBL anon content),
-//       // then we can do customElements.upgrade(menuitem)
-//       throw new Error("Can this happen?");
-//     }
-//   }
-// }, { capture: true });
-
-// window.addEventListener("popuphidden", (e) => {
-//   openPopups.delete(e.originalTarget);
-// }, { capture: true });
+window.addEventListener("popupshowing", (e) => {
+  if (e.originalTarget.ownerDocument != document) {
+    return;
+  }
+  for (let menuitem of e.originalTarget.querySelectorAll("menuitem")) {
+    menuitem.render();
+  }
+}, { capture: true });
 
 class MozMenuItemBase extends MozElements.BaseText {
   set value(val) {
     this.setAttribute("value", val);
     return val;
   }
 
   get value() {
@@ -69,41 +57,16 @@ class MozMenuItem extends MozMenuItemBas
   attributeChangedCallback(name, oldValue, newValue) {
     if (oldValue === newValue) {
       return;
     }
 
     this._updateAttributes();
   }
 
-  // get isInsideOpenPopup() {
-  //   for (let popup of openPopups) {
-  //     if (popup.contains(this)) {
-  //       return true;
-  //     }
-  //   }
-  //   return false;
-  // }
-
-  connectedCallback() {
-    // We typically don't want to eagerly render (instead wait for the
-    // popup to be shown). But if this is selected, we'll want it to render
-    // so the preview text shows properly in the menulist.
-    // XXX: why? this can be seen on the font size dropdown on about:preferences
-    // if (!this.isInsideOpenPopup) {
-    //   return;
-    // }
-
-    if (this.delayConnectedCallback()) {
-      return;
-    }
-
-    this.render();
-  }
-
   _updateAttributes() {
     if (!this.renderedOnce) {
       return;
     }
 
     if (this.menuText) {
       this.inheritAttribute(this.menuText, "value=label");
       this.inheritAttribute(this.menuText, "crop");
diff --git a/toolkit/content/xul.css b/toolkit/content/xul.css
--- a/toolkit/content/xul.css
+++ b/toolkit/content/xul.css
@@ -259,16 +259,23 @@ toolbarspring {
 menubar > menu {
   -moz-binding: url("chrome://global/content/bindings/menu.xml#menu-menubar");
 }
 
 menubar > menu.menu-iconic {
   -moz-binding: url("chrome://global/content/bindings/menu.xml#menu-menubar-iconic");
 }
 
+/* menuitems that haven't gotten rendered should still take up space for sizetopopup behavior: */
+menuitem:empty:after {
+  content: attr(label);
+  display: -moz-box;
+  background: red;
+}
+
 menu {
   -moz-binding: url("chrome://global/content/bindings/menu.xml#menu");
 }
 
 menu.menu-iconic {
   -moz-binding: url("chrome://global/content/bindings/menu.xml#menu-iconic");
 }
 
