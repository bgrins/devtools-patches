# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  4a20e73bd6243d88d056cb41c0d6a0d4a2bd11e5
Use only simple test with ./mach talos-test -a tart --cycles 1

diff --git a/testing/talos/talos/tests/tart/addon/content/tart.js b/testing/talos/talos/tests/tart/addon/content/tart.js
--- a/testing/talos/talos/tests/tart/addon/content/tart.js
+++ b/testing/talos/talos/tests/tart/addon/content/tart.js
@@ -535,474 +535,474 @@ Tart.prototype = {
             next,
             true,
             "simple-close-DPI1",
             tabRefDuration
           );
         },
       ],
 
-      iconDpi1: [
-        function() {
-          Services.prefs.setCharPref("layout.css.devPixelsPerPx", "1");
-          self
-            .makeNewTabURLChangePromise("chrome://tart/content/blank.icon.html")
-            .then(next);
-        },
-        function() {
-          animate(0, addTab, next);
-        },
-        function() {
-          animate(0, closeCurrentTab, next);
-        },
+      // iconDpi1: [
+      //   function() {
+      //     Services.prefs.setCharPref("layout.css.devPixelsPerPx", "1");
+      //     self
+      //       .makeNewTabURLChangePromise("chrome://tart/content/blank.icon.html")
+      //       .then(next);
+      //   },
+      //   function() {
+      //     animate(0, addTab, next);
+      //   },
+      //   function() {
+      //     animate(0, closeCurrentTab, next);
+      //   },
 
-        function() {
-          animate(rest, addTab, next, true, "icon-open-DPI1", tabRefDuration);
-        },
-        function() {
-          animate(
-            rest,
-            closeCurrentTab,
-            next,
-            true,
-            "icon-close-DPI1",
-            tabRefDuration
-          );
-        },
-      ],
+      //   function() {
+      //     animate(rest, addTab, next, true, "icon-open-DPI1", tabRefDuration);
+      //   },
+      //   function() {
+      //     animate(
+      //       rest,
+      //       closeCurrentTab,
+      //       next,
+      //       true,
+      //       "icon-close-DPI1",
+      //       tabRefDuration
+      //     );
+      //   },
+      // ],
 
-      iconDpi2: [
-        function() {
-          Services.prefs.setCharPref("layout.css.devPixelsPerPx", "2");
-          self
-            .makeNewTabURLChangePromise("chrome://tart/content/blank.icon.html")
-            .then(next);
-        },
-        function() {
-          animate(0, addTab, next);
-        },
-        function() {
-          animate(0, closeCurrentTab, next);
-        },
+      // iconDpi2: [
+      //   function() {
+      //     Services.prefs.setCharPref("layout.css.devPixelsPerPx", "2");
+      //     self
+      //       .makeNewTabURLChangePromise("chrome://tart/content/blank.icon.html")
+      //       .then(next);
+      //   },
+      //   function() {
+      //     animate(0, addTab, next);
+      //   },
+      //   function() {
+      //     animate(0, closeCurrentTab, next);
+      //   },
 
-        function() {
-          animate(rest, addTab, next, true, "icon-open-DPI2", tabRefDuration);
-        },
-        function() {
-          animate(
-            rest,
-            closeCurrentTab,
-            next,
-            true,
-            "icon-close-DPI2",
-            tabRefDuration
-          );
-        },
-      ],
+      //   function() {
+      //     animate(rest, addTab, next, true, "icon-open-DPI2", tabRefDuration);
+      //   },
+      //   function() {
+      //     animate(
+      //       rest,
+      //       closeCurrentTab,
+      //       next,
+      //       true,
+      //       "icon-close-DPI2",
+      //       tabRefDuration
+      //     );
+      //   },
+      // ],
 
-      newtabNoPreload: [
-        function() {
-          Services.prefs.setCharPref("layout.css.devPixelsPerPx", "-1");
-          Services.prefs.setBoolPref("browser.newtab.preload", false);
-          self.makeNewTabURLChangePromise("about:newtab").then(next);
-        },
-        function() {
-          animate(
-            rest,
-            addTab,
-            next,
-            true,
-            "newtab-open-preload-no",
-            tabRefDuration
-          );
-        },
-        function() {
-          animate(0, closeCurrentTab, next);
-        },
-      ],
+      // newtabNoPreload: [
+      //   function() {
+      //     Services.prefs.setCharPref("layout.css.devPixelsPerPx", "-1");
+      //     Services.prefs.setBoolPref("browser.newtab.preload", false);
+      //     self.makeNewTabURLChangePromise("about:newtab").then(next);
+      //   },
+      //   function() {
+      //     animate(
+      //       rest,
+      //       addTab,
+      //       next,
+      //       true,
+      //       "newtab-open-preload-no",
+      //       tabRefDuration
+      //     );
+      //   },
+      //   function() {
+      //     animate(0, closeCurrentTab, next);
+      //   },
+      // ],
 
-      newtabYesPreload: [
-        function() {
-          Services.prefs.setCharPref("layout.css.devPixelsPerPx", "-1");
-          Services.prefs.setBoolPref("browser.newtab.preload", true);
-          self.makeNewTabURLChangePromise("about:newtab").then(next);
-        },
-        function() {
-          animate(0, addTab, next);
-        },
-        function() {
-          animate(0, closeCurrentTab, next);
-        },
+      // newtabYesPreload: [
+      //   function() {
+      //     Services.prefs.setCharPref("layout.css.devPixelsPerPx", "-1");
+      //     Services.prefs.setBoolPref("browser.newtab.preload", true);
+      //     self.makeNewTabURLChangePromise("about:newtab").then(next);
+      //   },
+      //   function() {
+      //     animate(0, addTab, next);
+      //   },
+      //   function() {
+      //     animate(0, closeCurrentTab, next);
+      //   },
 
-        function() {
-          animate(
-            1000,
-            addTab,
-            next,
-            true,
-            "newtab-open-preload-yes",
-            tabRefDuration
-          );
-        },
-        function() {
-          animate(0, closeCurrentTab, next);
-        },
-      ],
+      //   function() {
+      //     animate(
+      //       1000,
+      //       addTab,
+      //       next,
+      //       true,
+      //       "newtab-open-preload-yes",
+      //       tabRefDuration
+      //     );
+      //   },
+      //   function() {
+      //     animate(0, closeCurrentTab, next);
+      //   },
+      // ],
 
-      simple3open3closeDpiCurrent: [
-        function() {
-          animate(
-            rest,
-            addTab,
-            next,
-            true,
-            "simple3-1-open-DPIcurrent",
-            tabRefDuration
-          );
-        },
-        function() {
-          animate(
-            rest,
-            addTab,
-            next,
-            true,
-            "simple3-2-open-DPIcurrent",
-            tabRefDuration
-          );
-        },
-        function() {
-          animate(
-            rest,
-            addTab,
-            next,
-            true,
-            "simple3-3-open-DPIcurrent",
-            tabRefDuration
-          );
-        },
+      // simple3open3closeDpiCurrent: [
+      //   function() {
+      //     animate(
+      //       rest,
+      //       addTab,
+      //       next,
+      //       true,
+      //       "simple3-1-open-DPIcurrent",
+      //       tabRefDuration
+      //     );
+      //   },
+      //   function() {
+      //     animate(
+      //       rest,
+      //       addTab,
+      //       next,
+      //       true,
+      //       "simple3-2-open-DPIcurrent",
+      //       tabRefDuration
+      //     );
+      //   },
+      //   function() {
+      //     animate(
+      //       rest,
+      //       addTab,
+      //       next,
+      //       true,
+      //       "simple3-3-open-DPIcurrent",
+      //       tabRefDuration
+      //     );
+      //   },
 
-        function() {
-          animate(
-            rest,
-            closeCurrentTab,
-            next,
-            true,
-            "simple3-3-close-DPIcurrent",
-            tabRefDuration
-          );
-        },
-        function() {
-          animate(
-            rest,
-            closeCurrentTab,
-            next,
-            true,
-            "simple3-2-close-DPIcurrent",
-            tabRefDuration
-          );
-        },
-        function() {
-          animate(
-            rest,
-            closeCurrentTab,
-            next,
-            true,
-            "simple3-1-close-DPIcurrent",
-            tabRefDuration
-          );
-        },
-      ],
+      //   function() {
+      //     animate(
+      //       rest,
+      //       closeCurrentTab,
+      //       next,
+      //       true,
+      //       "simple3-3-close-DPIcurrent",
+      //       tabRefDuration
+      //     );
+      //   },
+      //   function() {
+      //     animate(
+      //       rest,
+      //       closeCurrentTab,
+      //       next,
+      //       true,
+      //       "simple3-2-close-DPIcurrent",
+      //       tabRefDuration
+      //     );
+      //   },
+      //   function() {
+      //     animate(
+      //       rest,
+      //       closeCurrentTab,
+      //       next,
+      //       true,
+      //       "simple3-1-close-DPIcurrent",
+      //       tabRefDuration
+      //     );
+      //   },
+      // ],
 
-      multi: [
-        function() {
-          Services.prefs.setCharPref("layout.css.devPixelsPerPx", "1.0");
-          self
-            .makeNewTabURLChangePromise("chrome://tart/content/blank.icon.html")
-            .then(next);
-        },
+      // multi: [
+      //   function() {
+      //     Services.prefs.setCharPref("layout.css.devPixelsPerPx", "1.0");
+      //     self
+      //       .makeNewTabURLChangePromise("chrome://tart/content/blank.icon.html")
+      //       .then(next);
+      //   },
 
-        function() {
-          animate(0, addTab, next);
-        },
-        function() {
-          animate(0, addTab, next);
-        },
-        function() {
-          animate(0, addTab, next);
-        },
-        function() {
-          animate(0, addTab, next);
-        },
-        function() {
-          animate(0, addTab, next);
-        },
-        function() {
-          animate(0, addTab, next);
-        },
+      //   function() {
+      //     animate(0, addTab, next);
+      //   },
+      //   function() {
+      //     animate(0, addTab, next);
+      //   },
+      //   function() {
+      //     animate(0, addTab, next);
+      //   },
+      //   function() {
+      //     animate(0, addTab, next);
+      //   },
+      //   function() {
+      //     animate(0, addTab, next);
+      //   },
+      //   function() {
+      //     animate(0, addTab, next);
+      //   },
 
-        function() {
-          animate(
-            rest * 2,
-            addTab,
-            next,
-            true,
-            "multi-open-DPI1",
-            tabRefDuration
-          );
-        },
-        function() {
-          animate(
-            rest * 2,
-            closeCurrentTab,
-            next,
-            true,
-            "multi-close-DPI1",
-            tabRefDuration
-          );
-        },
+      //   function() {
+      //     animate(
+      //       rest * 2,
+      //       addTab,
+      //       next,
+      //       true,
+      //       "multi-open-DPI1",
+      //       tabRefDuration
+      //     );
+      //   },
+      //   function() {
+      //     animate(
+      //       rest * 2,
+      //       closeCurrentTab,
+      //       next,
+      //       true,
+      //       "multi-close-DPI1",
+      //       tabRefDuration
+      //     );
+      //   },
 
-        function() {
-          Services.prefs.setCharPref("layout.css.devPixelsPerPx", "2");
-          next();
-        },
-        function() {
-          animate(0, addTab, next);
-        },
-        function() {
-          animate(0, closeCurrentTab, next);
-        },
-        function() {
-          animate(
-            rest * 2,
-            addTab,
-            next,
-            true,
-            "multi-open-DPI2",
-            tabRefDuration
-          );
-        },
-        function() {
-          animate(
-            rest * 2,
-            closeCurrentTab,
-            next,
-            true,
-            "multi-close-DPI2",
-            tabRefDuration
-          );
-        },
+      //   function() {
+      //     Services.prefs.setCharPref("layout.css.devPixelsPerPx", "2");
+      //     next();
+      //   },
+      //   function() {
+      //     animate(0, addTab, next);
+      //   },
+      //   function() {
+      //     animate(0, closeCurrentTab, next);
+      //   },
+      //   function() {
+      //     animate(
+      //       rest * 2,
+      //       addTab,
+      //       next,
+      //       true,
+      //       "multi-open-DPI2",
+      //       tabRefDuration
+      //     );
+      //   },
+      //   function() {
+      //     animate(
+      //       rest * 2,
+      //       closeCurrentTab,
+      //       next,
+      //       true,
+      //       "multi-close-DPI2",
+      //       tabRefDuration
+      //     );
+      //   },
 
-        function() {
-          Services.prefs.setCharPref("layout.css.devPixelsPerPx", "-1");
-          next();
-        },
+      //   function() {
+      //     Services.prefs.setCharPref("layout.css.devPixelsPerPx", "-1");
+      //     next();
+      //   },
 
-        function() {
-          animate(0, closeCurrentTab, next);
-        },
-        function() {
-          animate(0, closeCurrentTab, next);
-        },
-        function() {
-          animate(0, closeCurrentTab, next);
-        },
-        function() {
-          animate(0, closeCurrentTab, next);
-        },
-        function() {
-          animate(0, closeCurrentTab, next);
-        },
-        function() {
-          animate(0, closeCurrentTab, next);
-        },
-      ],
+      //   function() {
+      //     animate(0, closeCurrentTab, next);
+      //   },
+      //   function() {
+      //     animate(0, closeCurrentTab, next);
+      //   },
+      //   function() {
+      //     animate(0, closeCurrentTab, next);
+      //   },
+      //   function() {
+      //     animate(0, closeCurrentTab, next);
+      //   },
+      //   function() {
+      //     animate(0, closeCurrentTab, next);
+      //   },
+      //   function() {
+      //     animate(0, closeCurrentTab, next);
+      //   },
+      // ],
 
-      simpleFadeDpiCurrent: [
-        function() {
-          self.makeNewTabURLChangePromise("about:blank").then(next);
-        },
+      // simpleFadeDpiCurrent: [
+      //   function() {
+      //     self.makeNewTabURLChangePromise("about:blank").then(next);
+      //   },
 
-        function() {
-          animate(0, addTab, next);
-        },
-        function() {
-          animate(
-            rest,
-            fadeout,
-            next,
-            true,
-            "simpleFade-close-DPIcurrent",
-            tabRefDuration
-          );
-        },
-        function() {
-          animate(
-            rest,
-            fadein,
-            next,
-            true,
-            "simpleFade-open-DPIcurrent",
-            tabRefDuration
-          );
-        },
-        function() {
-          animate(0, closeCurrentTab, next);
-        },
-      ],
+      //   function() {
+      //     animate(0, addTab, next);
+      //   },
+      //   function() {
+      //     animate(
+      //       rest,
+      //       fadeout,
+      //       next,
+      //       true,
+      //       "simpleFade-close-DPIcurrent",
+      //       tabRefDuration
+      //     );
+      //   },
+      //   function() {
+      //     animate(
+      //       rest,
+      //       fadein,
+      //       next,
+      //       true,
+      //       "simpleFade-open-DPIcurrent",
+      //       tabRefDuration
+      //     );
+      //   },
+      //   function() {
+      //     animate(0, closeCurrentTab, next);
+      //   },
+      // ],
 
-      iconFadeDpiCurrent: [
-        function() {
-          self
-            .makeNewTabURLChangePromise("chrome://tart/content/blank.icon.html")
-            .then(next);
-        },
+      // iconFadeDpiCurrent: [
+      //   function() {
+      //     self
+      //       .makeNewTabURLChangePromise("chrome://tart/content/blank.icon.html")
+      //       .then(next);
+      //   },
 
-        function() {
-          animate(0, addTab, next);
-        },
-        function() {
-          animate(
-            rest,
-            fadeout,
-            next,
-            true,
-            "iconFade-close-DPIcurrent",
-            tabRefDuration
-          );
-        },
-        function() {
-          animate(
-            rest,
-            fadein,
-            next,
-            true,
-            "iconFade-open-DPIcurrent",
-            tabRefDuration
-          );
-        },
-        function() {
-          animate(0, closeCurrentTab, next);
-        },
-      ],
+      //   function() {
+      //     animate(0, addTab, next);
+      //   },
+      //   function() {
+      //     animate(
+      //       rest,
+      //       fadeout,
+      //       next,
+      //       true,
+      //       "iconFade-close-DPIcurrent",
+      //       tabRefDuration
+      //     );
+      //   },
+      //   function() {
+      //     animate(
+      //       rest,
+      //       fadein,
+      //       next,
+      //       true,
+      //       "iconFade-open-DPIcurrent",
+      //       tabRefDuration
+      //     );
+      //   },
+      //   function() {
+      //     animate(0, closeCurrentTab, next);
+      //   },
+      // ],
 
-      iconFadeDpi2: [
-        function() {
-          Services.prefs.setCharPref("layout.css.devPixelsPerPx", "2");
-          self
-            .makeNewTabURLChangePromise("chrome://tart/content/blank.icon.html")
-            .then(next);
-        },
-        function() {
-          animate(0, addTab, next);
-        },
-        function() {
-          animate(
-            rest,
-            fadeout,
-            next,
-            true,
-            "iconFade-close-DPI2",
-            tabRefDuration
-          );
-        },
-        function() {
-          animate(
-            rest,
-            fadein,
-            next,
-            true,
-            "iconFade-open-DPI2",
-            tabRefDuration
-          );
-        },
-        function() {
-          animate(0, closeCurrentTab, next);
-        },
-      ],
+      // iconFadeDpi2: [
+      //   function() {
+      //     Services.prefs.setCharPref("layout.css.devPixelsPerPx", "2");
+      //     self
+      //       .makeNewTabURLChangePromise("chrome://tart/content/blank.icon.html")
+      //       .then(next);
+      //   },
+      //   function() {
+      //     animate(0, addTab, next);
+      //   },
+      //   function() {
+      //     animate(
+      //       rest,
+      //       fadeout,
+      //       next,
+      //       true,
+      //       "iconFade-close-DPI2",
+      //       tabRefDuration
+      //     );
+      //   },
+      //   function() {
+      //     animate(
+      //       rest,
+      //       fadein,
+      //       next,
+      //       true,
+      //       "iconFade-open-DPI2",
+      //       tabRefDuration
+      //     );
+      //   },
+      //   function() {
+      //     animate(0, closeCurrentTab, next);
+      //   },
+      // ],
 
-      lastTabFadeDpiCurrent: [
-        function() {
-          self._win.gBrowser.selectedTab =
-            self._win.gBrowser.tabs[gBrowser.tabs.length - 1];
-          next();
-        },
-        function() {
-          animate(
-            rest,
-            fadeout,
-            next,
-            true,
-            "lastTabFade-close-DPIcurrent",
-            tabRefDuration
-          );
-        },
-        function() {
-          animate(
-            rest,
-            fadein,
-            next,
-            true,
-            "lastTabFade-open-DPIcurrent",
-            tabRefDuration
-          );
-        },
-      ],
+      // lastTabFadeDpiCurrent: [
+      //   function() {
+      //     self._win.gBrowser.selectedTab =
+      //       self._win.gBrowser.tabs[gBrowser.tabs.length - 1];
+      //     next();
+      //   },
+      //   function() {
+      //     animate(
+      //       rest,
+      //       fadeout,
+      //       next,
+      //       true,
+      //       "lastTabFade-close-DPIcurrent",
+      //       tabRefDuration
+      //     );
+      //   },
+      //   function() {
+      //     animate(
+      //       rest,
+      //       fadein,
+      //       next,
+      //       true,
+      //       "lastTabFade-open-DPIcurrent",
+      //       tabRefDuration
+      //     );
+      //   },
+      // ],
 
-      customize: [
-        // Test australis customize mode animation with default DPI.
-        function() {
-          Services.prefs.setCharPref("layout.css.devPixelsPerPx", "-1");
-          next();
-        },
-        // Adding a non-newtab since the behavior of exiting customize mode which was entered on newtab may change. See bug 957202.
-        function() {
-          animate(0, addSomeTab, next);
-        },
+      // customize: [
+      //   // Test australis customize mode animation with default DPI.
+      //   function() {
+      //     Services.prefs.setCharPref("layout.css.devPixelsPerPx", "-1");
+      //     next();
+      //   },
+      //   // Adding a non-newtab since the behavior of exiting customize mode which was entered on newtab may change. See bug 957202.
+      //   function() {
+      //     animate(0, addSomeTab, next);
+      //   },
 
-        // The prefixes 1- and 2- were added because talos cuts common prefixes on all "pages", which ends up as "customize-e" prefix.
-        function() {
-          animate(
-            rest,
-            customizeEnter,
-            next,
-            true,
-            "1-customize-enter",
-            custRefDuration
-          );
-        },
-        function() {
-          animate(
-            rest,
-            customizeExit,
-            next,
-            true,
-            "2-customize-exit",
-            custRefDuration
-          );
-        },
+      //   // The prefixes 1- and 2- were added because talos cuts common prefixes on all "pages", which ends up as "customize-e" prefix.
+      //   function() {
+      //     animate(
+      //       rest,
+      //       customizeEnter,
+      //       next,
+      //       true,
+      //       "1-customize-enter",
+      //       custRefDuration
+      //     );
+      //   },
+      //   function() {
+      //     animate(
+      //       rest,
+      //       customizeExit,
+      //       next,
+      //       true,
+      //       "2-customize-exit",
+      //       custRefDuration
+      //     );
+      //   },
 
-        // Measures the CSS-animation-only part of entering into customize mode
-        function() {
-          animate(
-            rest,
-            customizeEnterCss,
-            next,
-            true,
-            "3-customize-enter-css",
-            custRefDuration
-          );
-        },
-        function() {
-          animate(0, customizeExit, next);
-        },
+      //   // Measures the CSS-animation-only part of entering into customize mode
+      //   function() {
+      //     animate(
+      //       rest,
+      //       customizeEnterCss,
+      //       next,
+      //       true,
+      //       "3-customize-enter-css",
+      //       custRefDuration
+      //     );
+      //   },
+      //   function() {
+      //     animate(0, customizeExit, next);
+      //   },
 
-        function() {
-          animate(0, closeCurrentTab, next);
-        },
-      ],
+      //   function() {
+      //     animate(0, closeCurrentTab, next);
+      //   },
+      // ],
     };
 
     // Construct the sequence array: config.repeat times config.subtests,
     // where each subtest implicitly starts with init.
     sequenceArray = [];
     for (var i in this._config.subtests) {
       for (var r = 0; r < this._config.repeat; r++) {
         sequenceArray = sequenceArray.concat(subtests.init);
diff --git a/testing/talos/talos/tests/tart/tart.html b/testing/talos/talos/tests/tart/tart.html
--- a/testing/talos/talos/tests/tart/tart.html
+++ b/testing/talos/talos/tests/tart/tart.html
@@ -164,51 +164,51 @@ function triggerStart() {
 
 var defaultConfig = {
       repeat: 1,
       rest: 500,
       tickle: true,
       controlProfiler: true,  // If true, pause the profiler when not measuring. Else just add markers.
       subtests: {
         simple: true,
-        iconDpi1: true,
-        iconDpi2: true,
-        iconFadeDpi2: true,
-        newtabNoPreload: true,
-        newtabYesPreload: true,
-        simple3open3closeDpiCurrent: false,
-        multi: false,
-        simpleFadeDpiCurrent: false,
-        iconFadeDpiCurrent: false,
-        lastTabFadeDpiCurrent: false,
-        customize: false,
+        // iconDpi1: true,
+        // iconDpi2: true,
+        // iconFadeDpi2: true,
+        // newtabNoPreload: true,
+        // newtabYesPreload: true,
+        // simple3open3closeDpiCurrent: false,
+        // multi: false,
+        // simpleFadeDpiCurrent: false,
+        // iconFadeDpiCurrent: false,
+        // lastTabFadeDpiCurrent: false,
+        // customize: false,
       },
     };
 
 var simpleInfo = "Measure open/close of a new tab of about:blank";
 var iconInfo   = "Measure open/close of a new empty tab with favicon and long title";
 var newtabInfo = "Measure open of the standard about:newtab";
 var fadeInfo   = "Open a new tab, then measure Fade-out/in";
 var dpi1Info   = " (@DPI 1.0)";
 var dpi2Info   = " (@DPI 2.0)";
 var dpiCurrentInfo = " (@DPI unchanged)";
 
 var testsInfo = {
       simple: simpleInfo + dpi1Info,
-      iconDpi1: iconInfo + dpi1Info,
-      iconDpi2: iconInfo + dpi2Info,
-      iconFadeDpi2: fadeInfo + dpi2Info,
-      newtabNoPreload: newtabInfo + " (without preload)",
-      newtabYesPreload: newtabInfo + " (with preload)",
-      simple3open3closeDpiCurrent: "Measure 3 tab opens and 3 tab closes" + dpiCurrentInfo,
-      multi: "Open 6 tabs, then measures open/close of the 7th tab (@DPI 1.0 and 2.0)",
-      simpleFadeDpiCurrent: fadeInfo + dpiCurrentInfo,
-      iconFadeDpiCurrent: fadeInfo + dpiCurrentInfo,
-      lastTabFadeDpiCurrent: "Focus the last tab, then measure Fade-out/in (requires to manually add a tab before testing)",
-      customize: "Measure (Australis) Customize-mode enter/exit",
+      // iconDpi1: iconInfo + dpi1Info,
+      // iconDpi2: iconInfo + dpi2Info,
+      // iconFadeDpi2: fadeInfo + dpi2Info,
+      // newtabNoPreload: newtabInfo + " (without preload)",
+      // newtabYesPreload: newtabInfo + " (with preload)",
+      // simple3open3closeDpiCurrent: "Measure 3 tab opens and 3 tab closes" + dpiCurrentInfo,
+      // multi: "Open 6 tabs, then measures open/close of the 7th tab (@DPI 1.0 and 2.0)",
+      // simpleFadeDpiCurrent: fadeInfo + dpiCurrentInfo,
+      // iconFadeDpiCurrent: fadeInfo + dpiCurrentInfo,
+      // lastTabFadeDpiCurrent: "Focus the last tab, then measure Fade-out/in (requires to manually add a tab before testing)",
+      // customize: "Measure (Australis) Customize-mode enter/exit",
 };
 
 
 function deselectAll() {
   for (var test in defaultConfig.subtests) {
     $("subtest-" + test).checked = false;
   }
 }
