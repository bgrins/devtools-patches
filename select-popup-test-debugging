# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  97f80842e5dc2a21f5c7907e32641007f6bbd7a0

diff --git a/browser/base/content/test/forms/browser_selectpopup.js b/browser/base/content/test/forms/browser_selectpopup.js
--- a/browser/base/content/test/forms/browser_selectpopup.js
+++ b/browser/base/content/test/forms/browser_selectpopup.js
@@ -623,17 +623,20 @@ async function performLargePopupTests(wi
 
   let selectPopup = win.document.getElementById("ContentSelectDropdown")
     .menupopup;
   let browserRect = browser.getBoundingClientRect();
 
   // Check if a drag-select works and scrolls the list.
   await openSelectPopup(selectPopup, "mousedown", "select", win);
 
-  let getScrollPos = () => selectPopup.scrollBox.scrollbox.scrollTop;
+  let getScrollPos = () => {
+    selectPopup.getBoundingClientRect();
+    return selectPopup.scrollBox.scrollbox.scrollTop;
+  };
   let scrollPos = getScrollPos();
   let popupRect = selectPopup.getBoundingClientRect();
 
   // First, check that scrolling does not occur when the mouse is moved over the
   // anchor button but not the popup yet.
   EventUtils.synthesizeMouseAtPoint(
     popupRect.left + 5,
     popupRect.top - 10,
@@ -814,16 +817,28 @@ async function performLargePopupTests(wi
       // accuracy, and only care about the final pixel value, so we add a
       // fuzz-factor of 1.
       SimpleTest.isfuzzy(
         selectPopup.children[selectedOption].getBoundingClientRect().bottom,
         selectPopup.getBoundingClientRect().bottom - bpBottom,
         1,
         "Popup scroll at correct position " + bpBottom
       );
+      if (selectPopup.getBoundingClientRect().bottom - bpBottom == 378) {
+        console.log(
+          positions[0],
+          selectPopup.children[selectedOption].getBoundingClientRect()
+        );
+        setTimeout(() => {
+          console.log(
+            selectPopup.children[selectedOption].getBoundingClientRect()
+          );
+        }, 1000)
+        await new Promise(r => r);
+      }
     }
 
     await hideSelectPopup(selectPopup, "enter", win);
 
     position = positions.shift();
 
     let contentPainted = BrowserTestUtils.contentPainted(browser);
     await ContentTask.spawn(browser, position, async function(contentPosition) {
