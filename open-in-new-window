# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  e9601d85f646d96dea9a0eb8aebc43f574999c24
Better debugging by opening in a new window

diff --git a/browser/base/content/tabbrowser.js b/browser/base/content/tabbrowser.js
--- a/browser/base/content/tabbrowser.js
+++ b/browser/base/content/tabbrowser.js
@@ -2210,17 +2210,32 @@
         if (b.a11ymodeBrowser) {
           this.closeFindbarForTab(this.getTabForBrowser(b));
           b.destroyA11YModeBrowser();
         }
       };
       let openA11YMode = () => {
         if (!b.a11ymodeBrowser) {
           this.closeFindbarForTab(this.getTabForBrowser(b));
-          b.before(b.createA11YModeBrowser());
+
+          // b.before(b.createA11YModeBrowser());
+
+          // We didn't find a matching window, so open a new one.
+          let win = openDialog(
+            "chrome://browser/content/hiddenWindowMac.xhtml",
+            "",
+            "chrome,toolbar,dialog=no,resizable",
+            {}
+          );
+          win.onload = function() {
+            let aB = b.createA11YModeBrowser(win.document);
+            console.log(win, aB);
+            win.document.documentElement.append(aB);
+          }
+
         }
         if (!stack.hasAttribute("a11ymode")) {
           stack.setAttribute("a11ymode", "on");
         }
       };
 
       let buttonOn = createA11YModeButton("a11ymode-on", "a11y view", () => {
         openA11YMode();
diff --git a/toolkit/content/widgets/browser-custom-element.js b/toolkit/content/widgets/browser-custom-element.js
--- a/toolkit/content/widgets/browser-custom-element.js
+++ b/toolkit/content/widgets/browser-custom-element.js
@@ -463,19 +463,21 @@
         if (this.isRemoteBrowser) {
           this._documentContentType = aContentType;
         } else {
           this.contentDocument.documentContentType = aContentType;
         }
       }
     }
 
-    createA11YModeBrowser() {
+    createA11YModeBrowser(doc) {
+      doc = doc || document;
       if (!this.a11ymodeBrowser) {
-        this.a11ymodeBrowser = document.createXULElement("browser");
+        this.a11ymodeBrowser = doc.createXULElement("browser");
+        this.a11ymodeBrowser.style.MozBoxFlex = 1;
         this.a11ymodeBrowser.classList.add("a11ymode");
         this.a11ymodeBrowser.setAttribute("disablehistory", "true");
         this.a11ymodeBrowser.setAttribute("nodefaultsrc", "true");
         this.a11ymodeBrowser.setAttribute(
           "remoteType",
           this.getAttribute("remoteType")
         );
         this.a11ymodeBrowser.setAttribute(
@@ -1373,17 +1375,16 @@
 
       if (this.messageManager) {
         this.messageManager.addMessageListener(
           "UnselectedTabHover:Toggle",
           this
         );
       }
 
-
       if (this.hada11ymodeBrowser) {
         this.hada11ymodeBrowser = false;
         this.before(this.createA11YModeBrowser());
       }
     }
 
     destroyA11YModeBrowser() {
       if (this.a11ymodeBrowser) {
