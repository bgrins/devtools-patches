# HG changeset patch
# User Jan Keromnes <janx@linux.com>

Bug 1196785 - Create an about:debugging page to list debuggable devtools targets. r=jryans

diff --git a/browser/components/about/AboutRedirector.cpp b/browser/components/about/AboutRedirector.cpp
index e94870f..2e4dae2 100644
--- a/browser/components/about/AboutRedirector.cpp
+++ b/browser/components/about/AboutRedirector.cpp
@@ -98,16 +98,19 @@ static RedirEntry kRedirMap[] = {
     nsIAboutModule::ALLOW_SCRIPT },
 #endif
   { "accounts", "chrome://browser/content/aboutaccounts/aboutaccounts.xhtml",
     nsIAboutModule::ALLOW_SCRIPT },
   { "app-manager", "chrome://devtools/content/app-manager/content/index.xul",
     nsIAboutModule::ALLOW_SCRIPT },
   { "customizing", "chrome://browser/content/customizableui/aboutCustomizing.xul",
     nsIAboutModule::ALLOW_SCRIPT },
+  {
+    "debugging", "chrome://devtools/content/aboutdebugging/aboutdebugging.xhtml",
+    nsIAboutModule::ALLOW_SCRIPT },
   { "loopconversation", "chrome://browser/content/loop/conversation.html",
     nsIAboutModule::URI_SAFE_FOR_UNTRUSTED_CONTENT |
     nsIAboutModule::ALLOW_SCRIPT |
     nsIAboutModule::HIDE_FROM_ABOUTABOUT |
     nsIAboutModule::ENABLE_INDEXED_DB },
   { "looppanel", "chrome://browser/content/loop/panel.html",
     nsIAboutModule::URI_SAFE_FOR_UNTRUSTED_CONTENT |
     nsIAboutModule::ALLOW_SCRIPT |
diff --git a/browser/components/build/nsModule.cpp b/browser/components/build/nsModule.cpp
index 6a86f24..b8b9448 100644
--- a/browser/components/build/nsModule.cpp
+++ b/browser/components/build/nsModule.cpp
@@ -111,16 +111,17 @@ static const mozilla::Module::ContractIDEntry kBrowserContracts[] = {
     { NS_ABOUT_MODULE_CONTRACTID_PREFIX "preferences", &kNS_BROWSER_ABOUT_REDIRECTOR_CID },
     { NS_ABOUT_MODULE_CONTRACTID_PREFIX "downloads", &kNS_BROWSER_ABOUT_REDIRECTOR_CID },
     { NS_ABOUT_MODULE_CONTRACTID_PREFIX "accounts", &kNS_BROWSER_ABOUT_REDIRECTOR_CID },
 #ifdef MOZ_SERVICES_HEALTHREPORT
     { NS_ABOUT_MODULE_CONTRACTID_PREFIX "healthreport", &kNS_BROWSER_ABOUT_REDIRECTOR_CID },
 #endif
     { NS_ABOUT_MODULE_CONTRACTID_PREFIX "app-manager", &kNS_BROWSER_ABOUT_REDIRECTOR_CID },
     { NS_ABOUT_MODULE_CONTRACTID_PREFIX "customizing", &kNS_BROWSER_ABOUT_REDIRECTOR_CID },
+    { NS_ABOUT_MODULE_CONTRACTID_PREFIX "debugging", &kNS_BROWSER_ABOUT_REDIRECTOR_CID },
     { NS_ABOUT_MODULE_CONTRACTID_PREFIX "looppanel", &kNS_BROWSER_ABOUT_REDIRECTOR_CID },
     { NS_ABOUT_MODULE_CONTRACTID_PREFIX "loopconversation", &kNS_BROWSER_ABOUT_REDIRECTOR_CID },
     { NS_ABOUT_MODULE_CONTRACTID_PREFIX "reader", &kNS_BROWSER_ABOUT_REDIRECTOR_CID },
     { NS_ABOUT_MODULE_CONTRACTID_PREFIX "pocket-saved", &kNS_BROWSER_ABOUT_REDIRECTOR_CID },
     { NS_ABOUT_MODULE_CONTRACTID_PREFIX "pocket-signup", &kNS_BROWSER_ABOUT_REDIRECTOR_CID },
 #if defined(XP_WIN)
     { NS_IEHISTORYENUMERATOR_CONTRACTID, &kNS_WINIEHISTORYENUMERATOR_CID },
     { NS_EDGEREADINGLISTEXTRACTOR_CONTRACTID, &kNS_EDGEREADINGLISTEXTRACTOR_CID },
diff --git a/browser/locales/en-US/chrome/browser/devtools/aboutdebugging.dtd b/browser/locales/en-US/chrome/browser/devtools/aboutdebugging.dtd
new file mode 100644
index 0000000..350afef
--- /dev/null
+++ b/browser/locales/en-US/chrome/browser/devtools/aboutdebugging.dtd
@@ -0,0 +1,9 @@
+<!-- This Source Code Form is subject to the terms of the Mozilla Public
+   - License, v. 2.0. If a copy of the MPL was not distributed with this
+   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
+
+<!ENTITY aboutDebugging.title                      "about:debugging">
+<!ENTITY aboutDebugging.addons                     "Add-ons">
+<!ENTITY aboutDebugging.addonDebugging.label       "Enable add-on debugging">
+<!ENTITY aboutDebugging.addonDebugging.tooltip     "Turning this on will allow you to debug add-ons and various other parts of the browser chrome">
+<!ENTITY aboutDebugging.workers                    "Workers">
diff --git a/browser/locales/en-US/chrome/browser/devtools/aboutdebugging.properties b/browser/locales/en-US/chrome/browser/devtools/aboutdebugging.properties
new file mode 100644
index 0000000..808b5e3
--- /dev/null
+++ b/browser/locales/en-US/chrome/browser/devtools/aboutdebugging.properties
@@ -0,0 +1,12 @@
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+debug = Debug
+
+extensions = Extensions
+serviceWorkers = Service Workers
+sharedWorkers = Shared Workers
+otherWorkers = Other Workers
+
+nothing = Nothing yet.
diff --git a/browser/locales/jar.mn b/browser/locales/jar.mn
index 24a1cfe..b44df78 100644
--- a/browser/locales/jar.mn
+++ b/browser/locales/jar.mn
@@ -23,16 +23,18 @@
     locale/browser/syncCustomize.dtd               (%chrome/browser/syncCustomize.dtd)
     locale/browser/aboutSyncTabs.dtd               (%chrome/browser/aboutSyncTabs.dtd)
 #endif
     locale/browser/browser.dtd                     (%chrome/browser/browser.dtd)
     locale/browser/baseMenuOverlay.dtd             (%chrome/browser/baseMenuOverlay.dtd)
     locale/browser/browser.properties              (%chrome/browser/browser.properties)
     locale/browser/browser-pocket.properties       (%chrome/browser/browser-pocket.properties)
     locale/browser/customizableui/customizableWidgets.properties (%chrome/browser/customizableui/customizableWidgets.properties)
+    locale/browser/devtools/aboutdebugging.dtd        (%chrome/browser/devtools/aboutdebugging.dtd)
+    locale/browser/devtools/aboutdebugging.properties (%chrome/browser/devtools/aboutdebugging.properties)
     locale/browser/devtools/animationinspector.dtd    (%chrome/browser/devtools/animationinspector.dtd)
     locale/browser/devtools/animationinspector.properties (%chrome/browser/devtools/animationinspector.properties)
     locale/browser/devtools/appcacheutils.properties  (%chrome/browser/devtools/appcacheutils.properties)
     locale/browser/devtools/debugger.dtd              (%chrome/browser/devtools/debugger.dtd)
     locale/browser/devtools/debugger.properties       (%chrome/browser/devtools/debugger.properties)
     locale/browser/devtools/device.properties         (%chrome/browser/devtools/device.properties)
     locale/browser/devtools/filterwidget.properties   (%chrome/browser/devtools/filterwidget.properties)
     locale/browser/devtools/filterwidget.dtd          (%chrome/browser/devtools/filterwidget.dtd)
diff --git a/devtools/client/aboutdebugging/aboutdebugging.css b/devtools/client/aboutdebugging/aboutdebugging.css
new file mode 100644
index 0000000..0f4f26b
--- /dev/null
+++ b/devtools/client/aboutdebugging/aboutdebugging.css
@@ -0,0 +1,78 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+html, body {
+  height: 100%;
+  width: 100%;
+}
+
+h2, h3, h4 {
+  margin-bottom: 5px;
+}
+
+button {
+  width: 100px;
+}
+
+#body {
+  display: flex;
+  flex-direction: row;
+}
+
+/* Category tabs */
+
+.category {
+  display: flex;
+  flex-direction: row;
+  align-content: center;
+}
+
+.category-name {
+  cursor: default;
+}
+
+.main-content {
+  flex: 1;
+}
+
+.tab {
+  max-width: 800px;
+}
+
+.tab:not(.active) {
+  display: none;
+}
+
+/* Prefs */
+
+label {
+  display: block;
+  margin-bottom: 5px;
+}
+
+/* Targets */
+
+.targets {
+  margin-bottom: 25px;
+}
+
+.target {
+  margin-top: 5px;
+  display: flex;
+  flex-direction: row;
+  align-items: center;
+}
+
+.target-logo {
+  height: 24px;
+  margin-right: 5px;
+}
+
+.target-logo:not([src]) {
+  display: none;
+}
+
+.target-details {
+  flex: 1;
+}
diff --git a/devtools/client/aboutdebugging/aboutdebugging.js b/devtools/client/aboutdebugging/aboutdebugging.js
new file mode 100644
index 0000000..f349c34
--- /dev/null
+++ b/devtools/client/aboutdebugging/aboutdebugging.js
@@ -0,0 +1,97 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+/* eslint-env browser */
+/* global AddonsComponent, DebuggerClient, DebuggerServer, React,
+   RuntimesComponent, WorkersComponent */
+
+"use strict";
+
+const { loader } = Components.utils.import(
+  "resource://gre/modules/devtools/shared/Loader.jsm", {});
+
+loader.lazyRequireGetter(this, "AddonsComponent",
+  "devtools/client/aboutdebugging/components/addons", true);
+loader.lazyRequireGetter(this, "DebuggerClient",
+  "devtools/shared/client/main", true);
+loader.lazyRequireGetter(this, "DebuggerServer",
+  "devtools/server/main", true);
+loader.lazyRequireGetter(this, "WorkersComponent",
+  "devtools/client/aboutdebugging/components/workers", true);
+loader.lazyRequireGetter(this, "Services");
+
+let AboutDebugging = {
+  _categories: null,
+  get categories() {
+    // If needed, initialize the list of available categories.
+    if (!this._categories) {
+      let elements = document.querySelectorAll(".category");
+      this._categories = Array.map(elements, element => {
+        let value = element.getAttribute("value");
+        element.addEventListener("click", this.showTab.bind(this, value));
+        return value;
+      });
+    }
+    return this._categories;
+  },
+
+  showTab(category) {
+    // If no category was specified, try the URL hash.
+    if (!category) {
+      category = location.hash.substr(1);
+    }
+    // If no corresponding category can be found, use the first available.
+    let categories = this.categories;
+    if (categories.indexOf(category) < 0) {
+      category = categories[0];
+    }
+    // Show the corresponding tab and hide the others.
+    document.querySelector(".tab.active").classList.remove("active");
+    document.querySelector("#tab-" + category).classList.add("active");
+    document.querySelector(".category[selected]").removeAttribute("selected");
+    document.querySelector(".category[value=" + category + "]")
+      .setAttribute("selected", "true");
+    location.hash = "#" + category;
+  },
+
+  init() {
+    // Show the first available tab.
+    this.showTab();
+    window.addEventListener("hashchange", () => this.showTab());
+
+    // Link checkboxes to prefs.
+    let elements = document.querySelectorAll("input[type=checkbox][data-pref]");
+    Array.map(elements, element => {
+      let pref = element.dataset.pref;
+      let updatePref = () => {
+        Services.prefs.setBoolPref(pref, element.checked);
+      };
+      let updateCheckbox = () => {
+        element.checked = Services.prefs.getBoolPref(pref);
+      };
+      element.addEventListener("change", updatePref, false);
+      Services.prefs.addObserver(pref, updateCheckbox, false);
+      updateCheckbox();
+    });
+
+    if (!DebuggerServer.initialized) {
+      DebuggerServer.init();
+      DebuggerServer.addBrowserActors();
+    }
+    DebuggerServer.allowChromeProcess = true;
+    let client = new DebuggerClient(DebuggerServer.connectPipe());
+
+    client.connect(() => {
+      React.render(React.createElement(AddonsComponent, { client }),
+        document.querySelector("#addons"));
+      React.render(React.createElement(WorkersComponent, { client }),
+        document.querySelector("#workers"));
+    });
+  },
+};
+
+window.addEventListener("DOMContentLoaded", function load() {
+  window.removeEventListener("DOMContentLoaded", load);
+  AboutDebugging.init();
+});
diff --git a/devtools/client/aboutdebugging/aboutdebugging.xhtml b/devtools/client/aboutdebugging/aboutdebugging.xhtml
new file mode 100644
index 0000000..cd04e09
--- /dev/null
+++ b/devtools/client/aboutdebugging/aboutdebugging.xhtml
@@ -0,0 +1,51 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- This Source Code Form is subject to the terms of the Mozilla Public
+   - License, v. 2.0. If a copy of the MPL was not distributed with this
+   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
+
+<!DOCTYPE html [
+<!ENTITY % htmlDTD PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "DTD/xhtml1-strict.dtd"> %htmlDTD;
+<!ENTITY % toolboxDTD SYSTEM "chrome://browser/locale/devtools/toolbox.dtd"> %toolboxDTD;
+<!ENTITY % aboutdebuggingDTD SYSTEM "chrome://browser/locale/devtools/aboutdebugging.dtd"> %aboutdebuggingDTD;
+]>
+
+<html xmlns="http://www.w3.org/1999/xhtml">
+  <head>
+    <title>&aboutDebugging.title;</title>
+    <link rel="stylesheet" href="chrome://global/skin/global.css" type="text/css"/>
+    <link rel="stylesheet" href="chrome://global/skin/in-content/common.css" type="text/css"/>
+    <link rel="stylesheet" href="chrome://devtools/content/aboutdebugging/aboutdebugging.css"  type="text/css"/>
+    <script type="application/javascript" src="resource:///modules/devtools/client/shared/vendor/react.js"></script>
+    <script type="application/javascript;version=1.8" src="chrome://devtools/content/aboutdebugging/aboutdebugging.js"></script>
+  </head>
+  <body id="body">
+    <div id="categories">
+      <div class="category" value="addons" selected="true">
+        <img class="category-icon" src="chrome://mozapps/skin/extensions/category-extensions.png"/>
+        <div class="category-name">&aboutDebugging.addons;</div>
+      </div>
+      <div class="category" value="workers">
+        <img class="category-icon" src="chrome://browser/skin/preferences/in-content/icons.svg#applications"/>
+        <div class="category-name">&aboutDebugging.workers;</div>
+      </div>
+    </div>
+    <div class="main-content">
+      <div id="tab-addons" class="tab active">
+        <div class="header">
+          <h1 class="header-name">&aboutDebugging.addons;</h1>
+        </div>
+        <input id="enable-addon-debugging" type="checkbox" data-pref="devtools.chrome.enabled"/>
+        <label for="enable-addon-debugging" title="&aboutDebugging.addonDebugging.tooltip;">&aboutDebugging.addonDebugging.label;</label>
+        <div id="addons"></div>
+      </div>
+      <div id="tab-workers" class="tab">
+        <div class="header">
+          <h1 class="header-name">&aboutDebugging.workers;</h1>
+        </div>
+        <input id="enable-worker-debugging" type="checkbox" data-pref="devtools.debugger.workers"/>
+        <label for="enable-worker-debugging" title="&options.enableWorkers.tooltip;">&options.enableWorkers.label;</label>
+        <div id="workers"></div>
+      </div>
+    </div>
+  </body>
+</html>
diff --git a/devtools/client/aboutdebugging/components/addons.js b/devtools/client/aboutdebugging/components/addons.js
new file mode 100644
index 0000000..b31e3e4
--- /dev/null
+++ b/devtools/client/aboutdebugging/components/addons.js
@@ -0,0 +1,78 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+/* global AddonManager, React, TargetListComponent */
+
+"use strict";
+
+loader.lazyRequireGetter(this, "React",
+  "resource:///modules/devtools/client/shared/vendor/react.js");
+loader.lazyRequireGetter(this, "TargetListComponent",
+  "devtools/client/aboutdebugging/components/target-list", true);
+loader.lazyRequireGetter(this, "Services");
+
+loader.lazyImporter(this, "AddonManager",
+  "resource://gre/modules/AddonManager.jsm");
+
+const ExtensionIcon = "chrome://mozapps/skin/extensions/extensionGeneric.png";
+const Strings = Services.strings.createBundle(
+  "chrome://browser/locale/devtools/aboutdebugging.properties");
+
+exports.AddonsComponent = React.createClass({
+  displayName: "AddonsComponent",
+
+  getInitialState() {
+    return {
+      extensions: []
+    };
+  },
+
+  componentDidMount() {
+    AddonManager.addAddonListener(this);
+    this.update();
+  },
+
+  componentWillUnmount() {
+    AddonManager.removeAddonListener(this);
+  },
+
+  render() {
+    let client = this.props.client;
+    let targets = this.state.extensions;
+    let name = Strings.GetStringFromName("extensions");
+    return React.createElement("div", null,
+      React.createElement(TargetListComponent, { name, targets, client })
+    );
+  },
+
+  update() {
+    AddonManager.getAllAddons(addons => {
+      let extensions = addons.filter(addon => addon.isDebuggable).map(addon => {
+        return {
+          name: addon.name,
+          icon: addon.iconURL || ExtensionIcon,
+          type: addon.type,
+          addonID: addon.id
+        };
+      });
+      this.setState({ extensions });
+    });
+  },
+
+  onInstalled() {
+    this.update();
+  },
+
+  onUninstalled() {
+    this.update();
+  },
+
+  onEnabled() {
+    this.update();
+  },
+
+  onDisabled() {
+    this.update();
+  },
+});
diff --git a/devtools/client/aboutdebugging/components/moz.build b/devtools/client/aboutdebugging/components/moz.build
new file mode 100644
index 0000000..1713673
--- /dev/null
+++ b/devtools/client/aboutdebugging/components/moz.build
@@ -0,0 +1,10 @@
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+DevToolsModules(
+    'addons.js',
+    'target-list.js',
+    'target.js',
+    'workers.js',
+)
diff --git a/devtools/client/aboutdebugging/components/target-list.js b/devtools/client/aboutdebugging/components/target-list.js
new file mode 100644
index 0000000..21c6f45
--- /dev/null
+++ b/devtools/client/aboutdebugging/components/target-list.js
@@ -0,0 +1,37 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+/* global React, TargetComponent */
+
+"use strict";
+
+loader.lazyRequireGetter(this, "React",
+  "resource:///modules/devtools/client/shared/vendor/react.js");
+loader.lazyRequireGetter(this, "TargetComponent",
+  "devtools/client/aboutdebugging/components/target", true);
+loader.lazyRequireGetter(this, "Services");
+
+const Strings = Services.strings.createBundle(
+  "chrome://browser/locale/devtools/aboutdebugging.properties");
+const LocaleCompare = (a, b) => {
+  return a.name.toLowerCase().localeCompare(b.name.toLowerCase());
+};
+
+exports.TargetListComponent = React.createClass({
+  displayName: "TargetListComponent",
+
+  render() {
+    let client = this.props.client;
+    let targets = this.props.targets.sort(LocaleCompare).map(target => {
+      return React.createElement(TargetComponent, { client, target });
+    });
+    return (
+      React.createElement("div", { className: "targets" },
+        React.createElement("h4", null, this.props.name),
+        targets.length > 0 ? targets :
+          React.createElement("p", null, Strings.GetStringFromName("nothing"))
+      )
+    );
+  },
+});
diff --git a/devtools/client/aboutdebugging/components/target.js b/devtools/client/aboutdebugging/components/target.js
new file mode 100644
index 0000000..59edf85
--- /dev/null
+++ b/devtools/client/aboutdebugging/components/target.js
@@ -0,0 +1,66 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+/* global alert, BrowserToolboxProcess, gDevTools, React, TargetFactory,
+   Toolbox */
+
+"use strict";
+
+loader.lazyRequireGetter(this, "React",
+  "resource:///modules/devtools/client/shared/vendor/react.js");
+loader.lazyRequireGetter(this, "TargetFactory",
+  "devtools/client/framework/target", true);
+loader.lazyRequireGetter(this, "Toolbox",
+  "devtools/client/framework/toolbox", true);
+loader.lazyRequireGetter(this, "Services");
+
+loader.lazyImporter(this, "BrowserToolboxProcess",
+  "resource:///modules/devtools/client/framework/ToolboxProcess.jsm");
+loader.lazyImporter(this, "gDevTools",
+  "resource:///modules/devtools/client/framework/gDevTools.jsm");
+
+const Strings = Services.strings.createBundle(
+  "chrome://browser/locale/devtools/aboutdebugging.properties");
+
+exports.TargetComponent = React.createClass({
+  displayName: "TargetComponent",
+
+  debug() {
+    let client = this.props.client;
+    let target = this.props.target;
+    switch (target.type) {
+      case "extension":
+        BrowserToolboxProcess.init({ addonID: target.addonID });
+        break;
+      case "serviceworker":
+        // Fall through.
+      case "sharedworker":
+        // Fall through.
+      case "worker":
+        let workerActor = this.props.target.actorID;
+        client.attachWorker(workerActor, (response, workerClient) => {
+          gDevTools.showToolbox(TargetFactory.forWorker(workerClient),
+            "jsdebugger", Toolbox.HostType.WINDOW);
+        });
+        break;
+      default:
+        alert("Not implemented yet!");
+    }
+  },
+
+  render() {
+    let target = this.props.target;
+    return React.createElement("div", { className: "target" },
+      React.createElement("img", {
+        className: "target-logo",
+        src: target.icon }),
+      React.createElement("div", { className: "target-details" },
+        React.createElement("div", { className: "target-name" }, target.name),
+        React.createElement("div", { className: "target-url" }, target.url)
+      ),
+      React.createElement("button", { onClick: this.debug },
+        Strings.GetStringFromName("debug"))
+    );
+  },
+});
diff --git a/devtools/client/aboutdebugging/components/workers.js b/devtools/client/aboutdebugging/components/workers.js
new file mode 100644
index 0000000..74e0325
--- /dev/null
+++ b/devtools/client/aboutdebugging/components/workers.js
@@ -0,0 +1,85 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+/* global React, TargetListComponent */
+
+"use strict";
+
+loader.lazyRequireGetter(this, "Ci",
+  "chrome", true);
+loader.lazyRequireGetter(this, "React",
+  "resource:///modules/devtools/client/shared/vendor/react.js");
+loader.lazyRequireGetter(this, "TargetListComponent",
+  "devtools/client/aboutdebugging/components/target-list", true);
+loader.lazyRequireGetter(this, "Services");
+
+const Strings = Services.strings.createBundle(
+  "chrome://browser/locale/devtools/aboutdebugging.properties");
+
+exports.WorkersComponent = React.createClass({
+  displayName: "WorkersComponent",
+
+  getInitialState() {
+    return {
+      workers: {
+        service: [],
+        shared: [],
+        other: []
+      }
+    };
+  },
+
+  componentDidMount() {
+    this.props.client.addListener("workerListChanged", this.update);
+    this.update();
+  },
+
+  componentWillUnmount() {
+    this.props.client.removeListener("workerListChanged", this.update);
+  },
+
+  render() {
+    let client = this.props.client;
+    let workers = this.state.workers;
+    return React.createElement("div", null,
+      React.createElement(TargetListComponent, {
+        name: Strings.GetStringFromName("serviceWorkers"),
+        targets: workers.service, client }),
+      React.createElement(TargetListComponent, {
+        name: Strings.GetStringFromName("sharedWorkers"),
+        targets: workers.shared, client }),
+      React.createElement(TargetListComponent, {
+        name: Strings.GetStringFromName("otherWorkers"),
+        targets: workers.other, client })
+    );
+  },
+
+  update() {
+    let client = this.props.client;
+    let workers = this.getInitialState().workers;
+    client.mainRoot.listWorkers(response => {
+      let forms = response.workers;
+      forms.forEach(form => {
+        let worker = {
+          name: form.url,
+          actorID: form.actor
+        };
+        switch (form.type) {
+          case Ci.nsIWorkerDebugger.TYPE_SERVICE:
+            worker.type = "serviceworker";
+            workers.service.push(worker);
+            break;
+          case Ci.nsIWorkerDebugger.TYPE_SHARED:
+            worker.type = "sharedworker";
+            workers.shared.push(worker);
+            break;
+          default:
+            worker.type = "worker";
+            workers.other.push(worker);
+        }
+      });
+      this.setState({ workers });
+    });
+  }
+});
diff --git a/devtools/client/jar.mn b/devtools/client/jar.mn
index 7d70b56..23065e4 100644
--- a/devtools/client/jar.mn
+++ b/devtools/client/jar.mn
@@ -152,16 +152,19 @@ devtools.jar:
     content/shared/widgets/cubic-bezier.css (shared/widgets/cubic-bezier.css)
     content/shared/widgets/mdn-docs-frame.xhtml (shared/widgets/mdn-docs-frame.xhtml)
     content/shared/widgets/mdn-docs.css (shared/widgets/mdn-docs.css)
     content/shared/widgets/filter-frame.xhtml (shared/widgets/filter-frame.xhtml)
     content/shared/widgets/filter-widget.css (shared/widgets/filter-widget.css)
     content/eyedropper/eyedropper.xul (eyedropper/eyedropper.xul)
     content/eyedropper/crosshairs.css (eyedropper/crosshairs.css)
     content/eyedropper/nocursor.css (eyedropper/nocursor.css)
+    content/aboutdebugging/aboutdebugging.xhtml (aboutdebugging/aboutdebugging.xhtml)
+    content/aboutdebugging/aboutdebugging.css (aboutdebugging/aboutdebugging.css)
+    content/aboutdebugging/aboutdebugging.js (aboutdebugging/aboutdebugging.js)
 %   skin devtools classic/1.0 %skin/
 *   skin/themes/common.css (themes/common.css)
 *   skin/themes/dark-theme.css (themes/dark-theme.css)
 *   skin/themes/light-theme.css (themes/light-theme.css)
     skin/themes/images/add.svg (themes/images/add.svg)
     skin/themes/images/filters.svg (themes/images/filters.svg)
     skin/themes/images/filter-swatch.svg (themes/images/filter-swatch.svg)
     skin/themes/images/pseudo-class.svg (themes/images/pseudo-class.svg)
diff --git a/devtools/client/moz.build b/devtools/client/moz.build
index 675ea8f..c0124ab 100644
--- a/devtools/client/moz.build
+++ b/devtools/client/moz.build
@@ -2,16 +2,17 @@
 # vim: set filetype=python:
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
 include('../templates.mozbuild')
 
 DIRS += [
+    'aboutdebugging/components',
     'animationinspector',
     'app-manager',
     'canvasdebugger',
     'commandline',
     'debugger',
     'eyedropper',
     'fontinspector',
     'framework',
