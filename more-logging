# HG changeset patch
# Parent f5acd76febf5646bace610d6522cd863d02849d7
# User Brian Grinstead <bgrinstead@mozilla.com>
Bug 1088861 - Console doesn't respond when debugger is paused at breakpoint

diff --git a/browser/devtools/webconsole/webconsole.js b/browser/devtools/webconsole/webconsole.js
--- a/browser/devtools/webconsole/webconsole.js
+++ b/browser/devtools/webconsole/webconsole.js
@@ -3400,16 +3400,17 @@ JSTerm.prototype = {
     }
 
     let evalOptions = {
       bindObjectActor: aOptions.bindObjectActor,
       frameActor: frameActor,
       selectedNodeActor: aOptions.selectedNodeActor,
     };
 
+    dump("\n\nRequesting eval from frontend: " + aString + "\n\n");
     this.webConsoleClient.evaluateJS(aString, onResult, evalOptions);
     return deferred.promise;
   },
 
   /**
    * Retrieve the FrameActor ID given a frame depth.
    *
    * @param number aFrame
diff --git a/toolkit/devtools/client/dbg-client.jsm b/toolkit/devtools/client/dbg-client.jsm
--- a/toolkit/devtools/client/dbg-client.jsm
+++ b/toolkit/devtools/client/dbg-client.jsm
@@ -683,16 +683,17 @@ DebuggerClient.prototype = {
     if (!this.mainRoot) {
       throw Error("Have not yet received a hello packet from the server.");
     }
     if (!aRequest.to) {
       let type = aRequest.type || "";
       throw Error("'" + type + "' request packet has no destination.");
     }
 
+    dump("\n\ndbg-client: Building a request " + (aRequest.type || "") + "\n\n");
     let request = new Request(aRequest);
     request.format = "json";
     if (aOnResponse) {
       request.on("json-reply", aOnResponse);
     }
 
     this._pendingRequests.push(request);
     this._sendRequests();
@@ -822,16 +823,18 @@ DebuggerClient.prototype = {
 
   /**
    * Send pending requests to any actors that don't already have an
    * active request.
    */
   _sendRequests: function () {
     this._pendingRequests = this._pendingRequests.filter((request) => {
       let dest = request.actor;
+      dump(JSON.stringify(this._activeRequests.get(dest)));
+      dump("\n\n_sendRequests: " + JSON.stringify(request) + "\n\n");
 
       if (this._activeRequests.has(dest)) {
         return true;
       }
 
       this.expectReply(dest, request);
 
       if (request.format === "json") {
diff --git a/toolkit/devtools/server/actors/webconsole.js b/toolkit/devtools/server/actors/webconsole.js
--- a/toolkit/devtools/server/actors/webconsole.js
+++ b/toolkit/devtools/server/actors/webconsole.js
@@ -734,16 +734,17 @@ WebConsoleActor.prototype =
    *
    * @param object aRequest
    *        The JSON request object received from the Web Console client.
    * @return object
    *         The evaluation response packet.
    */
   onEvaluateJS: function WCA_onEvaluateJS(aRequest)
   {
+    dump("\n\nReceived eval from server\n\n");
     let input = aRequest.text;
     let timestamp = Date.now();
 
     let evalOptions = {
       bindObjectActor: aRequest.bindObjectActor,
       frameActor: aRequest.frameActor,
       url: aRequest.url,
       selectedNodeActor: aRequest.selectedNodeActor,
diff --git a/toolkit/devtools/webconsole/client.js b/toolkit/devtools/webconsole/client.js
--- a/toolkit/devtools/webconsole/client.js
+++ b/toolkit/devtools/webconsole/client.js
@@ -116,16 +116,17 @@ WebConsoleClient.prototype = {
       to: this._actor,
       type: "evaluateJS",
       text: aString,
       bindObjectActor: aOptions.bindObjectActor,
       frameActor: aOptions.frameActor,
       url: aOptions.url,
       selectedNodeActor: aOptions.selectedNodeActor,
     };
+    dump("WebConsoleClient is evaluating " + packet.text + "\n\n");
     this._client.request(packet, aOnResponse);
   },
 
   /**
    * Autocomplete a JavaScript expression.
    *
    * @param string aString
    *        The code you want to autocomplete.
