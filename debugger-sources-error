# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  a4500e6defba79befdaa6ea0540390e2a4db2d01
Prevent Handler function DebuggerClient.requester request callback threw an exception: TypeError: gThreadClient is null error in talos

diff --git a/browser/devtools/debugger/debugger-controller.js b/browser/devtools/debugger/debugger-controller.js
--- a/browser/devtools/debugger/debugger-controller.js
+++ b/browser/devtools/debugger/debugger-controller.js
@@ -1214,16 +1214,22 @@ SourceScripts.prototype = {
     // Signal that a new source has been added.
     window.emit(EVENTS.NEW_SOURCE);
   },
 
   /**
    * Callback for the debugger's active thread getSources() method.
    */
   _onSourcesAdded: function(aResponse) {
+    if (!this.activeThread) {
+      let msg = "No active thread";
+      Cu.reportError(msg);
+      dumpn(msg);
+      return;
+    }
     if (aResponse.error) {
       let msg = "Error getting sources: " + aResponse.message;
       Cu.reportError(msg);
       dumpn(msg);
       return;
     }
 
     if (aResponse.sources.length === 0) {
diff --git a/browser/devtools/inspector/inspector-panel.js b/browser/devtools/inspector/inspector-panel.js
--- a/browser/devtools/inspector/inspector-panel.js
+++ b/browser/devtools/inspector/inspector-panel.js
@@ -387,16 +387,20 @@ InspectorPanel.prototype = {
   _selectionCssSelector: null,
 
   /**
    * Set the currently selected node unique css selector.
    * Will store the current target url along with it to allow pre-selection at
    * reload
    */
   set selectionCssSelector(cssSelector = null) {
+    if (this._panelDestroyer) {
+      return;
+    }
+
     this._selectionCssSelector = {
       selector: cssSelector,
       url: this._target.url
     };
   },
 
   /**
    * Get the current selection unique css selector if any, that is, if a node
