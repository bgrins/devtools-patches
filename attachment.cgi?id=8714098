# HG changeset patch
# User Nicolas Chevobbe <chevobbe.nicolas@gmail.com>
# Date 1454256157 -3600
#      Sun Jan 31 17:02:37 2016 +0100
# Node ID 02a103458df6749ab4031bfed36f954e47d849ae
# Parent  08a47f515057f924abd3d83afe74d3ae04cd16c9
Bug 1218089 - Different falsy values being incorrectly set as repeated messages in console.log()

diff --git a/devtools/client/webconsole/console-output.js b/devtools/client/webconsole/console-output.js
--- a/devtools/client/webconsole/console-output.js
+++ b/devtools/client/webconsole/console-output.js
@@ -1084,17 +1084,17 @@ Messages.Extended = function(messagePiec
 
   this._messagePieces = messagePieces;
 
   if ("quoteStrings" in options) {
     this._quoteStrings = options.quoteStrings;
   }
 
   this._repeatID.quoteStrings = this._quoteStrings;
-  this._repeatID.messagePieces = messagePieces + "";
+  this._repeatID.messagePieces = JSON.stringify(messagePieces);
   this._repeatID.actors = new Set(); // using a set to avoid duplicates
 };
 
 Messages.Extended.prototype = Heritage.extend(Messages.Simple.prototype,
 {
   /**
    * The message pieces displayed by this message instance.
    * @private
diff --git a/devtools/client/webconsole/test/browser_repeated_messages_accuracy.js b/devtools/client/webconsole/test/browser_repeated_messages_accuracy.js
--- a/devtools/client/webconsole/test/browser_repeated_messages_accuracy.js
+++ b/devtools/client/webconsole/test/browser_repeated_messages_accuracy.js
@@ -25,16 +25,17 @@ add_task(function* () {
 
   let loaded = loadBrowser(browser);
   BrowserReload();
   yield loaded;
 
   yield testCSSRepeats(hud);
   yield testCSSRepeatsAfterReload(hud);
   yield testConsoleRepeats(hud);
+  yield testConsoleFalsyValues(hud);
 
   Services.prefs.clearUserPref(PREF);
 });
 
 function consoleOpened(hud) {
   // Check that css warnings are not coalesced if they come from different
   // lines.
   info("waiting for 2 css warnings");
@@ -120,8 +121,57 @@ function testConsoleRepeats(hud) {
         name: "'undefined' console.log message",
         text: "undefined",
         category: CATEGORY_WEBDEV,
         repeats: 1,
       },
     ],
   });
 }
+
+function testConsoleFalsyValues(hud) {
+  hud.jsterm.clearOutput(true);
+  hud.jsterm.execute("testConsoleFalsyValues()");
+
+  info("wait for repeats of falsy values with the console API");
+
+  return waitForMessages({
+    webconsole: hud,
+    messages: [
+      {
+        name: "console.log 'NaN' repeated once",
+        category: CATEGORY_WEBDEV,
+        severity: SEVERITY_LOG,
+        repeats: 1,
+      },
+      {
+        name: "console.log 'undefined' repeated once",
+        category: CATEGORY_WEBDEV,
+        severity: SEVERITY_LOG,
+        repeats: 1,
+      },
+      {
+        name: "console.log 'null' repeated once",
+        category: CATEGORY_WEBDEV,
+        severity: SEVERITY_LOG,
+        repeats: 1,
+      },
+      {
+        name: "console.log 'NaN' repeated twice",
+        category: CATEGORY_WEBDEV,
+        severity: SEVERITY_LOG,
+        repeats: 2,
+      },
+      {
+        name: "console.log 'undefined' repeated twice",
+        category: CATEGORY_WEBDEV,
+        severity: SEVERITY_LOG,
+        repeats: 2,
+      },
+      {
+        name: "console.log 'null' repeated twice",
+        category: CATEGORY_WEBDEV,
+        severity: SEVERITY_LOG,
+        repeats: 2,
+      },
+    ],
+  });
+}
diff --git a/devtools/client/webconsole/test/test-repeated-messages.html b/devtools/client/webconsole/test/test-repeated-messages.html
--- a/devtools/client/webconsole/test/test-repeated-messages.html
+++ b/devtools/client/webconsole/test/test-repeated-messages.html
@@ -1,27 +1,42 @@
 <!DOCTYPE HTML>
 <html dir="ltr" xml:lang="en-US" lang="en-US">
   <head>
     <meta charset="utf8">
-    <title>Test for bugs 720180, 800510 and 865288</title>
+    <title>Test for bugs 720180, 800510, 865288 and 1218089</title>
     <script>
       function testConsole() {
         // same line and column number
         for(var i = 0; i < 2; i++) {
           console.log("foo repeat");
         }
-        console.log("foo repeat"); console.error("foo repeat");
+        console.log("foo repeat"); 
+        console.error("foo repeat");
       }
       function testConsoleObjects() {
         for (var i = 0; i < 3; i++) {
           var o = { id: "abba" + i };
           console.log("abba", o);
         }
       }
+      function testConsoleFalsyValues(){
+        [NaN, undefined, null].forEach(function(item, index){
+          console.log(item);
+        });
+        [NaN, NaN].forEach(function(item, index){
+          console.log(item);
+        });
+        [undefined, undefined].forEach(function(item, index){
+          console.log(item);
+        });
+        [null, null].forEach(function(item, index){
+          console.log(item);
+        });
+      }
     </script>
     <style>
       body {
         background-image: foobarz;
       }
       p {
         background-image: foobarz;
       }
