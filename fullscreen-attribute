# HG changeset patch
# Parent c41cd725fd1ef1c7b46e297d7cceaa544d9457af
# User Brian Grinstead <bgrinstead@mozilla.com>
Bug 1000714 - Add brighttitlebarforeground attribute for devedition theme;r=Gijs

diff --git a/browser/base/content/browser-devedition.js b/browser/base/content/browser-devedition.js
--- a/browser/base/content/browser-devedition.js
+++ b/browser/base/content/browser-devedition.js
@@ -81,32 +81,34 @@ let DevEdition = {
     this._toggleStyleSheet(deveditionThemeEnabled);
   },
 
   handleEvent: function(e) {
     if (e.type === "load") {
       this.styleSheet.removeEventListener("load", this);
       gBrowser.tabContainer._positionPinnedTabs();
       ToolbarIconColor.inferFromText();
+      document.documentElement.setAttribute("brighttitlebarforeground", "true");
     }
   },
 
   _toggleStyleSheet: function(deveditionThemeEnabled) {
     if (deveditionThemeEnabled && !this.styleSheet) {
       let styleSheetAttr = `href="${this.styleSheetLocation}" type="text/css"`;
       this.styleSheet = document.createProcessingInstruction(
         'xml-stylesheet', styleSheetAttr);
       this.styleSheet.addEventListener("load", this);
       document.insertBefore(this.styleSheet, document.documentElement);
     } else if (!deveditionThemeEnabled && this.styleSheet) {
       this.styleSheet.removeEventListener("load", this);
       this.styleSheet.remove();
       this.styleSheet = null;
       gBrowser.tabContainer._positionPinnedTabs();
       ToolbarIconColor.inferFromText();
+      document.documentElement.removeAttribute("brighttitlebarforeground");
     }
   },
 
   uninit: function () {
     Services.prefs.removeObserver(this._lwThemePrefName, this);
     Services.prefs.removeObserver(this._prefName, this);
     Services.prefs.removeObserver(this._devtoolsThemePrefName, this);
     Services.obs.removeObserver(this, "lightweight-theme-styling-update", false);
diff --git a/browser/base/content/test/general/browser_devedition.js b/browser/base/content/test/general/browser_devedition.js
--- a/browser/base/content/test/general/browser_devedition.js
+++ b/browser/base/content/test/general/browser_devedition.js
@@ -11,22 +11,17 @@ const PREF_DEVTOOLS_THEME = "devtools.th
 
 registerCleanupFunction(() => {
   // Set preferences back to their original values
   Services.prefs.clearUserPref(PREF_DEVEDITION_THEME);
   Services.prefs.clearUserPref(PREF_LWTHEME);
   Services.prefs.clearUserPref(PREF_DEVTOOLS_THEME);
 });
 
-function test() {
-  waitForExplicitFinish();
-  startTests();
-}
-
-function startTests() {
+add_task(function* startTests() {
   Services.prefs.setCharPref(PREF_DEVTOOLS_THEME, "dark");
 
   info ("Setting browser.devedition.theme.enabled to false.");
   Services.prefs.setBoolPref(PREF_DEVEDITION_THEME, false);
   ok (!DevEdition.styleSheet, "There is no devedition style sheet when the pref is false.");
 
   info ("Setting browser.devedition.theme.enabled to true.");
   Services.prefs.setBoolPref(PREF_DEVEDITION_THEME, true);
@@ -35,26 +30,36 @@ function startTests() {
   info ("Adding a lightweight theme.");
   Services.prefs.setBoolPref(PREF_LWTHEME, true);
   ok (!DevEdition.styleSheet, "The devedition stylesheet has been removed when a lightweight theme is applied.");
 
   info ("Removing a lightweight theme.");
   Services.prefs.setBoolPref(PREF_LWTHEME, false);
   ok (DevEdition.styleSheet, "The devedition stylesheet has been added when a lightweight theme is removed.");
 
+  info ("Waiting for DevEdition.styleSheet load event");
+  yield new Promise((resolve, reject) => {
+    DevEdition.styleSheet.addEventListener("load", function onLoad() {
+      info ("DevEdition.styleSheet load event received");
+      DevEdition.styleSheet.removeEventListener("load", onLoad);
+      resolve();
+    });
+  });
+
+  is (document.documentElement.getAttribute("brighttitlebarforeground"), "true",
+    "The brighttitlebarforeground attribute is set on the window.");
+
   info ("Setting browser.devedition.theme.enabled to false.");
   Services.prefs.setBoolPref(PREF_DEVEDITION_THEME, false);
   ok (!DevEdition.styleSheet, "The devedition stylesheet has been removed.");
+  ok (!document.documentElement.hasAttribute("brighttitlebarforeground"),
+    "The brighttitlebarforeground attribute is not set on the window.");
+});
 
-  testDevtoolsTheme();
-  testLightweightThemePreview();
-  finish();
-}
-
-function testDevtoolsTheme() {
+add_task(function* testDevtoolsTheme() {
   info ("Checking that Australis is shown when the light devtools theme is applied.");
 
   Services.prefs.setBoolPref(PREF_DEVEDITION_THEME, true);
   ok (DevEdition.styleSheet, "The devedition stylesheet exists.");
 
   info ("Checking stylesheet and :root attributes based on devtools theme.");
   Services.prefs.setCharPref(PREF_DEVTOOLS_THEME, "light");
   is (document.documentElement.getAttribute("devtoolstheme"), "light",
@@ -70,30 +75,30 @@ function testDevtoolsTheme() {
   is (document.documentElement.getAttribute("devtoolstheme"), "light",
     "The documentElement has an attribute based on devtools theme.");
   ok (!DevEdition.styleSheet, "The devedition stylesheet has been removed because of light devtools theme.");
 
   Services.prefs.setCharPref(PREF_DEVTOOLS_THEME, "dark");
   is (document.documentElement.getAttribute("devtoolstheme"), "dark",
     "The documentElement has an attribute based on devtools theme.");
   ok (DevEdition.styleSheet, "The devedition stylesheet has been readded because of dark devtools theme.");
-}
+});
 
 function dummyLightweightTheme(id) {
   return {
     id: id,
     name: id,
     headerURL: "http://lwttest.invalid/a.png",
     footerURL: "http://lwttest.invalid/b.png",
     textcolor: "red",
     accentcolor: "blue"
   };
 }
 
-function testLightweightThemePreview() {
+add_task(function* testLightweightThemePreview() {
   let {LightweightThemeManager} = Components.utils.import("resource://gre/modules/LightweightThemeManager.jsm", {});
 
   info ("Turning the pref on, then previewing lightweight themes");
   Services.prefs.setBoolPref(PREF_DEVEDITION_THEME, true);
   ok (DevEdition.styleSheet, "The devedition stylesheet is enabled.");
   LightweightThemeManager.previewTheme(dummyLightweightTheme("preview0"));
   ok (!DevEdition.styleSheet, "The devedition stylesheet is not enabled after a lightweight theme preview.");
   LightweightThemeManager.resetPreview();
@@ -114,9 +119,9 @@ function testLightweightThemePreview() {
 
   info ("Turning the pref on, then previewing the default theme, turning it off and resetting the preview");
   Services.prefs.setBoolPref(PREF_DEVEDITION_THEME, true);
   ok (DevEdition.styleSheet, "The devedition stylesheet is enabled.");
   LightweightThemeManager.previewTheme(dummyLightweightTheme("{972ce4c6-7e08-4474-a285-3208198ce6fd}"));
   ok (DevEdition.styleSheet, "The devedition stylesheet is still enabled after the default theme is applied.");
   LightweightThemeManager.resetPreview();
   ok (DevEdition.styleSheet, "The devedition stylesheet is still enabled after resetting the preview.");
-}
+});
