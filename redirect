# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  e5daa0514aea68fedd729cfe44dc02c3c2042e3b
Bug 1105470 - contentLocation in webconsole.js isn't updated after a redirect

diff --git a/devtools/client/webconsole/webconsole.js b/devtools/client/webconsole/webconsole.js
--- a/devtools/client/webconsole/webconsole.js
+++ b/devtools/client/webconsole/webconsole.js
@@ -1903,16 +1903,17 @@ WebConsoleFrame.prototype = {
    * Handler for page location changes.
    *
    * @param string uri
    *        New page location.
    * @param string title
    *        New page title.
    */
   onLocationChange: function(uri, title) {
+    dump("onLocationChange " + uri + "\n");
     this.contentLocation = uri;
     if (this.owner.onLocationChange) {
       this.owner.onLocationChange(uri, title);
     }
   },
 
   /**
    * Handler for the tabNavigated notification.
@@ -1927,16 +1928,17 @@ WebConsoleFrame.prototype = {
       if (this.persistLog) {
         let marker = new Messages.NavigationMarker(packet, Date.now());
         this.output.addMessage(marker);
       } else {
         this.jsterm.clearOutput();
       }
     }
 
+    dump("tab navigated " + Object.keys(packet) + "\n");
     if (packet.url) {
       this.onLocationChange(packet.url, packet.title);
     }
 
     if (event == "navigate" && !packet.nativeConsoleAPI) {
       this.logWarningAboutReplacedAPI();
     }
   },
diff --git a/devtools/server/actors/webbrowser.js b/devtools/server/actors/webbrowser.js
--- a/devtools/server/actors/webbrowser.js
+++ b/devtools/server/actors/webbrowser.js
@@ -2255,16 +2255,28 @@ DebuggerProgressListener.prototype = {
     if (!this._tabActor.attached) {
       return;
     }
 
     let isStart = aFlag & Ci.nsIWebProgressListener.STATE_START;
     let isStop = aFlag & Ci.nsIWebProgressListener.STATE_STOP;
     let isDocument = aFlag & Ci.nsIWebProgressListener.STATE_IS_DOCUMENT;
     let isWindow = aFlag & Ci.nsIWebProgressListener.STATE_IS_WINDOW;
+    let isRedirect = aFlag & Ci.nsIWebProgressListener.STATE_REDIRECTING;
+
+    // XXX here's a test page:
+    // https://people.mozilla.org/~tvyas/https_302_http.html
+    console.log(
+      "ON STATE CHANGE FOR " + aRequest.URI.spec,
+      "\nisStart: " + !!isStart,
+      "\nisStop: " + !!isStop,
+      "\nisDocument: " + !!isDocument,
+      "\nisWindow: " + !!isWindow,
+      "\nisRedirect: " + !!isRedirect
+    );
 
     // Catch any iframe location change
     if (isDocument && isStop) {
       // Watch document stop to ensure having the new iframe url.
       aProgress.QueryInterface(Ci.nsIDocShell);
       this._tabActor._notifyDocShellsUpdate([aProgress]);
     }
 
