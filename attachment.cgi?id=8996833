# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  86f9bf2552ac05f7eea0da9b715d25e7801ead20
Bug 1479125 - Log when firstChild/lastChild/childNodes/previousSibling/nextSibling are called in browser.xul

diff --git a/dom/base/nsINode.cpp b/dom/base/nsINode.cpp
--- a/dom/base/nsINode.cpp
+++ b/dom/base/nsINode.cpp
@@ -413,16 +413,87 @@ nsINode::GetSelectionRootContent(nsIPres
     if (ShadowRoot* shadowRoot = ShadowRoot::FromNode(content)) {
       content = shadowRoot->GetHost();
     }
   }
 
   return content;
 }
 
+nsIContent*
+nsINode::GetFirstChildWebIDL() const
+{
+  if (mNodeInfo->GetDocument()->GetDocumentURI()->GetSpecOrDefault().EqualsLiteral("chrome://browser/content/browser.xul")) {
+    if (GetFirstChild()) {
+      if (!GetFirstChild()->IsElement()) {
+        printf("GetFirstChildWebIDL returning non-element!\n");
+      } else {
+        printf("GetFirstChildWebIDL returning element at: ");
+        xpc_DumpJSStack(false, false, false);
+      }
+    }
+  }
+  return GetFirstChild();
+}
+nsIContent*
+nsINode::GetLastChildWebIDL() const
+{
+  if (mNodeInfo->GetDocument()->GetDocumentURI()->GetSpecOrDefault().EqualsLiteral("chrome://browser/content/browser.xul")) {
+    if (GetLastChild()) {
+      if (!GetLastChild()->IsElement()) {
+        printf("GetLastChildWebIDL returning non-element!\n");
+      } else {
+        printf("GetLastChildWebIDL returning element at: ");
+        xpc_DumpJSStack(false, false, false);
+      }
+    }
+  }
+  return GetLastChild();
+}
+nsIContent*
+nsINode::GetPreviousSiblingWebIDL() const
+{
+  if (mNodeInfo->GetDocument()->GetDocumentURI()->GetSpecOrDefault().EqualsLiteral("chrome://browser/content/browser.xul")) {
+    if (GetPreviousSibling()) {
+      if (!GetPreviousSibling()->IsElement()) {
+      printf("GetPreviousSiblingWebIDL returning non-element!\n");
+      } else {
+        printf("GetPreviousSiblingWebIDL returning element at: ");
+        xpc_DumpJSStack(false, false, false);
+      }
+    }
+  }
+  return GetPreviousSibling();
+}
+nsIContent*
+nsINode::GetNextSiblingWebIDL() const
+{
+  if (mNodeInfo->GetDocument()->GetDocumentURI()->GetSpecOrDefault().EqualsLiteral("chrome://browser/content/browser.xul")) {
+    if (GetNextSibling()) {
+      if (!GetNextSibling()->IsElement()) {
+      printf("GetNextSiblingWebIDL returning non-element!\n");
+      } else {
+        printf("GetNextSiblingWebIDL returning element at: ");
+        xpc_DumpJSStack(false, false, false);
+      }
+    }
+  }
+  return GetNextSibling();
+}
+
+nsINodeList*
+nsINode::ChildNodesWebIDL()
+{
+  if (mNodeInfo->GetDocument()->GetDocumentURI()->GetSpecOrDefault().EqualsLiteral("chrome://browser/content/browser.xul")) {
+    printf("ChildNodesWebIDL called at: ");
+    xpc_DumpJSStack(false, false, false);
+  }
+  return ChildNodes();
+}
+
 nsINodeList*
 nsINode::ChildNodes()
 {
   nsSlots* slots = Slots();
   if (!slots->mChildNodes) {
     slots->mChildNodes = IsAttr()
       ? new nsAttrChildContentList(this)
       : new nsParentNodeChildContentList(this);
diff --git a/dom/base/nsINode.h b/dom/base/nsINode.h
--- a/dom/base/nsINode.h
+++ b/dom/base/nsINode.h
@@ -1282,21 +1282,23 @@ public:
    * is related to aPresShell, so the result might not be the ancestor of this
    * node. Be aware that if this node and the computed selection limiter are
    * not in same subtree, this returns the root content of the closeset subtree.
    */
   nsIContent* GetSelectionRootContent(nsIPresShell* aPresShell);
 
   nsINodeList* ChildNodes();
 
+  nsINodeList* ChildNodesWebIDL();
+  nsIContent* GetFirstChildWebIDL() const;
   nsIContent* GetFirstChild() const
   {
     return mFirstChild;
   }
-
+  nsIContent* GetLastChildWebIDL() const;
   nsIContent* GetLastChild() const;
 
   /**
    * Implementation is in nsIDocument.h, because it needs to cast from
    * nsIDocument* to nsINode*.
    */
   nsIDocument* GetOwnerDocument() const;
 
@@ -1373,17 +1375,19 @@ public:
   {
     nsAutoString defaultNamespace;
     LookupNamespaceURI(EmptyString(), defaultNamespace);
     return aNamespaceURI.Equals(defaultNamespace);
   }
   void LookupNamespaceURI(const nsAString& aNamespacePrefix,
                           nsAString& aNamespaceURI);
 
+  nsIContent* GetNextSiblingWebIDL() const;
   nsIContent* GetNextSibling() const { return mNextSibling; }
+  nsIContent* GetPreviousSiblingWebIDL() const;
   nsIContent* GetPreviousSibling() const;
 
   /**
    * Get the next node in the pre-order tree traversal of the DOM.  If
    * aRoot is non-null, then it must be an ancestor of |this|
    * (possibly equal to |this|) and only nodes that are descendants of
    * aRoot, not including aRoot itself, will be returned.  Returns
    * null if there are no more nodes to traverse.
diff --git a/dom/webidl/Node.webidl b/dom/webidl/Node.webidl
--- a/dom/webidl/Node.webidl
+++ b/dom/webidl/Node.webidl
@@ -41,25 +41,25 @@ interface Node : EventTarget {
   [Pure]
   Node getRootNode(optional GetRootNodeOptions options);
   [Pure]
   readonly attribute Node? parentNode;
   [Pure]
   readonly attribute Element? parentElement;
   [Pure]
   boolean hasChildNodes();
-  [SameObject]
+  [SameObject, BinaryName="childNodesWebIDL"]
   readonly attribute NodeList childNodes;
-  [Pure]
+  [Pure, BinaryName="firstChildWebIDL"]
   readonly attribute Node? firstChild;
-  [Pure]
+  [Pure, BinaryName="lastChildWebIDL"]
   readonly attribute Node? lastChild;
-  [Pure]
+  [Pure, BinaryName="previousSiblingWebIDL"]
   readonly attribute Node? previousSibling;
-  [Pure]
+  [Pure, BinaryName="nextSiblingWebIDL"]
   readonly attribute Node? nextSibling;
 
   [CEReactions, SetterThrows, Pure]
            attribute DOMString? nodeValue;
   [CEReactions, SetterThrows, GetterCanOOM,
    SetterNeedsSubjectPrincipal=NonSystem, Pure]
            attribute DOMString? textContent;
   // These DOM methods cannot be accessed by UA Widget scripts
diff --git a/taskcluster/ci/test/mochitest.yml b/taskcluster/ci/test/mochitest.yml
--- a/taskcluster/ci/test/mochitest.yml
+++ b/taskcluster/ci/test/mochitest.yml
@@ -135,17 +135,21 @@ mochitest-browser-chrome:
 browser-instrumentation:
     description: "Extra instrumentation for a browser-chrome run (XUL, XBL, etc)"
     suite: mochitest/browser-chrome-instrumentation
     treeherder-symbol: M(inst)
     loopback-video: true
     tier: 3
     run-on-projects:
         by-test-platform:
-            windows.*-nightly/.*: ["mozilla-central"]
+            # We don't want debug, pgo, devedition or nightly builds
+            windows7-32/opt: ['mozilla-central', 'integration']
+            windows10-64/opt: ['mozilla-central', 'integration']
+            linux64/opt: ['mozilla-central', 'integration']
+            macosx64/opt: ['mozilla-central', 'integration']
             default: []
     max-run-time: 14400
     mozharness:
         mochitest-flavor: browser
     allow-software-gl-layers: false
 
 browser-screenshots:
     description: "Browser Screenshots"
diff --git a/taskcluster/ci/test/test-platforms.yml b/taskcluster/ci/test/test-platforms.yml
--- a/taskcluster/ci/test/test-platforms.yml
+++ b/taskcluster/ci/test/test-platforms.yml
@@ -43,40 +43,43 @@ linux64/debug:
         - mochitest-headless
 linux64/opt:
     build-platform: linux64/opt
     test-sets:
         - common-tests
         - web-platform-tests
         - opt-only-tests
         - desktop-screenshot-capture
+        - desktop-instrumentation
         - talos
         - awsy
         - mochitest-headless
         - linux-talos-flex
         - raptor-firefox
         - raptor-chrome
         - raptor-fetch-firefox
         - raptor-fetch-chrome
 linux64-nightly/opt:
     build-platform: linux64-nightly/opt
     test-sets:
         - common-tests
         - web-platform-tests
         - opt-only-tests
         - desktop-screenshot-capture
+        - desktop-instrumentation
         - awsy
         - linux-talos-profiling
 linux64-devedition/opt:
     build-platform: linux64-devedition-nightly/opt
     test-sets:
         - common-tests
         - web-platform-tests
         - opt-only-tests
         - desktop-screenshot-capture
+        - desktop-instrumentation
 
 # TODO: use 'pgo' and 'asan' labels here, instead of -pgo/opt
 linux64-pgo/opt:
     build-platform: linux64-pgo/opt
     test-sets:
         - common-tests
         - web-platform-tests
         - talos
@@ -139,62 +142,68 @@ windows7-32-msvc/debug:
         - windows-reftest-gpu
         - windows-tests
 
 windows7-32/opt:
     build-platform: win32/opt
     test-sets:
         - awsy
         - desktop-screenshot-capture
+        - desktop-instrumentation
         - windows-reftest-gpu
         - windows-talos
         - windows-tests
         - raptor-firefox
         - raptor-chrome
 
 windows7-32-pgo/opt:
     build-platform: win32-pgo/opt
     test-sets:
         - awsy
         - desktop-screenshot-capture
+        - desktop-instrumentation
         - windows-reftest-gpu
         - windows-talos
         - windows-tests
         - raptor-firefox
 
 windows7-32-nightly/opt:
     build-platform: win32-nightly/opt
     test-sets:
         - awsy
         - desktop-screenshot-capture
+        - desktop-instrumentation
         - windows-reftest-gpu
         - windows-tests
 
 windows7-32-devedition/opt:
     build-platform: win32-devedition-nightly/opt
     test-sets:
         - desktop-screenshot-capture
+        - desktop-instrumentation
         - windows-reftest-gpu
         - windows-tests
 
 windows7-32-msvc/opt:
     build-platform: win32-msvc/opt
     test-sets:
         - awsy
         - desktop-screenshot-capture
+        - desktop-instrumentation
         - windows-reftest-gpu
         - windows-talos
         - windows-tests
 
 # win64
 windows10-64-ccov/debug:
     build-platform: win64-ccov/debug
     test-sets:
         - awsy
         - desktop-screenshot-capture
+        - desktop-instrumentation
         - windows-reftest-gpu
         - windows-talos
         - windows-tests
 
 windows10-64/debug:
     build-platform: win64/debug
     test-sets:
         - windows-tests
@@ -206,27 +215,29 @@ windows10-64-msvc/debug:
         - windows-tests
         - mochitest-headless
 
 windows10-64/opt:
     build-platform: win64/opt
     test-sets:
         - awsy
         - desktop-screenshot-capture
+        - desktop-instrumentation
         - windows-talos
         - windows-tests
         - mochitest-headless
         - raptor-firefox
         - raptor-chrome
 
 windows10-64-pgo/opt:
     build-platform: win64-pgo/opt
     test-sets:
         - awsy
         - desktop-screenshot-capture
+        - desktop-instrumentation
         - windows-talos
         - windows-tests
         - raptor-firefox
 
 windows10-64-nightly/opt:
     build-platform: win64-nightly/opt
     test-sets:
         - awsy
@@ -234,28 +245,30 @@ windows10-64-nightly/opt:
         - desktop-instrumentation
         - windows-tests
         - windows-talos-profiling
 
 windows10-64-devedition/opt:
     build-platform: win64-devedition-nightly/opt
     test-sets:
         - desktop-screenshot-capture
+        - desktop-instrumentation
         - windows-tests
 
 windows10-64-asan/opt:
     build-platform: win64-asan/opt
     test-sets:
         - common-tests
 
 windows10-64-msvc/opt:
     build-platform: win64-msvc/opt
     test-sets:
         - awsy
         - desktop-screenshot-capture
+        - desktop-instrumentation
         - windows-talos
         - windows-tests
         - mochitest-headless
 
 # QR builds just run a subset right now.
 windows10-64-qr/debug:
     build-platform: win64/debug
     test-sets:
@@ -278,16 +291,17 @@ macosx64/debug:
         - macosx64-tests
 
 macosx64/opt:
     build-platform: macosx64/opt
     test-sets:
         - macosx64-talos
         - macosx64-tests
         - desktop-screenshot-capture
+        - desktop-instrumentation
         - awsy
         - raptor-firefox
         - raptor-chrome
 
 macosx64-nightly/opt:
     build-platform: macosx64-nightly/opt
     test-sets:
         - macosx64-tests
diff --git a/testing/mochitest/runtests.py b/testing/mochitest/runtests.py
--- a/testing/mochitest/runtests.py
+++ b/testing/mochitest/runtests.py
@@ -230,17 +230,17 @@ class MessageLogger(object):
             messages.append(message)
 
         return messages
 
     def process_message(self, message):
         """Processes a structured message. Takes into account buffering, errors, ..."""
         # Activation/deactivating message buffering from the JS side
         if message['action'] == 'buffering_on':
-            self.buffering = True
+            self.buffering = False
             return
         if message['action'] == 'buffering_off':
             self.buffering = False
             return
 
         # Error detection also supports "raw" errors (in log messages) because some tests
         # manually dump 'TEST-UNEXPECTED-FAIL'.
         if ('expected' in message or (message['action'] == 'log' and message[
@@ -271,17 +271,17 @@ class MessageLogger(object):
         if message['action'] == 'test_end':
             self.buffered_messages = []
             self.restore_buffering = self.restore_buffering or self.buffering
             self.buffering = False
 
         if message['action'] == 'test_start':
             if self.restore_buffering:
                 self.restore_buffering = False
-                self.buffering = True
+                self.buffering = False
 
     def write(self, line):
         messages = self.parse_line(line)
         for message in messages:
             self.process_message(message)
         return messages
 
     def flush(self):
