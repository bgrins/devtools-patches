
# HG changeset patch
# User Julian Descottes <jdescottes@mozilla.com>
# Date 1467985602 -7200
# Node ID dce30a6a763a45a640bd141a50e8ad6b28901ec8
# Parent  83b5bcb90153d3b8b617b3de7733e43a16f7113c
Bug 1285206 - Enable xul panel for some devtools tooltips;r=bgrins

Set useXulWrapper to true for markup view image previews and rule view
tooltips.

Also slightly changed the logic in HTMLTooltip.js so that useXulWrapper is only
true when we are in a XUL context.

MozReview-Commit-ID: 9EkQYLLAn7C

diff --git a/devtools/client/inspector/markup/markup.js b/devtools/client/inspector/markup/markup.js
--- a/devtools/client/inspector/markup/markup.js
+++ b/devtools/client/inspector/markup/markup.js
@@ -167,17 +167,17 @@ MarkupView.prototype = {
   CONTAINER_FLASHING_DURATION: 500,
 
   _selectedContainer: null,
 
   _initTooltips: function () {
     this.eventDetailsTooltip = new HTMLTooltip(this._inspector.toolbox,
       {type: "arrow"});
     this.imagePreviewTooltip = new HTMLTooltip(this._inspector.toolbox,
-      {type: "arrow"});
+      {type: "arrow", useXulWrapper: "true"});
     this._enableImagePreviewTooltip();
   },
 
   _enableImagePreviewTooltip: function () {
     this.imagePreviewTooltip.startTogglingOnHover(this._elt,
       this._isImagePreviewTarget);
   },
 
diff --git a/devtools/client/inspector/shared/style-inspector-overlays.js b/devtools/client/inspector/shared/style-inspector-overlays.js
--- a/devtools/client/inspector/shared/style-inspector-overlays.js
+++ b/devtools/client/inspector/shared/style-inspector-overlays.js
@@ -275,17 +275,18 @@ TooltipsOverlay.prototype = {
     if (this._isStarted || this._isDestroyed) {
       return;
     }
 
     let panelDoc = this.view.inspector.panelDoc;
 
     // Image, fonts, ... preview tooltip
     this.previewTooltip = new HTMLTooltip(this.view.inspector.toolbox, {
-      type: "arrow"
+      type: "arrow",
+      useXulWrapper: true
     });
     this.previewTooltip.startTogglingOnHover(this.view.element,
       this._onPreviewTooltipTargetHover.bind(this));
 
     // MDN CSS help tooltip
     this.cssDocs = new CssDocsTooltip(panelDoc);
 
     if (this.isRuleView) {
diff --git a/devtools/client/shared/widgets/HTMLTooltip.js b/devtools/client/shared/widgets/HTMLTooltip.js
--- a/devtools/client/shared/widgets/HTMLTooltip.js
+++ b/devtools/client/shared/widgets/HTMLTooltip.js
@@ -206,17 +206,17 @@ function HTMLTooltip(toolbox, {
     stylesheet = "",
   } = {}) {
   EventEmitter.decorate(this);
 
   this.doc = toolbox.doc;
   this.type = type;
   this.autofocus = autofocus;
   this.consumeOutsideClicks = consumeOutsideClicks;
-  this.useXulWrapper = useXulWrapper;
+  this.useXulWrapper = this._isXUL() && useXulWrapper;
 
   this._position = null;
 
   // Use the topmost window to listen for click events to close the tooltip
   this.topWindow = this.doc.defaultView.top;
 
   this._onClick = this._onClick.bind(this);
 
@@ -224,17 +224,17 @@ function HTMLTooltip(toolbox, {
   this.startTogglingOnHover = this._toggle.start.bind(this._toggle);
   this.stopTogglingOnHover = this._toggle.stop.bind(this._toggle);
 
   this.container = this._createContainer();
 
   if (stylesheet) {
     this._applyStylesheet(stylesheet);
   }
-  if (this._isXUL() && this.useXulWrapper) {
+  if (this.useXulWrapper) {
     // When using a XUL panel as the wrapper, the actual markup for the tooltip is as
     // follows :
     // <panel> <!-- XUL panel used to position the tooltip anywhere on screen -->
     //   <div> <!-- div wrapper used to isolate the tooltip container -->
     //     <div> <! the actual tooltip.container element -->
     this.xulPanelWrapper = this._createXulPanelWrapper();
     let inner = this.doc.createElementNS(XHTML_NS, "div");
     inner.classList.add("tooltip-xul-wrapper-inner");
