
# HG changeset patch
# User Phil Ringnalda <philringnalda@gmail.com>
# Date 1485741514 28800
# Node ID 33d83c764c98862792da2e300949a71ac88b0a2d
# Parent  2a7e1f13703deb28753794b60885b4bf0bb10368
central-as-beta: unset EARLY_BETA_OR_EARLIER, force SM builds, twiddle mozharness to get PGO builds, beta update channel, and beta mozconfigs

MozReview-Commit-ID: G4wKzZpISqU

diff --git a/build/defines.sh b/build/defines.sh
--- a/build/defines.sh
+++ b/build/defines.sh
@@ -1,3 +1,3 @@
 # Define indicating that this build is prior to one of the early betas. To be
 # unset mid-way through the beta cycle.
-EARLY_BETA_OR_EARLIER=1
+EARLY_BETA_OR_EARLIER=
diff --git a/js/src/moz.build b/js/src/moz.build
--- a/js/src/moz.build
+++ b/js/src/moz.build
@@ -1,14 +1,16 @@
 # -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
 # vim: set filetype=python:
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
+# Dummy change to js/src to get SM builds
+
 # Directory metadata
 component_engine = ('Core', 'JavaScript Engine')
 component_gc     = ('Core', 'JavaScript: GC')
 component_intl   = ('Core', 'JavaScript: Internationalization API')
 component_jit    = ('Core', 'JavaScript Engine: JIT')
 component_stl    = ('Core', 'JavaScript: Standard Library')
 
 FILES_PER_UNIFIED_FILE = 6
diff --git a/testing/mozharness/configs/builds/branch_specifics.py b/testing/mozharness/configs/builds/branch_specifics.py
--- a/testing/mozharness/configs/builds/branch_specifics.py
+++ b/testing/mozharness/configs/builds/branch_specifics.py
@@ -221,16 +221,80 @@ config = {
         'to_tinderbox_dated': False,
         'include_post_upload_builddir': True,
         'release_to_try_builds': True,
         'stage_server': 'upload.trybld.productdelivery.prod.mozaws.net',
         'stage_username': 'trybld',
         'stage_ssh_key': 'trybld_dsa',
         'branch_supports_uploadsymbols': False,
         'use_clobberer': False,
+        'update_channel': 'beta',
+        'branch_uses_per_checkin_strategy': True,
+        'platform_overrides': {
+            'linux': {
+                'src_mozconfig': 'browser/config/mozconfigs/linux32/beta',
+            },
+            'linux64': {
+                'src_mozconfig': 'browser/config/mozconfigs/linux64/beta',
+            },
+            'macosx64': {
+                'src_mozconfig': 'browser/config/mozconfigs/macosx64/beta',
+            },
+            'win32': {
+                'src_mozconfig': 'browser/config/mozconfigs/win32/beta',
+            },
+            'win64': {
+                'src_mozconfig': 'browser/config/mozconfigs/win64/beta',
+            },
+            'linux-debug': {
+                'update_channel': 'default',
+            },
+            'linux64-debug': {
+                'update_channel': 'default',
+            },
+            'linux64-asan-debug': {
+                'update_channel': 'default',
+            },
+            'linux64-asan': {
+                'update_channel': 'default',
+            },
+            'linux64-st-an-debug': {
+                'update_channel': 'default',
+            },
+            'linux64-st-an': {
+                'update_channel': 'default',
+            },
+            'linux64-add-on-devel': {
+                'update_channel': 'default',
+            },
+            'macosx64-debug': {
+                'update_channel': 'default',
+            },
+            'macosx64-st-an': {
+                'update_channel': 'default',
+            },
+            'macosx64-st-an-debug': {
+                'update_channel': 'default',
+            },
+            'macosx64-add-on-devel': {
+                'update_channel': 'default',
+            },
+            'win32-debug': {
+                'update_channel': 'default',
+            },
+            'win32-add-on-devel': {
+                'update_channel': 'default',
+            },
+            'win64-debug': {
+                'update_channel': 'default',
+            },
+            'win64-add-on-devel': {
+                'update_channel': 'default',
+            },
+        },
     },
 
     ### project branches
     #'fx-team': {},   #Bug 1296396
     'gum': {
         'branch_uses_per_checkin_strategy': True,
         'stage_server': 'upload.ffxbld.productdelivery.prod.mozaws.net',
     },
diff --git a/testing/mozharness/mozharness/mozilla/building/buildbase.py b/testing/mozharness/mozharness/mozilla/building/buildbase.py
--- a/testing/mozharness/mozharness/mozilla/building/buildbase.py
+++ b/testing/mozharness/mozharness/mozilla/building/buildbase.py
@@ -1654,17 +1654,17 @@ or run without that action (ie: --no-{ac
         base_work_dir = dirs['base_work_dir']
         objdir = dirs['abs_obj_dir']
         branch = self.branch
 
         # Building a nightly with the try repository fails because a
         # config-file does not exist for try. Default to mozilla-central
         # settings (arbitrarily).
         if branch == 'try':
-            branch = 'mozilla-central'
+            branch = 'mozilla-beta'
 
         # Some android versions share the same .json config - if
         # multi_locale_config_platform is set, use that the .json name;
         # otherwise, use the buildbot platform.
         default_platform = self.buildbot_config['properties'].get('platform',
                                                                   'android')
 
         multi_config_pf = self.config.get('multi_locale_config_platform',
@@ -2094,17 +2094,17 @@ or run without that action (ie: --no-{ac
             return
         tests_url = self.query_buildbot_property('testsUrl')
         # Contains the url to a manifest describing the test packages required
         # for each unittest harness.
         # For the moment this property is only set on desktop builds. Android
         # builds find the packages manifest based on the upload
         # directory of the installer.
         test_packages_url = self.query_buildbot_property('testPackagesUrl')
-        pgo_build = c.get('pgo_build', False) or self._compile_against_pgo()
+        pgo_build = False
 
         # these cmds are sent to mach through env vars. We won't know the
         # packageUrl or testsUrl until mach runs upload target so we let mach
         #  fill in the rest of the cmd
         sendchange_props = {
             'buildid': self.query_buildid(),
             'builduid': self.query_builduid(),
             'pgo_build': pgo_build,

