# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  4ed6750e141198270f6fb6ceca8926d4f1790d0d

diff --git a/toolkit/themes/linux/global/scrollbox.css b/toolkit/themes/linux/global/scrollbox.css
--- a/toolkit/themes/linux/global/scrollbox.css
+++ b/toolkit/themes/linux/global/scrollbox.css
@@ -26,14 +26,14 @@ arrowscrollbox[notoverflowing=true]::par
 .scrollbutton-down[orient="horizontal"] > .toolbarbutton-icon {
   -moz-appearance: button-arrow-next;
 }
 
 :-moz-any(.scrollbutton-up, .scrollbutton-down) > .toolbarbutton-text {
   display: none;
 }
 
-arrowscrollbox:not([clicktoscroll="true"]) > .scrollbutton-up,
-arrowscrollbox:not([clicktoscroll="true"]) > .scrollbutton-down {
+arrowscrollbox:not([clicktoscroll="true"])::part(scrollbutton-up),
+arrowscrollbox:not([clicktoscroll="true"])::part(scrollbutton-down) {
   -moz-appearance: none;
   border: 1px solid ThreeDShadow;
   padding: 0;
 }
diff --git a/toolkit/themes/osx/global/global.css b/toolkit/themes/osx/global/global.css
--- a/toolkit/themes/osx/global/global.css
+++ b/toolkit/themes/osx/global/global.css
@@ -214,47 +214,50 @@ notification > hbox > button > .button-b
 popupnotificationcontent {
   margin-top: .5em;
 }
 
 %include ../../shared/notification-popup.inc.css
 
 /* autorepeatbuttons in menus */
 
-.popup-internal-box > .scrollbutton-up,
-.popup-internal-box > .scrollbutton-down {
+.popup-internal-box::part(scrollbutton-up),
+.popup-internal-box::part(scrollbutton-down) {
   height: 15px;
   position: relative;
   list-style-image: none;
   /* Here we're using a little magic.
    * The arrow button is supposed to overlay the scrollbox, blocking
    * everything under it from reaching the screen. However, the menu background
    * is slightly transparent, so how can we block something completely without
    * messing up the transparency? It's easy: The native theming of the
    * "menuitem" appearance uses CGContextClearRect before drawing, which
    * clears everything under it.
    * Without help from native theming this effect wouldn't be achievable.
    */
   -moz-appearance: menuitem;
 }
 
-.popup-internal-box > .scrollbutton-up {
+.popup-internal-box::part(scrollbutton-up) {
   padding-top: 1px; /* 4px padding-top from the .popup-internal-box. */
   margin-bottom: -15px;
 }
 
-.popup-internal-box > .scrollbutton-up > .toolbarbutton-icon {
+/* XXX */
+.popup-internal-box::part(scrollbutton-up) > .toolbarbutton-icon {
   -moz-appearance: button-arrow-up;
 }
 
-.popup-internal-box > .scrollbutton-down {
+.popup-internal-box::part(scrollbutton-down) {
   padding-top: 5px;
   margin-top: -15px;
 }
 
-.popup-internal-box > .scrollbutton-down > .toolbarbutton-icon {
+/* XXX */
+.popup-internal-box::part(scrollbutton-down) > .toolbarbutton-icon {
   -moz-appearance: button-arrow-down;
 }
 
-.popup-internal-box > .scrollbutton-up[disabled="true"],
-.popup-internal-box > .scrollbutton-down[disabled="true"] {
+/* XXX */
+.popup-internal-box[scrolledtostart=true]::part(scrollbutton-up),
+.popup-internal-box[scrolledtoend=true]::part(scrollbutton-down) {
   visibility: collapse;
 }
diff --git a/toolkit/themes/windows/global/scrollbox.css b/toolkit/themes/windows/global/scrollbox.css
--- a/toolkit/themes/windows/global/scrollbox.css
+++ b/toolkit/themes/windows/global/scrollbox.css
@@ -73,24 +73,24 @@ arrowscrollbox[notoverflowing=true]::par
   -moz-box-align: center;
   -moz-box-pack: center;
   margin-top: 1px;
   margin-bottom: 2px;
   margin-inline-start: 1px;
   margin-inline-end: 2px;
 }
 
-arrowscrollbox:not([clicktoscroll="true"]) > .scrollbutton-up,
-arrowscrollbox:not([clicktoscroll="true"]) > .scrollbutton-down {
+arrowscrollbox:not([clicktoscroll="true"])::part(scrollbutton-up),
+arrowscrollbox:not([clicktoscroll="true"])::part(scrollbutton-down) {
   -moz-appearance: none;
   border: 1px solid transparent;
   padding: 1px;
 }
 
-arrowscrollbox:not([clicktoscroll="true"]) > .scrollbutton-up:not([disabled="true"]):hover,
-arrowscrollbox:not([clicktoscroll="true"]) > .scrollbutton-down:not([disabled="true"]):hover {
+arrowscrollbox:not([clicktoscroll="true"]):not([scrolledtostart="true"])::part(scrollbutton-up):hover,
+arrowscrollbox:not([clicktoscroll="true"]):not([scrolledtoend="true"])::part(scrollbutton-down):hover {
   margin: 1px;
   border: 1px inset ThreeDFace;
   padding-top: 2px;
   padding-bottom: 1px;
   padding-inline-start: 2px;
   padding-inline-end: 1px;
 }
