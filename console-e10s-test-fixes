# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  c1edd9a806f077e60a4c00450b98ac0bf1a99a11

diff --git a/devtools/client/webconsole/test/browser_console_dead_objects.js b/devtools/client/webconsole/test/browser_console_dead_objects.js
--- a/devtools/client/webconsole/test/browser_console_dead_objects.js
+++ b/devtools/client/webconsole/test/browser_console_dead_objects.js
@@ -22,43 +22,50 @@ function test() {
   registerCleanupFunction(() => {
     Services.prefs.clearUserPref("devtools.chrome.enabled");
   });
 
   Task.spawn(runner).then(finishTest);
 
   function* runner() {
     Services.prefs.setBoolPref("devtools.chrome.enabled", true);
-    yield loadTab(TEST_URI);
+    let tab = yield loadTab(TEST_URI);
 
     info("open the browser console");
 
     hud = yield HUDService.toggleBrowserConsole();
-    ok(hud, "browser console opened");
-
+    // hud = yield openConsole();
     let jsterm = hud.jsterm;
 
     jsterm.clearOutput();
 
+    // yield jsterm.execute("var win = window.open('about:blank','blank');");
+    // gBrowser.selectedTab = tab;
+    // // gBrowser.removeCurrentTab();
+    // yield new Promise(r=>r);
+    // yield jsterm.execute("win.close();");
+    // let msg = yield jsterm.execute("win;");
+
     // Add the reference to the content document.
     yield jsterm.execute("Cu = Components.utils;" +
                   "Cu.import('resource://gre/modules/Services.jsm');" +
                   "chromeWindow = Services.wm.getMostRecentWindow('" +
-                  "navigator:browser');" +
-                  "foobarzTezt = chromeWindow.content.document;" +
-                  "delete chromeWindow");
+                  "navigator:browser'); foo = gBrowser.selectedBrowser;")// +
+                  // "foobarzTezt = chromeWindow.content.document;" +
+                  // "delete chromeWindow");
 
     gBrowser.removeCurrentTab();
 
-    let msg = yield jsterm.execute("foobarzTezt");
+    let msg = yield jsterm.execute("chromeWindow");
 
+    yield new Promise(r=>r);
     isnot(hud.outputNode.textContent.indexOf("[object DeadObject]"), -1,
           "dead object found");
 
-    jsterm.setInputValue("foobarzTezt");
+    jsterm.setInputValue("win");
 
     for (let c of ".hello") {
       EventUtils.synthesizeKey(c, {}, hud.iframeWindow);
     }
 
     yield jsterm.execute();
 
     isnot(hud.outputNode.textContent.indexOf("can't access dead object"), -1,
@@ -74,13 +81,15 @@ function test() {
 
     executeSoon(() => {
       EventUtils.synthesizeMouseAtCenter(clickable, {}, hud.iframeWindow);
     });
 
     yield jsterm.once("variablesview-fetched");
     ok(true, "variables view fetched");
 
-    msg = yield jsterm.execute("delete window.foobarzTezt; 2013-26");
+    msg = yield jsterm.execute("delete window.win; 2013-26");
+    // msg = yield jsterm.execute("delete window.foobarzTezt; 2013-26");
 
     isnot(msg.textContent.indexOf("1987"), -1, "result message found");
+    yield new Promise(r=>r)
   }
 }
