# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  e2e130df4e969b6dea71288ee6c617c9bf0e2a98

diff --git a/toolkit/content/tests/chrome/test_dialogfocus.xhtml b/toolkit/content/tests/chrome/test_dialogfocus.xhtml
--- a/toolkit/content/tests/chrome/test_dialogfocus.xhtml
+++ b/toolkit/content/tests/chrome/test_dialogfocus.xhtml
@@ -62,17 +62,16 @@ function runTest()
   var win = docShell.rootTreeItem.domWindow.openDialog(filename, "_new", "chrome,dialog", step);
 
   function checkDialogFocus(event)
   {
     info(`checkDialogFocus()`);
     let match = false;
     let activeElement = win.document.activeElement;
     let dialog = win.document.getElementById("dialog-focus");
-
     if (activeElement == dialog) {
       let shadowActiveElement =
         dialog.shadowRoot.activeElement;
       if (shadowActiveElement) {
         activeElement = shadowActiveElement;
       }
     }
     // if full keyboard access is not on, just skip the tests
@@ -95,29 +94,29 @@ function runTest()
       info("match = " + match);
     }
 
     win.removeEventListener("focus", checkDialogFocusEvent, true);
     dialog.shadowRoot.removeEventListener(
       "focus", checkDialogFocusEvent, true);
     ok(match, "focus step " + step);
 
-    win.close();
+    // synthesizeKey("KEY_Escape");
     SimpleTest.waitForFocus(runTest, window);
   }
 
   let finalCheckInitiated = false;
   function checkDialogFocusEvent(event) {
     // Delay to have time for focus/blur to occur.
     if (expectedFocus == "root") {
       if (!finalCheckInitiated) {
         setTimeout(() => {
           is(win.document.activeElement, win.document.documentElement,
              "No other focus but root");
-          win.close();
+          // win.close();
           SimpleTest.waitForFocus(runTest, window);
         }, 0);
         finalCheckInitiated = true;
       }
     } else {
       checkDialogFocus(event);
     }
   }
