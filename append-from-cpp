# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  b72102b34c04f9b66bd79f359a16cd8f0563c2f1

diff --git a/dom/chrome-webidl/XULMenuElement.webidl b/dom/chrome-webidl/XULMenuElement.webidl
--- a/dom/chrome-webidl/XULMenuElement.webidl
+++ b/dom/chrome-webidl/XULMenuElement.webidl
@@ -9,9 +9,12 @@
 interface XULMenuElement : XULElement {
 
   attribute Element? activeChild;
 
   boolean handleKeyPress(KeyboardEvent keyEvent);
 
   readonly attribute boolean openedWithKey;
 
+  [Throws]
+  void appendMenuDOM();
+
 };
diff --git a/dom/xul/XULMenuElement.cpp b/dom/xul/XULMenuElement.cpp
--- a/dom/xul/XULMenuElement.cpp
+++ b/dom/xul/XULMenuElement.cpp
@@ -91,10 +91,44 @@ bool XULMenuElement::OpenedWithKey() {
     if (menubar) {
       return menubar->IsActiveByKeyboard();
     }
     frame = frame->GetParent();
   }
   return false;
 }
 
+void XULMenuElement::AppendMenuDOM(ErrorResult& aErr) {
+  printf("brian AppendMenuDOM brian\n");
+  // AutoCalledByJSRestore calledByJSRestorer(*this);
+  // mCalledByJS = true;
+  // SetStartBefore(aNode, aErr);
+  // DOMParser parser = DOMParser::CreateWithoutGlobal(aErr);
+  // parser->
+  // MOZ_DBG(parser);
+
+  // nsTArray<int> numbers;
+  // MOZ_DBG(numbers) = { 789 };
+  // MOZ_DBG(numbers)
+
+}
+
+// bool XULMenuElement::NeedsEagerRender() {
+//   printf("NeedsEagerRender\n");
+
+//   // nsIContent* parent = tooltip->GetParent();
+//   // if (parent) {
+//   //   nsMenuFrame* menu = do_QueryFrame(parent->GetPrimaryFrame());
+//   //   if (menu) {
+//   //     NS_WARNING("Menu cannot be used as a tooltip");
+//   //     return NS_ERROR_FAILURE;
+//   //   }
+//   // }
+
+//   // nsIContent* parent = GetParent();
+//   // nsMenuFrame* menu = do_QueryFrame(parent->GetPrimaryFrame());
+//   // if (menu) {
+
+//   // return false;
+// }
+
 }  // namespace dom
 }  // namespace mozilla
diff --git a/dom/xul/XULMenuElement.h b/dom/xul/XULMenuElement.h
--- a/dom/xul/XULMenuElement.h
+++ b/dom/xul/XULMenuElement.h
@@ -18,16 +18,17 @@ class XULMenuElement final : public nsXU
  public:
   explicit XULMenuElement(already_AddRefed<mozilla::dom::NodeInfo>&& aNodeInfo)
       : nsXULElement(std::move(aNodeInfo)) {}
 
   MOZ_CAN_RUN_SCRIPT already_AddRefed<Element> GetActiveChild();
   MOZ_CAN_RUN_SCRIPT void SetActiveChild(Element* arg);
   MOZ_CAN_RUN_SCRIPT bool HandleKeyPress(KeyboardEvent& keyEvent);
   MOZ_CAN_RUN_SCRIPT bool OpenedWithKey();
+  MOZ_CAN_RUN_SCRIPT void AppendMenuDOM(ErrorResult& aErr);
 
  private:
   virtual ~XULMenuElement() {}
   JSObject* WrapNode(JSContext* aCx, JS::Handle<JSObject*> aGivenProto) final;
 
   nsIFrame* GetFrame();
 };
 
diff --git a/toolkit/content/widgets/menu.js b/toolkit/content/widgets/menu.js
--- a/toolkit/content/widgets/menu.js
+++ b/toolkit/content/widgets/menu.js
@@ -161,19 +161,19 @@ class MozMenu extends MozMenuBaseMixin(M
       ".menubar-left": "src=image",
       ".menu-iconic-icon": "src=image,triggeringprincipal=iconloadingprincipal,validate",
       ".menu-iconic-accel": "value=acceltext",
       ".menu-right": "_moz-menuactive,disabled",
       ".menu-accel": "value=acceltext",
     };
   }
 
-  get needsEagerRender() {
-    return this.isMenubarChild || this.matches("[sizetopopup] menu") || this.matches("menulist menu");
-  }
+  // get needsEagerRender() {
+  //   return this.isMenubarChild || this.matches("[sizetopopup] menu") || this.matches("menulist menu");
+  // }
 
   get isMenubarChild() {
     return this.matches("menubar > menu");
   }
 
   get isInMenupopup() {
     return this.matches("menupopup menu");
   }
@@ -266,16 +266,17 @@ class MozMenu extends MozMenuBaseMixin(M
 
     // On OSX we will have a bunch of menus in the hidden window. They get converted
     // into native menus based on the host attributes, so the inner DOM doesn't need
     // to be created.
     if (isHiddenWindow) {
       return;
     }
 
+    console.log(this.appendMenuDOM())
     // Wait until we are going to be visible or required for sizing a popup.
     if (!this.needsEagerRender) {
       return;
     }
 
     this.render();
   }
 }
