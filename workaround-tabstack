# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  0da2b2e89deba4f4a9da7075d956d479c47879c8

diff --git a/browser/base/content/tabbrowser-tab.js b/browser/base/content/tabbrowser-tab.js
--- a/browser/base/content/tabbrowser-tab.js
+++ b/browser/base/content/tabbrowser-tab.js
@@ -67,17 +67,17 @@
           "soundplaying,soundplaying-scheduledremoval,pinned,muted,blocked,selected=visuallyselected,activemedia-blocked,pictureinpicture",
         ".tab-close-button": "fadein,pinned,selected=visuallyselected",
       };
     }
 
     get fragment() {
       if (!this._fragment) {
         this._fragment = MozXULElement.parseXULToFragment(`
-        <stack class="tab-stack" flex="1">
+        <stack class="tab-stack" flex="1" collapsed="true">
           <vbox class="tab-background">
             <hbox class="tab-line"/>
             <spacer flex="1" class="tab-background-inner"/>
             <hbox class="tab-bottom-line"/>
           </vbox>
           <hbox class="tab-loading-burst"/>
           <hbox class="tab-content" align="center">
             <hbox class="tab-throbber" layer="true"/>
@@ -104,16 +104,17 @@
       if (this._initialized) {
         return;
       }
 
       this.textContent = "";
       this.appendChild(this.fragment);
       this.initializeAttributeInheritance();
       this.setAttribute("context", "tabContextMenu");
+      this.firstElementChild.collapsed = false;
       this._initialized = true;
 
       if (!("_lastAccessed" in this)) {
         this.updateLastAccessed();
       }
     }
 
     get container() {
diff --git a/browser/base/content/test/performance/head.js b/browser/base/content/test/performance/head.js
--- a/browser/base/content/test/performance/head.js
+++ b/browser/base/content/test/performance/head.js
@@ -590,16 +590,21 @@ function dumpFrame({ data, width, height
  *               {name: "bug 1nnnnnn - the foo icon shouldn't flicker",
  *                condition: r => r.w == 14 && r.y1 == 0 && ... }
  *               },
  *               {name: "bug ...
  *             ]
  */
 function reportUnexpectedFlicker(frames, expectations) {
   info("comparing " + frames.length + " frames");
+  info(
+    `tab height ${gBrowser.selectedTab.clientHeight} and content height ${
+      gBrowser.selectedTab.querySelector(".tab-content").clientHeight
+    }`
+  );
 
   let unexpectedRects = 0;
   for (let i = 1; i < frames.length; ++i) {
     let frame = frames[i],
       previousFrame = frames[i - 1];
     let rects = compareFrames(frame, previousFrame);
 
     if (expectations.filter) {
diff --git a/browser/themes/shared/tabs.inc.css b/browser/themes/shared/tabs.inc.css
--- a/browser/themes/shared/tabs.inc.css
+++ b/browser/themes/shared/tabs.inc.css
@@ -50,16 +50,18 @@
 #tabbrowser-tabs,
 #tabbrowser-tabs > .tabbrowser-arrowscrollbox,
 #tabbrowser-tabs[positionpinnedtabs] > .tabbrowser-arrowscrollbox > .tabbrowser-tab[pinned] {
   min-height: var(--tab-min-height);
 }
 
 .tab-stack {
   min-height: inherit;
+  background: green;
+  /* -moz-box-flex: 1; */
 }
 
 @supports -moz-bool-pref("layout.css.emulate-moz-box-with-flex") {
   .tab-stack {
     /* Needed to allow tabs to shrink to be skinnier than their page-title: */
     min-width: 0;
   }
 
