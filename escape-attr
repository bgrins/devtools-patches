# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  4967385058eef6aaf531975faea881293190ae68
Bug 1240860 - Escape attribute name before passing into querySelector;r=tromey

diff --git a/devtools/client/inspector/markup/markup.js b/devtools/client/inspector/markup/markup.js
--- a/devtools/client/inspector/markup/markup.js
+++ b/devtools/client/inspector/markup/markup.js
@@ -31,16 +31,17 @@ const {parseAttribute} = require("devtoo
 const ELLIPSIS = Services.prefs.getComplexValue("intl.ellipsis", Ci.nsIPrefLocalizedString).data;
 const {Task} = require("resource://gre/modules/Task.jsm");
 const {scrollIntoViewIfNeeded} = require("devtools/shared/layout/utils");
 
 Cu.import("resource://devtools/shared/gcli/Templater.jsm");
 Cu.import("resource://gre/modules/Services.jsm");
 Cu.import("resource://gre/modules/XPCOMUtils.jsm");
 
+loader.lazyRequireGetter(this, "CSS", "CSS");
 loader.lazyGetter(this, "DOMParser", function() {
   return Cc["@mozilla.org/xmlextras/domparser;1"].createInstance(Ci.nsIDOMParser);
 });
 loader.lazyGetter(this, "AutocompletePopup", () => {
   return require("devtools/client/shared/autocomplete-popup").AutocompletePopup;
 });
 
 /**
@@ -2679,17 +2680,17 @@ ElementEditor.prototype = {
 
   /**
    * Get the element used for one of the attributes of this element
    * @param string attrName The name of the attribute to get the element for
    * @return DOMElement
    */
   getAttributeElement: function(attrName) {
     return this.attrList.querySelector(
-      ".attreditor[data-attr=" + attrName + "] .attr-value");
+      ".attreditor[data-attr=" + CSS.escape(attrName) + "] .attr-value");
   },
 
   /**
    * Remove an attribute from the attrElements object and the DOM
    * @param string attrName The name of the attribute to remove
    */
   removeAttribute: function(attrName) {
     let attr = this.attrElements.get(attrName);
diff --git a/devtools/client/inspector/markup/test/browser_markup_mutation_02.js b/devtools/client/inspector/markup/test/browser_markup_mutation_02.js
--- a/devtools/client/inspector/markup/test/browser_markup_mutation_02.js
+++ b/devtools/client/inspector/markup/test/browser_markup_mutation_02.js
@@ -39,16 +39,22 @@ const TEST_DATA = [{
   flashedNode: ".list .item:last-child"
 }, {
   desc: "Adding an attribute should flash the attribute",
   attribute: "test-name",
   mutate: (doc, rootNode) => {
     rootNode.setAttribute("test-name", "value-" + Date.now());
   }
 }, {
+  desc: "Adding an attribute with css reserved characters should flash the attribute",
+  attribute: "one:two",
+  mutate: (doc, rootNode) => {
+    rootNode.setAttribute("one:two", "value-" + Date.now());
+  }
+}, {
   desc: "Editing an attribute should flash the attribute",
   attribute: "class",
   mutate: (doc, rootNode) => {
     rootNode.setAttribute("class", "list value-" + Date.now());
   }
 }, {
   desc: "Multiple changes to an attribute should flash the attribute",
   attribute: "class",
