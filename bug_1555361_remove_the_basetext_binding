# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1559140168 25200
#      Wed May 29 07:29:28 2019 -0700
# Node ID 222cc90a269c00137b236bb213c38bc9c561c810
# Parent  d551d37b9ad0dd1c8ad2e87c74344f623fc4b694
Bug 1555361 - Remove the basetext binding

Differential Revision: https://phabricator.services.mozilla.com/D33016

diff --git a/toolkit/content/widgets/general.xml b/toolkit/content/widgets/general.xml
--- a/toolkit/content/widgets/general.xml
+++ b/toolkit/content/widgets/general.xml
@@ -17,43 +17,9 @@
                                        return val;"
                                 onget="return this.getAttribute('disabled') == 'true';"/>
       <property name="tabIndex" onget="return parseInt(this.getAttribute('tabindex')) || 0"
                                 onset="if (val) this.setAttribute('tabindex', val);
                                        else this.removeAttribute('tabindex'); return val;"/>
     </implementation>
   </binding>
 
-  <binding id="basetext" extends="chrome://global/content/bindings/general.xml#basecontrol">
-    <implementation>
-      <!-- public implementation -->
-      <property name="label"      onset="this.setAttribute('label',val); return val;"
-                                  onget="return this.getAttribute('label');"/>
-      <property name="crop"       onset="this.setAttribute('crop',val); return val;"
-                                  onget="return this.getAttribute('crop');"/>
-      <property name="image"      onset="this.setAttribute('image',val); return val;"
-                                  onget="return this.getAttribute('image');"/>
-      <property name="command"    onset="this.setAttribute('command',val); return val;"
-                                  onget="return this.getAttribute('command');"/>
-      <property name="accessKey">
-        <getter>
-          <![CDATA[
-            return this.getAttribute("accesskey");
-          ]]>
-        </getter>
-        <setter>
-          <![CDATA[
-            // Always store on the control
-            this.setAttribute("accesskey", val);
-            // If there is a label, change the accesskey on the labelElement
-            // if it's also set there
-            let labelElement = document.getElementsByAttribute("control", this.id)[0];
-            if (labelElement) {
-              labelElement.setAttribute("accesskey", val);
-            }
-            return val;
-          ]]>
-        </setter>
-      </property>
-    </implementation>
-  </binding>
-
 </bindings>
