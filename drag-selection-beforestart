# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  f93283145c4bd00c04816716d42ad95018eebf5a
Bug 1090950 - Properly bound fillRect call for Graphs with selections that start or end out of bounds;r=vporof

diff --git a/browser/devtools/shared/test/browser_graphs-06.js b/browser/devtools/shared/test/browser_graphs-06.js
--- a/browser/devtools/shared/test/browser_graphs-06.js
+++ b/browser/devtools/shared/test/browser_graphs-06.js
@@ -16,16 +16,17 @@ add_task(function*() {
 
 function* performTest() {
   let [host, win, doc] = yield createHost();
   let graph = new LineGraphWidget(doc.body, "fps");
   yield graph.once("ready");
 
   testGraph(graph);
 
+  yield new Promise(() => {});
   yield graph.destroy();
   host.destroy();
 }
 
 function testGraph(graph) {
   graph.setData(TEST_DATA);
   graph.setRegions(TEST_REGIONS);
 
@@ -58,23 +59,31 @@ function testGraph(graph) {
   graph.setSelection({ start: graph.width, end: 0 });
   min = map(0, 0, graph.width, 112, 4180);
   max = map(graph.width, 0, graph.width, 112, 4180);
   is(graph.getMappedSelection().min, min,
     "The mapped selection's min value is correct (5).");
   is(graph.getMappedSelection().max, max,
     "The mapped selection's max value is correct (6).");
 
-  graph.setSelection({ start: graph.width + 100, end: -100 });
-  min = map(0, 0, graph.width, 112, 4180);
-  max = map(graph.width, 0, graph.width, 112, 4180);
-  is(graph.getMappedSelection().min, min,
-    "The mapped selection's min value is correct (7).");
-  is(graph.getMappedSelection().max, max,
-    "The mapped selection's max value is correct (8).");
+  // Force remove any selection and force an animation frame so we have
+  // some data to compare against.
+  graph.setSelection({ start: 10, end: 10 });
+  graph._onAnimationFrame();
+
+  // graph.setSelection({ start: graph.width + 100, end: -100 });
+  // min = map(0, 0, graph.width, 112, 4180);
+  // max = map(graph.width, 0, graph.width, 112, 4180);
+  // is(graph.getMappedSelection().min, min,
+  //   "The mapped selection's min value is correct (7).");
+  // is(graph.getMappedSelection().max, max,
+  //   "The mapped selection's max value is correct (8).");
+
+  graph._onAnimationFrame();
+  // graph._ctx.getImageData(x, y, 1, 1)
 }
 
 /**
  * Maps a value from one range to another.
  */
 function map(value, istart, istop, ostart, ostop) {
   return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
 }
diff --git a/browser/devtools/shared/widgets/Graphs.jsm b/browser/devtools/shared/widgets/Graphs.jsm
--- a/browser/devtools/shared/widgets/Graphs.jsm
+++ b/browser/devtools/shared/widgets/Graphs.jsm
@@ -821,17 +821,19 @@ AbstractCanvasGraph.prototype = {
     // Fill selection.
 
     let pattern = AbstractCanvasGraph.getStripePattern({
       ownerDocument: this._document,
       backgroundColor: this.selectionBackgroundColor,
       stripesColor: this.selectionStripesColor
     });
     ctx.fillStyle = pattern;
-    ctx.fillRect(start, 0, end - start, this._height);
+    let rectStart = Math.min(this._width, Math.max(0, start));
+    let rectEnd = Math.min(this._width, Math.max(0, end));
+    ctx.fillRect(rectStart, 0, rectEnd - rectStart, this._height);
 
     // Draw left boundary.
 
     if (input == "hovering-selection-start-boundary") {
       ctx.lineWidth = GRAPH_SELECTION_BOUNDARY_HOVER_LINE_WIDTH;
     } else {
       ctx.lineWidth = this.clipheadLineWidth;
     }
