# HG changeset patch
# Parent a8528e2fd32cfd170f65084ded85f32d3f2f81d9
# User Brian Grinstead <bgrinstead@mozilla.com>
Bug 1029511 - Add setOption for autoclose brackets

diff --git a/browser/devtools/projecteditor/lib/editors.js b/browser/devtools/projecteditor/lib/editors.js
--- a/browser/devtools/projecteditor/lib/editors.js
+++ b/browser/devtools/projecteditor/lib/editors.js
@@ -150,17 +150,18 @@ var TextEditor = Class({
         command.dispatchEvent(event);
       };
     });
 
     return extraKeys;
   },
 
   reloadPrefs: function() {
-    this.editor.resetIndentUnit();
+    this.editor.reloadPrefs();
+    // this.editor.resetIndentUnit();
     this.appended.then(() => {
       if (this.editor) {
         this.editor.setOption("autocomplete", prefs.get("devtools.editor.autocomplete"));
       }
     });
   },
 
   initialize: function(document, mode=Editor.modes.text) {
diff --git a/browser/devtools/sourceeditor/editor.js b/browser/devtools/sourceeditor/editor.js
--- a/browser/devtools/sourceeditor/editor.js
+++ b/browser/devtools/sourceeditor/editor.js
@@ -193,16 +193,17 @@ function Editor(config) {
 
     if (!this.config.gutters) {
       this.config.gutters = this.config.lineNumbers ? ["CodeMirror-linenumbers"] : [];
       this.config.gutters.push("CodeMirror-foldgutter");
     }
   }
 
   // Configure automatic bracket closing.
+  this.config.autoCloseBracketsOriginal = this.config.autoCloseBrackets;
   if (!this.config.autoCloseEnabled)
     this.config.autoCloseBrackets = false;
 
   // Overwrite default tab behavior. If something is selected,
   // indent those lines. If nothing is selected and we're
   // indenting with tabs, insert one tab. Otherwise insert N
   // whitespaces where N == indentUnit option.
   this.config.extraKeys.Tab = (cm) => {
@@ -388,16 +389,35 @@ Editor.prototype = {
   setText: function (value) {
     let cm = editors.get(this);
     cm.setValue(value);
 
     this.resetIndentUnit();
   },
 
   /**
+   * Reload the state of the editor based on current prefs.
+   */
+  reloadPrefs: function() {
+    const useAutoClose = Services.prefs.getBoolPref(AUTO_CLOSE);
+    const currentAutoClose = this.getOption("autoCloseBrackets");
+    const currentAutoClose = this.getOption("autoCloseBrackets");
+    console.log("HREE", useAutoClose, currentAutoClose);
+
+    if (!useAutoClose)
+      this.setOption("autoCloseBrackets", false);
+    else
+      this.setOption("autoCloseBrackets", this.config.autoCloseBracketsOriginal);
+    // if (useAutoClose && )
+      // cm.setOption("autoCloseBrackets",
+    // !newValue || newValue == "false" ? false: BRACKET_STRING);
+    this.resetIndentUnit();
+  },
+
+  /**
    * Set the editor's indentation based on the current prefs and
    * re-detect indentation if we should.
    */
   resetIndentUnit: function() {
     let cm = editors.get(this);
 
     let indentWithTabs = !Services.prefs.getBoolPref(EXPAND_TAB);
     let indentUnit = Services.prefs.getIntPref(TAB_SIZE);
