# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  189cf9021f8b68bf645a719c51e5bd7d0d961de5
Bug 1201008 - Toolbox can't be closed after setting a breakpoint

diff --git a/browser/devtools/debugger/debugger-controller.js b/browser/devtools/debugger/debugger-controller.js
--- a/browser/devtools/debugger/debugger-controller.js
+++ b/browser/devtools/debugger/debugger-controller.js
@@ -1594,17 +1594,21 @@ Breakpoints.prototype = {
    */
   _onEditorBreakpointAdd: Task.async(function*(_, aLine) {
     let actor = DebuggerView.Sources.selectedValue;
     let location = { actor: actor, line: aLine + 1 };
 
     // Initialize the breakpoint, but don't update the editor, since this
     // callback is invoked because a breakpoint was added in the
     // editor itself.
-    let breakpointClient = yield this.addBreakpoint(location, { noEditorUpdate: true });
+    try {
+      let breakpointClient = yield this.addBreakpoint(location, { noEditorUpdate: true });
+    } catch(e) {
+
+    }
 
     // Notify that we've shown a breakpoint in the source editor.
     window.emit(EVENTS.BREAKPOINT_SHOWN_IN_EDITOR);
   }),
 
   /**
    * Event handler for breakpoints that are removed from the editor.
    *
@@ -1676,17 +1680,17 @@ Breakpoints.prototype = {
    *          - noEditorUpdate: tells if you want to skip editor updates.
    *          - noPaneUpdate: tells if you want to skip breakpoint pane updates.
    * @return object
    *         A promise that is resolved after the breakpoint is added, or
    *         rejected if there was an error.
    */
   addBreakpoint: Task.async(function*(aLocation, aOptions = {}) {
     // Make sure a proper location is available.
-    if (!aLocation) {
+    if (!aLocation || !DebuggerView.Sources.getItemByValue(aLocation.actor)) {
       throw new Error("Invalid breakpoint location.");
     }
     let addedPromise, removingPromise;
 
     // If the breakpoint was already added, or is currently being added at the
     // specified location, then return that promise immediately.
     if ((addedPromise = this._getAdded(aLocation))) {
       return addedPromise;
