# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  40f709d9c088dfc4ba1b55fb80920b5ff5102842
Bug 1205371 - Use a real element instead of a pseudo element to show pseudo classes in markup view

diff --git a/devtools/client/markupview/markup-view.js b/devtools/client/markupview/markup-view.js
--- a/devtools/client/markupview/markup-view.js
+++ b/devtools/client/markupview/markup-view.js
@@ -2055,17 +2055,33 @@ MarkupContainer.prototype = {
     }
   },
 
   /**
    * Update the container's editor to the current state of the
    * viewed node.
    */
   update: function() {
+    this.elt.classList.remove("pseudoclass-hover");
+    this.elt.classList.remove("pseudoclass-active");
+    this.elt.classList.remove("pseudoclass-focus");
+    this.elt.removeAttribute("pseudoclass-count");
     if (this.node.pseudoClassLocks.length) {
+      for (let state of this.node.pseudoClassLocks) {
+        if (state === ":hover") {
+          this.elt.classList.add("pseudoclass-hover");
+        }
+        if (state === ":active") {
+          this.elt.classList.add("pseudoclass-active");
+        }
+        if (state === ":focus") {
+          this.elt.classList.add("pseudoclass-focus");
+        }
+      }
+      this.elt.setAttribute("pseudoclass-count", this.node.pseudoClassLocks.length);
       this.elt.classList.add("pseudoclass-locked");
     } else {
       this.elt.classList.remove("pseudoclass-locked");
     }
 
     if (this.editor.update) {
       this.editor.update();
     }
diff --git a/devtools/client/markupview/markup-view.xhtml b/devtools/client/markupview/markup-view.xhtml
--- a/devtools/client/markupview/markup-view.xhtml
+++ b/devtools/client/markupview/markup-view.xhtml
@@ -22,16 +22,17 @@
 
   <div id="root-wrapper">
     <div id="root"></div>
   </div>
   <div id="templates" style="display:none">
 
     <ul class="children">
       <li id="template-elementcontainer" save="${elt}" class="child collapsed">
+        <div class="pseudoclass-locked-container"></div>
         <div save="${tagLine}" class="tag-line"><!--
         --><span save="${tagState}" class="tag-state"></span><!--
         --><span save="${expander}" class="theme-twisty expander"></span><!--
      --></div>
         <ul save="${children}" class="children"></ul>
       </li>
 
       <li id="template-textcontainer" save="${elt}" class="child collapsed">
diff --git a/devtools/client/themes/markup-view.css b/devtools/client/themes/markup-view.css
--- a/devtools/client/themes/markup-view.css
+++ b/devtools/client/themes/markup-view.css
@@ -10,28 +10,81 @@
 .more-nodes {
   padding-left: 16px;
 }
 
 .styleinspector-propertyeditor {
   border: 1px solid #CCC;
 }
 
+.child.pseudoclass-locked {
+  --hover-pseudo-background: red;
+  --active-pseudo-background: green;
+  --focus-pseudo-background: blue;
+}
+
 /* Draw a circle next to nodes that have a pseudo class lock.
    Center vertically with the 1.4em line height on .tag-line */
-.child.pseudoclass-locked::before {
-  content: "";
+.child.pseudoclass-locked > .pseudoclass-locked-container {
+  display: block;
   background: var(--theme-highlight-lightorange);
   border-radius: 50%;
   width: .8em;
   height: .8em;
   margin-top: .3em;
   left: 1px;
   position: absolute;
 }
+.child[pseudoclass-count="1"].pseudoclass-hover > .pseudoclass-locked-container {
+  
+}
+.child.pseudoclass-locked.pseudoclass-hover:not(.pseudoclass-active):not(.pseudoclass-focus)  > .pseudoclass-locked-container {
+  background: var(--hover-pseudo-background);
+}
+.child.pseudoclass-locked.pseudoclass-active:not(.pseudoclass-hover):not(.pseudoclass-focus)  > .pseudoclass-locked-container {
+  background: var(--active-pseudo-background);
+}
+.child.pseudoclass-locked.pseudoclass-focus:not(.pseudoclass-hover):not(.pseudoclass-active)  > .pseudoclass-locked-container {
+  background: var(--focus-pseudo-background);
+}
+
+.child[pseudoclass-count="2"] > .pseudoclass-locked-container::before {
+  transform: rotate(-45deg);
+  border-radius: 0.8em 0.8em 0 0;
+  content: "";
+  width: .8em;
+  height: .4em;
+  margin-left: -0.16em;
+  display: block;
+}
+.child[pseudoclass-count="2"] > .pseudoclass-locked-container::after {
+  transform: rotate(135deg);
+  border-radius: 0.8em 0.8em 0 0;
+  content: "";
+  width: .8em;
+  height: .4em;
+  margin-left: 0.09412em;
+  margin-top: -0.13333em;
+  display: block;
+}
+/* Set active colors as both before/after and let hover/focus override appropriate ones */
+.child[pseudoclass-count="2"].pseudoclass-active > .pseudoclass-locked-container::before {
+  background: var(--active-pseudo-background);
+}
+.child[pseudoclass-count="2"].pseudoclass-active > .pseudoclass-locked-container::after {
+  background: var(--active-pseudo-background);
+}
+.child[pseudoclass-count="2"].pseudoclass-hover > .pseudoclass-locked-container::before {
+  background: var(--hover-pseudo-background);
+}
+.child[pseudoclass-count="2"].pseudoclass-focus > .pseudoclass-locked-container::after {
+  background: var(--focus-pseudo-background);
+}
+
+
 
 /* Selected nodes in the tree should have light selected text.
    theme-selected doesn't work in this case since the text is a
    sibling of the class, not a child. */
 .theme-selected ~ .editor,
 .theme-selected ~ .editor .theme-fg-color1,
 .theme-selected ~ .editor .theme-fg-color2,
 .theme-selected ~ .editor .theme-fg-color3,
