# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  3defba37814e83d3c9eaad32f9eb57f4e6004c58
Test case for MO callback interrupting a script

diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -6,17 +6,16 @@
 var Ci = Components.interfaces;
 var Cu = Components.utils;
 var Cc = Components.classes;
 
 Cu.import("resource://gre/modules/XPCOMUtils.jsm");
 Cu.import("resource://gre/modules/NotificationDB.jsm");
 Cu.import("resource:///modules/RecentWindow.jsm");
 
-
 XPCOMUtils.defineLazyModuleGetter(this, "Preferences",
                                   "resource://gre/modules/Preferences.jsm");
 XPCOMUtils.defineLazyModuleGetter(this, "Deprecated",
                                   "resource://gre/modules/Deprecated.jsm");
 XPCOMUtils.defineLazyModuleGetter(this, "BrowserUITelemetry",
                                   "resource:///modules/BrowserUITelemetry.jsm");
 XPCOMUtils.defineLazyModuleGetter(this, "E10SUtils",
                                   "resource:///modules/E10SUtils.jsm");
@@ -8290,8 +8289,15 @@ TabModalPromptBox.prototype = {
     let browser = this._weakBrowserRef.get();
     if (!browser) {
       throw "Stale promptbox! The associated browser is gone.";
     }
     return browser;
   },
 };
 
+setTimeout(() => {
+var context = {};
+Services.scriptloader.loadSubScript("chrome://browser/content/test.js",
+                                    context, "UTF-8");
+
+}, 0);
+
diff --git a/browser/base/content/test.js b/browser/base/content/test.js
new file mode 100644
--- /dev/null
+++ b/browser/base/content/test.js
@@ -0,0 +1,32 @@
+
+    console.log("WalkerActor attached to: " + window.location.toString());
+    let maxIterations = 1000;
+    let receivedMutation = false;
+    let observer = new window.MutationObserver((mutation) => {
+      console.log("Received mutation", mutation);
+      console.trace();
+      receivedMutation = true;
+    });
+    observer.observe(window.document, {
+      attributes: true,
+      subtree: true
+    });
+
+    let walker = Cc["@mozilla.org/inspector/deep-tree-walker;1"].createInstance(Ci.inIDeepTreeWalker);
+    walker.init(window.document, Ci.nsIDOMNodeFilter.SHOW_ALL);
+
+    let nextNode = walker.currentNode;
+    while (nextNode) {
+      nextNode = walker.nextNode();
+      console.log("Iterated to ", nextNode, walker.currentNode);
+      if (receivedMutation) {
+        observer.disconnect();
+        throw "ERROR: Should not have received mutation in the middle of a script when iterating";
+      }
+      if (maxIterations-- <= 0) {
+        break;
+      }
+    }
+
+    console.log("Finished successfully.  Any mutations?", observer.takeRecords());
+    observer.disconnect();
\ No newline at end of file
diff --git a/browser/base/jar.mn b/browser/base/jar.mn
--- a/browser/base/jar.mn
+++ b/browser/base/jar.mn
@@ -69,16 +69,17 @@ browser.jar:
         content/browser/aboutRobots-widget-left.png   (content/aboutRobots-widget-left.png)
         content/browser/aboutSocialError.xhtml        (content/aboutSocialError.xhtml)
         content/browser/aboutProviderDirectory.xhtml  (content/aboutProviderDirectory.xhtml)
         content/browser/aboutTabCrashed.css           (content/aboutTabCrashed.css)
         content/browser/aboutTabCrashed.js            (content/aboutTabCrashed.js)
         content/browser/aboutTabCrashed.xhtml         (content/aboutTabCrashed.xhtml)
 *       content/browser/browser.css                   (content/browser.css)
 *       content/browser/browser.js                    (content/browser.js)
+        content/browser/test.js                    (content/test.js)
 *       content/browser/browser.xul                   (content/browser.xul)
 *       content/browser/browser-tabPreviews.xml       (content/browser-tabPreviews.xml)
 *       content/browser/chatWindow.xul                (content/chatWindow.xul)
         content/browser/tab-content.js                (content/tab-content.js)
         content/browser/content.js                    (content/content.js)
         content/browser/social-content.js             (content/social-content.js)
         content/browser/defaultthemes/1.footer.jpg    (content/defaultthemes/1.footer.jpg)
         content/browser/defaultthemes/1.header.jpg    (content/defaultthemes/1.header.jpg)
diff --git a/devtools/server/actors/inspector.js b/devtools/server/actors/inspector.js
--- a/devtools/server/actors/inspector.js
+++ b/devtools/server/actors/inspector.js
@@ -1328,16 +1328,50 @@ var WalkerActor = protocol.ActorClass({
 
     // Ensure that the root document node actor is ready and
     // managed.
     this.rootNode = this.document();
 
     this.reflowObserver = getLayoutChangesObserver(this.tabActor);
     this._onReflows = this._onReflows.bind(this);
     this.reflowObserver.on("reflows", this._onReflows);
+
+
+    let window = this.rootWin;
+    console.log("WalkerActor attached to: " + window.location.toString());
+    let maxIterations = 1000;
+    let receivedMutation = false;
+    let observer = new window.MutationObserver((mutation) => {
+      console.log("Received mutation", mutation);
+      console.trace();
+      receivedMutation = true;
+    });
+    observer.observe(window.document, {
+      attributes: true,
+      subtree: true
+    });
+
+    let walker = Cc["@mozilla.org/inspector/deep-tree-walker;1"].createInstance(Ci.inIDeepTreeWalker);
+    walker.init(window.document, Ci.nsIDOMNodeFilter.SHOW_ALL);
+
+    let nextNode = walker.currentNode;
+    while (nextNode) {
+      nextNode = walker.nextNode();
+      // console.log("Iterated to ", nextNode, walker.currentNode);
+      if (receivedMutation) {
+        observer.disconnect();
+        throw "ERROR: Should not have received mutation in the middle of a script when iterating";
+      }
+      if (maxIterations-- <= 0) {
+        break;
+      }
+    }
+
+    console.log("Finished successfully.  Any mutations?", observer.takeRecords());
+    observer.disconnect();
   },
 
   // Returns the JSON representation of this object over the wire.
   form: function() {
     return {
       actor: this.actorID,
       root: this.rootNode.form(),
       traits: {
