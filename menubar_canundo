# HG changeset patch
# Parent a61fb592469cfdee6ac16f7b6e5c02d403e7638f
# User Brian Grinstead <bgrinstead@mozilla.com>
Bug 1051136 - Use editor.canUndo instead of checking the DOM element to see if undos are possible;r=mratcliffe

diff --git a/browser/devtools/projecteditor/test/browser_projecteditor_menubar_02.js b/browser/devtools/projecteditor/test/browser_projecteditor_menubar_02.js
--- a/browser/devtools/projecteditor/test/browser_projecteditor_menubar_02.js
+++ b/browser/devtools/projecteditor/test/browser_projecteditor_menubar_02.js
@@ -93,17 +93,21 @@ let test = asyncTest(function*() {
   yield onChange;
   yield openAndCloseMenu(fileMenu);
   yield openAndCloseMenu(editMenu);
 
   is (cmdNew.getAttribute("disabled"), "", "File menu item is enabled");
   is (cmdSave.getAttribute("disabled"), "", "File menu item is enabled");
   is (cmdSaveas.getAttribute("disabled"), "", "File menu item is enabled");
 
-  is (cmdUndo.getAttribute("disabled"), "", "Edit menu item is enabled");
+  // Use editor.canUndo() to see if this is failing - the menu disabled property
+  // should be in sync with this because of isCommandEnabled in editor.js.
+  info ('cmdUndo.getAttribute("disabled") is: "' + cmdUndo.getAttribute("disabled") + '"');
+  ok (editor.editor.canUndo(), "Edit menu item is enabled");
+
   is (cmdRedo.getAttribute("disabled"), "true", "Edit menu item is disabled");
   is (cmdCut.getAttribute("disabled"), "true", "Edit menu item is disabled");
   is (cmdCopy.getAttribute("disabled"), "true", "Edit menu item is disabled");
   is (cmdPaste.getAttribute("disabled"), "", "Edit menu item is enabled");
 });
 
 function openAndCloseMenu(menu) {
   let shown = onPopupShow(menu);
