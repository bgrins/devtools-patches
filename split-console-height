# HG changeset patch
# Parent 56b1999ab9e76c8933387f8a7b829ec1b818ef1a
# User Brian Grinstead <bgrinstead@mozilla.com>
Bug 996778 - Remember split console height;r=msucan

diff --git a/browser/app/profile/firefox.js b/browser/app/profile/firefox.js
--- a/browser/app/profile/firefox.js
+++ b/browser/app/profile/firefox.js
@@ -1288,16 +1288,17 @@ pref("devtools.webide.enabled", false);
 pref("devtools.toolbox.footer.height", 250);
 pref("devtools.toolbox.sidebar.width", 500);
 pref("devtools.toolbox.host", "bottom");
 pref("devtools.toolbox.selectedTool", "webconsole");
 pref("devtools.toolbox.toolbarSpec", '["splitconsole", "paintflashing toggle","tilt toggle","scratchpad","resize toggle","eyedropper","screenshot --fullpage"]');
 pref("devtools.toolbox.sideEnabled", true);
 pref("devtools.toolbox.zoomValue", "1");
 pref("devtools.toolbox.splitconsoleEnabled", false);
+pref("devtools.toolbox.splitconsoleHeight", 100);
 
 // Toolbox Button preferences
 pref("devtools.command-button-pick.enabled", true);
 pref("devtools.command-button-splitconsole.enabled", true);
 pref("devtools.command-button-paintflashing.enabled", false);
 pref("devtools.command-button-tilt.enabled", false);
 pref("devtools.command-button-scratchpad.enabled", false);
 pref("devtools.command-button-responsive.enabled", true);
diff --git a/browser/devtools/framework/toolbox.js b/browser/devtools/framework/toolbox.js
--- a/browser/devtools/framework/toolbox.js
+++ b/browser/devtools/framework/toolbox.js
@@ -254,16 +254,20 @@ Toolbox.prototype = {
         this._addToolSwitchingKeys();
         this._addZoomKeys();
         this._loadInitialZoom();
 
         let splitConsolePromise = promise.resolve();
         if (Services.prefs.getBoolPref(SPLITCONSOLE_ENABLED_PREF)) {
           splitConsolePromise = this.openSplitConsole();
         }
+
+        this.doc.getElementById("toolbox-panel-webconsole").height =
+          Services.prefs.getIntPref("devtools.toolbox.splitconsoleHeight");
+
         let buttonsPromise = this._buildButtons();
 
         this._telemetry.toolOpened("toolbox");
 
         this.selectTool(this._defaultToolId).then(panel => {
           promise.all([
             splitConsolePromise,
             buttonsPromise
@@ -1311,16 +1315,19 @@ Toolbox.prototype = {
     if (this._destroyer) {
       return this._destroyer;
     }
 
     this._target.off("navigate", this._refreshHostTitle);
     this.off("select", this._refreshHostTitle);
     this.off("host-changed", this._refreshHostTitle);
 
+    Services.prefs.setIntPref("devtools.toolbox.splitconsoleHeight",
+      this.doc.getElementById("toolbox-panel-webconsole").height);
+
     gDevTools.off("tool-registered", this._toolRegistered);
     gDevTools.off("tool-unregistered", this._toolUnregistered);
 
     gDevTools.off("pref-changed", this._prefChanged);
 
     let outstanding = [];
     for (let [id, panel] of this._toolPanels) {
       try {
diff --git a/browser/devtools/framework/toolbox.xul b/browser/devtools/framework/toolbox.xul
--- a/browser/devtools/framework/toolbox.xul
+++ b/browser/devtools/framework/toolbox.xul
@@ -76,13 +76,13 @@
         <hbox id="toolbox-dock-buttons"/>
         <toolbarbutton id="toolbox-close"
                        class="devtools-closebutton"
                        tooltiptext="&toolboxCloseButton.tooltip;"/>
       </hbox>
     </toolbar>
     <vbox flex="1">
       <deck id="toolbox-deck" flex="1" minheight="75" />
-      <splitter id="toolbox-console-splitter" class="devtools-horizontal-splitter" hidden="true" />
+      <splitter id="toolbox-console-splitter" class="devtools-horizontal-splitter" hidden="true" resizebefore="closest" />
       <box minheight="75" flex="1" id="toolbox-panel-webconsole" collapsed="true" />
     </vbox>
   </notificationbox>
 </window>
diff --git a/browser/devtools/webconsole/panel.js b/browser/devtools/webconsole/panel.js
--- a/browser/devtools/webconsole/panel.js
+++ b/browser/devtools/webconsole/panel.js
@@ -47,17 +47,16 @@ WebConsolePanel.prototype = {
    *
    * @return object
    *         A promise that is resolved when the Web Console completes opening.
    */
   open: function WCP_open()
   {
     let parentDoc = this._toolbox.doc;
     let iframe = parentDoc.getElementById("toolbox-panel-iframe-webconsole");
-    iframe.className = "web-console-frame";
 
     // Make sure the iframe content window is ready.
     let deferredIframe = promise.defer();
     let win, doc;
     if ((win = iframe.contentWindow) &&
         (doc = win.document) &&
         doc.readyState == "complete") {
       deferredIframe.resolve(null);
diff --git a/browser/devtools/webconsole/test/browser_webconsole_split_persist.js b/browser/devtools/webconsole/test/browser_webconsole_split_persist.js
--- a/browser/devtools/webconsole/test/browser_webconsole_split_persist.js
+++ b/browser/devtools/webconsole/test/browser_webconsole_split_persist.js
@@ -15,53 +15,83 @@ function test() {
     info("Opening a tab while there is no user setting on split console pref");
     let {tab} = yield loadTab(TEST_URI);
     let target = TargetFactory.forTab(tab);
     toolbox = yield gDevTools.showToolbox(target, "inspector");
 
     ok(!toolbox.splitConsole, "Split console is hidden by default.");
     yield toggleSplitConsoleWithEscape();
     ok(toolbox.splitConsole, "Split console is now visible.");
-    ok(getPrefValue(), "Pref is true");
+    ok(getVisiblePrefValue(), "Visibility pref is true");
+
+    let splitConsolePanel = toolbox.doc.getElementById("toolbox-panel-webconsole");
+    is(getHeightPrefValue(), splitConsolePanel.height, "Panel height matches the pref");
+    splitConsolePanel.height = 200;
 
     yield toolbox.destroy();
 
     info("Opening a tab while there is a true user setting on split console pref");
     let {tab} = yield loadTab(TEST_URI);
     let target = TargetFactory.forTab(tab);
     toolbox = yield gDevTools.showToolbox(target, "inspector");
 
     ok(toolbox.splitConsole, "Split console is visible by default.");
+    is(getHeightPrefValue(), 200, "Height is set based on panel height after closing");
+
+    let splitConsolePanel = toolbox.doc.getElementById("toolbox-panel-webconsole");
+
+    splitConsolePanel.height = 1;
+    let splitConsoleComputedHeight =
+      toolbox.doc.defaultView.getComputedStyle(splitConsolePanel).getPropertyValue("height");
+
+    ok (parseInt(splitConsoleComputedHeight) > 1,
+        "The actual height of the console is bound with a min height");
+
+    splitConsolePanel.height = 10000;
+    let splitConsoleComputedHeight =
+      toolbox.doc.defaultView.getComputedStyle(splitConsolePanel).getPropertyValue("height");
+
+    ok (parseInt(splitConsoleComputedHeight) < 10000,
+        "The actual height of the console is bound with a max height");
+
     yield toggleSplitConsoleWithEscape();
     ok(!toolbox.splitConsole, "Split console is now hidden.");
-    ok(!getPrefValue(), "Pref is false");
+    ok(!getVisiblePrefValue(), "Visibility pref is false");
 
     yield toolbox.destroy();
 
+    is(getHeightPrefValue(), 10000, "Height is set based on panel height after closing");
+
+
     info("Opening a tab while there is a false user setting on split console pref");
     let {tab} = yield loadTab(TEST_URI);
     let target = TargetFactory.forTab(tab);
     toolbox = yield gDevTools.showToolbox(target, "inspector");
 
     ok(!toolbox.splitConsole, "Split console is hidden by default.");
-    ok(!getPrefValue(), "Pref is false");
+    ok(!getVisiblePrefValue(), "Visibility pref is false");
 
     yield toolbox.destroy();
   }
 
-  function getPrefValue() {
+  function getVisiblePrefValue() {
     return Services.prefs.getBoolPref("devtools.toolbox.splitconsoleEnabled");
   }
 
+  function getHeightPrefValue() {
+    return Services.prefs.getIntPref("devtools.toolbox.splitconsoleHeight");
+  }
+
   function toggleSplitConsoleWithEscape() {
     let onceSplitConsole = toolbox.once("split-console");
     let contentWindow = toolbox.frame.contentWindow;
     contentWindow.focus();
     EventUtils.sendKey("ESCAPE", contentWindow);
     return onceSplitConsole;
   }
 
   function finish() {
     toolbox = TEST_URI = null;
     Services.prefs.clearUserPref("devtools.toolbox.splitconsoleEnabled");
+    Services.prefs.clearUserPref("devtools.toolbox.splitconsoleHeight");
     finishTest();
   }
 }
