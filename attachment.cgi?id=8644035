# HG changeset patch
# User Nick Fitzgerald <fitzgen@gmail.com>

Bug 1191571 - Part 2: Remove most Console.jsm usage from toolkit/devtools; r=jryans

This removes the usage of the Console.jsm's console as a generic console in
devtools. There are a few uses of Console.jsm still in toolkit/devtools, but
they are more specialized edge cases. Examples include tests for Console.jsm,
webconsole tests that want pretty output to stdout for tbpl logs, etc.

diff --git a/toolkit/devtools/Require.jsm b/toolkit/devtools/Require.jsm
index ab72b52..d111f02 100644
--- a/toolkit/devtools/Require.jsm
+++ b/toolkit/devtools/Require.jsm
@@ -12,22 +12,16 @@
  * To date, no attempt has been made to ensure that Require.jsm closely follows
  * either the AMD or CommonJS specs. It is hoped that a more formal JavaScript
  * module standard will arrive before this is necessary. In the mean time it
  * serves the projects it loads.
  */
 
 this.EXPORTED_SYMBOLS = [ "define", "require" ];
 
-const console = (function() {
-  const tempScope = {};
-  Components.utils.import("resource://gre/modules/devtools/Console.jsm", tempScope);
-  return tempScope.console;
-})();
-
 /**
  * Define a module along with a payload.
  * @param moduleName Name for the payload
  * @param deps Ignored. For compatibility with CommonJS AMD Spec
  * @param payload Function with (require, exports, module) params
  */
 this.define = function define(moduleName, deps, payload) {
   if (typeof moduleName != "string") {
diff --git a/toolkit/devtools/client/dbg-client.jsm b/toolkit/devtools/client/dbg-client.jsm
index 595791d..6c89cc8 100644
--- a/toolkit/devtools/client/dbg-client.jsm
+++ b/toolkit/devtools/client/dbg-client.jsm
@@ -27,19 +27,16 @@ this.EXPORTED_SYMBOLS = ["DebuggerTransport",
 
 Cu.import("resource://gre/modules/XPCOMUtils.jsm");
 Cu.import("resource://gre/modules/NetUtil.jsm");
 Cu.import("resource://gre/modules/Services.jsm");
 
 let promise = Cu.import("resource://gre/modules/devtools/deprecated-sync-thenables.js").Promise;
 const { defer, resolve, reject } = promise;
 
-XPCOMUtils.defineLazyModuleGetter(this, "console",
-                                  "resource://gre/modules/devtools/Console.jsm");
-
 XPCOMUtils.defineLazyModuleGetter(this, "devtools",
                                   "resource://gre/modules/devtools/Loader.jsm");
 
 XPCOMUtils.defineLazyGetter(this, "events", () => {
   return devtools.require("sdk/event/core");
 });
 
 Object.defineProperty(this, "WebConsoleClient", {
diff --git a/toolkit/devtools/gcli/Templater.jsm b/toolkit/devtools/gcli/Templater.jsm
index bb8d152..9985417 100644
--- a/toolkit/devtools/gcli/Templater.jsm
+++ b/toolkit/devtools/gcli/Templater.jsm
@@ -11,18 +11,16 @@
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
 
 this.EXPORTED_SYMBOLS = [ "template" ];
 Components.utils.import("resource://gre/modules/XPCOMUtils.jsm");
-XPCOMUtils.defineLazyModuleGetter(this, "console",
-                                  "resource://gre/modules/devtools/Console.jsm");
 
 'use strict';
 
 /**
  * For full documentation, see:
  * https://github.com/mozilla/domtemplate/blob/master/README.md
  */
 
diff --git a/toolkit/devtools/pretty-fast/tests/unit/head_pretty-fast.js b/toolkit/devtools/pretty-fast/tests/unit/head_pretty-fast.js
index 9ad0bbe..41fec9f 100644
--- a/toolkit/devtools/pretty-fast/tests/unit/head_pretty-fast.js
+++ b/toolkit/devtools/pretty-fast/tests/unit/head_pretty-fast.js
@@ -5,17 +5,16 @@ const Cu = Components.utils;
 const Cr = Components.results;
 
 const { devtools } = Cu.import("resource://gre/modules/devtools/Loader.jsm", {});
 const { require } = devtools;
 
 this.sourceMap = require("source-map");
 this.acorn = require("acorn/acorn");
 this.prettyFast = require("devtools/pretty-fast");
-const { console } = Cu.import("resource://gre/modules/devtools/Console.jsm", {});
 
 // Register a console listener, so console messages don't just disappear
 // into the ether.
 let errorCount = 0;
 let listener = {
   observe: function (aMessage) {
     errorCount++;
     try {
diff --git a/toolkit/devtools/server/tests/browser/head.js b/toolkit/devtools/server/tests/browser/head.js
index f2a927d..6aac7f0 100644
--- a/toolkit/devtools/server/tests/browser/head.js
+++ b/toolkit/devtools/server/tests/browser/head.js
@@ -2,17 +2,16 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 const Cc = Components.classes;
 const Ci = Components.interfaces;
 const Cu = Components.utils;
 
 Cu.import("resource://gre/modules/Services.jsm");
-const {console} = Cu.import("resource://gre/modules/devtools/Console.jsm", {});
 const {devtools: {require}} = Cu.import("resource://gre/modules/devtools/Loader.jsm", {});
 const {DebuggerClient} = Cu.import("resource://gre/modules/devtools/dbg-client.jsm", {});
 const {DebuggerServer} = Cu.import("resource://gre/modules/devtools/dbg-server.jsm", {});
 
 const PATH = "browser/toolkit/devtools/server/tests/browser/";
 const MAIN_DOMAIN = "http://test1.example.org/" + PATH;
 const ALT_DOMAIN = "http://sectest1.example.org/" + PATH;
 const ALT_DOMAIN_SECURED = "https://sectest1.example.org:443/" + PATH;
diff --git a/toolkit/devtools/server/tests/unit/head_dbg.js b/toolkit/devtools/server/tests/unit/head_dbg.js
index 2788e1c..5a547c4 100644
--- a/toolkit/devtools/server/tests/unit/head_dbg.js
+++ b/toolkit/devtools/server/tests/unit/head_dbg.js
@@ -128,17 +128,16 @@ function tryImport(url) {
     dumpn("Error importing " + url);
     dumpn(DevToolsUtils.safeErrorString(e));
     throw e;
   }
 }
 
 tryImport("resource://gre/modules/devtools/dbg-client.jsm");
 tryImport("resource://gre/modules/devtools/Loader.jsm");
-tryImport("resource://gre/modules/devtools/Console.jsm");
 
 function testExceptionHook(ex) {
   try {
     do_report_unexpected_exception(ex);
   } catch(ex) {
     return {throw: ex}
   }
   return undefined;
diff --git a/toolkit/devtools/shared/worker.js b/toolkit/devtools/shared/worker.js
index 64e6934..e1ce2df 100644
--- a/toolkit/devtools/shared/worker.js
+++ b/toolkit/devtools/shared/worker.js
@@ -8,17 +8,16 @@
     const { Cc, Ci, Cu, ChromeWorker } = require("chrome");
     const dumpn = require("devtools/toolkit/DevToolsUtils").dumpn;
     factory.call(this, require, exports, module, { Cc, Ci, Cu }, ChromeWorker, dumpn);
   } else { // Cu.import
     const { classes: Cc, interfaces: Ci, utils: Cu } = Components;
     const { devtools } = Cu.import("resource://gre/modules/devtools/Loader.jsm", {});
     this.isWorker = false;
     this.Promise = Cu.import("resource://gre/modules/Promise.jsm", {}).Promise;
-    this.console = Cu.import("resource://gre/modules/devtools/Console.jsm", {}).console;
     factory.call(
       this, devtools.require, this, { exports: this },
       { Cc, Ci, Cu }, ChromeWorker, null
     );
     this.EXPORTED_SYMBOLS = ["DevToolsWorker"];
   }
 }).call(this, function (require, exports, module, { Ci, Cc }, ChromeWorker, dumpn) {
 
diff --git a/toolkit/devtools/sourcemap/SourceMap.jsm b/toolkit/devtools/sourcemap/SourceMap.jsm
index 4b62b53..c93f72c 100644
--- a/toolkit/devtools/sourcemap/SourceMap.jsm
+++ b/toolkit/devtools/sourcemap/SourceMap.jsm
@@ -12,17 +12,16 @@
  * https://github.com/mozilla/source-map/
  */
 
 ///////////////////////////////////////////////////////////////////////////////
 
 
 this.EXPORTED_SYMBOLS = [ "SourceMapConsumer", "SourceMapGenerator", "SourceNode" ];
 
-Components.utils.import("resource://gre/modules/devtools/Console.jsm");
 Components.utils.import('resource://gre/modules/devtools/Require.jsm');
 /* -*- Mode: js; js-indent-level: 2; -*- */
 /*
  * Copyright 2011 Mozilla Foundation and contributors
  * Licensed under the New BSD license. See LICENSE or:
  * http://opensource.org/licenses/BSD-3-Clause
  */
 define('source-map/source-map-consumer', ['require', 'exports', 'module' ,  'source-map/util', 'source-map/binary-search', 'source-map/array-set', 'source-map/base64-vlq', 'source-map/quick-sort'], function(require, exports, module) {
