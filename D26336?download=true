diff --git a/devtools/client/webconsole/test/fixtures/stubs/consoleApi.js b/devtools/client/webconsole/test/fixtures/stubs/consoleApi.js
--- a/devtools/client/webconsole/test/fixtures/stubs/consoleApi.js
+++ b/devtools/client/webconsole/test/fixtures/stubs/consoleApi.js
@@ -43,7 +43,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.log(undefined)`, new ConsoleMessage({
@@ -77,7 +78,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.warn('danger, will robinson!')`, new ConsoleMessage({
@@ -109,7 +111,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.log(NaN)`, new ConsoleMessage({
@@ -143,7 +146,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.log(null)`, new ConsoleMessage({
@@ -177,7 +181,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.log('鼬')`, new ConsoleMessage({
@@ -209,7 +214,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.clear()`, new ConsoleMessage({
@@ -241,7 +247,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.count('bar')`, new ConsoleMessage({
@@ -271,7 +278,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.assert(false, {message: 'foobar'})`, new ConsoleMessage({
@@ -334,7 +342,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.log('hello \nfrom \rthe \"string world!')`, new ConsoleMessage({
@@ -366,7 +375,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.log('úṇĩçödê țĕșť')`, new ConsoleMessage({
@@ -398,7 +408,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.dirxml(window)`, new ConsoleMessage({
@@ -442,7 +453,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.log('myarray', ['red', 'green', 'blue'])`, new ConsoleMessage({
@@ -492,7 +504,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.log('myregex', /a.b.c/)`, new ConsoleMessage({
@@ -534,7 +547,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.table(['red', 'green', 'blue']);`, new ConsoleMessage({
@@ -583,7 +597,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.log('myobject', {red: 'redValue', green: 'greenValue', blue: 'blueValue'});`, new ConsoleMessage({
@@ -651,7 +666,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.debug('debug message');`, new ConsoleMessage({
@@ -683,7 +699,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.info('info message');`, new ConsoleMessage({
@@ -715,7 +732,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.error('error message');`, new ConsoleMessage({
@@ -755,7 +773,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.log('mymap')`, new ConsoleMessage({
@@ -810,7 +829,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.log('myset')`, new ConsoleMessage({
@@ -859,7 +879,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.trace()`, new ConsoleMessage({
@@ -911,7 +932,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.trace('bar', {'foo': 'bar'}, [1,2,3])`, new ConsoleMessage({
@@ -1007,7 +1029,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.time('bar')`, new ConsoleMessage({
@@ -1037,7 +1060,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`timerAlreadyExists`, new ConsoleMessage({
@@ -1067,7 +1091,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.timeLog('bar') - 1`, new ConsoleMessage({
@@ -1099,7 +1124,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.timeLog('bar') - 2`, new ConsoleMessage({
@@ -1156,7 +1182,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.timeEnd('bar')`, new ConsoleMessage({
@@ -1186,7 +1213,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`timeEnd.timerDoesntExist`, new ConsoleMessage({
@@ -1216,7 +1244,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`timeLog.timerDoesntExist`, new ConsoleMessage({
@@ -1246,7 +1275,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.table('bar')`, new ConsoleMessage({
@@ -1278,7 +1308,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.table(['a', 'b', 'c'])`, new ConsoleMessage({
@@ -1327,7 +1358,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.group('bar')`, new ConsoleMessage({
@@ -1359,7 +1391,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.groupEnd('bar')`, new ConsoleMessage({
@@ -1389,7 +1422,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.groupCollapsed('foo')`, new ConsoleMessage({
@@ -1421,7 +1455,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.groupEnd('foo')`, new ConsoleMessage({
@@ -1451,7 +1486,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.group()`, new ConsoleMessage({
@@ -1483,7 +1519,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.groupEnd()`, new ConsoleMessage({
@@ -1513,7 +1550,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.log(%cfoobar)`, new ConsoleMessage({
@@ -1549,7 +1587,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.log("%cHello%c|%cWorld")`, new ConsoleMessage({
@@ -1587,7 +1626,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.group(%cfoo%cbar)`, new ConsoleMessage({
@@ -1623,7 +1663,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.groupEnd(%cfoo%cbar)`, new ConsoleMessage({
@@ -1653,7 +1694,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.groupCollapsed(%cfoo%cbaz)`, new ConsoleMessage({
@@ -1689,7 +1731,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.groupEnd(%cfoo%cbaz)`, new ConsoleMessage({
@@ -1719,7 +1762,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.dir({C, M, Y, K})`, new ConsoleMessage({
@@ -1792,7 +1836,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.count | default: 1`, new ConsoleMessage({
@@ -1822,7 +1867,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.count | default: 2`, new ConsoleMessage({
@@ -1852,7 +1898,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.count | test counter: 1`, new ConsoleMessage({
@@ -1882,7 +1929,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.count | test counter: 2`, new ConsoleMessage({
@@ -1912,7 +1960,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.count | default: 3`, new ConsoleMessage({
@@ -1942,7 +1991,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.count | clear`, new ConsoleMessage({
@@ -1974,7 +2024,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.count | default: 4`, new ConsoleMessage({
@@ -2004,7 +2055,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.count | test counter: 3`, new ConsoleMessage({
@@ -2034,7 +2086,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.countReset | test counter: 0`, new ConsoleMessage({
@@ -2064,7 +2117,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`console.countReset | counterDoesntExist`, new ConsoleMessage({
@@ -2094,7 +2148,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPackets.set(`console.log('foobar', 'test')`, {
diff --git a/devtools/client/webconsole/test/fixtures/stubs/cssMessage.js b/devtools/client/webconsole/test/fixtures/stubs/cssMessage.js
--- a/devtools/client/webconsole/test/fixtures/stubs/cssMessage.js
+++ b/devtools/client/webconsole/test/fixtures/stubs/cssMessage.js
@@ -39,7 +39,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`Error in parsing value for ‘padding-top’.  Declaration dropped.`, new ConsoleMessage({
@@ -68,7 +69,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPackets.set(`Unknown property ‘such-unknown-property’.  Declaration dropped.`, {
@@ -90,7 +92,8 @@
     "info": false,
     "private": false,
     "stacktrace": null,
-    "notes": null
+    "notes": null,
+    "chromeContext": false
   },
   "type": "pageError",
   "from": "server1.conn0.child1/consoleActor2"
@@ -115,7 +118,8 @@
     "info": false,
     "private": false,
     "stacktrace": null,
-    "notes": null
+    "notes": null,
+    "chromeContext": false
   },
   "type": "pageError",
   "from": "server1.conn0.child1/consoleActor2"
diff --git a/devtools/client/webconsole/test/fixtures/stubs/evaluationResult.js b/devtools/client/webconsole/test/fixtures/stubs/evaluationResult.js
--- a/devtools/client/webconsole/test/fixtures/stubs/evaluationResult.js
+++ b/devtools/client/webconsole/test/fixtures/stubs/evaluationResult.js
@@ -44,7 +44,8 @@
   "userProvidedStyles": null,
   "notes": null,
   "indent": 0,
-  "prefix": ""
+  "prefix": "",
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`asdf()`, new ConsoleMessage({
@@ -76,7 +77,8 @@
   "userProvidedStyles": null,
   "notes": null,
   "indent": 0,
-  "prefix": ""
+  "prefix": "",
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`1 + @`, new ConsoleMessage({
@@ -108,7 +110,8 @@
   "userProvidedStyles": null,
   "notes": null,
   "indent": 0,
-  "prefix": ""
+  "prefix": "",
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`inspect({a: 1})`, new ConsoleMessage({
@@ -154,7 +157,8 @@
   "userProvidedStyles": null,
   "notes": null,
   "indent": 0,
-  "prefix": ""
+  "prefix": "",
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`cd(document)`, new ConsoleMessage({
@@ -180,7 +184,8 @@
   "userProvidedStyles": null,
   "notes": null,
   "indent": 0,
-  "prefix": ""
+  "prefix": "",
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`undefined`, new ConsoleMessage({
@@ -205,7 +210,8 @@
   "userProvidedStyles": null,
   "notes": null,
   "indent": 0,
-  "prefix": ""
+  "prefix": "",
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`longString message Error`, new ConsoleMessage({
@@ -236,7 +242,8 @@
   "userProvidedStyles": null,
   "notes": null,
   "indent": 0,
-  "prefix": ""
+  "prefix": "",
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`eval throw ""`, new ConsoleMessage({
@@ -262,7 +269,8 @@
   "userProvidedStyles": null,
   "notes": null,
   "indent": 0,
-  "prefix": ""
+  "prefix": "",
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`eval throw "tomato"`, new ConsoleMessage({
@@ -288,7 +296,8 @@
   "userProvidedStyles": null,
   "notes": null,
   "indent": 0,
-  "prefix": ""
+  "prefix": "",
+  "chromeContext": false
 }));
 
 stubPackets.set(`new Date(0)`, {
diff --git a/devtools/client/webconsole/test/fixtures/stubs/pageError.js b/devtools/client/webconsole/test/fixtures/stubs/pageError.js
--- a/devtools/client/webconsole/test/fixtures/stubs/pageError.js
+++ b/devtools/client/webconsole/test/fixtures/stubs/pageError.js
@@ -76,7 +76,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`SyntaxError: redeclaration of let a`, new ConsoleMessage({
@@ -131,7 +132,8 @@
   ],
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`TypeError longString message`, new ConsoleMessage({
@@ -187,7 +189,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`throw ""`, new ConsoleMessage({
@@ -211,7 +214,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPreparedMessages.set(`throw "tomato"`, new ConsoleMessage({
@@ -235,7 +239,8 @@
   "notes": null,
   "indent": 0,
   "prefix": "",
-  "private": false
+  "private": false,
+  "chromeContext": false
 }));
 
 stubPackets.set(`ReferenceError: asdf is not defined`, {
@@ -294,7 +299,8 @@
         "functionName": null
       }
     ],
-    "notes": null
+    "notes": null,
+    "chromeContext": false
   },
   "type": "pageError",
   "from": "server1.conn0.child1/consoleActor2"
@@ -345,7 +351,8 @@
           "column": 6
         }
       }
-    ]
+    ],
+    "chromeContext": false
   },
   "type": "pageError",
   "from": "server1.conn0.child1/consoleActor2"
@@ -397,7 +404,8 @@
         "functionName": null
       }
     ],
-    "notes": null
+    "notes": null,
+    "chromeContext": false
   },
   "type": "pageError",
   "from": "server1.conn0.child1/consoleActor2"
@@ -422,7 +430,8 @@
     "info": false,
     "private": false,
     "stacktrace": null,
-    "notes": null
+    "notes": null,
+    "chromeContext": false
   },
   "type": "pageError",
   "from": "server1.conn0.child1/consoleActor2"
@@ -447,7 +456,8 @@
     "info": false,
     "private": false,
     "stacktrace": null,
-    "notes": null
+    "notes": null,
+    "chromeContext": false
   },
   "type": "pageError",
   "from": "server1.conn0.child1/consoleActor2"
diff --git a/devtools/client/webconsole/types.js b/devtools/client/webconsole/types.js
--- a/devtools/client/webconsole/types.js
+++ b/devtools/client/webconsole/types.js
@@ -52,6 +52,7 @@
     prefix: "",
     private: false,
     logpointId: undefined,
+    chromeContext: false,
   }, props);
 };
 
diff --git a/devtools/client/webconsole/utils/messages.js b/devtools/client/webconsole/utils/messages.js
--- a/devtools/client/webconsole/utils/messages.js
+++ b/devtools/client/webconsole/utils/messages.js
@@ -195,6 +195,7 @@
     private: message.private,
     executionPoint: message.executionPoint,
     logpointId: message.logpointId,
+    chromeContext: message.chromeContext,
   });
 }
 
@@ -222,6 +223,7 @@
     messageText: message,
     timeStamp,
     private: message.private,
+    chromeContext: message.chromeContext,
   });
 }
 
@@ -259,6 +261,7 @@
     notes: pageError.notes,
     private: pageError.private,
     executionPoint: pageError.executionPoint,
+    chromeContext: pageError.chromeContext,
   });
 }
 
@@ -279,6 +282,7 @@
     cause: networkEvent.cause,
     private: networkEvent.private,
     securityState: networkEvent.securityState,
+    chromeContext: networkEvent.chromeContext,
   });
 }
 
diff --git a/devtools/server/actors/webconsole.js b/devtools/server/actors/webconsole.js
--- a/devtools/server/actors/webconsole.js
+++ b/devtools/server/actors/webconsole.js
@@ -1530,6 +1530,7 @@
       stacktrace: stack,
       notes: notesArray,
       executionPoint: pageError.executionPoint,
+      chromeContext: pageError.isFromChromeContext,
     };
   },
 

