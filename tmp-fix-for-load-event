# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  1c54b6e05b4337caff5ec02ba71358b656118898

diff --git a/browser/base/content/test/siteIdentity/browser_bug906190.js b/browser/base/content/test/siteIdentity/browser_bug906190.js
--- a/browser/base/content/test/siteIdentity/browser_bug906190.js
+++ b/browser/base/content/test/siteIdentity/browser_bug906190.js
@@ -43,18 +43,20 @@ async function doTest(parentTabSpec, chi
     // eslint-disable-next-line no-unsanitized/property
     mainDiv.innerHTML =
       '<p><a id="linkToOpenInNewTab" href="' + childTabSpec + '">Link</a></p>';
     content.document.body.appendChild(mainDiv);
 
     // Execute the test in the child tabs with the two methods to open it.
     for (let openFn of [simulateCtrlClick, simulateContextMenuOpenInTab]) {
       let promiseTabLoaded = waitForSomeTabToLoad();
+      info("WAITING");
       openFn(browser);
       await promiseTabLoaded;
+      info("DONE WAITING");
       gBrowser.selectTabAtIndex(2);
 
       if (waitForMetaRefresh) {
         await waitForSomeTabToLoad();
       }
 
       await testTaskFn();
 
@@ -81,20 +83,22 @@ function simulateContextMenuOpenInTab(br
                                            browser);
 }
 
 // Waits for a load event somewhere in the browser but ignore events coming
 // from <xul:browser>s without a tab assigned. That are most likely browsers
 // that preload the new tab page.
 function waitForSomeTabToLoad() {
   return new Promise(resolve => {
-    gBrowser.addEventListener("load", function onLoad(event) {
+    gBrowser.container.addEventListener("load", function onLoad(event) {
+      info("RECEIVED LOAD");
       let tab = gBrowser._getTabForContentWindow(event.target.defaultView.top);
+      info(tab);
       if (tab) {
-        gBrowser.removeEventListener("load", onLoad, true);
+        gBrowser.container.removeEventListener("load", onLoad, true);
         resolve();
       }
     }, true);
   });
 }
 
 /**
  * Ensure the Mixed Content Blocker is enabled.
