# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1554744610 25200
#      Mon Apr 08 10:30:10 2019 -0700
# Node ID 0de7cdfd891ed51db6e8525f809ac551043822f4
# Parent  7775ced80e99c60f1231b0b463e07f4da7face81
Bug 1542843 - Don't special case XUL documents in webExtensionTargetPrototype._shouldAddNewGlobalAsDebuggee;r=rpl

As we convert more chrome documents away from XUL we end up running
through two different paths in this function. These are going to be
filtered out in later checks anyway, so this change removes the early return.

Differential Revision: https://phabricator.services.mozilla.com/D26574

diff --git a/devtools/server/actors/targets/webextension.js b/devtools/server/actors/targets/webextension.js
--- a/devtools/server/actors/targets/webextension.js
+++ b/devtools/server/actors/targets/webextension.js
@@ -20,17 +20,16 @@ const {
   ParentProcessTargetActor,
   parentProcessTargetPrototype,
 } = require("devtools/server/actors/targets/parent-process");
 const makeDebugger = require("devtools/server/actors/utils/make-debugger");
 const { ActorClassWithSpec } = require("devtools/shared/protocol");
 const { webExtensionTargetSpec } = require("devtools/shared/specs/targets/webextension");
 
 loader.lazyRequireGetter(this, "unwrapDebuggerObjectGlobal", "devtools/server/actors/thread", true);
-loader.lazyRequireGetter(this, "ChromeUtils");
 const FALLBACK_DOC_MESSAGE = "Your addon does not have any document opened yet.";
 
 /**
  * Protocol.js expects only the prototype object, and does not maintain the prototype
  * chain when it constructs the ActorClass. For this reason we are using `extend` to
  * maintain the properties of BrowsingContextTargetActor.prototype
  */
 const webExtensionTargetPrototype = extend({}, parentProcessTargetPrototype);
@@ -342,21 +341,16 @@ webExtensionTargetPrototype._shouldAddNe
     } catch (e) {
       // The global might be a sandbox with a window object in its proto chain. If the
       // window navigated away since the sandbox was created, it can throw a security
       // exception during this property check as the sandbox no longer has access to
       // its own proto.
       return false;
     }
 
-    // Filter out any global which contains a XUL document.
-    if (ChromeUtils.getClassName(global.document) == "XULDocument") {
-      return false;
-    }
-
     // Change top level document as a simulated frame switching.
     if (global.document.ownerGlobal && this.isExtensionWindow(global)) {
       this._onNewExtensionWindow(global.document.ownerGlobal);
     }
 
     return global.document.ownerGlobal &&
            this.isExtensionWindowDescendent(global.document.ownerGlobal);
   }
