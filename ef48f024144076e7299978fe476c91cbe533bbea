
# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1543951467 28800
# Node ID ef48f024144076e7299978fe476c91cbe533bbea
# Parent  4440fbf71c72e13cfcb6257bbae6024052ffd46d
imported patch move-domcontentloaded-to-load

diff --git a/browser/base/content/browser.xul b/browser/base/content/browser.xul
--- a/browser/base/content/browser.xul
+++ b/browser/base/content/browser.xul
@@ -100,37 +100,30 @@ xmlns="http://www.w3.org/1999/xhtml"
   Services.scriptloader.loadSubScript("chrome://browser/content/browser-media.js", this);
   Services.scriptloader.loadSubScript("chrome://browser/content/browser-pageActions.js", this);
   Services.scriptloader.loadSubScript("chrome://browser/content/browser-plugins.js", this);
   Services.scriptloader.loadSubScript("chrome://browser/content/browser-sidebar.js", this);
   Services.scriptloader.loadSubScript("chrome://browser/content/browser-tabsintitlebar.js", this);
   Services.scriptloader.loadSubScript("chrome://browser/content/tabbrowser.js", this);
   Services.scriptloader.loadSubScript("chrome://browser/content/search/searchbar.js", this);
 
-  window.onload = gBrowserInit.onLoad.bind(gBrowserInit);
   window.onunload = gBrowserInit.onUnload.bind(gBrowserInit);
   window.onclose = WindowIsClosing;
 
 #ifdef BROWSER_XHTML
   window.addEventListener("readystatechange", () => {
     // We initially hide the window to prevent layouts during parse. This lets us
     // avoid accidental XBL construction and better match browser.xul (see Bug 1497975).
     gBrowserInit.onBeforeInitialXULLayout();
     document.documentElement.removeAttribute("hidden");
   }, { once: true, capture: true });
 #else
   window.addEventListener("MozBeforeInitialXULLayout",
     gBrowserInit.onBeforeInitialXULLayout.bind(gBrowserInit), { once: true });
 #endif
-  // The listener of DOMContentLoaded must be set on window, rather than
-  // document, because the window can go away before the event is fired.
-  // In that case, we don't want to initialize anything, otherwise we
-  // may be leaking things because they will never be destroyed after.
-  window.addEventListener("DOMContentLoaded",
-    gBrowserInit.onDOMContentLoaded.bind(gBrowserInit), { once: true });
 </script>
 
 # All sets except for popupsets (commands, keys, and stringbundles)
 # *must* go into the browser-sets.inc file so that they can be shared with other
 # top level windows in macWindow.inc.xul.
 #include browser-sets.inc
 
   <popupset id="mainPopupSet">
diff --git a/browser/components/nsBrowserGlue.js b/browser/components/nsBrowserGlue.js
--- a/browser/components/nsBrowserGlue.js
+++ b/browser/components/nsBrowserGlue.js
@@ -992,16 +992,37 @@ BrowserGlue.prototype = {
     Services.prefs.removeObserver("urlclassifier.trackingTable", this._matchCBCategory);
     Services.prefs.removeObserver("network.cookie.cookieBehavior", this._matchCBCategory);
     Services.prefs.removeObserver(ContentBlockingCategoriesPrefs.PREF_CB_CATEGORY, this._updateCBCategory);
   },
 
   // runs on startup, before the first command line handler is invoked
   // (i.e. before the first window is opened)
   _beforeUIStartup: function BG__beforeUIStartup() {
+
+
+    Services.wm.addListener({
+      /**
+       * This is called when a new window is opened, and handles registration of
+       * that window if it is a browser window.
+       *
+       * @param {nsIXULWindow} xulWin The xul window that was opened.
+       */
+      onOpenWindow(xulWin) {
+        let win = xulWin.docShell.domWindow;
+        win.addEventListener("load", () => {
+          if (win.document.documentElement.getAttribute("windowtype") != "navigator:browser") {
+            return;
+          }
+          win.gBrowserInit.onDOMContentLoaded();
+          win.gBrowserInit.onLoad();
+        }, {once: true});
+      },
+    });
+
     SessionStartup.init();
 
     if (Services.prefs.prefHasUserValue(PREF_PDFJS_ENABLED_CACHE_STATE)) {
       Services.ppmm.sharedData.set(
         "pdfjs.enabled",
         Services.prefs.getBoolPref(PREF_PDFJS_ENABLED_CACHE_STATE));
     } else {
       PdfJs.earlyInit();
