# HG changeset patch
# Parent 7014457b82a1a7425eaf0d349cd9dde258ac60bd
# User Michael Ratcliffe <mratcliffe@mozilla.com>
# Date 1411989351 -3600

Bug 1052736 - Show bubbles for event listeners added to documentElement r=bgrins

diff --git a/browser/devtools/markupview/test/browser_markupview_events.js b/browser/devtools/markupview/test/browser_markupview_events.js
--- a/browser/devtools/markupview/test/browser_markupview_events.js
+++ b/browser/devtools/markupview/test/browser_markupview_events.js
@@ -11,32 +11,43 @@ const TEST_URL = TEST_URL_ROOT + "doc_ma
 
 loadHelperScript("helper_events_test_runner.js");
 
 const TEST_DATA = [
   {
     selector: "html",
     expected: [
       {
+        type: "click",
+        filename: TEST_URL + ":46",
+        attributes: [
+          "Bubbling",
+          "DOM2"
+        ],
+        handler: 'function(foo, bar) {\n' +
+                 '  alert("documentElement event listener clicked");\n' +
+                 '}'
+      },
+      {
         type: "load",
         filename: TEST_URL,
         attributes: [
           "Bubbling",
           "DOM0"
         ],
         handler: "init();"
       }
     ]
   },
   {
     selector: "#container",
     expected: [
       {
         type: "mouseover",
-        filename: TEST_URL + ":62",
+        filename: TEST_URL + ":66",
         attributes: [
           "Capturing",
           "DOM2"
         ],
         handler: 'function mouseoverHandler(event) {\n' +
                  '  if (event.target.id !== "container") {\n' +
                  '    let output = document.getElementById("output");\n' +
                  '    output.textContent = event.target.textContent;\n' +
@@ -45,29 +56,29 @@ const TEST_DATA = [
       }
     ]
   },
   {
     selector: "#multiple",
     expected: [
       {
         type: "click",
-        filename: TEST_URL + ":69",
+        filename: TEST_URL + ":73",
         attributes: [
           "Bubbling",
           "DOM2"
         ],
         handler: 'function clickHandler(event) {\n' +
                  '  let output = document.getElementById("output");\n' +
                  '  output.textContent = "click";\n' +
                  '}'
       },
       {
         type: "mouseup",
-        filename: TEST_URL + ":78",
+        filename: TEST_URL + ":82",
         attributes: [
           "Bubbling",
           "DOM2"
         ],
         handler: 'function mouseupHandler(event) {\n' +
                  '  let output = document.getElementById("output");\n' +
                  '  output.textContent = "mouseup";\n' +
                  '}'
@@ -88,65 +99,65 @@ const TEST_DATA = [
       }
     ]
   },
   {
     selector: "#handleevent",
     expected: [
       {
         type: "click",
-        filename: TEST_URL + ":89",
+        filename: TEST_URL + ":93",
         attributes: [
           "Bubbling",
           "DOM2"
         ],
         handler: 'handleEvent: function(blah) {\n' +
                  '  alert("handleEvent clicked");\n' +
                  '}'
       }
     ]
   },
   {
     selector: "#fatarrow",
     expected: [
       {
         type: "click",
-        filename: TEST_URL + ":57",
+        filename: TEST_URL + ":61",
         attributes: [
           "Bubbling",
           "DOM2"
         ],
         handler: 'event => {\n' +
                  '  alert("Yay for the fat arrow!");\n' +
                  '}'
       }
     ]
   },
   {
     selector: "#boundhe",
     expected: [
       {
         type: "click",
-        filename: TEST_URL + ":101",
+        filename: TEST_URL + ":105",
         attributes: [
           "Bubbling",
           "DOM2"
         ],
         handler: 'handleEvent: function() {\n' +
                  '  alert("boundHandleEvent clicked");\n' +
                  '}'
       }
     ]
   },
   {
     selector: "#bound",
     expected: [
       {
         type: "click",
-        filename: TEST_URL + ":74",
+        filename: TEST_URL + ":78",
         attributes: [
           "Bubbling",
           "DOM2"
         ],
         handler: 'function boundClickHandler(event) {\n' +
                  '  alert("Bound event clicked");\n' +
                  '}'
       }
diff --git a/browser/devtools/markupview/test/doc_markup_events.html b/browser/devtools/markupview/test/doc_markup_events.html
--- a/browser/devtools/markupview/test/doc_markup_events.html
+++ b/browser/devtools/markupview/test/doc_markup_events.html
@@ -38,16 +38,20 @@
     }
     </style>
     <script type="application/javascript;version=1.8">
       function init() {
         let container = document.getElementById("container");
         let multiple = document.getElementById("multiple");
         let fatarrow = document.getElementById("fatarrow");
 
+        document.documentElement.addEventListener("click", function(foo, bar) {
+          alert("documentElement event listener clicked");
+        });
+
         container.addEventListener("mouseover", mouseoverHandler, true);
         multiple.addEventListener("click", clickHandler, false);
         multiple.addEventListener("mouseup", mouseupHandler, false);
 
         new handleEventClick();
         new boundHandleEventClick();
 
         let bound = document.getElementById("bound");
diff --git a/toolkit/devtools/event-parsers.js b/toolkit/devtools/event-parsers.js
--- a/toolkit/devtools/event-parsers.js
+++ b/toolkit/devtools/event-parsers.js
@@ -135,17 +135,20 @@ let parsers = [
     }
   },
   {
     id: "DOM events",
     hasListeners: function(node) {
       let listeners;
 
       if (node.nodeName.toLowerCase() === "html") {
+        let nodeListeners = eventListenerService.getListenerInfoFor(node) || [];
         listeners = eventListenerService.getListenerInfoFor(node.ownerGlobal) || [];
+
+        listeners = [...nodeListeners, ...listeners];
       } else {
         listeners = eventListenerService.getListenerInfoFor(node) || [];
       }
 
       for (let listener of listeners) {
         if (listener.listenerObject && listener.type) {
           return true;
         }
diff --git a/toolkit/devtools/server/actors/inspector.js b/toolkit/devtools/server/actors/inspector.js
--- a/toolkit/devtools/server/actors/inspector.js
+++ b/toolkit/devtools/server/actors/inspector.js
@@ -539,17 +539,20 @@ var NodeActor = exports.NodeActor = prot
     response: RetVal("imageData")
   }),
 
   /**
    * Get all event listeners that are listening on this node.
    */
   getEventListenerInfo: method(function() {
     if (this.rawNode.nodeName.toLowerCase() === "html") {
-      return this.getEventListeners(this.rawNode.ownerGlobal);
+      let nodeListeners =  this.getEventListeners(this.rawNode);
+      let listeners =  this.getEventListeners(this.rawNode.ownerGlobal);
+
+      return [...nodeListeners, ...listeners];
     }
     return this.getEventListeners(this.rawNode);
   }, {
     request: {},
     response: {
       events: RetVal("json")
     }
   }),
