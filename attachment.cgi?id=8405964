# HG changeset patch
# Parent 382f676d0ed98a144993c89a0eb21d1bd35a78c1
# User Gorman Ho <gormanchi@gmail.com>
Bug 993416 - Adding "Paste Outer HTML" to the inspector context menu; r=pgrins


diff --git a/browser/devtools/inspector/inspector-panel.js b/browser/devtools/inspector/inspector-panel.js
--- a/browser/devtools/inspector/inspector-panel.js
+++ b/browser/devtools/inspector/inspector-panel.js
@@ -580,23 +580,27 @@ InspectorPanel.prototype = {
       copyInnerHTML.removeAttribute("disabled");
       copyOuterHTML.removeAttribute("disabled");
     } else {
       unique.setAttribute("disabled", "true");
       copyInnerHTML.setAttribute("disabled", "true");
       copyOuterHTML.setAttribute("disabled", "true");
     }
 
-    // Enable the "edit HTML" item if the selection is an element and the root
-    // actor has the appropriate trait (isOuterHTMLEditable)
+    // Enable the "edit HTML" and "paste outer HTML" items if the selection
+    // is an element and the root actor has the appropriate trait
+    // (isOuterHTMLEditable)
     let editHTML = this.panelDoc.getElementById("node-menu-edithtml");
+    let pasteOuterHTML = this.panelDoc.getElementById("node-menu-pasteouterhtml");
     if (this.isOuterHTMLEditable && isSelectionElement) {
       editHTML.removeAttribute("disabled");
+      pasteOuterHTML.removeAttribute("disabled");
     } else {
       editHTML.setAttribute("disabled", "true");
+      pasteOuterHTML.setAttribute("disabled", "true");
     }
 
     // Enable the "copy image data-uri" item if the selection is previewable
     // which essentially checks if it's an image or canvas tag
     let copyImageData = this.panelDoc.getElementById("node-menu-copyimagedatauri");
     let markupContainer = this.markup.getContainer(this.selection.nodeFront);
     if (markupContainer && markupContainer.isPreviewable()) {
       copyImageData.removeAttribute("disabled");
@@ -705,16 +709,27 @@ InspectorPanel.prototype = {
     if (!this.selection.isNode()) {
       return;
     }
     if (this.markup) {
       this.markup.beginEditingOuterHTML(this.selection.nodeFront);
     }
   },
 
+  pasteOuterHTML: function InspectorPanel_pasteOuterHTML()
+  {
+    let clipboard = require("sdk/clipboard");
+    let flavors = clipboard.currentFlavors;
+    if (this.selection.isNode() &&
+        (flavors.indexOf("html") != -1 || flavors.indexOf("text") != -1)) {
+      let node = this.selection.nodeFront;
+      this.markup.updateNodeOuterHTML(node, clipboard.get(), node.outerHTML);
+    }
+  },
+
   /**
    * Copy the innerHTML of the selected Node to the clipboard.
    */
   copyInnerHTML: function InspectorPanel_copyInnerHTML()
   {
     if (!this.selection.isNode()) {
       return;
     }
diff --git a/browser/devtools/inspector/inspector.xul b/browser/devtools/inspector/inspector.xul
--- a/browser/devtools/inspector/inspector.xul
+++ b/browser/devtools/inspector/inspector.xul
@@ -51,16 +51,21 @@
       <menuitem id="node-menu-copyuniqueselector"
         label="&inspectorCopyUniqueSelector.label;"
         accesskey="&inspectorCopyUniqueSelector.accesskey;"
         oncommand="inspector.copyUniqueSelector()"/>
       <menuitem id="node-menu-copyimagedatauri"
         label="&inspectorCopyImageDataUri.label;"
         oncommand="inspector.copyImageDataUri()"/>
       <menuseparator/>
+      <menuitem id="node-menu-pasteouterhtml"
+        label="&inspectorHTMLPasteOuter.label;"
+        accesskey="&inspectorHTMLPasteOuter.accesskey;"
+        oncommand="inspector.pasteOuterHTML()"/>
+      <menuseparator/>
       <menuitem id="node-menu-delete"
         label="&inspectorHTMLDelete.label;"
         accesskey="&inspectorHTMLDelete.accesskey;"
         oncommand="inspector.deleteNode()"/>
       <menuseparator/>
       <menuitem id="node-menu-pseudo-hover"
         label=":hover" type="checkbox"
         oncommand="inspector.togglePseudoClass(':hover')"/>
diff --git a/browser/locales/en-US/chrome/browser/devtools/inspector.dtd b/browser/locales/en-US/chrome/browser/devtools/inspector.dtd
--- a/browser/locales/en-US/chrome/browser/devtools/inspector.dtd
+++ b/browser/locales/en-US/chrome/browser/devtools/inspector.dtd
@@ -5,16 +5,19 @@
 <!ENTITY inspectorHTMLCopyInner.accesskey   "I">
 
 <!ENTITY inspectorHTMLCopyOuter.label       "Copy Outer HTML">
 <!ENTITY inspectorHTMLCopyOuter.accesskey   "O">
 
 <!ENTITY inspectorCopyUniqueSelector.label       "Copy Unique Selector">
 <!ENTITY inspectorCopyUniqueSelector.accesskey   "U">
 
+<!ENTITY inspectorHTMLPasteOuter.label      "Paste Outer HTML">
+<!ENTITY inspectorHTMLPasteOuter.accesskey  "P">
+
 <!ENTITY inspectorHTMLDelete.label          "Delete Node">
 <!ENTITY inspectorHTMLDelete.accesskey      "D">
 
 <!ENTITY inspector.selectButton.tooltip     "Select element with mouse">
 
 <!ENTITY inspectorSearchHTML.label          "Search HTML">
 <!ENTITY inspectorSearchHTML.key            "F">
 
