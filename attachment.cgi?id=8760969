# HG changeset patch
# User moby <mvonbriesen@mozilla.com>
# Parent  91bd1c000101c281233cd1340faf18a8a374d8cc
Bug 1245337 - Fix content.console.log statements in browser_webconsole_bug_613642_maintain_scroll.js; r=bgrins

diff --git a/devtools/client/webconsole/test/browser_webconsole_bug_613642_maintain_scroll.js b/devtools/client/webconsole/test/browser_webconsole_bug_613642_maintain_scroll.js
--- a/devtools/client/webconsole/test/browser_webconsole_bug_613642_maintain_scroll.js
+++ b/devtools/client/webconsole/test/browser_webconsole_bug_613642_maintain_scroll.js
@@ -13,17 +13,19 @@ add_task(function* () {
 
   let hud = yield openConsole();
 
   hud.jsterm.clearOutput();
   let outputNode = hud.outputNode;
   let scrollBox = hud.ui.outputWrapper;
 
   for (let i = 0; i < 150; i++) {
-    content.console.log("test message " + i);
+    ContentTask.spawn(gBrowser.selectedBrowser, i, function* (num) {
+      content.console.log("test message " + num);
+    });
   }
 
   yield waitForMessages({
     webconsole: hud,
     messages: [{
       text: "test message 149",
       category: CATEGORY_WEBDEV,
       severity: SEVERITY_LOG,
@@ -47,17 +49,18 @@ add_task(function* () {
     is(scrollBox.scrollTop, 0, "scroll location updated (moved to top)");
     scrolled.resolve();
   };
   EventUtils.synthesizeKey("VK_HOME", {}, hud.iframeWindow);
 
   yield scrolled.promise;
 
   // add a message and make sure scroll doesn't change
-  content.console.log("test message 150");
+  ContentTask.spawn(gBrowser.selectedBrowser, null,
+    "() => content.console.log('test message 150')");
 
   yield waitForMessages({
     webconsole: hud,
     messages: [{
       text: "test message 150",
       category: CATEGORY_WEBDEV,
       severity: SEVERITY_LOG,
     }],
@@ -93,17 +96,18 @@ add_task(function* () {
     isnot(scrollBox.scrollTop, 0, "scroll location updated (moved to bottom)");
     scrolled.resolve();
   };
   EventUtils.synthesizeKey("VK_END", {});
   yield scrolled.promise;
 
   let oldScrollTop = scrollBox.scrollTop;
 
-  content.console.log("test message 151");
+  ContentTask.spawn(gBrowser.selectedBrowser, null,
+    "() => content.console.log('test message 151')");
 
   scrolled = promise.defer();
   scrollBox.onscroll = () => {
     if (scrollBox.scrollTop == oldScrollTop) {
       // Wait for scroll to change.
       return;
     }
     scrollBox.onscroll = null;
