# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1538582372 25200
#      Wed Oct 03 08:59:32 2018 -0700
# Node ID 7540593d3500fc7458512c4f12b5584b304f43e9
# Parent  f2d7836b93f9ad88ef27388df27be1e6510bcdb8
Bug 1495946 - WIP - Mochitest for missing inserted nodes

Differential Revision: https://phabricator.services.mozilla.com/D7619

diff --git a/toolkit/content/tests/chrome/chrome.ini b/toolkit/content/tests/chrome/chrome.ini
--- a/toolkit/content/tests/chrome/chrome.ini
+++ b/toolkit/content/tests/chrome/chrome.ini
@@ -101,16 +101,17 @@ skip-if = (os == 'mac' && os_version == 
 [test_bug792324.xul]
 [test_bug1048178.xul]
 skip-if = toolkit == "cocoa"
 [test_button.xul]
 [test_closemenu_attribute.xul]
 [test_contextmenu_list.xul]
 [test_custom_element_base.xul]
 [test_custom_element_delay_connection.xul]
+[test_custom_element_in_xbl.xul]
 [test_deck.xul]
 [test_dialogfocus.xul]
 [test_editor_for_input_with_autocomplete.html]
 [test_editor_for_textbox_with_autocomplete.xul]
 [test_findbar.xul]
 subsuite = clipboard
 [test_findbar_entireword.xul]
 [test_findbar_events.xul]
diff --git a/toolkit/content/tests/chrome/test_custom_element_in_xbl.xul b/toolkit/content/tests/chrome/test_custom_element_in_xbl.xul
new file mode 100644
--- /dev/null
+++ b/toolkit/content/tests/chrome/test_custom_element_in_xbl.xul
@@ -0,0 +1,91 @@
+<?xml version="1.0"?>
+<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
+<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css" type="text/css"?>
+
+<window title="Custom Element Base Class Tests"
+  onload="runTests();"
+  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
+  <script type="application/javascript" src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="application/javascript" src="chrome://mochikit/content/tests/SimpleTest/EventUtils.js"></script>
+
+  <script type="application/javascript"><![CDATA[
+    customElements.define("custom-element", class Foo extends MozXULElement {
+      connectedCallback() {
+        // If this line is commented out, the test passes:
+        var elements = [...this.querySelectorAll("radio")];
+      }
+    });
+  ]]></script>
+
+  <bindings xmlns="http://www.mozilla.org/xbl"
+            xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
+    <binding id="radio">
+      <implementation>
+        <constructor>
+        </constructor>
+      </implementation>
+    </binding>
+    <binding id="wiz">
+      <content>
+        <xul:box flex="1" anonid="box">
+          <children includes="wizpage"/>
+        </xul:box>
+      </content>
+    </binding>
+  </bindings>
+
+  <wiz style="-moz-binding: url('#wiz')">
+    <wizpage>
+      <description>page1</description>
+      <custom-element>
+          <radio style="-moz-binding: url('#radio');" />
+      </custom-element>
+    </wizpage>
+    <wizpage>
+      <description>page2</description>
+      <custom-element>
+        <radio style="-moz-binding: url('#radio');" />
+      </custom-element>
+    </wizpage>
+    <wizpage>
+      <description>page3</description>
+      <custom-element>
+        <radio style="-moz-binding: url('#radio');" />
+      </custom-element>
+    </wizpage>
+  </wiz>
+
+  <!-- test results are displayed in the html:body -->
+  <body xmlns="http://www.w3.org/1999/xhtml" style="height: 300px; overflow: auto;"/>
+
+  <!-- test code goes here -->
+  <script type="application/javascript"><![CDATA[
+
+  SimpleTest.waitForExplicitFinish();
+
+  async function runTests() {
+    let wiz = document.querySelector("wiz");
+
+    is(wiz.querySelectorAll("wizpage").length, 3, "correct number of non-anon children");
+    let box = document.getAnonymousElementByAttribute(wiz, "anonid", "box");
+
+
+    const walker = Cc["@mozilla.org/inspector/deep-tree-walker;1"]
+                .createInstance(Ci.inIDeepTreeWalker);
+    walker.showAnonymousContent = true;
+    walker.init(box, NodeFilter.SHOW_ALL);
+    walker.currentNode = box;
+
+    let numInsertedChildren = 1;
+    walker.firstChild();
+    while (walker.nextSibling()) {
+      numInsertedChildren++;
+    }
+
+    is(numInsertedChildren, 3, "correct number of inserted children");
+  }
+
+  ]]>
+  </script>
+</window>
+
