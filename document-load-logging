# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  dd873bcfd12279d04046b431ce15d7b81ecec9df

diff --git a/dom/base/nsDocument.cpp b/dom/base/nsDocument.cpp
--- a/dom/base/nsDocument.cpp
+++ b/dom/base/nsDocument.cpp
@@ -8419,16 +8419,17 @@ nsDocument::UnblockOnload(bool aFireSync
       }
     } else if (mIsBeingUsedAsImage) {
       // To correctly unblock onload for a document that contains an SVG
       // image, we need to know when all of the SVG document's resources are
       // done loading, in a way comparable to |window.onload|. We fire this
       // event to indicate that the SVG should be considered fully loaded.
       // Because scripting is disabled on SVG-as-image documents, this event
       // is not accessible to content authors. (See bug 837315.)
+printf("Completed SVG %s\n", GetDocumentURI()->GetSpecOrDefault().get());
       RefPtr<AsyncEventDispatcher> asyncDispatcher =
         new AsyncEventDispatcher(this,
                                  NS_LITERAL_STRING("MozSVGAsImageDocumentLoad"),
                                  CanBubble::eNo,
                                  ChromeOnlyDispatch::eNo);
       asyncDispatcher->PostDOMEvent();
     }
   }
@@ -8447,16 +8448,18 @@ public:
   }
 private:
   RefPtr<nsIDocument> mDoc;
 };
 
 void
 nsIDocument::PostUnblockOnloadEvent()
 {
+  printf("Completed DOC %s %d %d\n", GetDocumentURI()->GetSpecOrDefault().get());
+
   MOZ_RELEASE_ASSERT(NS_IsMainThread());
   nsCOMPtr<nsIRunnable> evt = new nsUnblockOnloadEvent(this);
   nsresult rv =
     Dispatch(TaskCategory::Other, evt.forget());
   if (NS_SUCCEEDED(rv)) {
     // Stabilize block count so we don't post more events while this one is up
     ++mOnloadBlockCount;
   } else {
