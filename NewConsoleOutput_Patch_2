# HG changeset patch
# User Lin Clark <lclark@mozilla.com>
Bug 1305788 - Part 2: Remove mocha unit testing of actions. r=me


diff --git a/devtools/client/webconsole/new-console-output/test/actions/filters.test.js b/devtools/client/webconsole/new-console-output/test/actions/filters.test.js
deleted file mode 100644
index 7ab4677..0000000
--- a/devtools/client/webconsole/new-console-output/test/actions/filters.test.js
+++ /dev/null
@@ -1,54 +0,0 @@
-/* Any copyright is dedicated to the Public Domain.
-   http://creativecommons.org/publicdomain/zero/1.0/ */
-"use strict";
-
-const actions = require("devtools/client/webconsole/new-console-output/actions/index");
-const {
-  FILTER_TEXT_SET,
-  FILTER_TOGGLE,
-  FILTERS_CLEAR,
-  MESSAGE_LEVEL
-} = require("devtools/client/webconsole/new-console-output/constants");
-
-const expect = require("expect");
-
-describe("Filter actions:", () => {
-  describe("filterTextSet", () => {
-    it("creates expected action", () => {
-      const action = actions.filterTextSet("test");
-      const expected = {
-        type: FILTER_TEXT_SET,
-        text: "test"
-      };
-
-      expect(action).toEqual(expected);
-    });
-  });
-
-  describe("filterToggle", () => {
-    it("creates expected action", () => {
-      const action = actions.filterToggle(MESSAGE_LEVEL.ERROR);
-      const expected = {
-        type: FILTER_TOGGLE,
-        filter: "error"
-      };
-
-      expect(action).toEqual(expected);
-    });
-  });
-
-  describe("filterTextApply", () => {
-
-  });
-
-  describe("filtersClear", () => {
-    it("creates expected action", () => {
-      const action = actions.filtersClear();
-      const expected = {
-        type: FILTERS_CLEAR
-      };
-
-      expect(action).toEqual(expected);
-    });
-  });
-});
diff --git a/devtools/client/webconsole/new-console-output/test/actions/messages.test.js b/devtools/client/webconsole/new-console-output/test/actions/messages.test.js
deleted file mode 100644
index 5bdf2e2..0000000
--- a/devtools/client/webconsole/new-console-output/test/actions/messages.test.js
+++ /dev/null
@@ -1,88 +0,0 @@
-/* Any copyright is dedicated to the Public Domain.
-   http://creativecommons.org/publicdomain/zero/1.0/ */
-"use strict";
-
-const { thunk } = require("devtools/client/shared/redux/middleware/thunk");
-const configureStore = require("redux-mock-store").default;
-const { getRepeatId } = require("devtools/client/webconsole/new-console-output/utils/messages");
-const { stubPackets, stubPreparedMessages } = require("devtools/client/webconsole/new-console-output/test/fixtures/stubs/index");
-const { setupActions } = require("devtools/client/webconsole/new-console-output/test/helpers");
-const constants = require("devtools/client/webconsole/new-console-output/constants");
-
-const mockStore = configureStore([ thunk ]);
-
-const expect = require("expect");
-
-let actions;
-
-describe("Message actions:", () => {
-  beforeEach(()=>{
-    actions = setupActions();
-  });
-
-  describe("messageAdd", () => {
-    it("dispatches expected action given a packet", () => {
-      const packet = stubPackets.get("console.log('foobar', 'test')");
-      const store = mockStore({});
-      store.dispatch(actions.messageAdd(packet));
-
-      const actualActions = store.getActions();
-      expect(actualActions.length).toEqual(1);
-
-      const addAction = actualActions[0];
-      const {message} = addAction;
-      const expectedAction = {
-        type: constants.MESSAGE_ADD,
-        message: stubPreparedMessages.get("console.log('foobar', 'test')")
-      };
-      expect(message.toJS()).toEqual(expectedAction.message.toJS());
-    });
-
-    it("dispatches expected actions given a console.clear packet", () => {
-      const packet = stubPackets.get("console.clear()");
-      const store = mockStore({});
-      store.dispatch(actions.messageAdd(packet));
-
-      const actualActions = store.getActions();
-      expect(actualActions.length).toEqual(1);
-
-      const [clearAction, addAction] = actualActions[0].actions;
-      expect(clearAction.type).toEqual(constants.MESSAGES_CLEAR);
-
-      const {message} = addAction;
-      const expectedAction = {
-        type: constants.MESSAGE_ADD,
-        message: stubPreparedMessages.get("console.clear()")
-      };
-      expect(addAction.type).toEqual(constants.MESSAGE_ADD);
-      expect(message.toJS()).toEqual(expectedAction.message.toJS());
-    });
-
-    it("dispatches expected action given a console.table packet", () => {
-      const packet = stubPackets.get("console.table(['a', 'b', 'c'])");
-      const store = mockStore({});
-      store.dispatch(actions.messageAdd(packet));
-
-      const expectedActions = store.getActions();
-      expect(expectedActions.length).toEqual(1);
-
-      const addAction = expectedActions[0];
-      const {message} = addAction;
-      const expected = {
-        type: constants.MESSAGE_ADD,
-        message: stubPreparedMessages.get("console.table(['a', 'b', 'c'])")
-      };
-      expect(message.toJS()).toEqual(expected.message.toJS());
-    });
-  });
-
-  describe("messagesClear", () => {
-    it("creates expected action", () => {
-      const action = actions.messagesClear();
-      const expected = {
-        type: constants.MESSAGES_CLEAR,
-      };
-      expect(action).toEqual(expected);
-    });
-  });
-});
diff --git a/devtools/client/webconsole/new-console-output/test/actions/ui.test.js b/devtools/client/webconsole/new-console-output/test/actions/ui.test.js
deleted file mode 100644
index 0bb43ae..0000000
--- a/devtools/client/webconsole/new-console-output/test/actions/ui.test.js
+++ /dev/null
@@ -1,23 +0,0 @@
-/* Any copyright is dedicated to the Public Domain.
-   http://creativecommons.org/publicdomain/zero/1.0/ */
-"use strict";
-
-const actions = require("devtools/client/webconsole/new-console-output/actions/index");
-const {
-  FILTER_BAR_TOGGLE
-} = require("devtools/client/webconsole/new-console-output/constants");
-
-const expect = require("expect");
-
-describe("UI actions:", () => {
-  describe("filterBarToggle", () => {
-    it("creates expected action", () => {
-      const action = actions.filterBarToggle();
-      const expected = {
-        type: FILTER_BAR_TOGGLE
-      };
-
-      expect(action).toEqual(expected);
-    });
-  });
-});
diff --git a/devtools/client/webconsole/new-console-output/test/components/filter-button.test.js b/devtools/client/webconsole/new-console-output/test/components/filter-button.test.js
index 609825a..f8ab7ed 100644
--- a/devtools/client/webconsole/new-console-output/test/components/filter-button.test.js
+++ b/devtools/client/webconsole/new-console-output/test/components/filter-button.test.js
@@ -1,49 +1,34 @@
 /* Any copyright is dedicated to the Public Domain.
    http://creativecommons.org/publicdomain/zero/1.0/ */
 "use strict";
 
 const expect = require("expect");
-const sinon = require("sinon");
-const { render, shallow } = require("enzyme");
+const { render } = require("enzyme");
 
 const { createFactory } = require("devtools/client/shared/vendor/react");
 
 const FilterButton = createFactory(require("devtools/client/webconsole/new-console-output/components/filter-button").FilterButton);
-const {
-  FILTER_TOGGLE,
-  MESSAGE_LEVEL
-} = require("devtools/client/webconsole/new-console-output/constants");
+const { MESSAGE_LEVEL } = require("devtools/client/webconsole/new-console-output/constants");
 
 describe("FilterButton component:", () => {
   const props = {
     active: true,
     label: "Error",
     filterKey: MESSAGE_LEVEL.ERROR,
-    dispatch: sinon.spy()
   };
 
   it("displays as active when turned on", () => {
     const wrapper = render(FilterButton(props));
     expect(wrapper.html()).toBe(
       "<button class=\"menu-filter-button checked\">Error</button>"
     );
   });
 
   it("displays as inactive when turned off", () => {
     const inactiveProps = Object.assign({}, props, { active: false });
     const wrapper = render(FilterButton(inactiveProps));
     expect(wrapper.html()).toBe(
       "<button class=\"menu-filter-button\">Error</button>"
     );
   });
-
-  it("fires FILTER_TOGGLE action when clicked", () => {
-    const wrapper = shallow(FilterButton(props));
-    wrapper.find("button").simulate("click");
-    const call = props.dispatch.getCall(0);
-    expect(call.args[0]).toEqual({
-      type: FILTER_TOGGLE,
-      filter: MESSAGE_LEVEL.ERROR
-    });
-  });
 });
diff --git a/devtools/client/webconsole/package.json b/devtools/client/webconsole/package.json
index ccc9362..6349f20 100644
--- a/devtools/client/webconsole/package.json
+++ b/devtools/client/webconsole/package.json
@@ -5,17 +5,16 @@
     "amd-loader": "0.0.5",
     "babel-preset-es2015": "^6.6.0",
     "babel-register": "^6.7.2",
     "enzyme": "^2.4.1",
     "expect": "^1.16.0",
     "jsdom": "^9.4.1",
     "jsdom-global": "^2.0.0",
     "mocha": "^2.5.3",
-    "redux-mock-store": "^1.1.4",
     "require-hacker": "^2.1.4",
     "sinon": "^1.17.5"
   },
   "scripts": {
     "postinstall": "cd ../ && npm install && cd webconsole",
     "test": "NODE_PATH=`pwd`/../../../:`pwd`/../../../devtools/client/shared/vendor/ mocha new-console-output/test/**/*.test.js --compilers js:babel-register -r jsdom-global/register -r ./new-console-output/test/requireHelper.js"
   }
 }
