# HG changeset patch
# User Matteo Ferretti <mferretti@mozilla.com>
# Date 1431509776 -7200
#      Wed May 13 11:36:16 2015 +0200
# Node ID 662fb1ac48613389596be6a0115c5f736b07b6d5
# Parent  9a92b9861865b79981b36f89e99ae98760151d45
Bug 1153474 - CMD + G in style editor; fixing behavior

diff --git a/browser/devtools/sourceeditor/editor.js b/browser/devtools/sourceeditor/editor.js
--- a/browser/devtools/sourceeditor/editor.js
+++ b/browser/devtools/sourceeditor/editor.js
@@ -294,16 +294,50 @@ Editor.prototype = {
         ev.preventDefault();
         if (!this.config.contextMenu) return;
         let popup = this.config.contextMenu;
         if (typeof popup == "string")
           popup = el.ownerDocument.getElementById(this.config.contextMenu);
         popup.openPopupAtScreen(ev.screenX, ev.screenY, true);
       }, false);
 
+      // Intercept the find again keystroke on CodeMirror, to perform the
+      // search even if the focus is still on search dialog's input instead of
+      // the editor.
+
+      let findAgainKey = L10N.GetStringFromName("findAgain.commandkey");
+      let accel = Services.appinfo.OS === "Darwin" ? "metaKey" : "ctrlKey";
+
+      cm.getWrapperElement().addEventListener("keydown", (ev) => {
+        let isFindAgainKey = ev[accel] && ev.key.toUpperCase() === findAgainKey;
+        let isInInput = ev.originalTarget.tagName === "INPUT";
+
+        if (isInInput && isFindAgainKey) {
+          ev.preventDefault();
+
+          let query = ev.originalTarget.value;
+
+          if (!cm.state.search || cm.state.search.query !== query) {
+            cm.state.search = {
+              posFrom: null,
+              posTo: null,
+              overlay: null,
+              query
+            };
+          }
+
+          if (ev.shiftKey) {
+            cm.execCommand("findPrev");
+          } else {
+            cm.execCommand("findNext");
+          }
+        }
+      });
+
+
       cm.on("focus", () => this.emit("focus"));
       cm.on("scroll", () => this.emit("scroll"));
       cm.on("change", () => {
         this.emit("change");
         if (!this._lastDirty) {
           this._lastDirty = true;
           this.emit("dirty-change");
         }
diff --git a/browser/locales/en-US/chrome/browser/devtools/sourceeditor.properties b/browser/locales/en-US/chrome/browser/devtools/sourceeditor.properties
--- a/browser/locales/en-US/chrome/browser/devtools/sourceeditor.properties
+++ b/browser/locales/en-US/chrome/browser/devtools/sourceeditor.properties
@@ -94,8 +94,13 @@ moveLineDown.commandkey=Alt-Down
 
 # LOCALIZATION NOTE  (autocomplete.commandkey): This is the key to use
 # in conjunction with Ctrl for autocompletion.
 autocompletion.commandkey=Space
 
 # LOCALIZATION NOTE  (showInformation2.commandkey): This is the key to use to
 # show more information, like type inference.
 showInformation2.commandkey=Shift-Ctrl-Space
+
+# LOCALIZATION NOTE  (findAgain.commandkey): This is the key to use in
+# conjunction with accel (Command on Mac or Ctrl on other platforms) to find
+# again the typed search
+findAgain.commandkey=G
