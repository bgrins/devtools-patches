# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  74b7ae11c6bf8677ac9a3569e2f25b7c9ec2c090

diff --git a/browser/base/content/tabbrowser-tabs.js b/browser/base/content/tabbrowser-tabs.js
--- a/browser/base/content/tabbrowser-tabs.js
+++ b/browser/base/content/tabbrowser-tabs.js
@@ -1812,17 +1812,17 @@ class MozTabbrowserTabs extends MozEleme
       this.setAttribute("hiddensoundplaying", "true");
     } else {
       this._hiddenSoundPlayingTabs.delete(tab);
       if (this._hiddenSoundPlayingTabs.size == 0) {
         this.removeAttribute("hiddensoundplaying");
       }
     }
   }
-  disconnectedCallback() {
+  destroy() {
     Services.prefs.removeObserver("privacy.userContext", this);
 
     CustomizableUI.removeListener(this);
   }
 }
 
 MozXULElement.implementCustomInterface(MozTabbrowserTabs, [Ci.nsIObserver]);
 customElements.define("tabbrowser-tabs", MozTabbrowserTabs, {extends: "tabs"});
diff --git a/browser/base/content/tabbrowser.js b/browser/base/content/tabbrowser.js
--- a/browser/base/content/tabbrowser.js
+++ b/browser/base/content/tabbrowser.js
@@ -4471,16 +4471,17 @@ window._gBrowser = {
 
     // We want panel IDs to be globally unique, that's why we include the
     // window ID. We switched to a monotonic counter as Date.now() lead
     // to random failures because of colliding IDs.
     return "panel-" + outerID + "-" + (++this._uniquePanelIDCounter);
   },
 
   destroy() {
+    this.tabContainer.destroy();
     Services.obs.removeObserver(this, "contextual-identity-updated");
 
     for (let tab of this.tabs) {
       let browser = tab.linkedBrowser;
       if (browser.registeredOpenURI) {
         let userContextId = browser.getAttribute("usercontextid") || 0;
         this.UrlbarProviderOpenTabs.unregisterOpenTab(browser.registeredOpenURI.spec,
                                                       userContextId);
