# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  d8ee3491796e8de366aad3cc0ec9628591185ccd
Bug 1500626 - Refactor a couple of menu mochitests

I was working with or debugging these in the process of doing the previous
changeset, so took the oppurtunity to switch these to add_task and do some
miscellaneous cleanup.

diff --git a/toolkit/content/tests/chrome/test_menu_hide.xul b/toolkit/content/tests/chrome/test_menu_hide.xul
--- a/toolkit/content/tests/chrome/test_menu_hide.xul
+++ b/toolkit/content/tests/chrome/test_menu_hide.xul
@@ -1,74 +1,71 @@
 <?xml version="1.0"?>
-<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
-<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css" type="text/css"?>
+<?xml-stylesheet href="chrome://global/skin"?>
+<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css"?>
 
 <window title="Menu Destruction Test"
-  onload="setTimeout(runTests, 0);"
   xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
 
-  <script src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>      
-  <script src="chrome://mochikit/content/tests/SimpleTest/EventUtils.js"></script>      
+  <script src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>
+  <script src="chrome://mochikit/content/tests/SimpleTest/EventUtils.js"></script>
 
 <menu id="menu">
-  <menupopup onpopuphidden="if (event.target == this) done()">
+  <menupopup>
     <menu id="submenu" label="One">
-      <menupopup onpopupshown="submenuOpened();">
+      <menupopup>
         <menuitem label="Two"/>
       </menupopup>
     </menu>
   </menupopup>
 </menu>
 
-<script class="testbody" type="application/javascript">
+<script>
 <![CDATA[
 
-SimpleTest.waitForExplicitFinish();
-
-function runTests()
-{
+add_task(async function run() {
   var menu = $("menu");
   var menuitemAddedWhileHidden = menu.appendItem("Added while hidden");
   ok(!menuitemAddedWhileHidden.querySelector(".menu-text"), "hidden menuitem hasn't rendered yet.");
 
-  menu.menupopup.addEventListener("popupshown", () => {
-    is(menuitemAddedWhileHidden.querySelector(".menu-text").value, "Added while hidden",
-      "menuitemAddedWhileHidden item has rendered after shown.");
-    var menuitemAddedWhileShown = menu.appendItem("Added while shown");
-    is(menuitemAddedWhileShown.querySelector(".menu-text").value, "Added while shown",
-      "menuitemAddedWhileShown item has eagerly rendered.");
+  await new Promise(r=> {
+    menu.menupopup.addEventListener("popupshown", r, { once: true });
+    menu.open = true;
+  });
+  is(menuitemAddedWhileHidden.querySelector(".menu-text").value, "Added while hidden",
+    "menuitemAddedWhileHidden item has rendered after shown.");
+  var menuitemAddedWhileShown = menu.appendItem("Added while shown");
+  is(menuitemAddedWhileShown.querySelector(".menu-text").value, "Added while shown",
+    "menuitemAddedWhileShown item has eagerly rendered.");
 
-    var submenu = $("submenu");
-    is(submenu.querySelector(".menu-text").value, "One", "submenu has rendered.");
+  var submenu = $("submenu");
+  is(submenu.querySelector(".menu-text").value, "One", "submenu has rendered.");
 
-    var submenuDynamic = document.createXULElement("menu");
-    submenuDynamic.setAttribute("label", "Dynamic");
-    ok(!submenuDynamic.querySelector(".menu-text"), "dynamic submenu hasn't rendered yet.");
-    menu.menupopup.append(submenuDynamic);
-    is(submenuDynamic.querySelector(".menu-text").value, "Dynamic", "dynamic submenu has rendered.");
+  var submenuDynamic = document.createXULElement("menu");
+  submenuDynamic.setAttribute("label", "Dynamic");
+  ok(!submenuDynamic.querySelector(".menu-text"), "dynamic submenu hasn't rendered yet.");
+  menu.menupopup.append(submenuDynamic);
+  is(submenuDynamic.querySelector(".menu-text").value, "Dynamic", "dynamic submenu has rendered.");
 
+  var submenu = $("submenu");
+  await new Promise(r=> {
+    submenu.menupopup.addEventListener("popupshown", r, { once: true });
     menu.menupopup.firstElementChild.open = true;
-  }, { once: true });
-  menu.open = true;
-}
+  });
 
-function submenuOpened()
-{
-  var submenu = $("submenu");
   is(submenu.getAttribute('_moz-menuactive'), "true", "menu highlighted");
   submenu.hidden = true;
-  $("menu").open = false;
-}
 
-function done()
-{
-  ok(!$("submenu").hasAttribute('_moz-menuactive'), "menu unhighlighted");
-  SimpleTest.finish();
-}
+  await new Promise(r=> {
+    menu.menupopup.addEventListener("popuphidden", r, { once: true });
+    menu.open = false;
+  });
+
+  ok(!submenu.hasAttribute('_moz-menuactive'), "menu unhighlighted");
+});
 
 ]]>
 </script>
 
 <body xmlns="http://www.w3.org/1999/xhtml">
 <p id="display">
 </p>
 <div id="content" style="display: none">
diff --git a/toolkit/content/tests/chrome/test_menulist_paging.xul b/toolkit/content/tests/chrome/test_menulist_paging.xul
--- a/toolkit/content/tests/chrome/test_menulist_paging.xul
+++ b/toolkit/content/tests/chrome/test_menulist_paging.xul
@@ -1,19 +1,17 @@
 <?xml version="1.0"?>
-<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
-<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css" type="text/css"?>
+<?xml-stylesheet href="chrome://global/skin"?>
+<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css"?>
 
 <window title="Menulist Tests"
-        onload="setTimeout(startTest, 0);"
-        onpopupshown="menulistShown()" onpopuphidden="runTest()"
         xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
 
-  <script src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>      
-  <script src="chrome://mochikit/content/tests/SimpleTest/EventUtils.js"></script>      
+  <script src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>
+  <script src="chrome://mochikit/content/tests/SimpleTest/EventUtils.js"></script>
 
 <menulist id="menulist1">
   <menupopup id="menulist-popup1">
     <menuitem label="One"/>
     <menuitem label="Two"/>
     <menuitem label="Three"/>
     <menuitem label="Four"/>
     <menuitem label="Five"/>
@@ -65,94 +63,86 @@
     <menuitem label="Six" selected="true"/>
     <menuitem label="Seven"/>
     <menuitem label="Eight"/>
     <menuitem label="Nine"/>
     <label value="Ten"/>
   </menupopup>
 </menulist>
 
-<script class="testbody" type="application/javascript">
+<script>
 <![CDATA[
 
-SimpleTest.waitForExplicitFinish();
-
-let test;
-
 // Fields:
 //  list - menulist id
 //  initial - initial selected index
 //  scroll - index of item at top of the visible scrolled area, -1 to skip this test
 //  downs - array of indicies that will be selected when pressing down in sequence
 //  ups - array of indicies that will be selected when pressing up in sequence
 let tests = [
   { list: "menulist1", initial: 0, scroll: 0, downs: [3, 6, 9, 9],
                                    ups: [6, 3, 0, 0] },
   { list: "menulist2", initial: 1, scroll: 0, downs: [4, 7, 8, 8],
                                    ups: [5, 2, 1] },
   { list: "menulist3", initial: 1, scroll: -1, downs: [6, 8, 8],
                                    ups: [3, 1, 1] },
-  { list: "menulist4", initial: 5, scroll: 2, downs: [], ups: [] }
+  { list: "menulist4", initial: 5, scroll: 2, downs: [], ups: [] },
 ];
 
-function startTest()
-{
+add_task(async function run() {
   let popup = document.getElementById("menulist-popup1");
   let menupopupHeight = popup.getBoundingClientRect().height;
   let menuitemHeight = popup.firstChild.getBoundingClientRect().height;
 
   // First, set the height of each popup to the height of four menuitems plus
   // any padding and border on the menupopup.
   let height = menuitemHeight * 4 + (menupopupHeight - menuitemHeight * 10);
-  popup.height = height;
-  document.getElementById("menulist-popup2").height = height;
-  document.getElementById("menulist-popup3").height = height;
-  document.getElementById("menulist-popup4").height = height;
-
-  runTest();
-}
-
-function runTest()
-{
-  if (!tests.length) {
-    SimpleTest.finish();
-    return;
+  for (let menupopup of document.querySelectorAll("menupopup")) {
+    menupopup.height = height;
   }
 
-  test = tests.shift();
-  document.getElementById(test.list).open = true;
-}
+  for (let test of tests) {
+    await runTest(test);
+  }
+});
 
-function menulistShown()
-{
+async function runTest(test) {
   let menulist = document.getElementById(test.list);
+  let menupopup = menulist.menupopup;
+
+  await new Promise(r=> {
+    menupopup.addEventListener("popupshown", r, { once: true });
+    menulist.open = true;
+  });
+
   is(menulist.activeChild.label, menulist.getItemAtIndex(test.initial).label, test.list + " initial selection");
 
-  let cs = window.getComputedStyle(menulist.menupopup);
+  let cs = window.getComputedStyle(menupopup);
   let bpTop = parseFloat(cs.paddingTop) + parseFloat(cs.borderTopWidth);
 
   // Skip menulist3 as it has a label that scrolling doesn't need normally deal with.
   if (test.scroll >= 0) {
-    is(menulist.menupopup.childNodes[test.scroll].getBoundingClientRect().top,
-       menulist.menupopup.getBoundingClientRect().top + bpTop,
+    is(menupopup.childNodes[test.scroll].getBoundingClientRect().top,
+       menupopup.getBoundingClientRect().top + bpTop,
        "Popup scroll at correct position");
   }
 
   for (let i = 0; i < test.downs.length; i++) {
     sendKey("PAGE_DOWN");
     is(menulist.activeChild.label, menulist.getItemAtIndex(test.downs[i]).label, test.list + " page down " + i);
   }
 
   for (let i = 0; i < test.ups.length; i++) {
     sendKey("PAGE_UP");
     is(menulist.activeChild.label, menulist.getItemAtIndex(test.ups[i]).label, test.list + " page up " + i);
   }
 
   menulist.open = false;
 }
+
 ]]>
 </script>
 
 <body xmlns="http://www.w3.org/1999/xhtml">
 <p id="display">
 </p>
 <div id="content" style="display: none">
 </div>
