# HG changeset patch
# Parent 162b121760e1dfba54bc7c30f91929ad461b7e73
# User Brian Grinstead <bgrinstead@mozilla.com>
remove codemirror integrations from editor

diff --git a/browser/devtools/sourceeditor/editor.js b/browser/devtools/sourceeditor/editor.js
--- a/browser/devtools/sourceeditor/editor.js
+++ b/browser/devtools/sourceeditor/editor.js
@@ -315,19 +315,27 @@ Editor.prototype = {
       this.container = env;
       editors.set(this, cm);
 
       this.resetIndentUnit();
 
       def.resolve();
     };
 
-    env.addEventListener("load", onLoad, true);
-    env.setAttribute("src", CM_IFRAME);
-    el.appendChild(env);
+    // Use a textarea instead of codemirror
+    let editor = el.ownerDocument.createElement("textbox");
+    editor.setAttribute("flex", "1");
+    editor.setAttribute("multiline", "true");
+    el.appendChild(editor);
+    def.resolve();
+    editors.set(this, editor);
+
+    // env.addEventListener("load", onLoad, true);
+    // env.setAttribute("src", CM_IFRAME);
+    // el.appendChild(env);
 
     this.once("destroy", () => el.removeChild(env));
     return def.promise;
   },
 
   /**
    * Returns the currently active highlighting mode.
    * See Editor.modes for the list of all suppoert modes.
@@ -345,33 +353,33 @@ Editor.prototype = {
   },
 
   /**
    * Returns text from the text area. If line argument is provided
    * the method returns only that line.
    */
   getText: function (line) {
     let cm = editors.get(this);
-
+    return cm.value;
     if (line == null)
       return cm.getValue();
 
     let info = cm.lineInfo(line);
     return info ? cm.lineInfo(line).text : "";
   },
 
   /**
    * Replaces whatever is in the text area with the contents of
    * the 'value' argument.
    */
   setText: function (value) {
     let cm = editors.get(this);
-    cm.setValue(value);
-
-    this.resetIndentUnit();
+    cm.value = value;
+    // cm.setValue(value);
+    // this.resetIndentUnit();
   },
 
   /**
    * Set the editor's indentation based on the current prefs and
    * re-detect indentation if we should.
    */
   resetIndentUnit: function() {
     let cm = editors.get(this);
@@ -857,18 +865,18 @@ Editor.prototype = {
   }
 };
 
 // Since Editor is a thin layer over CodeMirror some methods
 // are mapped directlyâ€”without any changes.
 
 CM_MAPPING.forEach(function (name) {
   Editor.prototype[name] = function (...args) {
-    let cm = editors.get(this);
-    return cm[name].apply(cm, args);
+    // let cm = editors.get(this);
+    // return cm[name].apply(cm, args);
   };
 });
 
 // Static methods on the Editor object itself.
 
 /**
  * Returns a string representation of a shortcut 'key' with
  * a OS specific modifier. Cmd- for Macs, Ctrl- for other
