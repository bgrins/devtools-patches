# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  2ea4b7fca18c998d07b7544184f21fdfcf7ca57f

diff --git a/layout/base/PresShell.cpp b/layout/base/PresShell.cpp
--- a/layout/base/PresShell.cpp
+++ b/layout/base/PresShell.cpp
@@ -1799,16 +1799,19 @@ PresShell::Initialize()
   NS_ENSURE_STATE(!mHaveShutDown);
 
   if (!rootFrame) {
     return NS_ERROR_OUT_OF_MEMORY;
   }
 
   if (Element* root = mDocument->GetRootElement()) {
     {
+      if (XRE_IsParentProcess()) {
+        printf("Got root element on init \n");
+      }
       nsAutoCauseReflowNotifier reflowNotifier(this);
       // Have the style sheet processor construct frame for the root
       // content object down
       mFrameConstructor->ContentInserted(
           root, nullptr, nsCSSFrameConstructor::InsertionKind::Sync);
 
       // Something in mFrameConstructor->ContentInserted may have caused
       // Destroy() to get called, bug 337586.
diff --git a/layout/base/nsDocumentViewer.cpp b/layout/base/nsDocumentViewer.cpp
--- a/layout/base/nsDocumentViewer.cpp
+++ b/layout/base/nsDocumentViewer.cpp
@@ -769,16 +769,20 @@ nsDocumentViewer::Init(nsIWidget* aParen
                          const nsIntRect& aBounds)
 {
   return InitInternal(aParentWidget, nullptr, aBounds, true);
 }
 
 nsresult
 nsDocumentViewer::InitPresentationStuff(bool aDoInitialReflow)
 {
+
+  if (XRE_IsParentProcess()) {
+  printf("nsDocumentViewer::InitPresentationStuff %d\n", aDoInitialReflow);
+  }
   // We assert this because initializing the pres shell could otherwise cause
   // re-entrancy into nsDocumentViewer methods, which might cause a different
   // pres shell to be created.  Callers of InitPresentationStuff should ensure
   // the call is appropriately bounded by an nsAutoScriptBlocker to decide
   // when it is safe for these re-entrant calls to be made.
   MOZ_ASSERT(!nsContentUtils::IsSafeToRunScript(),
              "InitPresentationStuff must only be called when scripts are "
              "blocked");
@@ -2316,16 +2320,20 @@ nsDocumentViewer::Show(void)
       }
 
       mPresContext->SetContainer(mContainer);
     }
 
     if (mPresContext) {
       Hide();
 
+      if (XRE_IsParentProcess()) {
+
+        printf("InitPresentationStuff with %d", mDocument->MayStartLayout());
+      }
       rv = InitPresentationStuff(mDocument->MayStartLayout());
     }
 
     // If we get here the document load has already started and the
     // window is shown because some JS on the page caused it to be
     // shown...
 
     if (mPresShell) {
