# HG changeset patch
# Parent 52d2bc3466590f5660cd6b7270e168dd983716aa
# User Heather Arthur <fayearthur@gmail.com>

diff --git a/browser/app/profile/firefox.js b/browser/app/profile/firefox.js
--- a/browser/app/profile/firefox.js
+++ b/browser/app/profile/firefox.js
@@ -1223,16 +1223,18 @@ pref("devtools.webconsole.timestampMessa
 
 // The number of lines that are displayed in the web console for the Net,
 // CSS, JS and Web Developer categories.
 pref("devtools.hud.loglimit.network", 200);
 pref("devtools.hud.loglimit.cssparser", 200);
 pref("devtools.hud.loglimit.exception", 200);
 pref("devtools.hud.loglimit.console", 200);
 
+pref("devtools.magnifier.zoom", 6);
+
 // The developer tools editor configuration:
 // - tabsize: how many spaces to use when a Tab character is displayed.
 // - expandtab: expand Tab characters to spaces.
 pref("devtools.editor.tabsize", 4);
 pref("devtools.editor.expandtab", true);
 
 // Enable the Font Inspector
 pref("devtools.fontinspector.enabled", true);
diff --git a/browser/base/content/browser-menubar.inc b/browser/base/content/browser-menubar.inc
--- a/browser/base/content/browser-menubar.inc
+++ b/browser/base/content/browser-menubar.inc
@@ -472,16 +472,19 @@
                             observes="devtoolsMenuBroadcaster_BrowserToolbox"
                             accesskey="&browserToolboxMenu.accesskey;"/>
                   <menuitem id="menu_browserConsole"
                             observes="devtoolsMenuBroadcaster_BrowserConsole"
                             accesskey="&browserConsoleCmd.accesskey;"/>
                   <menuitem id="menu_responsiveUI"
                             observes="devtoolsMenuBroadcaster_ResponsiveUI"
                             accesskey="&responsiveDesignTool.accesskey;"/>
+                  <menuitem id="menu_magnifier"
+                            observes="devtoolsMenuBroadcaster_Magnifier"
+                            accesskey="&magnifier.accesskey;"/>
                   <menuitem id="menu_scratchpad"
                             observes="devtoolsMenuBroadcaster_Scratchpad"
                             accesskey="&scratchpad.accesskey;"/>
                   <menuitem id="menu_pageSource"
                             observes="devtoolsMenuBroadcaster_PageSource"
                             accesskey="&pageSourceCmd.accesskey;"/>
                   <menuitem id="javascriptConsole"
                             observes="devtoolsMenuBroadcaster_ErrorConsole"
diff --git a/browser/base/content/browser-sets.inc b/browser/base/content/browser-sets.inc
--- a/browser/base/content/browser-sets.inc
+++ b/browser/base/content/browser-sets.inc
@@ -94,16 +94,17 @@
     <command id="Tools:DevToolbox" oncommand="gDevToolsBrowser.toggleToolboxCommand(gBrowser);"/>
     <command id="Tools:DevToolbar" oncommand="DeveloperToolbar.toggle();" disabled="true" hidden="true"/>
     <command id="Tools:DevToolbarFocus" oncommand="DeveloperToolbar.focusToggle();" disabled="true"/>
     <command id="Tools:DevAppMgr" oncommand="gDevToolsBrowser.openAppManager(gBrowser);" disabled="true" hidden="true"/>
     <command id="Tools:BrowserToolbox" oncommand="BrowserToolboxProcess.init();" disabled="true" hidden="true"/>
     <command id="Tools:BrowserConsole" oncommand="HUDService.toggleBrowserConsole();"/>
     <command id="Tools:Scratchpad" oncommand="Scratchpad.openScratchpad();"/>
     <command id="Tools:ResponsiveUI" oncommand="ResponsiveUI.toggle();"/>
+    <command id="Tools:Magnifier" oncommand="openMagnifier();"/>
     <command id="Tools:Addons" oncommand="BrowserOpenAddonsMgr();"/>
     <command id="Tools:ErrorConsole" oncommand="toJavaScriptConsole()" disabled="true" hidden="true"/>
     <command id="Tools:DevToolsConnect" oncommand="gDevToolsBrowser.openConnectScreen(gBrowser)" disabled="true" hidden="true"/>
     <command id="Tools:Sanitize"
      oncommand="Cc['@mozilla.org/browser/browserglue;1'].getService(Ci.nsIBrowserGlue).sanitize(window);"/>
     <command id="Tools:PrivateBrowsing"
       oncommand="OpenBrowserWindow({private: true});"/>
     <command id="History:UndoCloseTab" oncommand="undoCloseTab();"/>
@@ -195,16 +196,21 @@
                  label="&scratchpad.label;"
                  command="Tools:Scratchpad"
                  key="key_scratchpad"/>
     <broadcaster id="devtoolsMenuBroadcaster_ResponsiveUI"
                  label="&responsiveDesignTool.label;"
                  type="checkbox" autocheck="false"
                  command="Tools:ResponsiveUI"
                  key="key_responsiveUI"/>
+    <broadcaster id="devtoolsMenuBroadcaster_Magnifier"
+                 label="&magnifier.label;"
+                 type="checkbox" autocheck="false"
+                 command="Tools:Magnifier"
+                 key="key_magnifier"/>
     <broadcaster id="devtoolsMenuBroadcaster_PageSource"
                  label="&pageSourceCmd.label;"
                  key="key_viewSource"
                  command="View:PageSource"/>
     <broadcaster id="devtoolsMenuBroadcaster_ErrorConsole"
                  label="&errorConsoleCmd.label;"
                  command="Tools:ErrorConsole"/>
     <broadcaster id="devtoolsMenuBroadcaster_GetMoreTools"
@@ -266,16 +272,24 @@
     <key id="key_responsiveUI" key="&responsiveDesignTool.commandkey;" command="Tools:ResponsiveUI"
 #ifdef XP_MACOSX
         modifiers="accel,alt"
 #else
         modifiers="accel,shift"
 #endif
     />
 
+    <key id="key_magnifier" key="&magnifier.commandkey;" command="Tools:Magnifier"
+#ifdef XP_MACOSX
+        modifiers="accel,alt"
+#else
+        modifiers="accel,shift"
+#endif
+    />
+
     <key id="key_devToolboxMenuItem" keytext="&devToolboxMenuItem.keytext;"
          command="Tools:DevToolbox" key="&devToolboxMenuItem.keytext;"
 #ifdef XP_MACOSX
         modifiers="accel,alt"
 #else
         modifiers="accel,shift"
 #endif
     />
diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -7119,16 +7119,30 @@ var ResponsiveUI = {
 };
 
 XPCOMUtils.defineLazyGetter(ResponsiveUI, "ResponsiveUIManager", function() {
   let tmp = {};
   Cu.import("resource:///modules/devtools/responsivedesign.jsm", tmp);
   return tmp.ResponsiveUIManager;
 });
 
+function openMagnifier() {
+  var magnifier = new this.Magnifier(this);
+  magnifier.open();
+}
+
+Object.defineProperty(this, "Magnifier", {
+  get: function() {
+    let devtools = Cu.import("resource://gre/modules/devtools/Loader.jsm", {}).devtools;
+    return devtools.require("devtools/magnifier/magnifier").Magnifier;
+  },
+  configurable: true,
+  enumerable: true
+});
+
 XPCOMUtils.defineLazyGetter(window, "gShowPageResizers", function () {
 #ifdef XP_WIN
   // Only show resizers on Windows 2000 and XP
   return parseFloat(Services.sysinfo.getProperty("version")) < 6;
 #else
   return false;
 #endif
 });
diff --git a/browser/devtools/commandline/Commands.jsm b/browser/devtools/commandline/Commands.jsm
--- a/browser/devtools/commandline/Commands.jsm
+++ b/browser/devtools/commandline/Commands.jsm
@@ -10,9 +10,10 @@ const require = Cu.import("resource://gr
 Cu.import("resource:///modules/devtools/BuiltinCommands.jsm");
 Cu.import("resource:///modules/devtools/CmdDebugger.jsm");
 Cu.import("resource:///modules/devtools/CmdEdit.jsm");
 Cu.import("resource:///modules/devtools/CmdInspect.jsm");
 Cu.import("resource:///modules/devtools/CmdResize.jsm");
 Cu.import("resource:///modules/devtools/CmdTilt.jsm");
 Cu.import("resource:///modules/devtools/CmdScratchpad.jsm");
 
+require("devtools/magnifier/commands.js");
 require("devtools/profiler/commands.js");
diff --git a/browser/devtools/jar.mn b/browser/devtools/jar.mn
--- a/browser/devtools/jar.mn
+++ b/browser/devtools/jar.mn
@@ -79,16 +79,18 @@ browser.jar:
     content/browser/devtools/framework/toolbox-process-window.xul      (framework/toolbox-process-window.xul)
     content/browser/devtools/framework/toolbox-process-window.js       (framework/toolbox-process-window.js)
     content/browser/devtools/inspector/inspector.xul                   (inspector/inspector.xul)
     content/browser/devtools/inspector/inspector.css                   (inspector/inspector.css)
     content/browser/devtools/connect.xhtml                             (framework/connect/connect.xhtml)
     content/browser/devtools/connect.css                               (framework/connect/connect.css)
     content/browser/devtools/connect.js                                (framework/connect/connect.js)
     content/browser/devtools/app-manager/template.js                   (app-manager/content/template.js)
+    content/browser/devtools/magnifier.xul                             (magnifier/magnifier.xul)
+    content/browser/devtools/magnifier.css                             (magnifier/magnifier.css)
     content/browser/devtools/app-manager/utils.js                      (app-manager/content/utils.js)
     content/browser/devtools/app-manager/connection-footer.js          (app-manager/content/connection-footer.js)
     content/browser/devtools/app-manager/connection-footer.xhtml       (app-manager/content/connection-footer.xhtml)
     content/browser/devtools/app-manager/device.js                     (app-manager/content/device.js)
     content/browser/devtools/app-manager/device.xhtml                  (app-manager/content/device.xhtml)
     content/browser/devtools/app-manager/projects.js                   (app-manager/content/projects.js)
     content/browser/devtools/app-manager/projects.xhtml                (app-manager/content/projects.xhtml)
     content/browser/devtools/app-manager/index.xul                     (app-manager/content/index.xul)
diff --git a/browser/devtools/magnifier/commands.js b/browser/devtools/magnifier/commands.js
new file mode 100644
--- /dev/null
+++ b/browser/devtools/magnifier/commands.js
@@ -0,0 +1,36 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+* License, v. 2.0. If a copy of the MPL was not distributed with this
+* file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+const { Cu } = require("chrome");
+module.exports = [];
+
+Cu.import("resource://gre/modules/devtools/gcli.jsm");
+
+// Fetch MagnifierManager using the current loader, but don't save a
+// reference to it, because it might change with a tool reload.
+// We can clean this up once the command line is loadered.
+Object.defineProperty(this, "Magnifier", {
+  get: function() {
+    return require("devtools/magnifier/magnifier").Magnifier;
+  },
+  enumerable: true
+});
+
+/**
+* 'magnifier' command
+*/
+gcli.addCommand({
+  name: "magnifier",
+  description: "Magnify areas of page to inspect pixels and colors",
+  buttonId: "command-button-magnifier",
+  buttonClass: "command-button",
+  tooltipText: "Pixel Inspector",
+
+  exec: function(args, context) {
+    let chromeWindow = context.environment.chromeWindow;
+
+    let magnifier = new Magnifier(chromeWindow);
+    magnifier.open();
+  }
+});
\ No newline at end of file
diff --git a/browser/devtools/magnifier/magnifier.css b/browser/devtools/magnifier/magnifier.css
new file mode 100644
--- /dev/null
+++ b/browser/devtools/magnifier/magnifier.css
@@ -0,0 +1,34 @@
+window {
+	background-color: transparent;
+}
+
+#canvas {
+	image-rendering: -moz-crisp-edges;
+	cursor: none;
+	background-color: transparent;
+	border-radius: 50%;
+}
+
+#canvas-overflow {
+	overflow: hidden;
+	width: 96px;
+	height: 96px;
+}
+
+#canvas-container {
+	display: block;
+	position: relative;
+	transform-origin: 50% 50%;
+}
+
+#color-preview {
+	width: 16px;
+	height: 16px;
+	box-shadow: 0px 0px 0px black;
+	border: solid 1px #fff;
+	-moz-margin-start: 3px;
+}
+
+#color-value.highlight {
+	box-shadow: 0 0 1em limegreen;
+}
diff --git a/browser/devtools/magnifier/magnifier.js b/browser/devtools/magnifier/magnifier.js
new file mode 100644
--- /dev/null
+++ b/browser/devtools/magnifier/magnifier.js
@@ -0,0 +1,388 @@
+const {Cc, Ci, Cu} = require("chrome");
+
+Cu.import("resource://gre/modules/Services.jsm");
+
+const {colorUtils} = require("devtools/css-color");
+const CssColor = colorUtils.CssColor;
+let EventEmitter = require("devtools/shared/event-emitter");
+
+loader.lazyGetter(this, "clipboardHelper", function() {
+  return Cc["@mozilla.org/widget/clipboardhelper;1"].
+    getService(Ci.nsIClipboardHelper);
+});
+
+const MAGNIFIER_URL = "chrome://browser/content/devtools/magnifier.xul";
+const ZOOM_PREF = "devtools.magnifier.zoom";
+const FORMAT_PREF = "devtools.defaultColorUnit";
+
+const PANEL_STYLE = "border:1px solid #333;width:96px;height:114px;" +
+                   "-moz-appearance:none;background-color:transparent";
+const CANVAS_WIDTH = 96;
+const CLOSE_DELAY = 750;
+
+/**
+ * Magnifier widget. Once opened, shows zoomed area above current pixel and
+ * displays the color value of the center pixel.
+ *
+ * let magnifier = new Magnifier(window);
+ * maginifier.open();
+ */
+
+function Magnifier(chromeWindow, opts = { copyOnSelect: true }) {
+  const { copyOnSelect } = opts;
+  this.onFirstMouseMove = this.onFirstMouseMove.bind(this);
+  this.onMouseMove = this.onMouseMove.bind(this);
+  this.onMouseDown = this.onMouseDown.bind(this);
+  this.onKeyDown = this.onKeyDown.bind(this);
+
+  this.chromeWindow = chromeWindow;
+  this.chromeDocument = chromeWindow.document;
+
+  this.dragging = true;
+  this.popupSet = this.chromeDocument.querySelector("#mainPopupSet");
+
+  let zoom = 6; //Services.prefs.getIntPref(ZOOM_PREF);
+  this.zoomWindow = {
+    x: 0,          // the left coordinate of the center of the inspected region
+    y: 0,          // the top coordinate of the center of the inspected region
+    width: 1,      // width of canvas to draw zoomed area onto
+    height: 1,     // height of canvas
+    zoom: zoom     // zoom level - integer, minimum is 2
+  };
+
+  this.format = Services.prefs.getCharPref(FORMAT_PREF);
+  this.copyOnSelect = copyOnSelect;
+
+  EventEmitter.decorate(this);
+}
+
+exports.Magnifier = Magnifier;
+
+Magnifier.prototype = {
+  /**
+   * The number of cells (blown-up pixels) per direction in the grid.
+   */
+  get cellsWide() {
+    let { width, zoom } = this.zoomWindow;
+
+    // Canvas will render whole "pixels" (cells) only, and an even
+    // number at that. Round up to the nearest even number of pixels.
+    let cellsWide = Math.ceil(width / zoom)
+    cellsWide += cellsWide % 2;
+
+    return cellsWide;
+  },
+
+  /**
+   * Size of each cell (blown-up pixel) in the grid.
+   */
+  get cellSize() {
+    return this.zoomWindow.width / this.cellsWide;
+  },
+
+  /**
+   * Get index of cell in the center of the grid.
+   */
+  get centerCell() {
+    return Math.floor(this.cellsWide / 2);
+  },
+
+  /**
+   * Get color of center cell in the grid.
+   */
+  get centerColor() {
+    let x = y = (this.centerCell * this.cellSize) + (this.cellSize / 2);
+    let rgb = this.ctx.getImageData(x, y, 1, 1).data;
+    return new CssColor("rgb(" + rgb[0] + "," + rgb[1] + "," + rgb[2] + ")");
+  },
+
+  /**
+   * Show the magnifier.
+   */
+  open: function() {
+    this.chromeDocument.addEventListener("mousemove", this.onFirstMouseMove);
+
+    this.addListeners();
+  },
+
+  onFirstMouseMove: function(event) {
+    this.chromeDocument.removeEventListener("mousemove", this.onFirstMouseMove);
+
+    this._panel = this.buildPanel();
+    this.popupSet.appendChild(this._panel);
+
+    this._panel.openPopupAtScreen(event.screenX, event.screenY);
+  },
+
+  destroy: function() {
+    if (this._panel) {
+      this.popupSet.removeChild(this._panel);
+      this._panel = null;
+    }
+    this.removeListeners();
+
+    this.emit("destroy");
+  },
+
+  buildPanel: function() {
+    let panel = this.chromeDocument.createElement("panel");
+    panel.id = "devtools-magnifier-indication-panel";
+    panel.setAttribute("noautofocus", true);
+    panel.setAttribute("noautohide", true);
+    panel.setAttribute("backdrag", true);
+    panel.setAttribute("level", "floating");
+    panel.setAttribute("close", true);
+    panel.setAttribute("style", PANEL_STYLE);
+
+    panel.addEventListener("popuphidden", (e) => {
+      if (e.target === panel) {
+        this.destroy();
+      }
+    });
+
+    let iframe = this.iframe = this.chromeDocument.createElement("iframe");
+    iframe.addEventListener("load", this.frameLoaded.bind(this), true);
+    iframe.setAttribute("flex", "1");
+    iframe.setAttribute("transparent", "transparent");
+    iframe.setAttribute("class", "devtools-magnifier-iframe");
+    iframe.setAttribute("src", MAGNIFIER_URL);
+    iframe.setAttribute("width", CANVAS_WIDTH);
+    iframe.setAttribute("height", CANVAS_WIDTH);
+
+    panel.appendChild(iframe);
+
+    return panel;
+  },
+
+  frameLoaded: function() {
+    this.iframeDocument = this.iframe.contentDocument;
+    this.canvas = this.iframeDocument.querySelector("#canvas");
+    this.ctx = this.canvas.getContext("2d");
+    this.canvasContainer = this.iframeDocument.querySelector("#canvas-container")
+    this.colorPreview = this.iframeDocument.querySelector("#color-preview");
+    this.colorValue = this.iframeDocument.querySelector("#color-value");
+
+    this.zoomWindow.width = this.canvas.width;
+    this.zoomWindow.height = this.canvas.height;
+
+    this.addPanelListeners();
+
+    this.drawWindow();
+  },
+
+  addPanelListeners: function() {
+    this.canvas.addEventListener("click", this.onMouseDown);
+    this.iframe.contentWindow.addEventListener("click", this.onMouseDown);
+
+    this.iframeDocument.addEventListener("keydown", this.onKeyDown);
+
+    let closeCmd = this.iframeDocument.getElementById("magnifier-cmd-close");
+    closeCmd.addEventListener("command", this.destroy.bind(this), true);
+
+    let copyCmd = this.iframeDocument.getElementById("magnifier-cmd-copy");
+    copyCmd.addEventListener("command", this.selectColor.bind(this), true);
+  },
+
+  addListeners: function() {
+    this.chromeDocument.addEventListener("mousemove", this.onMouseMove);
+    this.chromeDocument.addEventListener("mousedown", this.onMouseDown);
+  },
+
+  removeListeners: function() {
+    this.chromeDocument.removeEventListener("mousemove", this.onMouseMove);
+    this.chromeDocument.removeEventListener("mousedown", this.onMouseDown);
+  },
+
+  onMouseMove: function(event) {
+    if (!this.dragging || !this._panel) {
+      return;
+    }
+
+    let { width } = this.zoomWindow;
+    let win = this.chromeWindow;
+
+    let windowX = win.screenX + (win.outerWidth - win.innerWidth);
+    let x = event.screenX - windowX;
+
+    let windowY = win.screenY + (win.outerHeight - win.innerHeight);
+    let y = event.screenY - windowY;
+
+    this.moveRegion(x, y);
+
+    let panelX = event.screenX - width / 2;
+    let panelY = event.screenY - width / 2;
+
+    this._panel.moveTo(panelX, panelY);
+  },
+
+  moveRegion: function(x, y) {
+    this.zoomWindow.x = x;
+    this.zoomWindow.y = y;
+
+    this.drawWindow();
+  },
+
+  onMouseDown: function(event) {
+    this.toggleDragging(false);
+
+    event.preventDefault();
+    event.stopPropagation();
+
+    this.selectColor();
+  },
+
+  selectColor: function() {
+    this.emit("select", this.colorValue.value);
+
+    if (this.copyOnSelect) {
+      this.copyColor(this.destroy.bind(this));
+    }
+    else {
+      this.destroy();
+    }
+  },
+
+  copyColor: function(callback) {
+    Services.appShell.hiddenDOMWindow.clearTimeout(this.copyTimeout);
+    clipboardHelper.copyString(this.colorValue.value);
+
+    this.colorValue.classList.add("highlight");
+
+    this.copyTimeout = Services.appShell.hiddenDOMWindow.setTimeout(() => {
+      this.colorValue.classList.remove("highlight");
+      if (callback) {
+        callback();
+      }
+    }, CLOSE_DELAY);
+  },
+
+  onKeyDown: function(event) {
+    if (event.metaKey && event.keyCode === event.DOM_VK_C) {
+      this.copyColor();
+      return;
+    }
+
+    let offsetX = 0;
+    let offsetY = 0;
+    let modifier = 1;
+
+    if (event.keyCode === event.DOM_VK_LEFT) {
+      offsetX = -1;
+    }
+    if (event.keyCode === event.DOM_VK_RIGHT) {
+      offsetX = 1;
+    }
+    if (event.keyCode === event.DOM_VK_UP) {
+      offsetY = -1;
+    }
+    if (event.keyCode === event.DOM_VK_DOWN) {
+      offsetY = 1;
+    }
+    if (event.shiftKey) {
+      modifier = 10;
+    }
+
+    offsetY *= modifier;
+    offsetX *= modifier;
+
+    if (offsetX !== 0 || offsetY !== 0) {
+      this.moveBy(offsetX, offsetY);
+      event.preventDefault();
+    }
+  },
+
+  moveBy: function(offsetX=0, offsetY=0) {
+    this.zoomWindow.x += offsetX;
+    this.zoomWindow.y += offsetY;
+
+    this.drawWindow();
+  },
+
+  toggleDragging: function(mode) {
+    if (mode === false) {
+      this.dragging = false;
+    }
+    else if (mode === true) {
+      this.dragging = true;
+    }
+    else {
+      this.dragging = !this.dragging;
+    }
+  },
+
+  drawWindow: function() {
+    let { width, height, x, y, zoom } = this.zoomWindow;
+
+    this.canvas.width = width;
+    this.canvas.height = height;
+
+    let drawY = y - (height / 2);
+    let drawX = x - (width / 2);
+
+    this.ctx.mozImageSmoothingEnabled = false;
+
+    this.ctx.drawWindow(this.chromeWindow, drawX, drawY, width, height, "white");
+
+    if (zoom > 1) {
+      let zoomedWidth = width / zoom;
+      let zoomedHeight = height / zoom;
+      let sx = (width - zoomedWidth) / 2;
+      let sy = (height - zoomedHeight) / 2;
+      let sw = zoomedWidth;
+      let sh = zoomedHeight;
+      let dx = 0;
+      let dy = 0;
+      let dw = width;
+      let dh = height;
+
+      this.ctx.drawImage(this.canvas, sx, sy, sw, sh, dx, dy, dw, dh);
+    }
+
+    this.iframe.focus();
+
+    this.colorPreview.style.backgroundColor = this.centerColor.hex;
+    this.populateColorValues();
+
+    if (this.zoomWindow.zoom > 2) {
+      // grid at 2x is too busy
+      this.drawGrid();
+    }
+    this.drawCrosshair();
+  },
+
+  drawGrid: function() {
+    let { width, height, zoom } = this.zoomWindow;
+
+    this.ctx.lineWidth = 1;
+    this.ctx.strokeStyle = "rgba(0, 0, 0, .05)";
+
+    for (let i = 0; i < width; i += this.cellSize) {
+      this.ctx.beginPath();
+      this.ctx.moveTo(i - .5, 0);
+      this.ctx.lineTo(i - .5, height);
+      this.ctx.stroke();
+
+      this.ctx.beginPath();
+      this.ctx.moveTo(0, i - .5);
+      this.ctx.lineTo(width, i - .5);
+      this.ctx.stroke();
+    }
+  },
+
+  drawCrosshair: function() {
+    let x = y = this.centerCell * this.cellSize;
+
+    this.ctx.lineWidth = 1;
+    this.ctx.lineJoin = 'miter';
+    this.ctx.strokeStyle = "rgba(0, 0, 0, 1)";
+    this.ctx.strokeRect(x - 1.5, y - 1.5, this.cellSize + 2, this.cellSize + 2);
+
+    this.ctx.strokeStyle = "rgba(255, 255, 255, 1)";
+    this.ctx.strokeRect(x - 0.5, y - 0.5, this.cellSize, this.cellSize);
+  },
+
+  populateColorValues: function() {
+    let color = this.centerColor;
+    this.colorValue.value = color[this.format];
+  }
+}
\ No newline at end of file
diff --git a/browser/devtools/magnifier/magnifier.xul b/browser/devtools/magnifier/magnifier.xul
new file mode 100644
--- /dev/null
+++ b/browser/devtools/magnifier/magnifier.xul
@@ -0,0 +1,54 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<!-- This Source Code Form is subject to the terms of the Mozilla Public
+   - License, v. 2.0. If a copy of the MPL was not distributed with this
+   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
+
+<!DOCTYPE window [
+<!ENTITY % magnifierDTD SYSTEM "chrome://browser/locale/devtools/magnifier.dtd" >
+ %magnifierDTD;
+]>
+
+<?xml-stylesheet href="chrome://global/skin/global.css"?>
+<?xml-stylesheet href="chrome://browser/skin/devtools/common.css"?>
+<?xml-stylesheet href="chrome://browser/skin/devtools/widgets.css"?>
+<?xml-stylesheet href="chrome://browser/skin/devtools/profiler.css"?>
+<?xml-stylesheet href="chrome://browser/content/devtools/widgets.css"?>
+<?xml-stylesheet href="chrome://browser/content/devtools/magnifier.css" type="text/css"?>
+
+<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
+  <commandset id="magnifier-commandset">
+    <command id="magnifier-cmd-close"
+             oncommand="void(0);"/>
+    <command id="magnifier-cmd-copy"
+             oncommand="void(0);"/>
+  </commandset>
+
+  <keyset id="magnifier-keyset">
+    <key id="magnifier-key-close"
+         key="&closeCmd.key;"
+         command="magnifier-cmd-close"
+         modifiers="accel"/>
+    <key id="magnifier-key-escape"
+         keycode="VK_ESCAPE"
+         command="magnifier-cmd-close"/>
+    <key id="magnifier-key-enter"
+         keycode="VK_RETURN"
+         command="magnifier-cmd-copy"/>
+  </keyset>
+
+  <vbox id="magnifier-container" flex="1">
+    <box id="canvas-overflow">
+      <box id="canvas-container">
+        <canvas id="canvas" xmlns="http://www.w3.org/1999/xhtml" width="96" height="96">
+        </canvas>
+      </box>
+    </box>
+    <hbox>
+      <box id="color-preview">
+      </box>
+      <label id="color-value" class="devtools-monospace">
+      </label>
+    </hbox>
+  </vbox>
+</window>
\ No newline at end of file
diff --git a/browser/devtools/magnifier/moz.build b/browser/devtools/magnifier/moz.build
new file mode 100644
--- /dev/null
+++ b/browser/devtools/magnifier/moz.build
@@ -0,0 +1,12 @@
+# -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
+# vim: set filetype=python:
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+JS_MODULES_PATH = 'modules/devtools/magnifier'
+
+EXTRA_JS_MODULES += [
+    'commands.js',
+    'magnifier.js'
+]
diff --git a/browser/devtools/moz.build b/browser/devtools/moz.build
--- a/browser/devtools/moz.build
+++ b/browser/devtools/moz.build
@@ -7,28 +7,29 @@
 DIRS += [
     'app-manager',
     'commandline',
     'debugger',
     'fontinspector',
     'framework',
     'inspector',
     'layoutview',
+    'magnifier',
     'markupview',
     'netmonitor',
     'profiler',
     'responsivedesign',
     'scratchpad',
     'shadereditor',
     'shared',
     'sourceeditor',
     'styleeditor',
     'styleinspector',
     'tilt',
-    'webconsole',
+    'webconsole'
 ]
 
 EXTRA_COMPONENTS += [
     'devtools-clhandler.js',
     'devtools-clhandler.manifest',
 ]
 
 JAR_MANIFESTS += ['jar.mn']
\ No newline at end of file
diff --git a/browser/devtools/shared/widgets/Tooltip.js b/browser/devtools/shared/widgets/Tooltip.js
--- a/browser/devtools/shared/widgets/Tooltip.js
+++ b/browser/devtools/shared/widgets/Tooltip.js
@@ -8,16 +8,18 @@ const {Cc, Cu, Ci} = require("chrome");
 const promise = require("sdk/core/promise");
 const IOService = Cc["@mozilla.org/network/io-service;1"]
   .getService(Ci.nsIIOService);
 const {Spectrum} = require("devtools/shared/widgets/Spectrum");
 const EventEmitter = require("devtools/shared/event-emitter");
 const {colorUtils} = require("devtools/css-color");
 const Heritage = require("sdk/core/heritage");
 const {CSSTransformPreviewer} = require("devtools/shared/widgets/CSSTransformPreviewer");
+const {Magnifier} = require("devtools/magnifier/magnifier");
+
 
 Cu.import("resource://gre/modules/Services.jsm");
 Cu.import("resource://gre/modules/XPCOMUtils.jsm");
 
 XPCOMUtils.defineLazyModuleGetter(this, "setNamedTimeout",
   "resource:///modules/devtools/ViewHelpers.jsm");
 XPCOMUtils.defineLazyModuleGetter(this, "clearNamedTimeout",
   "resource:///modules/devtools/ViewHelpers.jsm");
@@ -170,16 +172,22 @@ function Tooltip(doc, options) {
   for (let event of ["shown", "hidden", "showing", "hiding"]) {
     this["_onPopup" + event] = ((e) => {
       return () => this.emit(e);
     })(event);
     this.panel.addEventListener("popup" + event,
       this["_onPopup" + event], false);
   }
 
+  this.panel.addEventListener("popuphiding", (event) => {
+    if (this.preventHiding) {
+      event.preventDefault();
+    }
+  });
+
   // Listen to keypress events to close the tooltip if configured to do so
   let win = this.doc.querySelector("window");
   this._onKeyPress = event => {
     this.emit("keypress", event.keyCode);
     if (this.options.get("closeOnKeys").indexOf(event.keyCode) !== -1) {
       if (!this.panel.hidden) {
         event.stopPropagation();
       }
@@ -212,16 +220,20 @@ Tooltip.prototype = {
   show: function(anchor,
     position = this.defaultPosition,
     x = this.defaultOffsetX,
     y = this.defaultOffsetY) {
     this.panel.hidden = false;
     this.panel.openPopup(anchor, position, x, y);
   },
 
+  set consumeOutsideClick(val) {
+    this.panel.setAttribute("consumeoutsideclicks", val);
+  },
+
   /**
    * Hide the tooltip
    */
   hide: function() {
     this.panel.hidden = true;
     this.panel.hidePopup();
   },
 
@@ -565,17 +577,17 @@ Tooltip.prototype = {
    */
   setColorPickerContent: function(color) {
     let def = promise.defer();
 
     // Create an iframe to contain spectrum
     let iframe = this.doc.createElementNS(XHTML_NS, "iframe");
     iframe.setAttribute("transparent", true);
     iframe.setAttribute("width", "210");
-    iframe.setAttribute("height", "195");
+    iframe.setAttribute("height", "220");
     iframe.setAttribute("flex", "1");
     iframe.setAttribute("class", "devtools-tooltip-iframe");
 
     let panel = this.panel;
     let xulWin = this.doc.ownerGlobal;
 
     // Wait for the load to initialize spectrum
     function onLoad() {
@@ -796,16 +808,17 @@ SwatchBasedEditorTooltip.prototype = {
  */
 function SwatchColorPickerTooltip(doc) {
   SwatchBasedEditorTooltip.call(this, doc);
 
   // Creating a spectrum instance. this.spectrum will always be a promise that
   // resolves to the spectrum instance
   this.spectrum = this.tooltip.setColorPickerContent([0, 0, 0, 1]);
   this._onSpectrumColorChange = this._onSpectrumColorChange.bind(this);
+  this._openEyeDropper = this._openEyeDropper.bind(this);
 }
 
 module.exports.SwatchColorPickerTooltip = SwatchColorPickerTooltip;
 
 SwatchColorPickerTooltip.prototype = Heritage.extend(SwatchBasedEditorTooltip.prototype, {
   /**
    * Overriding the SwatchBasedEditorTooltip.show function to set spectrum's
    * color.
@@ -819,26 +832,59 @@ SwatchColorPickerTooltip.prototype = Her
       let color = this.activeSwatch.style.backgroundColor;
       this.spectrum.then(spectrum => {
         spectrum.off("changed", this._onSpectrumColorChange);
         spectrum.rgb = this._colorToRgba(color);
         spectrum.on("changed", this._onSpectrumColorChange);
         spectrum.updateUI();
       });
     }
+
+    let tooltipDoc = this.tooltip.content.contentDocument;
+    let eyeButton = tooltipDoc.querySelector("#eyedropper-button");
+    eyeButton.addEventListener("click", this._openEyeDropper);
   },
 
   _onSpectrumColorChange: function(event, rgba, cssColor) {
+    this._selectColor(cssColor);
+  },
+
+  _selectColor: function(color) {
     if (this.activeSwatch) {
-      this.activeSwatch.style.backgroundColor = cssColor;
-      this.activeSwatch.nextSibling.textContent = cssColor;
-      this.preview(cssColor);
+      this.activeSwatch.style.backgroundColor = color;
+      this.activeSwatch.nextSibling.textContent = color;
+      this.preview(color);
     }
   },
 
+  _openEyeDropper: function() {
+    // we want the click to be handled by the eyedropper, not the tooltip
+    this.tooltip.consumeOutsideClick = false;
+    this.tooltip.preventHiding = true;
+
+    let chromeWindow = this.tooltip.doc.defaultView.top;
+    let dropper = new Magnifier(chromeWindow, { copyOnSelect: false });
+
+    dropper.once("select", (event, color) => {
+      this._selectColor(color);
+
+      this.spectrum.then((spectrum) => {
+        spectrum.rgb = this._colorToRgba(color);
+        spectrum.updateUI();
+      });
+    });
+
+    dropper.once("destroy", () => {
+      this.tooltip.consumeOutsideClick = true;
+      this.tooltip.preventHiding = false;
+    })
+
+    dropper.open();
+  },
+
   _colorToRgba: function(color) {
     color = new colorUtils.CssColor(color);
     let rgba = color._getRGBATuple();
     return [rgba.r, rgba.g, rgba.b, rgba.a];
   },
 
   destroy: function() {
     SwatchBasedEditorTooltip.prototype.destroy.call(this);
diff --git a/browser/devtools/shared/widgets/spectrum-frame.xhtml b/browser/devtools/shared/widgets/spectrum-frame.xhtml
--- a/browser/devtools/shared/widgets/spectrum-frame.xhtml
+++ b/browser/devtools/shared/widgets/spectrum-frame.xhtml
@@ -14,10 +14,11 @@
     body {
       margin: 0;
       padding: 0;
     }
   </style>
 </head>
 <body role="application">
   <div id="spectrum"></div>
+  <button id="eyedropper-button"></button>
 </body>
 </html>
\ No newline at end of file
diff --git a/browser/devtools/shared/widgets/spectrum.css b/browser/devtools/shared/widgets/spectrum.css
--- a/browser/devtools/shared/widgets/spectrum.css
+++ b/browser/devtools/shared/widgets/spectrum.css
@@ -1,12 +1,22 @@
+
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
+#eyedropper-button {
+  background: url("chrome://browser/skin/devtools/magnifier-black.png");
+  width: 18px;
+  height: 18px;
+  padding: 1px;
+  border: 1px solid grey;
+  border-radius: 2px;
+}
+
 /* Mix-in classes */
 
 .spectrum-checker {
   background-color: #eee;
   background-image: linear-gradient(45deg, #ccc 25%, transparent 25%, transparent 75%, #ccc 75%, #ccc),
     linear-gradient(45deg, #ccc 25%, transparent 25%, transparent 75%, #ccc 75%, #ccc);
   background-size: 12px 12px;
   background-position: 0 0, 6px 6px;
diff --git a/browser/locales/en-US/chrome/browser/browser.dtd b/browser/locales/en-US/chrome/browser/browser.dtd
--- a/browser/locales/en-US/chrome/browser/browser.dtd
+++ b/browser/locales/en-US/chrome/browser/browser.dtd
@@ -217,16 +217,20 @@ These should match what Safari and other
 
 <!ENTITY inspectContextMenu.label     "Inspect Element">
 <!ENTITY inspectContextMenu.accesskey "Q">
 
 <!ENTITY responsiveDesignTool.label   "Responsive Design View">
 <!ENTITY responsiveDesignTool.accesskey "R">
 <!ENTITY responsiveDesignTool.commandkey "M">
 
+<!ENTITY magnifier.label   "Pixel Inspector">
+<!ENTITY magnifier.accesskey "P">
+<!ENTITY magnifier.commandkey "X">
+
 <!-- LOCALIZATION NOTE (scratchpad.label): This menu item label appears
   -  in the Tools menu. See bug 653093.
   -  The Scratchpad is intended to provide a simple text editor for creating
   -  and evaluating bits of JavaScript code for the purposes of function
   -  prototyping, experimentation and convenient scripting.
   -
   -  It's quite possible that you won't have a good analogue for the word
   -  "Scratchpad" in your locale. You should feel free to find a close
diff --git a/browser/locales/en-US/chrome/browser/devtools/magnifier.dtd b/browser/locales/en-US/chrome/browser/devtools/magnifier.dtd
new file mode 100644
--- /dev/null
+++ b/browser/locales/en-US/chrome/browser/devtools/magnifier.dtd
@@ -0,0 +1,8 @@
+<!-- This Source Code Form is subject to the terms of the Mozilla Public
+   - License, v. 2.0. If a copy of the MPL was not distributed with this
+   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
+
+<!-- LOCALIZATION NOTE : FILE This file contains the Pixel Inspector strings -->
+<!-- LOCALIZATION NOTE : FILE Do not translate key -->
+
+<!ENTITY closeCmd.key  "W">
\ No newline at end of file
diff --git a/browser/locales/jar.mn b/browser/locales/jar.mn
--- a/browser/locales/jar.mn
+++ b/browser/locales/jar.mn
@@ -49,16 +49,17 @@
     locale/browser/devtools/sourceeditor.dtd          (%chrome/browser/devtools/sourceeditor.dtd)
     locale/browser/devtools/profiler.dtd              (%chrome/browser/devtools/profiler.dtd)
     locale/browser/devtools/profiler.properties       (%chrome/browser/devtools/profiler.properties)
     locale/browser/devtools/layoutview.dtd            (%chrome/browser/devtools/layoutview.dtd)
     locale/browser/devtools/responsiveUI.properties   (%chrome/browser/devtools/responsiveUI.properties)
     locale/browser/devtools/toolbox.dtd            (%chrome/browser/devtools/toolbox.dtd)
     locale/browser/devtools/toolbox.properties     (%chrome/browser/devtools/toolbox.properties)
     locale/browser/devtools/inspector.dtd          (%chrome/browser/devtools/inspector.dtd)
+    locale/browser/devtools/magnifier.dtd            (%chrome/browser/devtools/magnifier.dtd)
     locale/browser/devtools/connection-screen.dtd  (%chrome/browser/devtools/connection-screen.dtd)
     locale/browser/devtools/connection-screen.properties (%chrome/browser/devtools/connection-screen.properties)
     locale/browser/devtools/font-inspector.dtd     (%chrome/browser/devtools/font-inspector.dtd)
     locale/browser/devtools/app-manager.dtd        (%chrome/browser/devtools/app-manager.dtd)
     locale/browser/devtools/app-manager.properties (%chrome/browser/devtools/app-manager.properties)
     locale/browser/newTab.dtd                      (%chrome/browser/newTab.dtd)
     locale/browser/newTab.properties               (%chrome/browser/newTab.properties)
     locale/browser/openLocation.dtd                (%chrome/browser/openLocation.dtd)
diff --git a/browser/themes/osx/devtools/command-magnifier.png b/browser/themes/osx/devtools/command-magnifier.png
new file mode 100644
index 0000000000000000000000000000000000000000..44f2e1e6ec50988f1baac8c9f3567fe448fa702b
GIT binary patch
literal 1640
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

diff --git a/browser/themes/osx/devtools/magnifier-black.png b/browser/themes/osx/devtools/magnifier-black.png
new file mode 100644
index 0000000000000000000000000000000000000000..907a135e4d1f4580e893347478dc205d3aeaffde
GIT binary patch
literal 1698
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

diff --git a/browser/themes/osx/jar.mn b/browser/themes/osx/jar.mn
--- a/browser/themes/osx/jar.mn
+++ b/browser/themes/osx/jar.mn
@@ -256,16 +256,17 @@ browser.jar:
   skin/classic/browser/devtools/controls.png                (../shared/devtools/controls.png)
 * skin/classic/browser/devtools/widgets.css                 (devtools/widgets.css)
   skin/classic/browser/devtools/commandline-icon.png        (devtools/commandline-icon.png)
   skin/classic/browser/devtools/command-paintflashing.png   (devtools/command-paintflashing.png)
   skin/classic/browser/devtools/command-responsivemode.png  (devtools/command-responsivemode.png)
   skin/classic/browser/devtools/command-scratchpad.png      (devtools/command-scratchpad.png)
   skin/classic/browser/devtools/command-tilt.png            (devtools/command-tilt.png)
   skin/classic/browser/devtools/command-console.png         (devtools/command-console.png)
+  skin/classic/browser/devtools/command-magnifier.png       (devtools/command-magnifier.png)
   skin/classic/browser/devtools/alerticon-warning.png       (devtools/alerticon-warning.png)
   skin/classic/browser/devtools/ruleview.css                (devtools/ruleview.css)
   skin/classic/browser/devtools/commandline.css             (devtools/commandline.css)
   skin/classic/browser/devtools/markup-view.css             (../shared/devtools/markup-view.css)
   skin/classic/browser/devtools/editor-error.png             (devtools/editor-error.png)
   skin/classic/browser/devtools/editor-breakpoint.png        (devtools/editor-breakpoint.png)
   skin/classic/browser/devtools/editor-debug-location.png    (devtools/editor-debug-location.png)
 * skin/classic/browser/devtools/webconsole.css                  (devtools/webconsole.css)
@@ -348,16 +349,17 @@ browser.jar:
   skin/classic/browser/devtools/tool-scratchpad.png         (devtools/tool-scratchpad.png)
   skin/classic/browser/devtools/close.png                   (devtools/close.png)
   skin/classic/browser/devtools/vview-delete.png            (devtools/vview-delete.png)
   skin/classic/browser/devtools/vview-edit.png              (devtools/vview-edit.png)
   skin/classic/browser/devtools/undock.png                  (devtools/undock.png)
   skin/classic/browser/devtools/font-inspector.css          (devtools/font-inspector.css)
   skin/classic/browser/devtools/computedview.css            (devtools/computedview.css)
   skin/classic/browser/devtools/arrow-e.png                 (devtools/arrow-e.png)
+  skin/classic/browser/devtools/magnifier-black.png         (devtools/magnifier-black.png)
   skin/classic/browser/devtools/responsiveui-rotate.png     (../shared/devtools/responsiveui-rotate.png)
   skin/classic/browser/devtools/responsiveui-touch.png      (../shared/devtools/responsiveui-touch.png)
   skin/classic/browser/devtools/responsiveui-screenshot.png (../shared/devtools/responsiveui-screenshot.png)
   skin/classic/browser/devtools/app-manager/connection-footer.css     (../shared/devtools/app-manager/connection-footer.css)
   skin/classic/browser/devtools/app-manager/index.css                 (../shared/devtools/app-manager/index.css)
   skin/classic/browser/devtools/app-manager/device.css                (../shared/devtools/app-manager/device.css)
   skin/classic/browser/devtools/app-manager/projects.css              (../shared/devtools/app-manager/projects.css)
   skin/classic/browser/devtools/app-manager/help.css                  (../shared/devtools/app-manager/help.css)
diff --git a/browser/themes/shared/devtools/toolbars.inc.css b/browser/themes/shared/devtools/toolbars.inc.css
--- a/browser/themes/shared/devtools/toolbars.inc.css
+++ b/browser/themes/shared/devtools/toolbars.inc.css
@@ -451,16 +451,20 @@
 #command-button-splitconsole:hover:active {
   -moz-image-region: rect(0px, 48px, 16px, 32px);
 }
 
 #command-button-splitconsole[checked=true] {
   -moz-image-region: rect(0px, 64px, 16px, 48px);
 }
 
+#command-button-magnifier {
+  list-style-image: url("chrome://browser/skin/devtools/command-magnifier.png");
+}
+
 /* Tabs */
 
 .devtools-tabbar {
   -moz-appearance: none;
   background: #252c33;
   border: 0px solid #000;
   border-bottom-width: 1px;
   box-shadow: 0 -2px 0 rgba(0,0,0,.1) inset;
