# HG changeset patch
# User Helen V. Holmes <helen.v.holmes@gmail.com>

Bug 1205371, tiny lil'pseudo locks with multiple states;r=bgrins


diff --git a/devtools/client/markupview/markup-view.js b/devtools/client/markupview/markup-view.js
index 7438a4e..953ecc1 100644
--- a/devtools/client/markupview/markup-view.js
+++ b/devtools/client/markupview/markup-view.js
@@ -2060,10 +2060,25 @@ MarkupContainer.prototype = {
    * viewed node.
    */
   update: function() {
+    this.elt.classList.remove("pseudoclass-hover");
+    this.elt.classList.remove("pseudoclass-active");
+    this.elt.classList.remove("pseudoclass-focus");
+    this.elt.removeAttribute("pseudoclass-count");
     if (this.node.pseudoClassLocks.length) {
-      this.elt.classList.add("pseudoclass-locked");
+      for (let state of this.node.pseudoClassLocks) {
+        if (state === ":hover") {
+          this.elt.classList.add("pseudoclass-hover");
+        }
+        if (state === ":active") {
+          this.elt.classList.add("pseudoclass-active");
+        }
+        if (state === ":focus") {
+          this.elt.classList.add("pseudoclass-focus");
+        }
+      }
+      this.elt.setAttribute("pseudoclass-count", this.node.pseudoClassLocks.length);
     } else {
-      this.elt.classList.remove("pseudoclass-locked");
+      this.elt.removeAttribute("pseudoclass-count");
     }
 
     if (this.editor.update) {
diff --git a/devtools/client/markupview/markup-view.xhtml b/devtools/client/markupview/markup-view.xhtml
index e49aa6a..73345c5 100644
--- a/devtools/client/markupview/markup-view.xhtml
+++ b/devtools/client/markupview/markup-view.xhtml
@@ -27,6 +27,7 @@
 
     <ul class="children">
       <li id="template-elementcontainer" save="${elt}" class="child collapsed">
+        <div class="pseudoclass-locked-container"></div>
         <div save="${tagLine}" class="tag-line"><!--
         --><span save="${tagState}" class="tag-state"></span><!--
         --><span save="${expander}" class="theme-twisty expander"></span><!--
diff --git a/devtools/client/themes/markup-view.css b/devtools/client/themes/markup-view.css
index b664b8d..611ef8f 100644
--- a/devtools/client/themes/markup-view.css
+++ b/devtools/client/themes/markup-view.css
@@ -15,19 +15,90 @@
   border: 1px solid #CCC;
 }
 
+.child[pseudoclass-count] {
+  --hover-pseudo-background: var(--theme-highlight-green);
+  --active-pseudo-background: var(--theme-highlight-red);
+  --focus-pseudo-background: var(--theme-highlight-lightorange);
+}
+
+.pseudoclass-locked-container {
+  display: none;
+}
+
 /* Draw a circle next to nodes that have a pseudo class lock.
    Center vertically with the 1.4em line height on .tag-line */
-.child.pseudoclass-locked::before {
-  content: "";
-  background: var(--theme-highlight-lightorange);
+.child[pseudoclass-count] > .pseudoclass-locked-container {
+  display: block;
   border-radius: 50%;
   width: .8em;
   height: .8em;
   margin-top: .3em;
+  border-radius: 50%;
   left: 1px;
+  overflow: hidden;
   position: absolute;
 }
 
+.child[pseudoclass-count="1"].pseudoclass-hover > .pseudoclass-locked-container {
+  background: var(--hover-pseudo-background);
+}
+.child[pseudoclass-count="1"].pseudoclass-active > .pseudoclass-locked-container {
+  background: var(--active-pseudo-background);
+}
+.child[pseudoclass-count="1"].pseudoclass-focus > .pseudoclass-locked-container {
+  background: var(--focus-pseudo-background);
+}
+
+
+.child[pseudoclass-count="2"] > .pseudoclass-locked-container::before {
+  content: "";
+  position:absolute;
+  width: 100%;
+  height: 100%;
+  background: var(--active-pseudo-background);
+}
+.child[pseudoclass-count="2"] > .pseudoclass-locked-container::after {
+  content: "";
+  position:absolute;
+  transform: rotate(45deg) translate(50%);
+  width: 100%;
+  height: 100%;
+  background: var(--active-pseudo-background);
+}
+
+/* Colors for active lock are already on before/after, now let hover/focus override appropriately */
+.child[pseudoclass-count="2"].pseudoclass-hover > .pseudoclass-locked-container::before {
+  background: var(--hover-pseudo-background);
+}
+.child[pseudoclass-count="2"].pseudoclass-focus > .pseudoclass-locked-container::after {
+  background: var(--focus-pseudo-background);
+}
+
+
+.child[pseudoclass-count="3"] > .pseudoclass-locked-container {
+  background: var(--hover-pseudo-background);
+}
+.child[pseudoclass-count="3"] > .pseudoclass-locked-container::before {
+  transform: rotate(90deg) skew(30deg);
+  width: 0.53333em;
+  margin-left: -0.10429em;
+  margin-top: 0.05em;
+  height: 0.47059em;
+  content: '';
+  display: block;
+  background: var(--active-pseudo-background);
+}
+.child[pseudoclass-count="3"] > .pseudoclass-locked-container::after {
+  transform: rotate(30deg) skew(30deg);
+  width: 0.53333em;
+  height: 0.47059em;
+  margin-left: 0.35783em;
+  margin-top: -0.47em;
+  content: '';
+  display: block;
+  background: var(--focus-pseudo-background);
+}
+
 /* Selected nodes in the tree should have light selected text.
    theme-selected doesn't work in this case since the text is a
    sibling of the class, not a child. */
diff --git a/real-element-in-markup-view.patch b/real-element-in-markup-view.patch
new file mode 100644
index 0000000..a5686a7
--- /dev/null
+++ b/real-element-in-markup-view.patch
@@ -0,0 +1,181 @@
+# HG changeset patch
+# User Brian Grinstead <bgrinstead@mozilla.com>
+# Parent  40f709d9c088dfc4ba1b55fb80920b5ff5102842
+Bug 1205371 - Use a real element instead of a pseudo element to show pseudo classes in markup view
+
+diff --git a/devtools/client/markupview/markup-view.js b/devtools/client/markupview/markup-view.js
+--- a/devtools/client/markupview/markup-view.js
++++ b/devtools/client/markupview/markup-view.js
+@@ -2055,20 +2055,35 @@ MarkupContainer.prototype = {
+     }
+   },
+ 
+   /**
+    * Update the container's editor to the current state of the
+    * viewed node.
+    */
+   update: function() {
++    this.elt.classList.remove("pseudoclass-hover");
++    this.elt.classList.remove("pseudoclass-active");
++    this.elt.classList.remove("pseudoclass-focus");
++    this.elt.removeAttribute("pseudoclass-count");
+     if (this.node.pseudoClassLocks.length) {
+-      this.elt.classList.add("pseudoclass-locked");
++      for (let state of this.node.pseudoClassLocks) {
++        if (state === ":hover") {
++          this.elt.classList.add("pseudoclass-hover");
++        }
++        if (state === ":active") {
++          this.elt.classList.add("pseudoclass-active");
++        }
++        if (state === ":focus") {
++          this.elt.classList.add("pseudoclass-focus");
++        }
++      }
++      this.elt.setAttribute("pseudoclass-count", this.node.pseudoClassLocks.length);
+     } else {
+-      this.elt.classList.remove("pseudoclass-locked");
++      this.elt.removeAttribute("pseudoclass-count");
+     }
+ 
+     if (this.editor.update) {
+       this.editor.update();
+     }
+   },
+ 
+   /**
+diff --git a/devtools/client/markupview/markup-view.xhtml b/devtools/client/markupview/markup-view.xhtml
+--- a/devtools/client/markupview/markup-view.xhtml
++++ b/devtools/client/markupview/markup-view.xhtml
+@@ -22,16 +22,17 @@
+ 
+   <div id="root-wrapper">
+     <div id="root"></div>
+   </div>
+   <div id="templates" style="display:none">
+ 
+     <ul class="children">
+       <li id="template-elementcontainer" save="${elt}" class="child collapsed">
++        <div class="pseudoclass-locked-container"></div>
+         <div save="${tagLine}" class="tag-line"><!--
+         --><span save="${tagState}" class="tag-state"></span><!--
+         --><span save="${expander}" class="theme-twisty expander"></span><!--
+      --></div>
+         <ul save="${children}" class="children"></ul>
+       </li>
+ 
+       <li id="template-textcontainer" save="${elt}" class="child collapsed">
+diff --git a/devtools/client/themes/markup-view.css b/devtools/client/themes/markup-view.css
+--- a/devtools/client/themes/markup-view.css
++++ b/devtools/client/themes/markup-view.css
+@@ -10,29 +10,107 @@
+ .more-nodes {
+   padding-left: 16px;
+ }
+ 
+ .styleinspector-propertyeditor {
+   border: 1px solid #CCC;
+ }
+ 
++.child[pseudoclass-count] {
++  --hover-pseudo-background: var(--theme-highlight-lightorange);
++  --active-pseudo-background: var(--theme-highlight-red);
++  --focus-pseudo-background: var(--theme-highlight-green);
++}
++
++.pseudoclass-locked-container {
++  display: none;
++}
++
+ /* Draw a circle next to nodes that have a pseudo class lock.
+    Center vertically with the 1.4em line height on .tag-line */
+-.child.pseudoclass-locked::before {
+-  content: "";
+-  background: var(--theme-highlight-lightorange);
++.child[pseudoclass-count] > .pseudoclass-locked-container {
++  display: block;
+   border-radius: 50%;
+   width: .8em;
+   height: .8em;
+   margin-top: .3em;
++  border-radius: 50%;
+   left: 1px;
++  overflow: hidden;
+   position: absolute;
+ }
+ 
++.child[pseudoclass-count="1"].pseudoclass-hover > .pseudoclass-locked-container {
++  background: var(--hover-pseudo-background);
++}
++.child[pseudoclass-count="1"].pseudoclass-active > .pseudoclass-locked-container {
++  background: var(--active-pseudo-background);
++}
++.child[pseudoclass-count="1"].pseudoclass-focus > .pseudoclass-locked-container {
++  background: var(--focus-pseudo-background);
++}
++
++
++.child[pseudoclass-count="2"] > .pseudoclass-locked-container::before {
++  transform: rotate(-45deg);
++  border-radius: 0.8em 0.8em 0 0;
++  content: "";
++  width: .8em;
++  height: .4em;
++  margin-left: -0.16em;
++  margin-top: 0;
++  display: block;
++  background: var(--active-pseudo-background);
++}
++.child[pseudoclass-count="2"] > .pseudoclass-locked-container::after {
++  transform: rotate(135deg);
++  border-radius: 0.8em 0.8em 0 0;
++  content: "";
++  width: .8em;
++  height: .4em;
++  margin-left: 0.09412em;
++  margin-top: -0.13333em;
++  display: block;
++  background: var(--active-pseudo-background);
++}
++
++/* Colors for active lock are already on before/after, now let hover/focus override appropriately */
++.child[pseudoclass-count="2"].pseudoclass-hover > .pseudoclass-locked-container::before {
++  background: var(--hover-pseudo-background);
++}
++.child[pseudoclass-count="2"].pseudoclass-focus > .pseudoclass-locked-container::after {
++  background: var(--focus-pseudo-background);
++}
++
++
++.child[pseudoclass-count="3"] > .pseudoclass-locked-container {
++  background: var(--hover-pseudo-background);
++}
++.child[pseudoclass-count="3"] > .pseudoclass-locked-container::before {
++  transform: rotate(90deg) skew(30deg);
++  width: 0.53333em;
++  margin-left: -0.11429em;
++  height: 0.47059em;
++  content: '';
++  display: block;
++  background: var(--active-pseudo-background);
++}
++.child[pseudoclass-count="3"] > .pseudoclass-locked-container::after {
++  transform: rotate(30deg) skew(30deg);
++  width: 0.53333em;
++  height: 0.47059em;
++  margin-left: 0.34783em;
++  margin-top: -0.5em;
++  content: '';
++  display: block;
++  background: var(--focus-pseudo-background);
++}
++
++
+ /* Selected nodes in the tree should have light selected text.
+    theme-selected doesn't work in this case since the text is a
+    sibling of the class, not a child. */
+ .theme-selected ~ .editor,
+ .theme-selected ~ .editor .theme-fg-color1,
+ .theme-selected ~ .editor .theme-fg-color2,
+ .theme-selected ~ .editor .theme-fg-color3,
+ .theme-selected ~ .editor .theme-fg-color4,

