# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  a3f183201f7f183c263d554bfb15fbf0b0ed2ea4

diff --git a/toolkit/content/widgets/textbox.xml b/toolkit/content/widgets/textbox.xml
--- a/toolkit/content/widgets/textbox.xml
+++ b/toolkit/content/widgets/textbox.xml
@@ -122,17 +122,20 @@
                                       onget="return this.inputField.selectionStart;"/>
       <property name="selectionEnd"   onset="this.inputField.selectionEnd = val; return val;"
                                       onget="return this.inputField.selectionEnd;"/>
 
       <method name="setSelectionRange">
         <parameter name="aSelectionStart"/>
         <parameter name="aSelectionEnd"/>
         <body>
-          this.inputField.setSelectionRange( aSelectionStart, aSelectionEnd );
+          // https://html.spec.whatwg.org/#do-not-apply
+          if (this.inputField.type === "text") {
+            this.inputField.setSelectionRange( aSelectionStart, aSelectionEnd );
+          }
         </body>
       </method>
 
       <method name="_setNewlineHandling">
         <body><![CDATA[
           var str = this.getAttribute("newlines");
           if (str && this.editor) {
             const nsIPlaintextEditor = Components.interfaces.nsIPlaintextEditor;
@@ -220,24 +223,33 @@
               window.isChromeWindow &&
               document.activeElement == this.inputField)
             this.mIgnoreFocus = true;
         ]]>
       </handler>
 
       <handler event="mousedown">
         <![CDATA[
+        console.log("1", this, this.inputField);
           this.mIgnoreClick = this.hasAttribute("focused");
 
+        console.log("2");
           if (!this.mIgnoreClick) {
+        console.log("3");
             this.mIgnoreFocus = true;
-            this.inputField.setSelectionRange(0, 0);
+        console.log("4", this.inputField);
+            this.setSelectionRange(0, 0);
+        console.log("5");
             if (event.originalTarget == this ||
-                event.originalTarget == this.inputField.parentNode)
+                event.originalTarget == this.inputField.parentNode) {
+
+        console.log("6");
               this.inputField.focus();
+              }
+        console.log("7");
           }
         ]]>
       </handler>
 
       <handler event="click" action="this._maybeSelectAll();"/>
 
 #ifndef XP_WIN
       <handler event="contextmenu">
