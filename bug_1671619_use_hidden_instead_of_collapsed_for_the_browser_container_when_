# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1603147398 25200
#      Mon Oct 19 15:43:18 2020 -0700
# Node ID 8cc026ed855d39bcf3d9b656303676ad90f11a7c
# Parent  b47b9a46d5f7cb70eba5a309275b7175f66e1f44
Bug 1671619 - Use [hidden] instead of [collapsed] for the browser container when entering and exiting Customize Mode

This is using collapsed as a carryover from XBL days, where setting the element to hidden would destroy bindings.
But it's causing a side effect of shrinking the browser element to 0x0 which causes the content to resize, leading to
some flickering and poor performance when switching back to content from a Customize Mode tab.
By setting hidden we instead are just toggling the display property.

Differential Revision: https://phabricator.services.mozilla.com/D94057

diff --git a/browser/components/customizableui/CustomizeMode.jsm b/browser/components/customizableui/CustomizeMode.jsm
--- a/browser/components/customizableui/CustomizeMode.jsm
+++ b/browser/components/customizableui/CustomizeMode.jsm
@@ -395,17 +395,17 @@ CustomizeMode.prototype = {
       window.PanelUI.overflowFixedList.setAttribute("customizing", true);
       window.PanelUI.menuButton.disabled = true;
       document.getElementById("nav-bar-overflow-button").disabled = true;
 
       this._transitioning = true;
 
       let customizer = document.getElementById("customization-container");
       let browser = document.getElementById("browser");
-      browser.collapsed = true;
+      browser.hidden = true;
       customizer.hidden = false;
 
       this._wrapToolbarItemSync(CustomizableUI.AREA_TABSTRIP);
 
       this.document.documentElement.setAttribute("customizing", true);
 
       let customizableToolbars = document.querySelectorAll(
         "toolbar[customizable=true]:not([autohide=true]):not([collapsed=true])"
@@ -525,17 +525,17 @@ CustomizeMode.prototype = {
 
     if (this.browser.selectedTab == gTab) {
       closeGlobalTab();
     }
 
     let customizer = document.getElementById("customization-container");
     let browser = document.getElementById("browser");
     customizer.hidden = true;
-    browser.collapsed = false;
+    browser.hidden = false;
 
     window.gNavToolbox.removeEventListener("toolbarvisibilitychange", this);
 
     this._teardownPaletteDragging();
 
     (async () => {
       await this._unwrapToolbarItems();
 
diff --git a/browser/components/customizableui/test/browser.ini b/browser/components/customizableui/test/browser.ini
--- a/browser/components/customizableui/test/browser.ini
+++ b/browser/components/customizableui/test/browser.ini
@@ -159,16 +159,17 @@ skip-if = verify
 tags = fullscreen
 skip-if = os == "mac"
 [browser_panelUINotifications_fullscreen_noAutoHideToolbar.js]
 skip-if = (verify && (os == 'linux' || os == 'mac'))
 tags = fullscreen
 [browser_panelUINotifications_multiWindow.js]
 [browser_remove_customized_specials.js]
 [browser_reset_builtin_widget_currentArea.js]
+[browser_switch_away_from_customize_mode.js]
 [browser_switch_to_customize_mode.js]
 [browser_synced_tabs_menu.js]
 [browser_backfwd_enabled_post_customize.js]
 [browser_check_tooltips_in_navbar.js]
 [browser_editcontrols_update.js]
 [browser_customization_context_menus.js]
 [browser_newtab_button_customizemode.js]
 [browser_open_from_popup.js]
diff --git a/browser/components/customizableui/test/browser_switch_away_from_customize_mode.js b/browser/components/customizableui/test/browser_switch_away_from_customize_mode.js
new file mode 100644
--- /dev/null
+++ b/browser/components/customizableui/test/browser_switch_away_from_customize_mode.js
@@ -0,0 +1,36 @@
+/* Any copyright is dedicated to the Public Domain.
+   http://creativecommons.org/publicdomain/zero/1.0/ */
+
+"use strict";
+
+// Check that toggling customize mode doesn't cause side effects
+// on the web content browser.
+
+add_task(async function test_resize() {
+  // Have the test page set an attribute when a resize happens.
+  // We don't expect this to happen anymore after Bug 1671619.
+  let browser = gBrowser.selectedBrowser;
+  BrowserTestUtils.loadURI(
+    browser,
+    `data:text/html;charset=utf-8,
+    <script>
+      window.addEventListener('resize', () => {
+        document.body.setAttribute('was-resized', true);
+      });
+    </script>
+    `
+  );
+
+  await BrowserTestUtils.browserLoaded(browser);
+
+  await startCustomizing();
+  isnot(browser, gBrowser.selectedBrowser, "Previous browser is not selected");
+
+  await endCustomizing();
+  let wasResized = await ContentTask.spawn(browser, {}, async () => {
+    return content.document.body.hasAttribute("was-resized");
+  });
+
+  is(browser, gBrowser.selectedBrowser, "Previous browser is reselected");
+  ok(!wasResized, "Content was not resized after reselecting");
+});
