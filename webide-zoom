# HG changeset patch
# Parent 7d9d619896bf378f4c7df8cce717ed70d7c87dee
# User Brian Grinstead <bgrinstead@mozilla.com>
Bug 1027817 - zoom fonts in webide

diff --git a/browser/devtools/webide/content/webide.js b/browser/devtools/webide/content/webide.js
--- a/browser/devtools/webide/content/webide.js
+++ b/browser/devtools/webide/content/webide.js
@@ -21,16 +21,18 @@ const ProjectEditor = require("projected
 const {Devices} = Cu.import("resource://gre/modules/devtools/Devices.jsm");
 const {GetAvailableAddons} = require("devtools/webide/addons");
 const {GetTemplatesJSON, GetAddonsJSON} = require("devtools/webide/remote-resources");
 
 const Strings = Services.strings.createBundle("chrome://webide/content/webide.properties");
 
 const HTML = "http://www.w3.org/1999/xhtml";
 const HELP_URL = "https://developer.mozilla.org/Firefox_OS/Using_the_App_Manager#Troubleshooting";
+const MIN_ZOOM = 0.5;
+const MAX_ZOOM = 2;
 
 // download some JSON early.
 GetTemplatesJSON(true);
 GetAddonsJSON(true);
 
 // See bug 989619
 console.log = console.log.bind(console);
 console.warn = console.warn.bind(console);
@@ -70,16 +72,89 @@ let UI = {
     // If the user decides to uninstall the addon, we won't install it again.
     let autoInstallADBHelper = Services.prefs.getBoolPref("devtools.webide.autoinstallADBHelper");
     if (autoInstallADBHelper && !Devices.helperAddonInstalled) {
       GetAvailableAddons().then(addons => {
         addons.adb.install();
       }, console.error);
     }
     Services.prefs.setBoolPref("devtools.webide.autoinstallADBHelper", false);
+    this._addZoomKeys();
+    this.setZoom(this.zoomValue);
+  },
+
+  /**
+   * Wire up the listeners for the zoom keys.
+   */
+  _addZoomKeys: function() {
+    // let inKey = document.getElementById("key_zoomIn");
+    // inKey.addEventListener("command", this.zoomIn.bind(this), true);
+
+    // let inKey2 = document.getElementById("key_zoomIn2");
+    // inKey2.addEventListener("command", this.zoomIn.bind(this), true);
+
+    let outKey = document.getElementById("key_zoomOut");
+    outKey.addEventListener("command", this.zoomOut.bind(this), true);
+
+    let resetKey = document.getElementById("key_zoomReset");
+    resetKey.addEventListener("command", this.zoomReset.bind(this), true);
+  },
+
+  /**
+   * Get current zoom level of toolbox
+   */
+  get zoomValue() {
+    return parseFloat(Services.prefs.getCharPref("devtools.webide.zoomvalue"));
+  },
+
+  /**
+   * Increase zoom level of toolbox window - make things bigger.
+   */
+  zoomIn: function() {
+    console.log("IN");
+    this.setZoom(this.zoomValue + 0.1);
+  },
+
+  /**
+   * Decrease zoom level of toolbox window - make things smaller.
+   */
+  zoomOut: function() {
+    console.log("OUT");
+    this.setZoom(this.zoomValue - 0.1);
+  },
+
+  /**
+   * Reset zoom level of the toolbox window.
+   */
+  zoomReset: function() {
+    console.log("RESET");
+    this.setZoom(1);
+  },
+
+  /**
+   * Set zoom level of the toolbox window.
+   *
+   * @param {number} zoomValue
+   *        Zoom level e.g. 1.2
+   */
+  setZoom: function(zoomValue) {
+    // cap zoom value
+    zoomValue = Math.max(zoomValue, MIN_ZOOM);
+    zoomValue = Math.min(zoomValue, MAX_ZOOM);
+
+console.log("HUH!!, zooming", zoomValue, window );    
+
+    let projecteditorIframe = document.querySelector("#deck-panel-projecteditor");
+
+    let contViewer = projecteditorIframe.docShell.contentViewer;
+    let docViewer = contViewer.QueryInterface(Ci.nsIMarkupDocumentViewer);
+
+    docViewer.fullZoom = zoomValue;
+
+    Services.prefs.setCharPref("devtools.webide.zoomvalue", zoomValue);
   },
 
   openLastProject: function() {
     let lastProjectLocation = Services.prefs.getCharPref("devtools.webide.lastprojectlocation");
     if (lastProjectLocation) {
       let lastProject = AppProjects.get(lastProjectLocation);
       if (lastProject) {
         AppManager.selectedProject = lastProject;
diff --git a/browser/devtools/webide/content/webide.xul b/browser/devtools/webide/content/webide.xul
--- a/browser/devtools/webide/content/webide.xul
+++ b/browser/devtools/webide/content/webide.xul
@@ -85,16 +85,20 @@
   </menubar>
 
   <keyset id="mainKeyset">
     <key key="&key_quit;" id="key_quit" command="cmd_quit" modifiers="accel"/>
     <key key="&key_showProjectPanel;" id="key_showProjectPanel" command="cmd_showProjectPanel" modifiers="accel"/>
     <key key="&key_play;" id="key_play" command="cmd_play" modifiers="accel"/>
     <key key="&key_toggleEditor;" id="key_toggleEditor" command="cmd_toggleEditor" modifiers="accel"/>
     <key keycode="&key_toggleToolbox;" id="key_toggleToolbox" command="cmd_toggleToolbox"/>
+    <key id="key_zoomIn" key="&key_zoomIn;" oncommand="void(0);" modifiers="accel"/>
+    <key id="key_zoomIn2" key="&key_zoomIn2;" oncommand="void(0);" modifiers="accel"/>
+    <key id="key_zoomOut" key="&key_zoomOut" oncommand="void(0);" modifiers="accel"/>
+    <key id="key_zoomReset" key="&key_zoomReset;" oncommand="void(0);" modifiers="accel"/>
   </keyset>
 
   <toolbar id="main-toolbar">
 
     <vbox flex="1">
       <hbox id="action-buttons-container" class="busy">
         <toolbarbutton id="action-button-play"  class="action-button" command="cmd_play" tooltiptext="&projectMenu_play_label;"/>
         <toolbarbutton id="action-button-stop"  class="action-button" command="cmd_stop" tooltiptext="&projectMenu_stop_label;"/>
diff --git a/browser/devtools/webide/locales/en-US/webide.dtd b/browser/devtools/webide/locales/en-US/webide.dtd
--- a/browser/devtools/webide/locales/en-US/webide.dtd
+++ b/browser/devtools/webide/locales/en-US/webide.dtd
@@ -50,16 +50,20 @@
 <!-- open menu -->
 <!ENTITY key_showProjectPanel "O">
 <!-- reload app -->
 <!ENTITY key_play "R">
 <!-- show toolbox -->
 <!ENTITY key_toggleToolbox "VK_F12">
 <!-- toggle sidebar -->
 <!ENTITY key_toggleEditor "B">
+<!ENTITY key_zoomIn             "+">
+<!ENTITY key_zoomIn2            "="> <!-- + is above this key on many keyboards -->
+<!ENTITY key_zoomOut            "-">
+<!ENTITY key_zoomReset          "0">
 
 <!ENTITY projectPanel_myProjects "My Projects">
 <!ENTITY projectPanel_runtimeApps "Runtime Apps">
 <!ENTITY runtimePanel_USBDevices "USB Devices">
 <!ENTITY runtimePanel_simulators "Simulators">
 <!ENTITY runtimePanel_custom "Custom">
 <!ENTITY runtimePanel_nosimulator "Install Simulator">
 <!ENTITY runtimePanel_noadbhelper "Install ADB Helper">
diff --git a/browser/devtools/webide/webide-prefs.js b/browser/devtools/webide/webide-prefs.js
--- a/browser/devtools/webide/webide-prefs.js
+++ b/browser/devtools/webide/webide-prefs.js
@@ -2,14 +2,15 @@
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
 pref("devtools.webide.showProjectEditor", true);
 pref("devtools.webide.templatesURL", "http://code.cdn.mozilla.net/templates/list.json");
 pref("devtools.webide.autoinstallADBHelper", true);
 pref("devtools.webide.lastprojectlocation", "");
+pref("devtools.webide.zoomvalue", "1");
 pref("devtools.webide.enableLocalRuntime", false);
 pref("devtools.webide.addonsURL", "https://ftp.mozilla.org/pub/mozilla.org/labs/fxos-simulator/index.json");
 pref("devtools.webide.simulatorAddonsURL", "https://ftp.mozilla.org/pub/mozilla.org/labs/fxos-simulator/#VERSION#/#OS#/fxos_#SLASHED_VERSION#_simulator-#OS#-latest.xpi");
 pref("devtools.webide.simulatorAddonID", "fxos_#SLASHED_VERSION#_simulator@mozilla.org");
 pref("devtools.webide.adbAddonURL", "https://ftp.mozilla.org/pub/mozilla.org/labs/fxos-simulator/adb-helper/#OS#/adbhelper-#OS#-latest.xpi");
 pref("devtools.webide.adbAddonID", "adbhelper@mozilla.org");
