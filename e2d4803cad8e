
# HG changeset patch
# User Julian Descottes <jdescottes@mozilla.com>
# Date 1471631510 -7200
# Node ID e2d4803cad8ebfe6b4419e5817265c1d88e030e0
# Parent  d44dc3ef5276faa664c187b5b68fa8c7f3296af6
Bug 1295609 - Migrate devtools/client/webconsole to use l10n.js instead of Services.string;r=bgrins

MozReview-Commit-ID: 65AyxZ68GHt

diff --git a/devtools/client/webconsole/console-output.js b/devtools/client/webconsole/console-output.js
--- a/devtools/client/webconsole/console-output.js
+++ b/devtools/client/webconsole/console-output.js
@@ -20,7 +20,7 @@
 const { extend } = require("sdk/core/heritage");
 const XHTML_NS = "http://www.w3.org/1999/xhtml";
 const XUL_NS = "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
-const STRINGS_URI = "chrome://devtools/locale/webconsole.properties";
+const STRINGS_URI = "devtools/locale/webconsole.properties";
 
 const WebConsoleUtils = require("devtools/client/webconsole/utils").Utils;
 const { getSourceNames } = require("devtools/client/shared/source-utils");
diff --git a/devtools/client/webconsole/hudservice.js b/devtools/client/webconsole/hudservice.js
--- a/devtools/client/webconsole/hudservice.js
+++ b/devtools/client/webconsole/hudservice.js
@@ -22,7 +22,7 @@
 loader.lazyRequireGetter(this, "showDoorhanger", "devtools/client/shared/doorhanger", true);
 loader.lazyRequireGetter(this, "viewSource", "devtools/client/shared/view-source");
 
-const STRINGS_URI = "chrome://devtools/locale/webconsole.properties";
+const STRINGS_URI = "devtools/locale/webconsole.properties";
 var l10n = new WebConsoleUtils.L10n(STRINGS_URI);
 
 const BROWSER_CONSOLE_WINDOW_FEATURES = "chrome,titlebar,toolbar,centerscreen,resizable,dialog=no";
diff --git a/devtools/client/webconsole/jsterm.js b/devtools/client/webconsole/jsterm.js
--- a/devtools/client/webconsole/jsterm.js
+++ b/devtools/client/webconsole/jsterm.js
@@ -27,7 +27,7 @@
 loader.lazyImporter(this, "VariablesViewController", "resource://devtools/client/shared/widgets/VariablesViewController.jsm");
 loader.lazyRequireGetter(this, "gDevTools", "devtools/client/framework/devtools", true);
 
-const STRINGS_URI = "chrome://devtools/locale/webconsole.properties";
+const STRINGS_URI = "devtools/locale/webconsole.properties";
 var l10n = new WebConsoleUtils.L10n(STRINGS_URI);
 
 // Constants used for defining the direction of JSTerm input history navigation.
diff --git a/devtools/client/webconsole/net/main.js b/devtools/client/webconsole/net/main.js
--- a/devtools/client/webconsole/net/main.js
+++ b/devtools/client/webconsole/net/main.js
@@ -19,9 +19,8 @@
 const { loadSheet } = require("sdk/stylesheet/utils");
 
 // Localization
-const { Services } = Cu.import("resource://gre/modules/Services.jsm", {});
-var networkStrings = Services.strings.createBundle(
-  "chrome://devtools/locale/netmonitor.properties");
+const {LocalizationHelper} = require("devtools/client/shared/l10n");
+const L10N = new LocalizationHelper("devtools/locale/netmonitor.properties");
 
 // Stylesheets
 var styleSheets = [
@@ -55,7 +54,7 @@
 this.Locale = {
   $STR: key => {
     try {
-      return networkStrings.GetStringFromName(key);
+      return L10N.getStr(key);
     } catch (err) {
       console.error(key + ": " + err);
     }
diff --git a/devtools/client/webconsole/new-console-output/utils/messages.js b/devtools/client/webconsole/new-console-output/utils/messages.js
--- a/devtools/client/webconsole/new-console-output/utils/messages.js
+++ b/devtools/client/webconsole/new-console-output/utils/messages.js
@@ -7,7 +7,7 @@
 "use strict";
 
 const WebConsoleUtils = require("devtools/client/webconsole/utils").Utils;
-const STRINGS_URI = "chrome://devtools/locale/webconsole.properties";
+const STRINGS_URI = "devtools/locale/webconsole.properties";
 const l10n = new WebConsoleUtils.L10n(STRINGS_URI);
 
 const {
diff --git a/devtools/client/webconsole/test/head.js b/devtools/client/webconsole/test/head.js
--- a/devtools/client/webconsole/test/head.js
+++ b/devtools/client/webconsole/test/head.js
@@ -37,8 +37,7 @@
 // The indent of a console group in pixels.
 const GROUP_INDENT = 12;
 
-const WEBCONSOLE_STRINGS_URI = "chrome://devtools/locale/" +
-                               "webconsole.properties";
+const WEBCONSOLE_STRINGS_URI = "devtools/locale/webconsole.properties";
 var WCUL10n = new WebConsoleUtils.L10n(WEBCONSOLE_STRINGS_URI);
 
 const DOCS_GA_PARAMS = "?utm_source=mozilla" +
diff --git a/devtools/client/webconsole/utils.js b/devtools/client/webconsole/utils.js
--- a/devtools/client/webconsole/utils.js
+++ b/devtools/client/webconsole/utils.js
@@ -8,6 +8,7 @@
 
 const {Cc, Ci, Cu, components} = require("chrome");
 const Services = require("Services");
+const {LocalizationHelper} = require("devtools/client/shared/l10n");
 
 // Match the function name from the result of toString() or toSource().
 //
@@ -335,19 +336,10 @@
 // ////////////////////////////////////////////////////////////////////////
 
 WebConsoleUtils.L10n = function (bundleURI) {
-  this._bundleUri = bundleURI;
+  this._helper = new LocalizationHelper(bundleURI);
 };
 
 WebConsoleUtils.L10n.prototype = {
-  _stringBundle: null,
-
-  get stringBundle() {
-    if (!this._stringBundle) {
-      this._stringBundle = Services.strings.createBundle(this._bundleUri);
-    }
-    return this._stringBundle;
-  },
-
   /**
    * Generates a formatted timestamp string for displaying in console messages.
    *
@@ -375,14 +367,12 @@
    *         The localized string.
    */
   getStr: function (name) {
-    let result;
     try {
-      result = this.stringBundle.GetStringFromName(name);
+      return this._helper.getStr(name);
     } catch (ex) {
       console.error("Failed to get string: " + name);
       throw ex;
     }
-    return result;
   },
 
   /**
@@ -397,14 +387,11 @@
    *         The formatted local string.
    */
   getFormatStr: function (name, array) {
-    let result;
     try {
-      result = this.stringBundle.formatStringFromName(name, array,
-                                                      array.length);
+      return this._helper.getFormatStr(name, ...array);
     } catch (ex) {
       console.error("Failed to format string: " + name);
       throw ex;
     }
-    return result;
   },
 };
diff --git a/devtools/client/webconsole/webconsole.js b/devtools/client/webconsole/webconsole.js
--- a/devtools/client/webconsole/webconsole.js
+++ b/devtools/client/webconsole/webconsole.js
@@ -39,7 +39,7 @@
 loader.lazyRequireGetter(this, "KeyShortcuts", "devtools/client/shared/key-shortcuts", true);
 loader.lazyRequireGetter(this, "ZoomKeys", "devtools/client/shared/zoom-keys");
 
-const STRINGS_URI = "chrome://devtools/locale/webconsole.properties";
+const STRINGS_URI = "devtools/locale/webconsole.properties";
 var l10n = new WebConsoleUtils.L10n(STRINGS_URI);
 
 const XHTML_NS = "http://www.w3.org/1999/xhtml";

