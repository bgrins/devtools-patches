# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  74001bb2abbeaa766f5a29c39c5553c693dfc2d0
Bug 1459556 - Fixing some xbl weirdness on top of the handlers binding removal

diff --git a/browser/components/preferences/in-content/main.js b/browser/components/preferences/in-content/main.js
--- a/browser/components/preferences/in-content/main.js
+++ b/browser/components/preferences/in-content/main.js
@@ -1537,18 +1537,17 @@ var gMainPane = {
 
     var visibleTypes = this._visibleTypes;
 
     // If the user is filtering the list, then only show matching types.
     if (this._filter.value)
       visibleTypes = visibleTypes.filter(this._matchesFilter, this);
 
     for (let visibleType of visibleTypes) {
-      let item = new HandlerListItem(visibleType);
-      this._list.appendChild(item.node);
+      let item = new HandlerListItem(visibleType, this._list);
 
       if (visibleType.type === lastSelectedType) {
         this._list.selectedItem = item.node;
       }
     }
   },
 
   _matchesFilter(aType) {
@@ -2461,38 +2460,44 @@ function parseDOM(str) {
 /**
  * This is associated to <richlistitem> elements in the handlers view.
  */
 class HandlerListItem {
   static forNode(node) {
     return gNodeToObjectMap.get(node);
   }
 
-  constructor(handlerInfoWrapper) {
+  constructor(handlerInfoWrapper, list) {
     this.handlerInfoWrapper = handlerInfoWrapper;
-    this.node = document.createElement("richlistitem");
-    this.node.appendChild(parseDOM(`
-      <xul:hbox flex="1" equalsize="always">
-        <xul:hbox flex="1" align="center" inherits="tooltiptext=typeDescription">
-          <xul:image src="moz-icon://goat?size=16" class="typeIcon"
-                     inherits="src=typeIcon" height="16" width="16"/>
-          <xul:label flex="1" crop="end" inherits="value=typeDescription"/>
+    list.appendChild(parseDOM(`
+      <xul:richlistitem>
+        <xul:hbox flex="1" equalsize="always">
+          <xul:hbox flex="1" align="center" inherits="tooltiptext=typeDescription">
+            <xul:image src="moz-icon://goat?size=16" class="typeIcon"
+                       inherits="src=typeIcon" height="16" width="16"/>
+            <xul:label flex="1" crop="end" inherits="value=typeDescription"/>
+          </xul:hbox>
+          <xul:hbox anonid="not-selected" flex="1" align="center" inherits="tooltiptext=actionDescription">
+            <xul:image inherits="src=actionIcon" height="16" width="16" class="actionIcon"/>
+            <xul:label flex="1" crop="end" inherits="value=actionDescription"/>
+          </xul:hbox>
+          <xul:hbox hidden="true" anonid="selected" flex="1">
+            <xul:menulist class="actionsMenu" flex="1" crop="end" selectedIndex="1"
+                          inherits="tooltiptext=actionDescription" />
+          </xul:hbox>
         </xul:hbox>
-        <xul:hbox anonid="not-selected" flex="1" align="center" inherits="tooltiptext=actionDescription">
-          <xul:image inherits="src=actionIcon" height="16" width="16" class="actionIcon"/>
-          <xul:label flex="1" crop="end" inherits="value=actionDescription"/>
-        </xul:hbox>
-        <xul:hbox hidden="true" anonid="selected" flex="1">
-          <xul:menulist class="actionsMenu" flex="1" crop="end" selectedIndex="1"
-                        inherits="tooltiptext=actionDescription">
-            <xul:menupopup/>
-          </xul:menulist>
-        </xul:hbox>
-      </xul:hbox>
+      </xul:richlistitem>
     `));
+
+    this.node = list.lastElementChild;
+
+    // For some reason the XBL anonymous content doesn't get added for the menulist
+    // if the menupopup is included above.
+    this.node.querySelector("menulist").appendChild(parseDOM(`<xul:menupopup />`));
+
     gNodeToObjectMap.set(this.node, this);
 
     this.node.querySelector('[class="actionsMenu"]').addEventListener("command",
       event => gMainPane.onSelectAction(event.originalTarget));
 
     this.node.setAttribute("type", this.handlerInfoWrapper.type);
     this.node.querySelector('[inherits="value=typeDescription"]')
              .setAttribute("value", this.handlerInfoWrapper.typeDescription);
