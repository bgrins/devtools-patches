# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  23cfa0da3154e7eea5ed062371ee8edc0081a0dc

diff --git a/devtools/server/tests/mochitest/chrome.ini b/devtools/server/tests/mochitest/chrome.ini
--- a/devtools/server/tests/mochitest/chrome.ini
+++ b/devtools/server/tests/mochitest/chrome.ini
@@ -1,13 +1,14 @@
 [DEFAULT]
 tags = devtools
 skip-if = os == 'android'
 support-files =
   animation-data.html
+  cpows-child.js
   Debugger.Source.prototype.element.js
   Debugger.Source.prototype.element-2.js
   Debugger.Source.prototype.element.html
   hello-actor.js
   inspector_css-properties.html
   inspector_getImageData.html
   inspector_getOffsetParent.html
   inspector-delay-image-response.sjs
@@ -84,16 +85,17 @@ support-files =
 [test_memory_allocations_05.html]
 [test_memory_allocations_06.html]
 [test_memory_allocations_07.html]
 [test_memory_attach_01.html]
 [test_memory_attach_02.html]
 [test_memory_census.html]
 [test_memory_gc_01.html]
 [test_memory_gc_events.html]
+[test_object_cpows.xul]
 [test_preference.html]
 [test_setupInParentChild.html]
 [test_styles-applied.html]
 [test_styles-computed.html]
 [test_styles-layout.html]
 [test_styles-matched.html]
 [test_styles-modify.html]
 [test_styles-svg.html]
diff --git a/devtools/server/tests/mochitest/cpows-child.js b/devtools/server/tests/mochitest/cpows-child.js
new file mode 100644
--- /dev/null
+++ b/devtools/server/tests/mochitest/cpows-child.js
@@ -0,0 +1,6 @@
+dump('loaded child cpow test\n');
+
+(function start() {
+  function f() {}
+  sendAsyncMessage("cpows:unsafe", null, {f});
+})();
\ No newline at end of file
diff --git a/devtools/server/tests/mochitest/test_makeGlobalObjectReference.html b/devtools/server/tests/mochitest/test_makeGlobalObjectReference.html
--- a/devtools/server/tests/mochitest/test_makeGlobalObjectReference.html
+++ b/devtools/server/tests/mochitest/test_makeGlobalObjectReference.html
@@ -18,27 +18,29 @@ Debugger.prototype.makeGlobalObjectRefer
 "use strict";
 
 Components.utils.import("resource://gre/modules/jsdebugger.jsm");
 addDebuggerToGlobal(this);
 
 window.onload = function () {
   SimpleTest.waitForExplicitFinish();
 
-  let iframe = document.createElement("iframe");
-  iframe.src = "data:text/html,<html>The word 'smorgasbord'," +
-               " spoken by an adorably plump child, symbolizing prosperity</html>";
+  let iframe = document.createElement("browser");
+  iframe.setAttribute("remote", "true");
+  iframe.setAttribute("type", "content");
+  iframe.src = "animation-data.html";
   iframe.onload = iframeOnLoad;
   document.body.appendChild(iframe);
 
   function iframeOnLoad() {
     let dbg = new Debugger();
 
     // 'o' for 'outer window'
     let g1o = iframe.contentWindow;
+    ok(Components.utils.isCrossProcessWrapper(g1o), "foo");
     ok(!dbg.hasDebuggee(g1o), "iframe is not initially a debuggee");
 
     // Like addDebuggee, makeGlobalObjectReference innerizes.
     // 'i' stands for 'inner window'.
     // 'DO' stands for 'Debugger.Object'.
     let g1iDO = dbg.makeGlobalObjectReference(g1o);
     ok(!dbg.hasDebuggee(g1o),
        "makeGlobalObjectReference does not add g1 as debuggee, designated via outer");
diff --git a/devtools/server/tests/mochitest/test_object_cpows.xul b/devtools/server/tests/mochitest/test_object_cpows.xul
new file mode 100644
--- /dev/null
+++ b/devtools/server/tests/mochitest/test_object_cpows.xul
@@ -0,0 +1,60 @@
+<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
+<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css"
+                 type="text/css"?>
+<window title="Object Actor CPOW tests"
+  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
+  onload="start()">
+
+  <script type="application/javascript"><![CDATA[
+  function frameLoad() {
+        console.log("Loaded");
+        console.log(node.contentDocument);
+      var node = document.getElementById('cpowbrowser_remote');
+
+  }
+    function start() {
+      // let browser = document.getElementById("cpowbrowser_remote");
+
+      var node = document.getElementById('cpowbrowser_remote');
+      console.log(node, node.messageManager);
+      // node.onload = () => {
+      // }
+      // node.setAttribute("src", "animation-data.html");
+      var mm = node.messageManager;
+      mm.addMessageListener("cpows:unsafe", recvUnsafe);
+      mm.loadFrameScript("chrome://mochitests/content/chrome/devtools/server/tests/mochitest/cpows-child.js", true);
+
+      // // Create an iframe to debug.
+      // let iframe = document.createElement("iframe");
+      // iframe.src = "data:text/html," +
+      //              "<div id='Tootles' onclick='debugger;'>I'm a DIV!</div>" +
+      //              "<script id='Auddie'>function auddie() { debugger; }<\/script>";
+      // iframe.onload = onLoadHandler;
+      // document.body.appendChild(iframe);
+
+      // function onLoadHandler() {
+      //   // Now that the iframe's window has been created, we can add
+      //   // it as a debuggee.
+      //   dbg = new Debugger();
+      //   iframeDO = dbg.addDebuggee(iframe.contentWindow);
+      //   doc = iframe.contentWindow.document;
+      //   Tootles = doc.getElementById("Tootles");
+      //   TootlesDO = iframeDO.makeDebuggeeValue(Tootles);
+
+      // }
+
+    }
+
+    function recvUnsafe(a) {
+      console.log("received");
+    }
+    // function finish() {
+    //   ok(gReceivedErrorProbe, "Should have reported error probe");
+    //   opener.setTimeout("done()", 0);
+    //   window.close();
+    // }
+
+  ]]></script>
+
+  <browser type="content" src="http://mochi.test:8888/chrome/devtools/server/tests/mochitest/animation-data.html" id="cpowbrowser_remote" onload="frameLoad()" remote="true"/>
+</window>
\ No newline at end of file
