# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  ad9cd1891d3c5d802a00bd8bb4532bd70f87fe97

diff --git a/toolkit/content/widgets/tabbox.xml b/toolkit/content/widgets/tabbox.xml
--- a/toolkit/content/widgets/tabbox.xml
+++ b/toolkit/content/widgets/tabbox.xml
@@ -53,63 +53,83 @@
       <!-- _tabs and _tabpanels are deprecated, they exist only for
            backwards compatibility. -->
       <property name="_tabs" readonly="true" onget="return this.tabs;"/>
       <property name="_tabpanels" readonly="true" onget="return this.tabpanels;"/>
 
       <property name="tabs" readonly="true">
         <getter>
         <![CDATA[
+          debugger;
+          return document.querySelector("#tabbrowser-tabs");
+          var retval = this.getElementsByTagNameNS(
+              "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",
+              "tabs").item(0);
+          var retval2 = this.querySelector("tabs");
+          dump(`tabbox: About to run tabs getter ${retval} ${retval2} ${this.innerHTML}\n`);
+          console.trace();
+          return this.querySelector("tabs");
           return this.getElementsByTagNameNS(
               "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",
               "tabs").item(0);
         ]]>
         </getter>
       </property>
 
       <property name="tabpanels" readonly="true">
         <getter>
         <![CDATA[
+          var retval = this.getElementsByTagNameNS(
+              "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",
+              "tabpanels").item(0);
+          var retval2 = this.querySelector("tabpanels");
+          dump(`tabbox: About to run tabpanels getter ${retval} ${retval2}\n`);
+          return this.querySelector("tabpanels");
           return this.getElementsByTagNameNS(
               "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",
               "tabpanels").item(0);
         ]]>
         </getter>
       </property>
 
       <property name="selectedIndex">
         <getter>
         <![CDATA[
+          dump(`tabbox: About to run selectedIndex getter\n`);
           var tabs = this.tabs;
           return tabs ? tabs.selectedIndex : -1;
         ]]>
         </getter>
 
         <setter>
         <![CDATA[
+          dump(`tabbox: About to run selectedIndex setter: ${val}\n`);
           var tabs = this.tabs;
           if (tabs)
             tabs.selectedIndex = val;
           this.setAttribute("selectedIndex", val);
           return val;
         ]]>
         </setter>
       </property>
 
       <property name="selectedTab">
         <getter>
         <![CDATA[
+          dump(`tabbox: About to run selectedTab getter\n`);
           var tabs = this.tabs;
           return tabs && tabs.selectedItem;
         ]]>
         </getter>
 
         <setter>
         <![CDATA[
+          dump(`tabbox: About to run selectedTab setter: ${val}\n`);
           if (val) {
+          debugger;
             var tabs = this.tabs;
             if (tabs)
               tabs.selectedItem = val;
           }
           return val;
         ]]>
         </setter>
       </property>
@@ -669,16 +689,17 @@
         <![CDATA[
           var indexStr = this.getAttribute("selectedIndex");
           return indexStr ? parseInt(indexStr) : -1;
         ]]>
         </getter>
 
         <setter>
         <![CDATA[
+          dump(`tabpanels: About to run selectedIndex setter: ${val}\n`);
           if (val < 0 || val >= this.childNodes.length)
             return val;
           var panel = this._selectedPanel;
           this._selectedPanel = this.childNodes[val];
           this.setAttribute("selectedIndex", val);
           if (this._selectedPanel != panel) {
             var event = document.createEvent("Events");
             event.initEvent("select", true, true);
@@ -693,16 +714,17 @@
         <getter>
           <![CDATA[
             return this._selectedPanel;
           ]]>
         </getter>
 
         <setter>
           <![CDATA[
+            dump(`tabpanels: About to run selectedPanel setter: ${val}\n`);
             var selectedIndex = -1;
             for (var panel = val; panel != null; panel = panel.previousSibling)
               ++selectedIndex;
             this.selectedIndex = selectedIndex;
             return val;
           ]]>
         </setter>
       </property>
