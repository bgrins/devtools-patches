# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1558472091 25200
#      Tue May 21 13:54:51 2019 -0700
# Node ID 07b5f69297c630a4a36b5a6033be9d16c2c7a866
# Parent  3c0f78074b727fbae112b6eda111d4c4d30cc3ec
Bug 1551334 - Migrate OSX hidden window from XUL to XHTML

Also take the oppurtunity to include "mac" in the filename to clarify
where it's used.

Differential Revision: https://phabricator.services.mozilla.com/D32058

diff --git a/browser/app/profile/firefox.js b/browser/app/profile/firefox.js
--- a/browser/app/profile/firefox.js
+++ b/browser/app/profile/firefox.js
@@ -16,17 +16,17 @@
 #
 
 #ifdef XP_UNIX
 #ifndef XP_MACOSX
 #define UNIX_BUT_NOT_MAC
 #endif
 #endif
 
-pref("browser.hiddenWindowChromeURL", "chrome://browser/content/hiddenWindow.xul");
+pref("browser.hiddenWindowChromeURL", "chrome://browser/content/hiddenWindowMac.xhtml");
 
 // Enables some extra Extension System Logging (can reduce performance)
 pref("extensions.logging.enabled", false);
 
 // Disables strict compatibility, making addons compatible-by-default.
 pref("extensions.strictCompatibility", false);
 
 // Temporary preference to forcibly make themes more safe with Australis even if
diff --git a/browser/base/content/browser.xul b/browser/base/content/browser.xul
--- a/browser/base/content/browser.xul
+++ b/browser/base/content/browser.xul
@@ -26,17 +26,17 @@
 <?xml-stylesheet href="chrome://browser/skin/controlcenter/panel.css" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/skin/customizableui/panelUI.css" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/skin/downloads/downloads.css" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/skin/searchbar.css" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/skin/places/tree-icons.css" type="text/css"?>
 <?xml-stylesheet href="chrome://browser/skin/places/editBookmark.css" type="text/css"?>
 
 # All DTD information is stored in a separate file so that it can be shared by
-# hiddenWindow.xul.
+# hiddenWindowMac.xhtml.
 <!DOCTYPE window [
 #include browser-doctype.inc
 ]>
 
 <window id="main-window"
         xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:html="http://www.w3.org/1999/xhtml"
diff --git a/browser/base/content/hiddenWindow.xul b/browser/base/content/hiddenWindowMac.xhtml
rename from browser/base/content/hiddenWindow.xul
rename to browser/base/content/hiddenWindowMac.xhtml
--- a/browser/base/content/hiddenWindow.xul
+++ b/browser/base/content/hiddenWindowMac.xhtml
@@ -7,17 +7,16 @@
 
 <?xml-stylesheet href="chrome://browser/skin/webRTC-indicator.css" type="text/css"?>
 
 <!DOCTYPE window [
 #include browser-doctype.inc
 ]>
 
 <window id="main-window"
-        xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
 
 #include macWindow.inc.xul
 
 <!-- Dock menu -->
 <popupset>
   <menupopup id="menu_mac_dockmenu">
     <!-- The command cannot be cmd_newNavigator because we need to activate
diff --git a/browser/base/content/moz.build b/browser/base/content/moz.build
--- a/browser/base/content/moz.build
+++ b/browser/base/content/moz.build
@@ -146,17 +146,17 @@ with Files("browser-safebrowsing.js"):
     BUG_COMPONENT = ("Toolkit", "Safe Browsing")
 
 with Files("browser-sync.js"):
     BUG_COMPONENT = ("Firefox", "Sync")
 
 with Files("contentSearch*"):
     BUG_COMPONENT = ("Firefox", "Search")
 
-with Files("hiddenWindow.xul"):
+with Files("hiddenWindowMac.xhtml"):
     BUG_COMPONENT = ("Firefox", "Device Permissions")
 
 with Files("macWindow.inc.xul"):
     BUG_COMPONENT = ("Firefox", "Shell Integration")
 
 with Files("tabbrowser*"):
     BUG_COMPONENT = ("Firefox", "Tabbed Browser")
 
diff --git a/browser/base/content/nonbrowser-mac.js b/browser/base/content/nonbrowser-mac.js
--- a/browser/base/content/nonbrowser-mac.js
+++ b/browser/base/content/nonbrowser-mac.js
@@ -39,17 +39,17 @@ function nonBrowserWindowStartup() {
   for (let shownItem of shownItems) {
     element = document.getElementById(shownItem);
     if (element)
       element.removeAttribute("hidden");
   }
 
   // If no windows are active (i.e. we're the hidden window), disable the close, minimize
   // and zoom menu commands as well
-  if (window.location.href == "chrome://browser/content/hiddenWindow.xul") {
+  if (window.location.href == "chrome://browser/content/hiddenWindowMac.xhtml") {
     var hiddenWindowDisabledItems = ["cmd_close", "minimizeWindow", "zoomWindow"];
     for (let hiddenWindowDisabledItem of hiddenWindowDisabledItems) {
       element = document.getElementById(hiddenWindowDisabledItem);
       if (element)
         element.setAttribute("disabled", "true");
     }
 
     // also hide the window-list separator
@@ -91,17 +91,17 @@ function nonBrowserWindowDelayedStartup(
 
   // initialize the private browsing UI
   gPrivateBrowsingUI.init();
 }
 
 function nonBrowserWindowShutdown() {
   // If this is the hidden window being closed, release our reference to
   // the dock menu element to prevent leaks on shutdown
-  if (window.location.href == "chrome://browser/content/hiddenWindow.xul") {
+  if (window.location.href == "chrome://browser/content/hiddenWindowMac.xhtml") {
     let dockSupport = Cc["@mozilla.org/widget/macdocksupport;1"]
                       .getService(Ci.nsIMacDockSupport);
     dockSupport.dockMenu = null;
   }
 
   // If nonBrowserWindowDelayedStartup hasn't run yet, we have no work to do -
   // just cancel the pending timeout and return;
   if (delayedStartupTimeoutId) {
diff --git a/browser/base/jar.mn b/browser/base/jar.mn
--- a/browser/base/jar.mn
+++ b/browser/base/jar.mn
@@ -99,17 +99,17 @@ browser.jar:
 *       content/browser/urlbarBindings.xml            (content/urlbarBindings.xml)
         content/browser/utilityOverlay.js             (content/utilityOverlay.js)
         content/browser/webext-panels.js              (content/webext-panels.js)
 *       content/browser/webext-panels.xul             (content/webext-panels.xul)
         content/browser/nsContextMenu.js              (content/nsContextMenu.js)
         content/browser/contentTheme.js               (content/contentTheme.js)
 #ifdef XP_MACOSX
 # XXX: We should exclude this one as well (bug 71895)
-*       content/browser/hiddenWindow.xul              (content/hiddenWindow.xul)
+*       content/browser/hiddenWindowMac.xhtml         (content/hiddenWindowMac.xhtml)
         content/browser/nonbrowser-mac.js             (content/nonbrowser-mac.js)
 #endif
 #ifndef XP_MACOSX
 *       content/browser/webrtcIndicator.xul           (content/webrtcIndicator.xul)
         content/browser/webrtcIndicator.js            (content/webrtcIndicator.js)
 #endif
 # the following files are browser-specific overrides
 *       content/browser/license.html                  (/toolkit/content/license.html)
diff --git a/testing/mochitest/leaks.py b/testing/mochitest/leaks.py
--- a/testing/mochitest/leaks.py
+++ b/testing/mochitest/leaks.py
@@ -184,17 +184,17 @@ class ShutdownLeaks(object):
             if url not in counted:
                 counts.append((url, leakedWindows.count(url)))
                 counted.add(url)
 
         return sorted(counts, key=itemgetter(1), reverse=True)
 
     def _isHiddenWindowURL(self, url):
         return (url == "resource://gre-resources/hiddenWindow.html" or  # Win / Linux
-                url == "chrome://browser/content/hiddenWindow.xul")     # Mac
+                url == "chrome://browser/content/hiddenWindowMac.xhtml")     # Mac
 
 
 class LSANLeaks(object):
 
     """
     Parses the log when running an LSAN build, looking for interesting stack frames
     in allocation stacks, and prints out reports.
     """
diff --git a/toolkit/content/widgets/menu.js b/toolkit/content/widgets/menu.js
--- a/toolkit/content/widgets/menu.js
+++ b/toolkit/content/widgets/menu.js
@@ -241,17 +241,17 @@ class MozMenuItem extends MozMenuItemBas
     if (this.isMenulistChild || (this.isConnectedAndReady && !this.isInHiddenMenupopup)) {
       this.render();
     }
   }
 }
 
 customElements.define("menuitem", MozMenuItem);
 
-const isHiddenWindow = document.documentURI == "chrome://browser/content/hiddenWindow.xul";
+const isHiddenWindow = document.documentURI == "chrome://browser/content/hiddenWindowMac.xhtml";
 
 class MozMenu extends MozMenuBaseMixin(MozElements.MozElementMixin(XULMenuElement)) {
   static get inheritedAttributes() {
     return {
       ".menubar-text": "value=label,accesskey,crop",
       ".menu-iconic-text": "value=label,accesskey,crop,highlightable",
       ".menu-text": "value=label,accesskey,crop",
       ".menu-iconic-highlightable-text": "text=label,crop,accesskey,highlightable",
