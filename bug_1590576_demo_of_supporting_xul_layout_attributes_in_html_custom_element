# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1571860725 25200
#      Wed Oct 23 12:58:45 2019 -0700
# Node ID 5daf00161c209dc7cdc123b093a016e8c4785a96
# Parent  782f341be605f1a30e8a9bfbfc13ce389e620a24
Bug 1590576 - Demo of supporting xul layout attributes in html custom elements

Differential Revision: https://phabricator.services.mozilla.com/D50301

diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -1763,16 +1763,23 @@ var gBrowserInit = {
     window.browserDOMWindow = new nsBrowserAccess();
 
     gBrowser = window._gBrowser;
     delete window._gBrowser;
     gBrowser.init();
 
     BrowserWindowTracker.track(window);
 
+    setTimeout(() => {
+      document.querySelector("moz-test").removeAttribute("flex");
+      setTimeout(() => {
+        document.querySelector("moz-test").setAttribute("flex", "11");
+      }, 2000);
+    }, 2000);
+
     gNavToolbox.palette = document.getElementById("BrowserToolbarPalette");
     gNavToolbox.palette.remove();
     let areas = CustomizableUI.areas;
     areas.splice(areas.indexOf(CustomizableUI.AREA_FIXED_OVERFLOW_PANEL), 1);
     for (let area of areas) {
       let node = document.getElementById(area);
       CustomizableUI.registerToolbarNode(node);
     }
diff --git a/browser/base/content/browser.xhtml b/browser/base/content/browser.xhtml
--- a/browser/base/content/browser.xhtml
+++ b/browser/base/content/browser.xhtml
@@ -1362,16 +1362,21 @@
                    persist="width">
         <toolbartabstop/>
         <searchbar id="searchbar" flex="1"/>
         <toolbartabstop/>
       </toolbaritem>
     </toolbarpalette>
   </toolbox>
 
+  <html:moz-test flex="2" orient="vertical">
+    <box flex="1">Flexed child</box>
+    <box>Unflexed child</box>
+  </html:moz-test>
+
   <hbox id="fullscr-toggler" hidden="true"/>
 
   <hbox flex="1" id="browser" renderroot="content">
     <vbox id="browser-border-start" hidden="true" layer="true"/>
     <vbox id="sidebar-box" hidden="true" class="chromeclass-extrachrome">
       <sidebarheader id="sidebar-header" align="center">
         <toolbarbutton id="sidebar-switcher-target" flex="1" class="tabbable">
           <image id="sidebar-icon" consumeanchor="sidebar-switcher-target"/>
diff --git a/toolkit/content/customElements.js b/toolkit/content/customElements.js
--- a/toolkit/content/customElements.js
+++ b/toolkit/content/customElements.js
@@ -623,17 +623,46 @@
     Object.defineProperty(MozElementBase, "name", { value: `Moz${Base.name}` });
     if (instrumentedBaseClasses) {
       instrumentedBaseClasses.add(MozElementBase);
     }
     return MozElementBase;
   };
 
   const MozXULElement = MozElements.MozElementMixin(XULElement);
-  const MozHTMLElement = MozElements.MozElementMixin(HTMLElement);
+  const MozHTMLElement = class extends MozElements.MozElementMixin(
+    HTMLElement
+  ) {
+    setFlexProperties() {
+      if (this.hasAttribute("flex")) {
+        this.style.MozBoxFlex = this.getAttribute("flex");
+      }
+      if (this.hasAttribute("ordinal")) {
+        this.style.MozBoxOrdinalGroup = this.getAttribute("ordinal");
+      }
+    }
+    connectedCallback() {
+      this.setFlexProperties();
+    }
+
+    setAttribute(name, val) {
+      super.setAttribute(name, val);
+      this.setFlexProperties();
+    }
+
+    removeAttribute(name) {
+      super.removeAttribute(name);
+      if (name == "flex") {
+        this.style.removeProperty("-moz-box-flex");
+      }
+      if (name == "ordinal") {
+        this.style.removeProperty("-moz-box-ordinal-group");
+      }
+    }
+  };
 
   /**
    * Given an object, add a proxy that reflects interface implementations
    * onto the object itself.
    */
   function getInterfaceProxy(obj) {
     /* globals MozQueryInterface */
     if (!obj._customInterfaceProxy) {
diff --git a/toolkit/content/widgets/general.js b/toolkit/content/widgets/general.js
--- a/toolkit/content/widgets/general.js
+++ b/toolkit/content/widgets/general.js
@@ -2,16 +2,17 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 "use strict";
 
 // This is loaded into chrome windows with the subscript loader. Wrap in
 // a block to prevent accidentally leaking globals onto `window`.
 {
+  customElements.define("moz-test", class MozTest extends MozHTMLElement {});
   class MozDeck extends MozXULElement {
     set selectedIndex(val) {
       if (this.selectedIndex == val) {
         return val;
       }
       this.setAttribute("selectedIndex", val);
       var event = document.createEvent("Events");
       event.initEvent("select", true, true);
diff --git a/toolkit/content/xul.css b/toolkit/content/xul.css
--- a/toolkit/content/xul.css
+++ b/toolkit/content/xul.css
@@ -573,16 +573,38 @@ tabmodalprompt {
 
 .menulist-highlightable-label:not([highlightable="true"]),
 .menulist-label[highlightable="true"],
 .menu-iconic-highlightable-text:not([highlightable="true"]),
 .menu-iconic-text[highlightable="true"] {
   display: none;
 }
 
+html|moz-test{
+  -moz-user-focus: ignore;
+  -moz-user-select: none;
+  display: -moz-box;
+  box-sizing: border-box;
+}
+
+html|moz-test[orient="vertical"] { -moz-box-orient: vertical; }
+html|moz-test[orient="horizontal"] { -moz-box-orient: horizontal; }
+
+html|moz-test[dir="reverse"] { -moz-box-direction: reverse; }
+
+html|moz-test[align="start"] { -moz-box-align: start; }
+html|moz-test[align="center"] { -moz-box-align: center; }
+html|moz-test[align="end"] { -moz-box-align: end; }
+html|moz-test[align="baseline"] { -moz-box-align: baseline; }
+html|moz-test[align="stretch"] { -moz-box-align: stretch; }
+
+html|moz-test[pack="start"] { -moz-box-pack: start; }
+html|moz-test[pack="center"] { -moz-box-pack: center; }
+html|moz-test[pack="end"] { -moz-box-pack: end; }
+
 @supports -moz-bool-pref("layout.css.emulate-moz-box-with-flex") {
   /* Support common XUL attributes in the emulated flex mode so we can
      test the browser in this configuration without mass-changing existing
      markup and CSS. */
   [orient="vertical"] { -moz-box-orient: vertical; }
   [orient="horizontal"] { -moz-box-orient: horizontal; }
 
   [dir="reverse"] { -moz-box-direction: reverse; }
