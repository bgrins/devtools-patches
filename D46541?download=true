diff --git a/accessible/base/XULMap.h b/accessible/base/XULMap.h
--- a/accessible/base/XULMap.h
+++ b/accessible/base/XULMap.h
@@ -83,11 +83,6 @@
 })
 
 XULMAP(textbox, [](Element* aElement, Accessible* aContext) -> Accessible* {
-  if (aElement->AttrValueIs(kNameSpaceID_None, nsGkAtoms::type,
-                            nsGkAtoms::autocomplete, eIgnoreCase)) {
-    return new XULComboboxAccessible(aElement, aContext->Document());
-  }
-
   return new EnumRoleAccessible<roles::SECTION>(aElement, aContext->Document());
 })
 
diff --git a/accessible/xul/XULComboboxAccessible.cpp b/accessible/xul/XULComboboxAccessible.cpp
--- a/accessible/xul/XULComboboxAccessible.cpp
+++ b/accessible/xul/XULComboboxAccessible.cpp
@@ -25,15 +25,11 @@
 XULComboboxAccessible::XULComboboxAccessible(nsIContent* aContent,
                                              DocAccessible* aDoc)
     : AccessibleWrap(aContent, aDoc) {
-  if (mContent->AsElement()->AttrValueIs(kNameSpaceID_None, nsGkAtoms::type,
-                                         nsGkAtoms::autocomplete, eIgnoreCase))
-    mGenericTypes |= eAutoComplete;
-  else
-    mGenericTypes |= eCombobox;
+  mGenericTypes |= eCombobox;
 }
 
 role XULComboboxAccessible::NativeRole() const {
-  return IsAutoComplete() ? roles::AUTOCOMPLETE : roles::COMBOBOX;
+  return roles::COMBOBOX;
 }
 
 uint64_t XULComboboxAccessible::NativeState() const {
@@ -119,8 +115,7 @@
 // Widgets
 
 bool XULComboboxAccessible::IsActiveWidget() const {
-  if (IsAutoComplete() ||
-      mContent->AsElement()->AttrValueIs(kNameSpaceID_None, nsGkAtoms::editable,
+  if (mContent->AsElement()->AttrValueIs(kNameSpaceID_None, nsGkAtoms::editable,
                                          nsGkAtoms::_true, eIgnoreCase)) {
     int32_t childCount = mChildren.Length();
     for (int32_t idx = 0; idx < childCount; idx++) {
@@ -135,17 +130,6 @@
 }
 
 bool XULComboboxAccessible::AreItemsOperable() const {
-  if (IsAutoComplete()) {
-    nsCOMPtr<nsIAutoCompleteInput> autoCompleteInputElm =
-        do_QueryInterface(mContent);
-    if (autoCompleteInputElm) {
-      bool isOpen = false;
-      autoCompleteInputElm->GetPopupOpen(&isOpen);
-      return isOpen;
-    }
-    return false;
-  }
-
   nsCOMPtr<nsIDOMXULMenuListElement> menuListElm = Elm()->AsXULMenuList();
   if (menuListElm) {
     bool isOpen = false;
diff --git a/editor/reftests/xul/autocomplete-1.xul b/editor/reftests/xul/autocomplete-1.xul
deleted file mode 100644
--- a/editor/reftests/xul/autocomplete-1.xul
+++ /dev/null
@@ -1,15 +0,0 @@
-<?xml version="1.0"?>
-<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
-<?xml-stylesheet href="autocomplete.css" type="text/css"?>
-
-<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
-        xmlns:html="http://www.w3.org/1999/xhtml"
-        title="Textbox tests">
-
-  <script type="text/javascript" src="platform.js"/>
-
-  <!-- leading space in the value to ensure no pixels of t get clipped
-       in one rendering but not the other -->
-  <textbox type="autocomplete" value=" test"/>
-      
-</window>
diff --git a/editor/reftests/xul/autocomplete-ref.xul b/editor/reftests/xul/autocomplete-ref.xul
deleted file mode 100644
--- a/editor/reftests/xul/autocomplete-ref.xul
+++ /dev/null
@@ -1,13 +0,0 @@
-<?xml version="1.0"?>
-<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
-<?xml-stylesheet href="resource://reftest/input.css" type="text/css"?>
-
-<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
-        xmlns:html="http://www.w3.org/1999/xhtml"
-        title="Textbox tests">
-
-  <script type="text/javascript" src="platform.js"/>
-
-  <html:input class="ac" value=" test"/>
-      
-</window>
diff --git a/editor/reftests/xul/autocomplete.css b/editor/reftests/xul/autocomplete.css
deleted file mode 100644
--- a/editor/reftests/xul/autocomplete.css
+++ /dev/null
@@ -1,3 +0,0 @@
-.textbox-input {
-  border-style: none;
-}
diff --git a/editor/reftests/xul/emptyautocomplete-1.xul b/editor/reftests/xul/emptyautocomplete-1.xul
deleted file mode 100644
--- a/editor/reftests/xul/emptyautocomplete-1.xul
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0"?>
-<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
-
-<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
-        xmlns:html="http://www.w3.org/1999/xhtml"
-        title="Textbox tests">
-
-  <script type="text/javascript" src="platform.js"/>
-
-  <textbox type="autocomplete"/>
-      
-</window>
diff --git a/editor/reftests/xul/emptyautocomplete-ref.xul b/editor/reftests/xul/emptyautocomplete-ref.xul
deleted file mode 100644
--- a/editor/reftests/xul/emptyautocomplete-ref.xul
+++ /dev/null
@@ -1,13 +0,0 @@
-<?xml version="1.0"?>
-<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
-<?xml-stylesheet href="resource://reftest/input.css" type="text/css"?>
-
-<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
-        xmlns:html="http://www.w3.org/1999/xhtml"
-        title="Textbox tests">
-
-  <script type="text/javascript" src="platform.js"/>
-
-  <html:input class="ac"/>
-      
-</window>
diff --git a/editor/reftests/xul/reftest.list b/editor/reftests/xul/reftest.list
--- a/editor/reftests/xul/reftest.list
+++ b/editor/reftests/xul/reftest.list
@@ -1,9 +1,5 @@
 fails-if(Android) skip-if(winWidget) == chrome://reftest/content/editor/reftests/xul/empty-1.xul chrome://reftest/content/editor/reftests/xul/empty-ref.xul # Windows: bug 1239170
 != chrome://reftest/content/editor/reftests/xul/empty-2.xul chrome://reftest/content/editor/reftests/xul/empty-ref.xul
-# There is no way to simulate an autocomplete textbox in windows XP/Vista/7/8/10 default theme using CSS.
-# Therefore, the equlity tests below should be marked as failing.
-fails-if(Android) fails-if(windowsDefaultTheme&&/^Windows\x20NT\x20(5\.[12]|6\.[012]|10\.0)/.test(http.oscpu)) == chrome://reftest/content/editor/reftests/xul/autocomplete-1.xul chrome://reftest/content/editor/reftests/xul/autocomplete-ref.xul # bug 783658
-fails-if(Android) fails-if(windowsDefaultTheme&&/^Windows\x20NT\x20(5\.[12]|6\.[012]|10\.0)/.test(http.oscpu)) == chrome://reftest/content/editor/reftests/xul/emptyautocomplete-1.xul chrome://reftest/content/editor/reftests/xul/emptyautocomplete-ref.xul # bug 783658
 fails-if(Android) skip-if(winWidget) == chrome://reftest/content/editor/reftests/xul/emptytextbox-1.xul chrome://reftest/content/editor/reftests/xul/emptytextbox-ref.xul # Windows: bug 1239170
 fails-if(Android) skip-if(winWidget) == chrome://reftest/content/editor/reftests/xul/emptytextbox-2.xul chrome://reftest/content/editor/reftests/xul/emptytextbox-ref.xul # Windows: bug 1239170
 != chrome://reftest/content/editor/reftests/xul/emptytextbox-4.xul chrome://reftest/content/editor/reftests/xul/emptytextbox-ref.xul
diff --git a/layout/xul/nsMenuPopupFrame.cpp b/layout/xul/nsMenuPopupFrame.cpp
--- a/layout/xul/nsMenuPopupFrame.cpp
+++ b/layout/xul/nsMenuPopupFrame.cpp
@@ -1773,14 +1773,6 @@
       return ConsumeOutsideClicks_Never;
     }
 #endif
-    if (ni->Equals(nsGkAtoms::textbox, kNameSpaceID_XUL)) {
-      // Don't consume outside clicks for autocomplete widget
-      if (parentContent->AsElement()->AttrValueIs(
-              kNameSpaceID_None, nsGkAtoms::type, nsGkAtoms::autocomplete,
-              eCaseMatters)) {
-        return ConsumeOutsideClicks_Never;
-      }
-    }
   }
 
   return ConsumeOutsideClicks_True;

