
# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1534968656 25200
# Node ID ed71871c108665d1a07aa46caa3a850eae0f2e54
# Parent  d6e4d3e69d4c8331cfa35c318b616ed390d3538d
imported patch D3030?download=true

diff --git a/dom/tests/mochitest/keyhandling/mochitest.ini b/dom/tests/mochitest/keyhandling/mochitest.ini
new file mode 100644
--- /dev/null
+++ b/dom/tests/mochitest/keyhandling/mochitest.ini
@@ -0,0 +1,1 @@
+[test_editor.html]
diff --git a/dom/tests/mochitest/keyhandling/test_editor.html b/dom/tests/mochitest/keyhandling/test_editor.html
new file mode 100644
--- /dev/null
+++ b/dom/tests/mochitest/keyhandling/test_editor.html
@@ -0,0 +1,80 @@
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<title>editor key handling</title>
+
+<script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+<script type="text/javascript" src="/tests/SimpleTest/EventUtils.js"></script>
+<script type="text/javascript" src="/tests/SimpleTest/NativeKeyCodes.js"></script>
+<link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+<script type="text/javascript">
+const LEFT = MAC_VK_LeftArrow;
+const RIGHT = MAC_VK_RightArrow;
+
+function synthesizeKey(keyCode, modifiers, chars) {
+  return new Promise((resolve, reject) => {
+    let done = () => setTimeout(resolve, 1000);
+
+    if (!synthesizeNativeKey(KEYBOARD_LAYOUT_EN_US,
+                             keyCode, modifiers, chars, chars, done)) {
+      reject();
+    }
+  });
+}
+
+async function checkElement(element, start, end, content = "Test text") {
+  let selectionStart = element.selectionStart;
+  let selectionEnd = element.selectionEnd;
+  let text = element.value;
+
+  is(selectionStart, start, "Should have the right selectionStart");
+  is(selectionEnd, end, "Should have the right selectionEnd");
+  is(text, content, "Should contain the right text");
+}
+
+async function runTest() {
+  let input = document.getElementById("input");
+  input.focus();
+  await checkElement(input, 0, 0);
+
+  info("right");
+  await synthesizeKey(RIGHT, {}, "\uF703");
+  await checkElement(input, 1, 1);
+
+  info("shift+right");
+  await synthesizeKey(RIGHT, { shiftKey: true }, "\uF703");
+  await checkElement(input, 1, 2);
+
+  info("shift+right");
+  await synthesizeKey(RIGHT, { shiftKey: true }, "\uF703");
+  await checkElement(input, 1, 3);
+
+  info("shift+left");
+  await synthesizeKey(LEFT, { shiftKey: true }, "\uF702");
+  await checkElement(input, 1, 2);
+
+  info("shift+left");
+  await synthesizeKey(LEFT, { shiftKey: true }), "\uF702";
+  await checkElement(input, 1, 1);
+
+  info("shift+left");
+  await synthesizeKey(LEFT, { shiftKey: true }, "\uF702");
+  await checkElement(input, 0, 1);
+
+  info("shift+right");
+  await synthesizeKey(RIGHT, { shiftKey: true }, "\uF703");
+  await checkElement(input, 1, 1);
+
+  info("left");
+  await synthesizeKey(LEFT, {}, "\uF702");
+  await checkElement(input, 0, 0);
+SimpleTest.finish();
+}
+
+SimpleTest.waitForExplicitFinish();
+</script>
+</head>
+<body onload="runTest();">
+<input id=input value="Test text"/>
+</body>
+</html>
diff --git a/dom/tests/moz.build b/dom/tests/moz.build
--- a/dom/tests/moz.build
+++ b/dom/tests/moz.build
@@ -157,16 +157,17 @@ MOCHITEST_MANIFESTS += [
     'mochitest/dom-level0/mochitest.ini',
     'mochitest/dom-level1-core/mochitest.ini',
     'mochitest/dom-level2-core/mochitest.ini',
     'mochitest/dom-level2-html/mochitest.ini',
     'mochitest/fetch/mochitest.ini',
     'mochitest/gamepad/mochitest.ini',
     'mochitest/general/mochitest.ini',
     'mochitest/geolocation/mochitest.ini',
+    'mochitest/keyhandling/mochitest.ini',
     'mochitest/localstorage/mochitest.ini',
     'mochitest/orientation/mochitest.ini',
     'mochitest/pointerlock/mochitest.ini',
     'mochitest/script/mochitest.ini',
     'mochitest/sessionstorage/mochitest.ini',
     'mochitest/storageevent/mochitest.ini',
     'mochitest/webcomponents/mochitest.ini',
     'mochitest/whatwg/mochitest.ini',

