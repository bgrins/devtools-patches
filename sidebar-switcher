# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  a477e80f03b61be9961bc61770a2b55cce139b91
Bug 1355324 - Create sidebar header switcher

diff --git a/browser/base/content/browser-sidebar.js b/browser/base/content/browser-sidebar.js
--- a/browser/base/content/browser-sidebar.js
+++ b/browser/base/content/browser-sidebar.js
@@ -26,30 +26,78 @@ var SidebarUI = {
   _title: null,
   _splitter: null,
 
   init() {
     this._box = document.getElementById("sidebar-box");
     this.browser = document.getElementById("sidebar");
     this._title = document.getElementById("sidebar-title");
     this._splitter = document.getElementById("sidebar-splitter");
+    this._switcher = document.getElementById("sidebar-switcher");
+    this._switcherPanel = document.getElementById("sidebarMenu-popup");
+
+    if (gPhotonStructure) {
+      this._switcher.hidden = false;
+      document.getElementById("sidebar-close").hidden = true;
+
+      this._switcher.addEventListener("click", () => {
+        this.toggleSwitcherPanel();
+      });
+    }
   },
 
   uninit() {
     let enumerator = Services.wm.getEnumerator(null);
     enumerator.getNext();
     if (!enumerator.hasMoreElements()) {
       document.persist("sidebar-box", "sidebarcommand");
       document.persist("sidebar-box", "width");
       document.persist("sidebar-box", "src");
       document.persist("sidebar-title", "value");
     }
   },
 
   /**
+   * Opens the switcher panel if it's closed, or closes it if it's open.
+   */
+  toggleSwitcherPanel() {
+    if (this._switcherPanel.state == "open") {
+      return this._switcherPanel.hidePopup();
+    } else if (this._switcherPanel.state == "closed") {
+      return this.showSwitcherPanel();
+    }
+  },
+
+  hideSwitcherPanel() {
+    return new Promise(resolve => {
+      this._switcherPanel.addEventListener("popuphidden", () => {
+        resolve();
+      }, {once: true});
+      this._switcherPanel.hidePopup();
+    });
+  },
+
+  showSwitcherPanel() {
+    return new Promise(resolve => {
+      if (this._switcherPanel.state == "open") {
+        resolve();
+        return;
+      }
+      this._switcherPanel.addEventListener("popuphidden", () => {
+        this._switcherPanel.hidden = true;
+      }, {once: true});
+      this._switcherPanel.hidden = false;
+      this._switcherPanel.openPopup(this._switcher);
+      this._switcherPanel.addEventListener("popupshown", () => {
+        resolve();
+      }, {once: true});
+    });
+  },
+
+  /**
    * Try and adopt the status of the sidebar from another window.
    * @param {Window} sourceWindow - Window to use as a source for sidebar status.
    * @return true if we adopted the state, or false if the caller should
    * initialize the state itself.
    */
   adoptFromWindow(sourceWindow) {
     // If the opener had a sidebar, open the same sidebar in our window.
     // The opener can be the hidden window too, if we're coming from the state
diff --git a/browser/base/content/browser.xul b/browser/base/content/browser.xul
--- a/browser/base/content/browser.xul
+++ b/browser/base/content/browser.xul
@@ -1071,17 +1071,61 @@
 
   <deck id="content-deck" flex="1">
     <hbox flex="1" id="browser">
       <vbox id="browser-border-start" hidden="true" layer="true"/>
       <vbox id="sidebar-box" hidden="true" class="chromeclass-extrachrome">
         <sidebarheader id="sidebar-header" align="center">
           <label id="sidebar-title" persist="value" flex="1" crop="end" control="sidebar"/>
           <image id="sidebar-throbber"/>
-          <toolbarbutton class="close-icon tabbable" tooltiptext="&sidebarCloseButton.tooltip;" oncommand="SidebarUI.hide();"/>
+          <toolbarbutton id="sidebar-close" class="close-icon tabbable" tooltiptext="&sidebarCloseButton.tooltip;" oncommand="SidebarUI.hide();"/>
+          <toolbarbutton id="sidebar-switcher"
+                         class="chevron"
+                         tooltiptext="TODO"
+                         hidden="true"
+                         crop="end" />
+          <panel id="sidebarMenu-popup"
+                 class="cui-widget-panel"
+                 role="group"
+                 type="arrow"
+                 hidden="true"
+                 flip="slide"
+                 position="bottomcenter topright"
+                 noautofocus="true">
+            <panelmultiview id="sidebarMenu-multiView" mainViewId="sidebarMenu-mainView">
+              <panelview id="sidebarMenu-mainView" class="cui-widget-panelview PanelUI-subView">
+                <vbox class="panel-subview-body">
+                    <toolbarbutton id="sidebar-switcher-bookmarks"
+                                   class="subviewbutton"
+                                   observes="viewBookmarksSidebar"
+                                   oncommand="SidebarUI.show('viewBookmarksSidebar');">
+                       <observes element="viewBookmarksSidebar" attribute="checked"/>
+                     </toolbarbutton>
+                    <toolbarbutton id="sidebar-switcher-history"
+                                   label="&historyButton.label;"
+                                   class="subviewbutton"
+                                   observes="viewHistorySidebar"
+                                   oncommand="SidebarUI.show('viewHistorySidebar');">
+                       <observes element="viewHistorySidebar" attribute="checked"/>
+                     </toolbarbutton>
+                    <toolbarbutton id="sidebar-switcher-tabs"
+                                   label="&syncedTabs.sidebar.label;"
+                                   class="subviewbutton"
+                                   observes="viewTabsSidebar"
+                                   oncommand="SidebarUI.show('viewTabsSidebar');">
+                       <observes element="viewTabsSidebar" attribute="checked"/>
+                     </toolbarbutton>
+                    <separator/>
+                    <toolbarbutton label="&sidebarCloseButton.tooltip;"
+                                   class="subviewbutton"
+                                   oncommand="SidebarUI.hide()"/>
+                </vbox>
+              </panelview>
+            </panelmultiview>
+          </panel>
         </sidebarheader>
         <browser id="sidebar" flex="1" autoscroll="false" disablehistory="true" disablefullscreen="true"
                   style="min-width: 14em; width: 18em; max-width: 36em;" tooltip="aHTMLTooltip"/>
       </vbox>
 
       <splitter id="sidebar-splitter" class="chromeclass-extrachrome sidebar-splitter" hidden="true"/>
       <vbox id="appcontent" flex="1">
         <notificationbox id="high-priority-global-notificationbox" notificationside="top"/>
