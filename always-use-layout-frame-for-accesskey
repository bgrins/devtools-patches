# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  ff3ed362e82fae365afc440ccc3b662bcfcd0435
Bug 1448213 - Always use XUL layout for rendering accessKeys on labels

diff --git a/layout/xul/nsTextBoxFrame.cpp b/layout/xul/nsTextBoxFrame.cpp
--- a/layout/xul/nsTextBoxFrame.cpp
+++ b/layout/xul/nsTextBoxFrame.cpp
@@ -1237,27 +1237,16 @@ nsTextBoxFrame::GetFrameName(nsAString& 
 // in nsBoxFrame and nsXULLabelFrame
 nsresult
 nsTextBoxFrame::RegUnregAccessKey(bool aDoReg)
 {
     // if we have no content, we can't do anything
     if (!mContent)
         return NS_ERROR_FAILURE;
 
-    // check if we have a |control| attribute
-    // do this check first because few elements have control attributes, and we
-    // can weed out most of the elements quickly.
-
-    // XXXjag a side-effect is that we filter out anonymous <label>s
-    // in e.g. <menu>, <menuitem>, <button>. These <label>s inherit
-    // |accesskey| and would otherwise register themselves, overwriting
-    // the content we really meant to be registered.
-    if (!mContent->AsElement()->HasAttr(kNameSpaceID_None, nsGkAtoms::control))
-        return NS_OK;
-
     // see if we even have an access key
     nsAutoString accessKey;
     mContent->AsElement()->GetAttr(kNameSpaceID_None, nsGkAtoms::accesskey,
                                    accessKey);
 
     if (accessKey.IsEmpty())
         return NS_OK;
 
diff --git a/layout/xul/nsXULLabelFrame.cpp b/layout/xul/nsXULLabelFrame.cpp
--- a/layout/xul/nsXULLabelFrame.cpp
+++ b/layout/xul/nsXULLabelFrame.cpp
@@ -23,24 +23,16 @@ NS_NewXULLabelFrame(nsIPresShell* aPresS
 
 NS_IMPL_FRAMEARENA_HELPERS(nsXULLabelFrame)
 
 // If you make changes to this function, check its counterparts
 // in nsBoxFrame and nsTextBoxFrame
 nsresult
 nsXULLabelFrame::RegUnregAccessKey(bool aDoReg)
 {
-  // To filter out <label>s without a control attribute.
-  // XXXjag a side-effect is that we filter out anonymous <label>s
-  // in e.g. <menu>, <menuitem>, <button>. These <label>s inherit
-  // |accesskey| and would otherwise register themselves, overwriting
-  // the content we really meant to be registered.
-  if (!mContent->AsElement()->HasAttr(kNameSpaceID_None, nsGkAtoms::control))
-    return NS_OK;
-
   nsAutoString accessKey;
   mContent->AsElement()->GetAttr(kNameSpaceID_None, nsGkAtoms::accesskey, accessKey);
 
   if (accessKey.IsEmpty())
     return NS_OK;
 
   // With a valid PresContext we can get the ESM
   // and register the access key
@@ -82,17 +74,17 @@ nsXULLabelFrame::AttributeChanged(int32_
                                   nsAtom* aAttribute,
                                   int32_t aModType)
 {
   nsresult rv = nsBlockFrame::AttributeChanged(aNameSpaceID,
                                                aAttribute, aModType);
 
   // If the accesskey changed, register for the new value
   // The old value has been unregistered in nsXULElement::SetAttr
-  if (aAttribute == nsGkAtoms::accesskey || aAttribute == nsGkAtoms::control)
+  if (aAttribute == nsGkAtoms::accesskey)
     RegUnregAccessKey(true);
 
   return rv;
 }
 
 /////////////////////////////////////////////////////////////////////////////
 // Diagnostics
 
