# vim: se ft=diff :
# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 2016-04-29 13:14
Bug 1260283 - Implement new console output frontend behind a pref. r=linclark

diff --git a/devtools/client/webconsole/moz.build b/devtools/client/webconsole/moz.build
index 8800223..619ef7b 100644
--- a/devtools/client/webconsole/moz.build
+++ b/devtools/client/webconsole/moz.build
@@ -2,17 +2,18 @@
 # vim: set filetype=python:
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
 BROWSER_CHROME_MANIFESTS += ['test/browser.ini']
 
 DIRS += [
-    'net'
+    'net',
+    'new-console-output',
 ]
 
 DevToolsModules(
     'console-commands.js',
     'console-output.js',
     'hudservice.js',
     'jsterm.js',
     'panel.js',
diff --git a/devtools/client/webconsole/new-console-output/dummy-child-component.js b/devtools/client/webconsole/new-console-output/dummy-child-component.js
new file mode 100644
index 0000000..7ca5987
--- /dev/null
+++ b/devtools/client/webconsole/new-console-output/dummy-child-component.js
@@ -0,0 +1,20 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+"use strict";
+
+const React = require("devtools/client/shared/vendor/react");
+const DOM = React.DOM;
+
+var DummyChildComponent = React.createClass({
+  displayName: "DummyChildComponent",
+
+  render() {
+    return (
+      DOM.div({}, "DummyChildComponent foobar")
+    );
+  }
+});
+
+// Exports from this module
+module.exports = DummyChildComponent;
diff --git a/devtools/client/webconsole/new-console-output/main.js b/devtools/client/webconsole/new-console-output/main.js
new file mode 100644
index 0000000..45dd0ec
--- /dev/null
+++ b/devtools/client/webconsole/new-console-output/main.js
@@ -0,0 +1,24 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+"use strict";
+
+var { utils: Cu } = Components;
+
+Cu.import("resource://gre/modules/XPCOMUtils.jsm");
+Cu.import("resource://devtools/client/shared/browser-loader.js");
+
+// Initialize module loader and load all modules of the new inline
+// preview feature. The entire code-base doesn't need any extra
+// privileges and runs entirely in content scope.
+const rootUrl = "resource://devtools/client/webconsole/new-console-output/";
+const require = BrowserLoader({
+  baseURI: rootUrl,
+  window: this}).require;
+const OutputWrapperThingy = require("./output-wrapper-thingy");
+const { Services } = Cu.import("resource://gre/modules/Services.jsm", {});
+
+this.NewConsoleOutput = function(parentNode) {
+  console.log("Creating NewConsoleOutput", parentNode, OutputWrapperThingy);
+  return new OutputWrapperThingy(parentNode);
+}
diff --git a/devtools/client/webconsole/new-console-output/moz.build b/devtools/client/webconsole/new-console-output/moz.build
new file mode 100644
index 0000000..ede9cde
--- /dev/null
+++ b/devtools/client/webconsole/new-console-output/moz.build
@@ -0,0 +1,15 @@
+# vim: set filetype=python:
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+#DIRS += [
+#    'components',
+#    'utils'
+#]
+
+DevToolsModules(
+    'dummy-child-component.js',
+    'main.js',
+    'output-wrapper-thingy.js',
+)
\ No newline at end of file
diff --git a/devtools/client/webconsole/new-console-output/output-wrapper-thingy.js b/devtools/client/webconsole/new-console-output/output-wrapper-thingy.js
new file mode 100644
index 0000000..1bbfde4
--- /dev/null
+++ b/devtools/client/webconsole/new-console-output/output-wrapper-thingy.js
@@ -0,0 +1,17 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+"use strict";
+
+// React
+const React = require("devtools/client/shared/vendor/react");
+const ReactDOM = require("devtools/client/shared/vendor/react-dom");
+const DummyChildComponent = React.createFactory(require("./dummy-child-component"));
+
+function OutputWrapperThingy(parentNode) {
+  let childComponent = DummyChildComponent({});
+  this.body = ReactDOM.render(childComponent, parentNode);
+}
+
+// Exports from this module
+module.exports = OutputWrapperThingy;
\ No newline at end of file
diff --git a/devtools/client/webconsole/webconsole.js b/devtools/client/webconsole/webconsole.js
index c08e44a..ce68c6c 100644
--- a/devtools/client/webconsole/webconsole.js
+++ b/devtools/client/webconsole/webconsole.js
@@ -503,16 +503,17 @@ WebConsoleFrame.prototype = {
 
   /**
    * Find the Web Console UI elements and setup event listeners as needed.
    * @private
    */
   _initUI: function() {
     this.document = this.window.document;
     this.rootElement = this.document.documentElement;
+    this.SUPER_FRONTEND_EXPERIMENT = !this.owner._browserConsole && !!this.window.NewConsoleOutput;
 
     this._initDefaultFilterPrefs();
 
     // Register the controller to handle "select all" properly.
     this._commandController = new CommandController(this);
     this.window.controllers.insertControllerAt(0, this._commandController);
 
     this._contextMenuHandler = new ConsoleContextMenu(this);
@@ -524,16 +525,28 @@ WebConsoleFrame.prototype = {
     } else {
       doc.querySelector("#key_clear").removeAttribute("disabled");
     }
 
     this.filterBox = doc.querySelector(".hud-filter-box");
     this.outputNode = doc.getElementById("output-container");
     this.outputWrapper = doc.getElementById("output-wrapper");
 
+    if (this.SUPER_FRONTEND_EXPERIMENT) {
+      console.log("Entering experimental mode for console frontend");
+
+      // XXX: We should actually stop output from happening on old output
+      // panel, but for now let's just hide it.
+      this.experimentalOutputNode = this.outputNode.cloneNode();
+      this.outputNode.hidden = true;
+      this.outputNode.parentNode.appendChild(this.experimentalOutputNode);
+      this.newConsoleOutput = new this.window.NewConsoleOutput(this.experimentalOutputNode);
+      console.log("Created newConsoleOutput", this.newConsoleOutput);
+    }
+
     this.completeNode = doc.querySelector(".jsterm-complete-node");
     this.inputNode = doc.querySelector(".jsterm-input-node");
 
     this._setFilterTextBoxEvents();
     this._initFilterButtons();
 
     let fontSize = this.owner._browserConsole ?
                    Services.prefs.getIntPref("devtools.webconsole.fontSize") :
diff --git a/devtools/client/webconsole/webconsole.xul b/devtools/client/webconsole/webconsole.xul
index 2c2eba0..9d64bf6 100644
--- a/devtools/client/webconsole/webconsole.xul
+++ b/devtools/client/webconsole/webconsole.xul
@@ -21,16 +21,18 @@
         title="&window.title;"
         browserConsoleTitle="&browserConsole.title;"
         windowtype="devtools:webconsole"
         width="900" height="350"
         persist="screenX screenY width height sizemode">
 
   <script type="application/javascript;version=1.8"
           src="chrome://devtools/content/shared/theme-switching.js"/>
+  <script type="application/javascript;version=1.8"
+          src="resource://devtools/client/webconsole/new-console-output/main.js"/>
   <script type="text/javascript" src="chrome://global/content/globalOverlay.js"/>
   <script type="text/javascript" src="resource://devtools/client/webconsole/net/main.js"/>
   <script type="text/javascript"><![CDATA[
 function goUpdateConsoleCommands() {
   goUpdateCommand("consoleCmd_openURL");
   goUpdateCommand("consoleCmd_copyURL");
 }
   // ]]></script>
