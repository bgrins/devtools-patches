# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  ca4acb214ef7f747898764c60b8cd3aaeae0bb5d

diff --git a/toolkit/content/widgets/text.js b/toolkit/content/widgets/text.js
--- a/toolkit/content/widgets/text.js
+++ b/toolkit/content/widgets/text.js
@@ -148,31 +148,17 @@ class MozTextLabel extends MozElementMix
     }
 
     if (wasLabelControl && !this.isLabelControl) {
       this.accessKeyParens.remove();
     }
   }
 
   set accessKey(val) {
-    if (!this.isLabelControl) {
-      this.setAttribute("accesskey", val);
-      return val;
-    }
-
-    // If this label already has an accesskey attribute store it here as well
-    if (this.hasAttribute("accesskey")) {
-      this.setAttribute("accesskey", val);
-    }
-    var control = this.labeledControlElement;
-    if (control) {
-      control.setAttribute("accesskey", val);
-    }
-    this.formatAccessKey(false);
-    return val;
+    throw new Error("Accesskey called with " + val);
   }
 
   get accessKey() {
     var accessKey = this.getAttribute("accesskey");
     return accessKey ? accessKey[0] : null;
   }
 
   get labeledControlElement() {
@@ -180,38 +166,26 @@ class MozTextLabel extends MozElementMix
       return null;
     }
 
     var control = this.control;
     return control ? document.getElementById(control) : null;
   }
 
   set control(val) {
-    if (!this.isLabelControl) {
-      // After this gets set, the label will switch to `isLabelControl`
-      this.setAttribute("control", val);
-      return val;
-    }
-
-    var control = this.labeledControlElement;
-    if (control) {
-      control.labelElement = null; // No longer pointed to be this label
-    }
-    this.setAttribute("control", val);
-    this.formatAccessKey(false);
-    return val;
+    throw new Error("control called with " + val);
   }
 
   get control() {
+    // No more setter. XXX: https://searchfox.org/comm-central/rev/ed8a923565e8de31d976ad58f0dc95850c0da275/calendar/lightning/content/lightning-item-iframe.js#4097
     return this.getAttribute("control");
   }
 
   set href(val) {
     this.setAttribute("href", val);
-    return val;
   }
 
   get href() {
     return this.getAttribute("href");
   }
 
   open(aEvent) {
     if (!this.isTextLink) {
