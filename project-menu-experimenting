# HG changeset patch
# Parent 6ab4fec518aa85099e5aeab036d6f7e069fe5667
# User Brian Grinstead <bgrinstead@mozilla.com>
Experimenting with project menu


diff --git a/browser/devtools/projecteditor/chrome/content/projecteditor.xul b/browser/devtools/projecteditor/chrome/content/projecteditor.xul
--- a/browser/devtools/projecteditor/chrome/content/projecteditor.xul
+++ b/browser/devtools/projecteditor/chrome/content/projecteditor.xul
@@ -21,41 +21,50 @@
 ]>
 
 <page xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" class="theme-body">
 
   <script type="application/javascript" src="chrome://global/content/globalOverlay.js"/>
 
   <commandset id="projecteditor-commandset" />
   <commandset id="editMenuCommands"/>
+  <commandset id="sourceEditorCommands">
+    <command id="cmd_gotoLine" oncommand="goDoCommand('cmd_gotoLine')"/>
+    <command id="cmd_find" oncommand="goDoCommand('cmd_find')"/>
+    <command id="cmd_findAgain" oncommand="goDoCommand('cmd_findAgain')"/>
+  </commandset>
+
   <keyset id="projecteditor-keyset" />
   <keyset id="editMenuKeys"/>
 
   <!-- Eventually we want to let plugins declare their own menu items.
        Wait unti app manager lands to deal with this integration point.
   -->
   <menubar id="projecteditor-menubar">
     <menu id="file-menu" label="&fileMenu.label;" accesskey="&fileMenu.accesskey;">
       <menupopup id="file-menu-popup" />
     </menu>
 
     <menu id="edit-menu" label="&editMenu.label;"
           accesskey="&editMenu.accesskey;">
       <menupopup id="edit-menu-popup">
-        <menuitem id="menu_undo"/>
+<!--         <menuitem id="menu_undo"/>
         <menuitem id="menu_redo"/>
         <menuseparator/>
         <menuitem id="menu_cut"/>
         <menuitem id="menu_copy"/>
         <menuitem id="menu_paste"/>
         <menuseparator/>
         <menuitem id="menu_selectAll"/>
-        <menuseparator/>
-        <menuitem id="menu_find"/>
-        <menuitem id="menu_findAgain"/>
+        <menuseparator/> -->
+        <menuitem id="menu_find"
+                  label="&findCmd.label;"
+                  accesskey="&findCmd.accesskey;"
+        />
+        <!-- <menuitem id="menu_findAgain"/> -->
       </menupopup>
     </menu>
   </menubar>
 
 
   <popupset>
     <menupopup id="directory-menu-popup">
     </menupopup>
diff --git a/browser/devtools/projecteditor/lib/projecteditor.js b/browser/devtools/projecteditor/lib/projecteditor.js
--- a/browser/devtools/projecteditor/lib/projecteditor.js
+++ b/browser/devtools/projecteditor/lib/projecteditor.js
@@ -220,16 +220,22 @@ var ProjectEditor = Class({
    * Set up listeners for commands to dispatch to all of the plugins
    */
   _initCommands: function() {
     this.projectEditorCommandset.addEventListener("command", (evt) => {
       evt.stopPropagation();
       evt.preventDefault();
       this.pluginDispatch("onCommand", evt.target.id, evt.target);
     });
+    // this.editorCommandset.addEventListener("command", (evt) => {
+    //   console.log("EDITOR COMMANDSET COMMAND", evt);
+    //   evt.stopPropagation();
+    //   evt.preventDefault();
+    //   this.pluginDispatch("onCommand", evt.target.id, evt.target);
+    // });
   },
 
   /**
    * Initialize each plugin in registeredPlugins
    */
   _initPlugins: function() {
     this._plugins = [];
 
@@ -688,22 +694,29 @@ var ProjectEditor = Class({
 /**
  * Returns a controller object that can be used for
  * editor-specific commands such as find, jump to line,
  * copy/paste, etc.
  */
 function getCommandController(host) {
   return {
     supportsCommand: function (cmd) {
+      // console.log("SUPPORT?");
+      // return true;
       return host._pluginCommands.get(cmd);
     },
 
     isCommandEnabled: function (cmd) {
+      console.log("IS CMD ENABELD", cmd);
       let plugin = host._pluginCommands.get(cmd);
       if (plugin && plugin.isCommandEnabled) {
         return plugin.isCommandEnabled(cmd);
       }
       return true;
+    },
+    doCommand: function(cmd) {
+      console.log("DOING COMMAND", cmd);
+     // this.commandController
     }
   };
 }
 
 exports.ProjectEditor = ProjectEditor;
diff --git a/browser/devtools/sourceeditor/editor.js b/browser/devtools/sourceeditor/editor.js
--- a/browser/devtools/sourceeditor/editor.js
+++ b/browser/devtools/sourceeditor/editor.js
@@ -312,17 +312,18 @@ Editor.prototype = {
 
         this.emit("gutterClick", line, ev.button);
       });
 
       win.CodeMirror.defineExtension("l10n", (name) => {
         return L10N.GetStringFromName(name);
       });
 
-      cm.getInputField().controllers.insertControllerAt(0, controller(this));
+      this.commandController = controller(this);
+      cm.getInputField().controllers.insertControllerAt(0, this.commandController);
 
       this.container = env;
       editors.set(this, cm);
 
       this.resetIndentUnit();
 
       def.resolve();
     };
@@ -991,16 +992,17 @@ function getCSSKeywords() {
 /**
  * Returns a controller object that can be used for
  * editor-specific commands such as find, jump to line,
  * copy/paste, etc.
  */
 function controller(ed) {
   return {
     supportsCommand: function (cmd) {
+      console.log("CHECKING FOR COMMAND SUPPORT", cmd);
       switch (cmd) {
         case "cmd_find":
         case "cmd_findAgain":
         case "cmd_findPrevious":
         case "cmd_gotoLine":
         case "cmd_undo":
         case "cmd_redo":
         case "cmd_delete":
diff --git a/browser/themes/shared/devtools/projecteditor/projecteditor.css b/browser/themes/shared/devtools/projecteditor/projecteditor.css
--- a/browser/themes/shared/devtools/projecteditor/projecteditor.css
+++ b/browser/themes/shared/devtools/projecteditor/projecteditor.css
@@ -23,17 +23,17 @@
 
 .arrow[invisible] {
   visibility: hidden;
 }
 
 #projecteditor-menubar {
   /* XXX: Hide menu bar until we have option to add menu items
      to an existing one. */
-  display: none;
+  /*display: none;*/
 }
 
 #projecteditor-toolbar,
 #projecteditor-toolbar-bottom {
   display: none; /* For now don't show the status bars */
   min-height: 22px;
   height: 22px;
   background: rgb(237, 237, 237);
