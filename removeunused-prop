# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  56b5c1a87dcb2c0391e7f642f99e6638dcf235c0
Bug 1409097 - Remove unused scrollToMessage prop;r=nchevobbe

This is leftover from a previous implementation, scrolling is now
controlled in the ConsoleOutput component.

MozReview-Commit-ID: FjPeaP2X0Qy

diff --git a/devtools/client/webconsole/new-console-output/components/Message.js b/devtools/client/webconsole/new-console-output/components/Message.js
--- a/devtools/client/webconsole/new-console-output/components/Message.js
+++ b/devtools/client/webconsole/new-console-output/components/Message.js
@@ -36,17 +36,16 @@ const Message = createClass({
     indent: PropTypes.number.isRequired,
     topLevelClasses: PropTypes.array.isRequired,
     messageBody: PropTypes.any.isRequired,
     repeat: PropTypes.any,
     frame: PropTypes.any,
     attachment: PropTypes.any,
     stacktrace: PropTypes.any,
     messageId: PropTypes.string,
-    scrollToMessage: PropTypes.bool,
     exceptionDocURL: PropTypes.string,
     parameters: PropTypes.object,
     request: PropTypes.object,
     dispatch: PropTypes.func,
     timeStamp: PropTypes.number,
     timestampsVisible: PropTypes.bool.isRequired,
     serviceContainer: PropTypes.shape({
       emitNewMessage: PropTypes.func.isRequired,
@@ -66,19 +65,16 @@ const Message = createClass({
   getDefaultProps: function () {
     return {
       indent: 0
     };
   },
 
   componentDidMount() {
     if (this.messageNode) {
-      if (this.props.scrollToMessage) {
-        this.messageNode.scrollIntoView();
-      }
       // Event used in tests. Some message types don't pass it in because existing tests
       // did not emit for them.
       if (this.props.serviceContainer) {
         this.props.serviceContainer.emitNewMessage(
           this.messageNode, this.props.messageId, this.props.timeStamp);
       }
     }
   },
