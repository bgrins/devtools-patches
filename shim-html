# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  2f00fe29a64a7e6df119411d37ef1168d066c565
Bug XXX - Shim top level HTML windows

diff --git a/browser/components/nsBrowserGlue.js b/browser/components/nsBrowserGlue.js
--- a/browser/components/nsBrowserGlue.js
+++ b/browser/components/nsBrowserGlue.js
@@ -525,16 +525,36 @@ BrowserGlue.prototype = {
         // parent only: configure default prefs, set up pref observers, register
         // pdf content handler, and initializes parent side message manager
         // shim for privileged api access.
         PdfJs.init(true);
         break;
       case "shield-init-complete":
         this._sendMainPingCentrePing();
         break;
+      case "chrome-document-global-created":
+        const HTML_NS = "http://www.w3.org/1999/xhtml";
+        subject.addEventListener("DOMContentLoaded", () => {
+          if (!subject.opener && subject.document.documentElement.namespaceURI === HTML_NS) {
+          }
+        }, {once:true});
+        subject.addEventListener("load", () => {
+          if (!subject.opener && subject.document.documentElement.namespaceURI === HTML_NS) {
+            subject.document.body.style.width = "400px";
+            subject.document.body.style.height = "300px";
+            subject.setTimeout(() => {
+              subject.document.body.style.width = "auto";
+              subject.document.body.style.height = "100%";
+            }, 0)
+          }
+        }, {once: true});
+        subject.addEventListener("unload", () => {
+          console.log("Store width/height");
+        }, {once: true});
+        break;
     }
   },
 
   // initialization (called on application startup)
   _init: function BG__init() {
     let os = Services.obs;
     os.addObserver(this, "notifications-open-settings");
     os.addObserver(this, "prefservice:after-app-defaults");
@@ -562,16 +582,17 @@ BrowserGlue.prototype = {
     os.addObserver(this, "keyword-search");
     os.addObserver(this, "browser-search-engine-modified");
     os.addObserver(this, "restart-in-safe-mode");
     os.addObserver(this, "flash-plugin-hang");
     os.addObserver(this, "xpi-signature-changed");
     os.addObserver(this, "sync-ui-state:update");
     os.addObserver(this, "handlersvc-store-initialized");
     os.addObserver(this, "shield-init-complete");
+    os.addObserver(this, "chrome-document-global-created");
 
     this._flashHangCount = 0;
     this._firstWindowReady = new Promise(resolve => this._firstWindowLoaded = resolve);
     if (AppConstants.platform == "win") {
       JawsScreenReaderVersionCheck.init();
     }
   },
 
@@ -615,16 +636,17 @@ BrowserGlue.prototype = {
     os.removeObserver(this, "handle-xul-text-link");
     os.removeObserver(this, "profile-before-change");
     os.removeObserver(this, "keyword-search");
     os.removeObserver(this, "browser-search-engine-modified");
     os.removeObserver(this, "flash-plugin-hang");
     os.removeObserver(this, "xpi-signature-changed");
     os.removeObserver(this, "sync-ui-state:update");
     os.removeObserver(this, "shield-init-complete");
+    os.removeObserver(this, "chrome-document-global-created");
   },
 
   _onAppDefaults: function BG__onAppDefaults() {
     // apply distribution customizations (prefs)
     // other customizations are applied in _beforeUIStartup()
     this._distributionCustomizer.applyPrefDefaults();
   },
 
diff --git a/toolkit/content/macWindowMenu.js b/toolkit/content/macWindowMenu.js
--- a/toolkit/content/macWindowMenu.js
+++ b/toolkit/content/macWindowMenu.js
@@ -16,17 +16,27 @@ function macWindowMenuDidShow() {
     item.setAttribute("label", win.document.title);
     if (win == window) {
       item.setAttribute("checked", "true");
     }
     item.addEventListener("command", () => {
       if (win.windowState == window.STATE_MINIMIZED) {
         win.restore();
       }
-      win.document.commandDispatcher.focusedWindow.focus();
+
+      // XXX: Is there something wrong with doing win.focus() here? Since
+      // document.commandDispatcher isn't defined in HTML docs this doesn't
+      // work for the Browser Console so either we need to find a way to expose
+      // commandDispatcher onto chrome HTML docs or we need to figure out if
+      // we can just always use win.focus()
+      if (win.document.commandDispatcher) {
+        win.document.commandDispatcher.focusedWindow.focus()
+      } else {
+        win.focus();
+      }
     });
     frag.appendChild(item);
   }
   document.getElementById("windowPopup").appendChild(frag);
 }
 
 function macWindowMenuDidHide() {
   let sep = document.getElementById("sep-window-list");
