# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  e28e2921e6f4b5e51eefab0642962210a2d81391

diff --git a/toolkit/content/customElements.js b/toolkit/content/customElements.js
--- a/toolkit/content/customElements.js
+++ b/toolkit/content/customElements.js
@@ -8,20 +8,55 @@
 
 // This is loaded into chrome windows with the subscript loader. Wrap in
 // a block to prevent accidentally leaking globals onto `window`.
 {
 
 ChromeUtils.import("resource://gre/modules/Services.jsm");
 ChromeUtils.import("resource://gre/modules/AppConstants.jsm");
 
+// We can't just check document.readyState in connectedCallback, because
+// in XUL documents document.readyState is still unitialized during the
+// DOMContentLoaded listeners (so we would incorrectly miss firing the
+// connectedCallbacks for elements inserted during a page's handler).
+let hasDOMContentLoaded = false;
+const lazyConnectedElements = new Set();
+window.addEventListener("DOMContentLoaded", (e) => {
+  if (e.originalTarget != document) {
+    return;
+  }
+
+  hasDOMContentLoaded = true;
+  for (let el of lazyConnectedElements) {
+    if (el.isConnected) {
+      el.connectedCallback();
+    }
+  }
+  lazyConnectedElements.clear();
+}, true);
+
+
 const gXULDOMParser = new DOMParser();
 gXULDOMParser.forceEnableXULXBL();
 
 class MozXULElement extends XULElement {
+
+  /**
+   * If a Custom Element requests it, then don't fire connectedCallback until after
+   * DOMContentLoaded fires
+   **/
+  scheduleConnectedCallbackOnDOMContentLoaded() {
+    if (hasDOMContentLoaded) {
+      return false;
+    }
+
+    lazyConnectedElements.add(this);
+    return true;
+  }
+
   /**
    * Allows eager deterministic construction of XUL elements with XBL attached, by
    * parsing an element tree and returning a DOM fragment to be inserted in the
    * document before any of the inner elements is referenced by JavaScript.
    *
    * This process is required instead of calling the createElement method directly
    * because bindings get attached when:
    *
diff --git a/toolkit/content/widgets/radio.js b/toolkit/content/widgets/radio.js
--- a/toolkit/content/widgets/radio.js
+++ b/toolkit/content/widgets/radio.js
@@ -107,16 +107,20 @@ class MozRadiogroup extends MozBaseContr
         return;
       }
       this.removeAttribute("focused");
       this.focusedItem = null;
     });
   }
 
   connectedCallback() {
+    if (this.scheduleConnectedCallbackOnDOMContentLoaded()) {
+      return;
+    }
+
     this._radioChildren = null;
 
     if (this.getAttribute("disabled") == "true")
       this.disabled = true;
 
     var children = this._getRadioChildren();
     var length = children.length;
     for (var i = 0; i < length; i++) {
