# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  6fcf5bfb0e33a3fe2ef574c35ddbdef27f7b3cc3

diff --git a/toolkit/content/customElements.js b/toolkit/content/customElements.js
--- a/toolkit/content/customElements.js
+++ b/toolkit/content/customElements.js
@@ -12,16 +12,51 @@
 
 ChromeUtils.import("resource://gre/modules/Services.jsm");
 ChromeUtils.import("resource://gre/modules/AppConstants.jsm");
 
 const gXULDOMParser = new DOMParser();
 gXULDOMParser.forceEnableXULXBL();
 
 class MozXULElement extends XULElement {
+  constructor() {
+    super();
+
+    // Wrap everything on the prototype to make sure connectedCallback gets
+    // fired if we are connected and waiting for lazy construction.
+    // let proto = this.__proto__;
+    // while (proto.constructor.name != "MozXULElement") {
+    //   console.log(Object.getOwnPropertyDescriptors(proto));
+    //   proto = proto.__proto__;
+    // }
+
+    // console.log(this, this.prototype);
+    if (this.lazyConnectedCallback) {
+      this._lazyConnectedCallbackWrapper = () => {
+        if (this.isConnected) {
+          this.lazyConnectedCallback();
+        }
+      };
+    }
+  }
+
+  /**
+   * If a Custom Element requests it, then don't fire connectedCallback until after
+   * DOMContentLoaded fires
+   **/
+  connectedCallback() {
+    if (this._lazyConnectedCallbackWrapper) {
+      if (document.readyState == "uninitialized") {
+        document.addEventListener("DOMContentLoaded", this._lazyConnectedCallbackWrapper, { once: true });
+      } else {
+        this._lazyConnectedCallbackWrapper();
+      }
+    }
+  }
+
   /**
    * Allows eager deterministic construction of XUL elements with XBL attached, by
    * parsing an element tree and returning a DOM fragment to be inserted in the
    * document before any of the inner elements is referenced by JavaScript.
    *
    * This process is required instead of calling the createElement method directly
    * because bindings get attached when:
    *
diff --git a/toolkit/content/widgets/radio.js b/toolkit/content/widgets/radio.js
--- a/toolkit/content/widgets/radio.js
+++ b/toolkit/content/widgets/radio.js
@@ -106,17 +106,17 @@ class MozRadiogroup extends MozBaseContr
       if (event.originalTarget != this) {
         return;
       }
       this.removeAttribute("focused");
       this.focusedItem = null;
     });
   }
 
-  connectedCallback() {
+  lazyConnectedCallback() {
     this._radioChildren = null;
 
     if (this.getAttribute("disabled") == "true")
       this.disabled = true;
 
     var children = this._getRadioChildren();
     var length = children.length;
     for (var i = 0; i < length; i++) {
