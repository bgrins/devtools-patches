# HG changeset patch
# User Lin Clark <lclark@mozilla.com>
# Parent  00ed91d9c2c83fec8c61565ef1f73ed7a7df724a
Bug 1243964 - Enable browser_webconsole_bug_752559_ineffective_iframe_sandbox_warning.js in e10s. r=bgrins

MozReview-Commit-ID: EGQVoeFr4VA

diff --git a/devtools/client/webconsole/test/browser.ini b/devtools/client/webconsole/test/browser.ini
--- a/devtools/client/webconsole/test/browser.ini
+++ b/devtools/client/webconsole/test/browser.ini
@@ -266,17 +266,16 @@ skip-if = e10s # Bug 1042253 - webconsol
 [browser_webconsole_bug_660806_history_nav.js]
 [browser_webconsole_bug_664131_console_group.js]
 [browser_webconsole_bug_686937_autocomplete_JSTerm_helpers.js]
 [browser_webconsole_bug_704295.js]
 [browser_webconsole_bug_734061_No_input_change_and_Tab_key_pressed.js]
 [browser_webconsole_bug_737873_mixedcontent.js]
 tags = mcb
 [browser_webconsole_bug_752559_ineffective_iframe_sandbox_warning.js]
-skip-if = e10s # Bug 1042253 - webconsole e10s tests (Linux debug timeout)
 [browser_webconsole_bug_762593_insecure_passwords_about_blank_web_console_warning.js]
 [browser_webconsole_bug_762593_insecure_passwords_web_console_warning.js]
 skip-if = true # Bug 1110500 - mouse event failure in test
 [browser_webconsole_bug_764572_output_open_url.js]
 skip-if = e10s # Bug 1042253 - webconsole tests disabled with e10s
 [browser_webconsole_bug_766001_JS_Console_in_Debugger.js]
 [browser_webconsole_bug_770099_violation.js]
 skip-if = e10s && (os == 'win' || os == 'mac') # Bug 1243978
diff --git a/devtools/client/webconsole/test/browser_webconsole_bug_752559_ineffective_iframe_sandbox_warning.js b/devtools/client/webconsole/test/browser_webconsole_bug_752559_ineffective_iframe_sandbox_warning.js
--- a/devtools/client/webconsole/test/browser_webconsole_bug_752559_ineffective_iframe_sandbox_warning.js
+++ b/devtools/client/webconsole/test/browser_webconsole_bug_752559_ineffective_iframe_sandbox_warning.js
@@ -21,17 +21,19 @@ const TEST_URI_NOWARNING = [
 const INEFFECTIVE_IFRAME_SANDBOXING_MSG = "An iframe which has both " +
   "allow-scripts and allow-same-origin for its sandbox attribute can remove " +
   "its sandboxing.";
 const SENTINEL_MSG = "testing ineffective sandboxing message";
 
 function test() {
   loadTab(TEST_URI_WARNING).then(() => {
     openConsole().then((hud) => {
-      content.console.log(SENTINEL_MSG);
+      ContentTask.spawn(gBrowser.selectedBrowser, SENTINEL_MSG, function*(msg) {
+        content.console.log(msg);
+      });
       waitForMessages({
         webconsole: hud,
         messages: [
           {
             name: "Ineffective iframe sandboxing warning displayed successfully",
             text: INEFFECTIVE_IFRAME_SANDBOXING_MSG,
             category: CATEGORY_SECURITY,
             severity: SEVERITY_WARNING
@@ -48,17 +50,19 @@ function test() {
       });
     });
   });
 }
 
 function testNoWarning(id) {
   loadTab(TEST_URI_NOWARNING[id]).then(() => {
     openConsole().then((hud) => {
-      content.console.log(SENTINEL_MSG);
+      ContentTask.spawn(gBrowser.selectedBrowser, SENTINEL_MSG, function*(msg) {
+        content.console.log(msg);
+      });
       waitForMessages({
         webconsole: hud,
         messages: [
           {
             text: SENTINEL_MSG,
             severity: SEVERITY_LOG
           }
         ]
