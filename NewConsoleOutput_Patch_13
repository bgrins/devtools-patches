# HG changeset patch
# User Peter Elmers <peter.elmers@yahoo.com>
Bug 1295254 - New console frontend: Add support for navigation marker. r=linclark


diff --git a/devtools/client/webconsole/new-console-output/utils/messages.js b/devtools/client/webconsole/new-console-output/utils/messages.js
index 472dda4..bbc0223 100644
--- a/devtools/client/webconsole/new-console-output/utils/messages.js
+++ b/devtools/client/webconsole/new-console-output/utils/messages.js
@@ -123,25 +123,28 @@ function transformPacket(packet) {
 // Helpers
 function getRepeatId(message) {
   message = message.toJS();
   delete message.repeat;
   return JSON.stringify(message);
 }
 
 function convertCachedPacket(packet) {
-  // The devtools server provides cached message packets in a different shape
-  // from those of consoleApiCalls, so we prepare them for preparation here.
+  // The devtools server provides cached message packets in a different shape, so we
+  // transform them here.
   let convertPacket = {};
   if (packet._type === "ConsoleAPI") {
     convertPacket.message = packet;
     convertPacket.type = "consoleAPICall";
   } else if (packet._type === "PageError") {
     convertPacket.pageError = packet;
     convertPacket.type = "pageError";
+  } else if ("_navPayload" in packet) {
+    convertPacket.type = "navigationMessage";
+    convertPacket.message = packet;
   } else {
     throw new Error("Unexpected packet type");
   }
   return convertPacket;
 }
 
 /**
  * Maps a Firefox RDP type to its corresponding level.
diff --git a/devtools/client/webconsole/webconsole.js b/devtools/client/webconsole/webconsole.js
index 60a1ff4..36d2861 100644
--- a/devtools/client/webconsole/webconsole.js
+++ b/devtools/client/webconsole/webconsole.js
@@ -1925,18 +1925,24 @@ WebConsoleFrame.prototype = {
    * @param string event
    *        Event name.
    * @param object packet
    *        Notification packet received from the server.
    */
   handleTabNavigated: function (event, packet) {
     if (event == "will-navigate") {
       if (this.persistLog) {
-        let marker = new Messages.NavigationMarker(packet, Date.now());
-        this.output.addMessage(marker);
+        if (this.NEW_CONSOLE_OUTPUT_ENABLED) {
+          // Add a _type to hit convertCachedPacket.
+          packet._type = true;
+          this.newConsoleOutput.dispatchMessageAdd(packet);
+        } else {
+          let marker = new Messages.NavigationMarker(packet, Date.now());
+          this.output.addMessage(marker);
+        }
       } else {
         this.jsterm.clearOutput();
       }
     }
 
     if (packet.url) {
       this.onLocationChange(packet.url, packet.title);
     }
