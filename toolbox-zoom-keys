# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  f460ad2878d94c9ae8f61c81a93302900e0e0673
Bug 1180663 - Reuse entity names and values from browser.dtd for devtools zoom functionality;r=jryans

diff --git a/browser/devtools/framework/test/browser_keybindings_02.js b/browser/devtools/framework/test/browser_keybindings_02.js
--- a/browser/devtools/framework/test/browser_keybindings_02.js
+++ b/browser/devtools/framework/test/browser_keybindings_02.js
@@ -19,23 +19,38 @@ add_task(function*() {
   for (let type of [SIDE, BOTTOM, SIDE]) {
     info("Switch to host type " + type);
     yield toolbox.switchHost(type);
 
     info("Try to use the toolbox shortcuts");
     yield checkKeyBindings(toolbox);
   }
 
-  Services.prefs.clearUserPref("devtools.toolbox.zoomValue", BOTTOM);
+  Services.prefs.clearUserPref("devtools.toolbox.zoomValue");
   Services.prefs.setCharPref("devtools.toolbox.host", BOTTOM);
   yield toolbox.destroy();
   gBrowser.removeCurrentTab();
 });
 
+function zoomWithKey(toolbox, key) {
+  if (!key) {
+    info("Key was empty, skipping zoomWithKey");
+    return;
+  }
+
+  info("Zooming with key: " + key);
+  let currentZoom = toolbox.zoomValue;
+  EventUtils.synthesizeKey(key, {accelKey: true}, toolbox.doc.defaultView);
+  isnot(toolbox.zoomValue, currentZoom, "The zoom level was changed in the toolbox");
+}
+
 function* checkKeyBindings(toolbox) {
-  let currentZoom = toolbox.zoomValue;
+  zoomWithKey(toolbox, toolbox.doc.getElementById("toolbox-zoom-in-key").getAttribute("key"));
+  zoomWithKey(toolbox, toolbox.doc.getElementById("toolbox-zoom-in-key2").getAttribute("key"));
+  zoomWithKey(toolbox, toolbox.doc.getElementById("toolbox-zoom-in-key3").getAttribute("key"));
 
-  let key = toolbox.doc.getElementById("toolbox-zoom-in-key").getAttribute("key");
-  EventUtils.synthesizeKey(key, {accelKey: true}, toolbox.doc.defaultView);
+  zoomWithKey(toolbox, toolbox.doc.getElementById("toolbox-zoom-reset-key").getAttribute("key"));
 
-  let newZoom = toolbox.zoomValue;
-  isnot(newZoom, currentZoom, "The zoom level was changed in the toolbox");
+  zoomWithKey(toolbox, toolbox.doc.getElementById("toolbox-zoom-out-key").getAttribute("key"));
+  zoomWithKey(toolbox, toolbox.doc.getElementById("toolbox-zoom-out-key2").getAttribute("key"));
+
+  zoomWithKey(toolbox, toolbox.doc.getElementById("toolbox-zoom-reset-key2").getAttribute("key"));
 }
diff --git a/browser/devtools/framework/toolbox.js b/browser/devtools/framework/toolbox.js
--- a/browser/devtools/framework/toolbox.js
+++ b/browser/devtools/framework/toolbox.js
@@ -567,35 +567,53 @@ Toolbox.prototype = {
    */
   _addZoomKeys: function() {
     let inKey = this.doc.getElementById("toolbox-zoom-in-key");
     inKey.addEventListener("command", this.zoomIn.bind(this), true);
 
     let inKey2 = this.doc.getElementById("toolbox-zoom-in-key2");
     inKey2.addEventListener("command", this.zoomIn.bind(this), true);
 
+    let inKey3 = this.doc.getElementById("toolbox-zoom-in-key3");
+    inKey3.addEventListener("command", this.zoomIn.bind(this), true);
+
     let outKey = this.doc.getElementById("toolbox-zoom-out-key");
     outKey.addEventListener("command", this.zoomOut.bind(this), true);
 
+    let outKey2 = this.doc.getElementById("toolbox-zoom-out-key2");
+    outKey2.addEventListener("command", this.zoomOut.bind(this), true);
+
     let resetKey = this.doc.getElementById("toolbox-zoom-reset-key");
     resetKey.addEventListener("command", this.zoomReset.bind(this), true);
+
+    let resetKey2 = this.doc.getElementById("toolbox-zoom-reset-key2");
+    resetKey2.addEventListener("command", this.zoomReset.bind(this), true);
   },
 
   _disableZoomKeys: function() {
     let inKey = this.doc.getElementById("toolbox-zoom-in-key");
     inKey.setAttribute("disabled", "true");
 
     let inKey2 = this.doc.getElementById("toolbox-zoom-in-key2");
     inKey2.setAttribute("disabled", "true");
 
+    let inKey3 = this.doc.getElementById("toolbox-zoom-in-key3");
+    inKey3.setAttribute("disabled", "true");
+
     let outKey = this.doc.getElementById("toolbox-zoom-out-key");
     outKey.setAttribute("disabled", "true");
 
+    let outKey2 = this.doc.getElementById("toolbox-zoom-out-key2");
+    outKey2.setAttribute("disabled", "true");
+
     let resetKey = this.doc.getElementById("toolbox-zoom-reset-key");
     resetKey.setAttribute("disabled", "true");
+
+    let resetKey2 = this.doc.getElementById("toolbox-zoom-reset-key2");
+    resetKey2.setAttribute("disabled", "true");
   },
 
   /**
    * Set zoom on toolbox to whatever the last setting was.
    */
   _loadInitialZoom: function() {
     this.setZoom(this.zoomValue);
   },
diff --git a/browser/devtools/framework/toolbox.xul b/browser/devtools/framework/toolbox.xul
--- a/browser/devtools/framework/toolbox.xul
+++ b/browser/devtools/framework/toolbox.xul
@@ -39,29 +39,41 @@
          key="&toolboxNextTool.key;"
          oncommand="void(0);"
          modifiers="accel"/>
     <key id="toolbox-previous-tool-key"
          key="&toolboxPreviousTool.key;"
          oncommand="void(0);"
          modifiers="accel"/>
     <key id="toolbox-zoom-in-key"
-         key="&toolboxZoomIn.key;"
+         key="&fullZoomEnlargeCmd.commandkey;"
          oncommand="void(0);"
          modifiers="accel"/>
     <key id="toolbox-zoom-in-key2"
-         key="&toolboxZoomIn.key2;"
+         key="&fullZoomEnlargeCmd.commandkey2;"
+         oncommand="void(0);"
+         modifiers="accel"/>
+    <key id="toolbox-zoom-in-key3"
+         key="&fullZoomEnlargeCmd.commandkey3;"
          oncommand="void(0);"
          modifiers="accel"/>
     <key id="toolbox-zoom-out-key"
-         key="&toolboxZoomOut.key;"
+         key="&fullZoomReduceCmd.commandkey;"
+         oncommand="void(0);"
+         modifiers="accel"/>
+    <key id="toolbox-zoom-out-key2"
+         key="&fullZoomReduceCmd.commandkey2;"
          oncommand="void(0);"
          modifiers="accel"/>
     <key id="toolbox-zoom-reset-key"
-         key="&toolboxZoomReset.key;"
+         key="&fullZoomResetCmd.commandkey;"
+         oncommand="void(0);"
+         modifiers="accel"/>
+    <key id="toolbox-zoom-reset-key2"
+         key="&fullZoomResetCmd.commandkey2;"
          oncommand="void(0);"
          modifiers="accel"/>
     <key id="toolbox-reload-key"
          key="&toolboxReload.key;"
          oncommand="void(0);"
          modifiers="accel"/>
     <key id="toolbox-force-reload-key"
          key="&toolboxReload.key;"
diff --git a/browser/locales/en-US/chrome/browser/devtools/toolbox.dtd b/browser/locales/en-US/chrome/browser/devtools/toolbox.dtd
--- a/browser/locales/en-US/chrome/browser/devtools/toolbox.dtd
+++ b/browser/locales/en-US/chrome/browser/devtools/toolbox.dtd
@@ -10,20 +10,31 @@
 <!ENTITY toggleToolboxF12.keycode          "VK_F12">
 <!ENTITY toggleToolboxF12.keytext          "F12">
 
 <!ENTITY toolboxCloseButton.tooltip    "Close Developer Tools">
 <!ENTITY toolboxOptionsButton.key      "O">
 <!ENTITY toolboxNextTool.key           "]">
 <!ENTITY toolboxPreviousTool.key       "[">
 
-<!ENTITY toolboxZoomIn.key             "+">
-<!ENTITY toolboxZoomIn.key2            "="> <!-- + is above this key on many keyboards -->
-<!ENTITY toolboxZoomOut.key            "-">
-<!ENTITY toolboxZoomReset.key          "0">
+<!-- LOCALIZATION NOTE :
+fullZoomEnlargeCmd.commandkey, fullZoomEnlargeCmd.commandkey2,
+fullZoomEnlargeCmd.commandkey3, fullZoomReduceCmd.commandkey,
+fullZoomReduceCmd.commandkey2, fullZoomResetCmd.commandkey,
+and fullZoomResetCmd.commandkey2 should all match the corresponding
+values from browser.dtd.  -->
+<!ENTITY fullZoomEnlargeCmd.commandkey  "+">
+<!ENTITY fullZoomEnlargeCmd.commandkey2 "=">
+<!ENTITY fullZoomEnlargeCmd.commandkey3 "">
+
+<!ENTITY fullZoomReduceCmd.commandkey   "-">
+<!ENTITY fullZoomReduceCmd.commandkey2  "">
+
+<!ENTITY fullZoomResetCmd.commandkey    "0">
+<!ENTITY fullZoomResetCmd.commandkey2   "">
 
 <!ENTITY toolboxReload.key             "r">
 <!-- This key is used with the accel+shift modifiers to minimize the toolbox -->
 <!ENTITY toolboxToggleMinimize.key     "U">
 
 <!ENTITY toolboxToggle.key             "d">
 <!-- LOCALIZATION NOTE (toolboxFramesButton): This is the label for
   -  the iframes menu list that appears only when the document has some.
