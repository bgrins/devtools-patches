# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  38b3c1d03a594664c6b32c35533734283c258f43
Bug 1392352 - Part 1 - Interpose gBrowser

diff --git a/js/xpconnect/wrappers/AddonWrapper.cpp b/js/xpconnect/wrappers/AddonWrapper.cpp
--- a/js/xpconnect/wrappers/AddonWrapper.cpp
+++ b/js/xpconnect/wrappers/AddonWrapper.cpp
@@ -37,21 +37,34 @@ ReportASCIIErrorWithId(JSContext* cx, co
         return;
     JS_ReportErrorUTF8(cx, msg, bytes.ptr());
 }
 
 bool
 InterposeProperty(JSContext* cx, HandleObject target, const nsIID* iid, HandleId id,
                   MutableHandle<PropertyDescriptor> descriptor)
 {
+    // If an object requests interposition, then always do it:
+    bool requiresAddonInterpositions;
+    if (!JS_HasOwnProperty(cx, target, "requiresAddonInterpositions", &requiresAddonInterpositions)) {
+        return false;
+    }
+    printf("requiresAddonInterpositions? %d\n", requiresAddonInterpositions);
+
+    if (requiresAddonInterpositions) {
+        printf("InterposeProperty\n");
+        return true;
+    }
+
     // We only want to do interpostion on DOM instances and
     // wrapped natives.
     RootedObject unwrapped(cx, UncheckedUnwrap(target));
     const js::Class* clasp = js::GetObjectClass(unwrapped);
     bool isCPOW = jsipc::IsWrappedCPOW(unwrapped);
+
     if (!mozilla::dom::IsDOMClass(clasp) &&
         !IS_WN_CLASS(clasp) &&
         !IS_PROTO_CLASS(clasp) &&
         clasp != &OuterWindowProxyClass &&
         !isCPOW) {
         return true;
     }
 
