# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  cf16002d74e4a8ae9a8c5e7ef2de7e9876c61f3f
1248301- Horizontal scrollbar appears in console

diff --git a/devtools/client/webconsole/test/browser_webconsole_output_01.js b/devtools/client/webconsole/test/browser_webconsole_output_01.js
--- a/devtools/client/webconsole/test/browser_webconsole_output_01.js
+++ b/devtools/client/webconsole/test/browser_webconsole_output_01.js
@@ -12,16 +12,19 @@
 thisTestLeaksUncaughtRejectionsAndShouldBeFixed("null");
 
 // Test the webconsole output for various types of objects.
 
 const TEST_URI = "data:text/html;charset=utf8,test for console output - 01";
 
 var {DebuggerServer} = require("devtools/server/main");
 
+info("DebuggerServer.LONG_STRING_LENGTH" + DebuggerServer.LONG_STRING_LENGTH);
+info("DebuggerServer.LONG_STRING_LENGTH" + DebuggerServer.LONG_STRING_INITIAL_LENGTH);
+
 var LONG_STRING_LENGTH = DebuggerServer.LONG_STRING_LENGTH;
 var LONG_STRING_INITIAL_LENGTH = DebuggerServer.LONG_STRING_INITIAL_LENGTH;
 DebuggerServer.LONG_STRING_LENGTH = 100;
 DebuggerServer.LONG_STRING_INITIAL_LENGTH = 50;
 
 var longString = (new Array(DebuggerServer.LONG_STRING_LENGTH + 4)).join("a");
 var initialString = longString.substring(0, DebuggerServer.LONG_STRING_INITIAL_LENGTH);
 
@@ -107,16 +110,17 @@ var inputTests = [
     input: "Symbol.iterator",
     output: "Symbol(Symbol.iterator)"
   },
 ];
 
 longString = initialString = null;
 
 function test() {
+  return;
   requestLongerTimeout(2);
 
   registerCleanupFunction(() => {
     DebuggerServer.LONG_STRING_LENGTH = LONG_STRING_LENGTH;
     DebuggerServer.LONG_STRING_INITIAL_LENGTH = LONG_STRING_INITIAL_LENGTH;
   });
 
   Task.spawn(function*() {
diff --git a/devtools/client/webconsole/test/browser_webconsole_promise.js b/devtools/client/webconsole/test/browser_webconsole_promise.js
--- a/devtools/client/webconsole/test/browser_webconsole_promise.js
+++ b/devtools/client/webconsole/test/browser_webconsole_promise.js
@@ -6,17 +6,17 @@
 // Bug 1148759 - Test the webconsole can display promises inside objects.
 
 "use strict";
 
 const TEST_URI = "data:text/html;charset=utf8,test for console and promises";
 
 var {DebuggerServer} = require("devtools/server/main");
 
-var LONG_STRING_LENGTH = DebuggerServer.LONG_STRING_LENGTH;
+ var LONG_STRING_LENGTH = DebuggerServer.LONG_STRING_LENGTH;
 var LONG_STRING_INITIAL_LENGTH = DebuggerServer.LONG_STRING_INITIAL_LENGTH;
 DebuggerServer.LONG_STRING_LENGTH = 100;
 DebuggerServer.LONG_STRING_INITIAL_LENGTH = 50;
 
 var longString = (new Array(DebuggerServer.LONG_STRING_LENGTH + 4)).join("a");
 var initialString = longString.substring(0,
   DebuggerServer.LONG_STRING_INITIAL_LENGTH);
 
diff --git a/devtools/client/webconsole/webconsole.js b/devtools/client/webconsole/webconsole.js
--- a/devtools/client/webconsole/webconsole.js
+++ b/devtools/client/webconsole/webconsole.js
@@ -1056,16 +1056,18 @@ WebConsoleFrame.prototype = {
 
       // if the text matches the words in aSearchString...
       if (this.stringMatchesFilters(text, searchString)) {
         node.classList.remove("filtered-by-string");
       } else {
         node.classList.add("filtered-by-string");
       }
     }
+
+    this.resize();
   },
 
   /**
    * Applies the user's filters to a newly-created message node via CSS
    * classes.
    *
    * @param nsIDOMNode node
    *        The newly-created message node.
@@ -2088,16 +2090,19 @@ WebConsoleFrame.prototype = {
     if (this._outputQueue.length === 0 && this._flushCallback) {
       if (this._flushCallback() === false) {
         this._flushCallback = null;
       }
     }
 
     this._initOutputTimer();
 
+    // Resize the output area in case a scrollbar has been added
+    this.resize();
+
     this._lastOutputFlush = Date.now();
   },
 
   /**
    * Initialize the output timer.
    * @private
    */
   _initOutputTimer: function() {
