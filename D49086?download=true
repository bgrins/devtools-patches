diff --git a/dom/html/nsGenericHTMLFrameElement.cpp b/dom/html/nsGenericHTMLFrameElement.cpp
--- a/dom/html/nsGenericHTMLFrameElement.cpp
+++ b/dom/html/nsGenericHTMLFrameElement.cpp
@@ -190,6 +190,9 @@
   if (RefPtr<Document> doc = GetComposedDoc()) {
     // SwapWithOtherLoader relies on frames being up-to-date.
     doc->FlushPendingNotifications(FlushType::Frames);
+    if (nsContentUtils::IsSafeToRunScript()) {
+      doc->MaybeInitializeFinalizeFrameLoaders();
+    }
   }
 
   RefPtr<nsFrameLoader> loader = GetFrameLoader();
diff --git a/dom/xul/XULFrameElement.cpp b/dom/xul/XULFrameElement.cpp
--- a/dom/xul/XULFrameElement.cpp
+++ b/dom/xul/XULFrameElement.cpp
@@ -7,6 +7,7 @@
 #include "nsCOMPtr.h"
 #include "nsIContent.h"
 #include "nsFrameLoader.h"
+#include "mozAutoDocUpdate.h"
 #include "mozilla/AsyncEventDispatcher.h"
 #include "mozilla/dom/HTMLIFrameElement.h"
 #include "mozilla/dom/WindowProxyHolder.h"
@@ -125,6 +126,9 @@
   if (RefPtr<Document> doc = GetComposedDoc()) {
     // SwapWithOtherLoader relies on frames being up-to-date.
     doc->FlushPendingNotifications(FlushType::Frames);
+    if (nsContentUtils::IsSafeToRunScript()) {
+      doc->MaybeInitializeFinalizeFrameLoaders();
+    }
   }
 
   RefPtr<nsFrameLoader> loader = GetFrameLoader();
diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -6523,21 +6523,21 @@
 bool nsCSSFrameConstructor::MaybeConstructLazily(Operation aOperation,
                                                  nsIContent* aChild) {
   MOZ_ASSERT(aChild->GetParent());
-  if (aOperation == CONTENTINSERT) {
-    MOZ_ASSERT(!aChild->IsRootOfAnonymousSubtree());
-    if (aChild->IsXULElement()) {
-      return false;
-    }
-  } else {  // CONTENTAPPEND
-    MOZ_ASSERT(aOperation == CONTENTAPPEND,
-               "operation should be either insert or append");
-    for (nsIContent* child = aChild; child; child = child->GetNextSibling()) {
-      MOZ_ASSERT(!child->IsRootOfAnonymousSubtree());
-      if (child->IsXULElement()) {
-        return false;
-      }
-    }
-  }
+  // if (aOperation == CONTENTINSERT) {
+  //   MOZ_ASSERT(!aChild->IsRootOfAnonymousSubtree());
+  //   if (aChild->IsXULElement()) {
+  //     return false;
+  //   }
+  // } else {  // CONTENTAPPEND
+  //   MOZ_ASSERT(aOperation == CONTENTAPPEND,
+  //              "operation should be either insert or append");
+  //   for (nsIContent* child = aChild; child; child = child->GetNextSibling()) {
+  //     MOZ_ASSERT(!child->IsRootOfAnonymousSubtree());
+  //     if (child->IsXULElement()) {
+  //       return false;
+  //     }
+  //   }
+  // }
 
   // We can construct lazily; just need to set suitable bits in the content
   // tree.

