# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1539186662 25200
#      Wed Oct 10 08:51:02 2018 -0700
# Node ID 75d34302a400f4d1b461c1f3b5c04222333d35ba
# Parent  91b4c3687d7563244fbba0f58075779eb89259fb
Bug 1497601 - Use a xul:description instead of a xul:label in tooltip NAC;r=smaug

We'd like to be able to implement label features with a Custom Element, and we
don't want to run CE reactions inside of the NAC.

Differential Revision: https://phabricator.services.mozilla.com/D8241

diff --git a/dom/xul/XULTooltipElement.cpp b/dom/xul/XULTooltipElement.cpp
--- a/dom/xul/XULTooltipElement.cpp
+++ b/dom/xul/XULTooltipElement.cpp
@@ -22,17 +22,17 @@ NS_NewXULTooltipElement(already_AddRefed
 }
 
 nsresult
 XULTooltipElement::Init()
 {
   // Create the default child label node that will contain the text of the
   // tooltip.
   RefPtr<mozilla::dom::NodeInfo> nodeInfo;
-  nodeInfo = mNodeInfo->NodeInfoManager()->GetNodeInfo(nsGkAtoms::label,
+  nodeInfo = mNodeInfo->NodeInfoManager()->GetNodeInfo(nsGkAtoms::description,
                                                        nullptr,
                                                        kNameSpaceID_XUL,
                                                        nsINode::ELEMENT_NODE);
   nsCOMPtr<Element> label;
   nsresult rv = NS_NewXULElement(getter_AddRefs(label),
                                  nodeInfo.forget(), dom::NOT_FROM_PARSER);
   NS_ENSURE_SUCCESS(rv, rv);
   label->SetAttr(kNameSpaceID_None, nsGkAtoms::_class,
@@ -51,17 +51,17 @@ XULTooltipElement::AfterSetAttr(int32_t 
                                 const nsAttrValue* aOldValue,
                                 nsIPrincipal* aSubjectPrincipal,
                                 bool aNotify)
 {
   if (aNameSpaceID == kNameSpaceID_None && aName == nsGkAtoms::label) {
     // When the label attribute of this node changes propagate the text down
     // into child label element.
     nsCOMPtr<nsIContent> label = GetFirstChild();
-    if (label && label->IsXULElement(nsGkAtoms::label)) {
+    if (label && label->IsXULElement(nsGkAtoms::description)) {
       nsAutoString value;
       if (aValue) {
         aValue->ToString(value);
       }
       nsContentUtils::AddScriptRunner(NS_NewRunnableFunction(
         "XULTooltipElement::AfterSetAttr",
         [label, value]() {
           Element* labelElement = label->AsElement();
