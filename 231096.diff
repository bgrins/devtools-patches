# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1425055506 28800
#      Fri Feb 27 08:45:06 2015 -0800
# Node ID 49b17c4b52a211f07784272937c880511cb5869d
# Parent  54d3bf38ca10c3c04db9d7bee35582ee19c5eae5
Bug 1134845 - Add clearHistory jsterm helper to remove persisted console input history;r=past

diff --git a/browser/devtools/webconsole/test/browser_console_history_persist.js b/browser/devtools/webconsole/test/browser_console_history_persist.js
--- a/browser/devtools/webconsole/test/browser_console_history_persist.js
+++ b/browser/devtools/webconsole/test/browser_console_history_persist.js
@@ -54,16 +54,25 @@ let test = asyncTest(function* () {
 
   // Fourth tab: Should have the latest command from the third tab, followed
   // by the rest of the history from the first tab.
   yield loadTab(TEST_URI);
   let hud4 = yield openConsole();
   is (JSON.stringify(hud4.jsterm.history), '["1","2","3","4","5","6","7","8","9","\\"hello from third tab\\""]',
     "Fourth tab has most recent history");
 
+  yield hud4.jsterm.clearHistory();
+  is (JSON.stringify(hud4.jsterm.history), '[]',
+    "Clearing history for a tab works");
+
+  yield loadTab(TEST_URI);
+  let hud5 = yield openConsole();
+  is (JSON.stringify(hud5.jsterm.history), '[]',
+    "Clearing history carries over to a new tab");
+
   info ("Clearing custom input history pref");
   Services.prefs.clearUserPref("devtools.webconsole.inputHistoryCount");
 });
 
 /**
  * Populate the history by running the following commands:
  *  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
  */
diff --git a/browser/devtools/webconsole/webconsole.js b/browser/devtools/webconsole/webconsole.js
--- a/browser/devtools/webconsole/webconsole.js
+++ b/browser/devtools/webconsole/webconsole.js
@@ -3111,20 +3111,35 @@ JSTerm.prototype = {
         // Holds the index of the history entry that the user is currently viewing.
         // This is reset to this.history.length when this.execute() is invoked.
         this.historyPlaceHolder = this.history.length;
       }
     }, console.error);
   },
 
   /**
-   * Stores the console history for future sessions.
+   * Clear the console history altogether.  Note that this will not affect
+   * other consoles that are already opened (since they have their own copy),
+   * but it will reset the array for all newly-opened consoles.
+   * @returns Promise
+   *          Resolves once the changes have been persisted.
+   */
+  clearHistory: function() {
+    this.history = [];
+    this.historyIndex = this.historyPlaceHolder = 0;
+    return this.storeHistory();
+  },
+
+  /**
+   * Stores the console history for future console instances.
+   * @returns Promise
+   *          Resolves once the changes have been persisted.
    */
   storeHistory: function() {
-    asyncStorage.setItem("webConsoleHistory", this.history);
+    return asyncStorage.setItem("webConsoleHistory", this.history);
   },
 
   /**
    * Stores the data for the last completion.
    * @type object
    */
   lastCompletion: null,
 
@@ -3307,16 +3322,19 @@ JSTerm.prototype = {
     let helperResult = aResponse.helperResult;
     let helperHasRawOutput = !!(helperResult || {}).rawOutput;
 
     if (helperResult && helperResult.type) {
       switch (helperResult.type) {
         case "clearOutput":
           this.clearOutput();
           break;
+        case "clearHistory":
+          this.clearHistory();
+          break;
         case "inspectObject":
           if (aAfterMessage) {
             if (!aAfterMessage._objectActors) {
               aAfterMessage._objectActors = new Set();
             }
             aAfterMessage._objectActors.add(helperResult.object.actor);
           }
           this.openVariablesView({
diff --git a/toolkit/devtools/webconsole/utils.js b/toolkit/devtools/webconsole/utils.js
--- a/toolkit/devtools/webconsole/utils.js
+++ b/toolkit/devtools/webconsole/utils.js
@@ -1592,16 +1592,26 @@ function JSTermHelpers(aOwner)
   aOwner.sandbox.clear = function JSTH_clear()
   {
     aOwner.helperResult = {
       type: "clearOutput",
     };
   };
 
   /**
+   * Clears the input history of the JSTerm.
+   */
+  aOwner.sandbox.clearHistory = function JSTH_clearHistory()
+  {
+    aOwner.helperResult = {
+      type: "clearHistory",
+    };
+  };
+
+  /**
    * Returns the result of Object.keys(aObject).
    *
    * @param object aObject
    *        Object to return the property names from.
    * @return array of strings
    */
   aOwner.sandbox.keys = function JSTH_keys(aObject)
   {
