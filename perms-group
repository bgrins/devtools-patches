# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  189cf9021f8b68bf645a719c51e5bd7d0d961de5
Bug 1199790 - Add sections and sorting for permissions in subpanel

diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -6790,19 +6790,23 @@ var gIdentityHandler = {
   get _permissionsContainer () {
     delete this._permissionsContainer;
     return this._permissionsContainer = document.getElementById("identity-popup-permissions");
   },
   get _permissionList () {
     delete this._permissionList;
     return this._permissionList = document.getElementById("identity-popup-permission-list");
   },
-  get _permissionSubviewList () {
-    delete this._permissionSubviewList;
-    return this._permissionSubviewList = document.getElementById("identity-popup-permission-subview-list");
+  get _permissionSubviewListPageFunctionality () {
+    delete this._permissionSubviewListPageFunctionality;
+    return this._permissionSubviewListPageFunctionality = document.getElementById("permission-subview-list-page-functionality");
+  },
+  get _permissionSubviewListSystemAccess () {
+    delete this._permissionSubviewListSystemAccess;
+    return this._permissionSubviewListSystemAccess = document.getElementById("permission-subview-list-system-access");
   },
 
   /**
    * Rebuild cache of the elements that may or may not exist depending
    * on whether there's a location bar.
    */
   _cacheElements : function() {
     delete this._identityBox;
@@ -6814,17 +6818,18 @@ var gIdentityHandler = {
     delete this._permissionList;
     this._identityBox = document.getElementById("identity-box");
     this._identityIcons = document.getElementById("identity-icons");
     this._identityIconLabel = document.getElementById("identity-icon-label");
     this._identityIconCountryLabel = document.getElementById("identity-icon-country-label");
     this._identityIcon = document.getElementById("page-proxy-favicon");
     this._permissionsContainer = document.getElementById("identity-popup-permissions");
     this._permissionList = document.getElementById("identity-popup-permission-list");
-    this._permissionSubviewList = document.getElementById("identity-popup-permission-subview-list");
+    this._permissionSubviewListPageFunctionality = document.getElementById("permission-subview-list-page-functionality");
+    this._permissionSubviewListSystemAccess = document.getElementById("permission-subview-list-system-access");
   },
 
   /**
    * Handler for mouseclicks on the "More Information" button in the
    * "identity-popup" panel.
    */
   handleMoreInfoClick : function(event) {
     displaySecurityInfo();
@@ -7288,33 +7293,44 @@ var gIdentityHandler = {
     dt.setData("text/html", htmlString);
     dt.setDragImage(gProxyFavIcon, 16, 16);
   },
 
   updateSitePermissions: function () {
     while (this._permissionList.hasChildNodes())
       this._permissionList.removeChild(this._permissionList.lastChild);
 
-    while (this._permissionSubviewList.hasChildNodes())
-      this._permissionSubviewList.removeChild(this._permissionSubviewList.lastChild);
+    while (this._permissionSubviewListPageFunctionality.hasChildNodes())
+      this._permissionSubviewListPageFunctionality.removeChild(this._permissionSubviewListPageFunctionality.lastChild);
+
+    while (this._permissionSubviewListSystemAccess.hasChildNodes())
+      this._permissionSubviewListSystemAccess.removeChild(this._permissionSubviewListSystemAccess.lastChild);
 
     let uri = gBrowser.currentURI;
 
-    for (let permission of SitePermissions.listPermissions()) {
+    for (let permission of SitePermissions.listPageFunctionalityPermissions()) {
       let state = SitePermissions.get(uri, permission);
       let item = this._createPermissionItem(permission, state);
-
+      this._permissionSubviewListPageFunctionality.appendChild(item);
+    }
+
+    for (let permission of SitePermissions.listSystemAccessPermissions()) {
+      let state = SitePermissions.get(uri, permission);
+      let item = this._createPermissionItem(permission, state);
+      this._permissionSubviewListSystemAccess.appendChild(item);
+    }
+
+    for (let permission of SitePermissions.listPermissions()) {
       // Add to the main view only if there is a known / non-default
       // value for the permission for this site.
+      let state = SitePermissions.get(uri, permission);
       if (state != SitePermissions.UNKNOWN) {
-        this._permissionList.appendChild(item.cloneNode(true));
+        let item = this._createPermissionItem(permission, state);
+        this._permissionList.appendChild(item);
       }
-
-      // Add all permissions to the subview.
-      this._permissionSubviewList.appendChild(item);
     }
 
     this._permissionsContainer.hidden = !this._permissionList.hasChildNodes();
   },
 
   setPermission: function (aPermission, aState) {
     if (aState == SitePermissions.getDefault(aPermission))
       SitePermissions.remove(gBrowser.currentURI, aPermission);
diff --git a/browser/base/content/test/general/browser_permissions.js b/browser/base/content/test/general/browser_permissions.js
--- a/browser/base/content/test/general/browser_permissions.js
+++ b/browser/base/content/test/general/browser_permissions.js
@@ -41,16 +41,17 @@ add_task(function* testMainViewVisible()
 
 add_task(function* testSubviewListing() {
   let {gIdentityHandler} = gBrowser.ownerGlobal;
   gIdentityHandler.setPermission("install", 1);
 
   info("Opening control center and expanding permissions subview");
   gIdentityHandler._identityBox.click();
 
+
   let menulists = gIdentityHandler._permissionSubviewList.querySelectorAll("menulist");
   let perms = SitePermissions.listPermissions();
 
   is(menulists.length, perms.length, "One menulist for each permission");
 
   for (let i = 0; i < menulists.length; i++) {
     let menulist = menulists[i];
     let perm = perms[i];
diff --git a/browser/components/controlcenter/content/panel.inc.xul b/browser/components/controlcenter/content/panel.inc.xul
--- a/browser/components/controlcenter/content/panel.inc.xul
+++ b/browser/components/controlcenter/content/panel.inc.xul
@@ -1,15 +1,16 @@
 <!-- This Source Code Form is subject to the terms of the Mozilla Public
    - License, v. 2.0. If a copy of the MPL was not distributed with this
    - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
 
 <panel id="identity-popup"
        type="arrow"
        hidden="true"
+       noautohide="true"
        onpopupshown="gIdentityHandler.onPopupShown(event);"
        onpopuphidden="gIdentityHandler.onPopupHidden(event);"
        orient="vertical">
 
   <broadcasterset>
     <broadcaster id="identity-popup-content-host" class="identity-popup-headline" crop="end"/>
     <broadcaster id="identity-popup-mcb-learn-more" class="text-link plain" value="&identity.learnMore;"/>
   </broadcasterset>
@@ -167,13 +168,22 @@
     <panelview id="identity-popup-permissionsView" flex="1">
       <vbox id="identity-popup-permissionsView-header">
         <label class="identity-popup-headline"
                value="&identity.permissions;"
                crop="end"/>
       </vbox>
 
       <vbox id="identity-popup-permissionsView-body">
-        <vbox id="identity-popup-permission-subview-list"/>
+        <vbox id="identity-popup-permission-subview-list">
+          <label class="identity-popup-subheadline"
+                 value="&identity.permissionsPageFunctionality;"
+                 crop="end"/>
+          <vbox id="permission-subview-list-page-functionality"></vbox>
+          <label class="identity-popup-subheadline"
+                 value="&identity.permissionsSystemAccess;"
+                 crop="end"/>
+          <vbox id="permission-subview-list-system-access"></vbox>
+        </vbox>
       </vbox>
     </panelview>
   </panelmultiview>
 </panel>
diff --git a/browser/locales/en-US/chrome/browser/browser.dtd b/browser/locales/en-US/chrome/browser/browser.dtd
--- a/browser/locales/en-US/chrome/browser/browser.dtd
+++ b/browser/locales/en-US/chrome/browser/browser.dtd
@@ -724,16 +724,18 @@ you can use these alternative items. Oth
 <!ENTITY identity.enableMixedContentBlocking.accesskey "E">
 <!ENTITY identity.disableMixedContentBlocking.label "Disable protection for now">
 <!ENTITY identity.disableMixedContentBlocking.accesskey "D">
 <!ENTITY identity.learnMore "Learn More">
 
 <!ENTITY identity.moreInfoLinkText2 "More Information">
 
 <!ENTITY identity.permissions "Permissions">
+<!ENTITY identity.permissionsPageFunctionality "Page Functionality">
+<!ENTITY identity.permissionsSystemAccess "System Access">
 
 <!-- Name for the tabs toolbar as spoken by screen readers.
      The word "toolbar" is appended automatically and should not be contained below! -->
 <!ENTITY tabsToolbar.label "Browser tabs">
 
 <!-- LOCALIZATION NOTE (syncTabsMenu2.label): This appears in the history menu -->
 <!ENTITY syncTabsMenu2.label     "Tabs From Other Devices">
 
diff --git a/browser/modules/SitePermissions.jsm b/browser/modules/SitePermissions.jsm
--- a/browser/modules/SitePermissions.jsm
+++ b/browser/modules/SitePermissions.jsm
@@ -19,16 +19,40 @@ this.SitePermissions = {
   /* Checks whether a UI for managing permissions should be exposed for a given
    * URI. This excludes file URIs, for instance, as they don't have a host,
    * even though nsIPermissionManager can still handle them.
    */
   isSupportedURI: function (aURI) {
     return aURI.schemeIs("http") || aURI.schemeIs("https");
   },
 
+  /* Returns an array of 'page functionality' permission IDs
+   */
+  listPageFunctionalityPermissions: function() {
+    let array = Object.keys(gPermissionObject).filter(p=> {
+      return gPermissionObject[p].group == "pagefunctionality";
+    });
+    array.sort((a, b) => {
+      return this.getPermissionLabel(a).localeCompare(this.getPermissionLabel(b));
+    });
+    return array;
+  },
+
+  /* Returns an array of 'system access' permission IDs
+   */
+  listSystemAccessPermissions: function() {
+    let array = Object.keys(gPermissionObject).filter(p=> {
+      return gPermissionObject[p].group == "systemaccess";
+    });
+    array.sort((a, b) => {
+      return this.getPermissionLabel(a).localeCompare(this.getPermissionLabel(b));
+    });
+    return array;
+  },
+
   /* Returns an array of all permission IDs.
    */
   listPermissions: function () {
     let array = Object.keys(gPermissionObject);
     array.sort((a, b) => {
       return this.getPermissionLabel(a).localeCompare(this.getPermissionLabel(b));
     });
     return array;
@@ -131,66 +155,85 @@ let gPermissionObject = {
    *    Allows sub domains to have their own permissions.
    *    Defaults to false.
    *
    *  - getDefault
    *    Called to get the permission's default state.
    *    Defaults to UNKNOWN, indicating that the user will be asked each time
    *    a page asks for that permissions.
    *
+   *  - group
+   *    A string, either 'systemacces' or 'pagefunctionality'.
+   *    Indicates what group this should be listed with in the UI
+   *
    *  - states
    *    Array of permission states to be exposed to the user.
    *    Defaults to ALLOW, BLOCK and the default state (see getDefault).
    */
 
   "image": {
+    group: "pagefunctionality",
     getDefault: function () {
       return Services.prefs.getIntPref("permissions.default.image") == 2 ?
                SitePermissions.BLOCK : SitePermissions.ALLOW;
     }
   },
 
   "cookie": {
+    group: "pagefunctionality",
     states: [ SitePermissions.ALLOW, SitePermissions.SESSION, SitePermissions.BLOCK ],
     getDefault: function () {
       if (Services.prefs.getIntPref("network.cookie.cookieBehavior") == 2)
         return SitePermissions.BLOCK;
 
       if (Services.prefs.getIntPref("network.cookie.lifetimePolicy") == 2)
         return SitePermissions.SESSION;
 
       return SitePermissions.ALLOW;
     }
   },
 
-  "desktop-notification": {},
+  "desktop-notification": {
+    group: "pagefunctionality",
+  },
 
-  "camera": {},
-  "microphone": {},
+  "camera": {
+    group: "systemaccess",
+  },
+  "microphone": {
+    group: "systemaccess",
+  },
 
   "popup": {
+    group: "pagefunctionality",
     getDefault: function () {
       return Services.prefs.getBoolPref("dom.disable_open_during_load") ?
                SitePermissions.BLOCK : SitePermissions.ALLOW;
     }
   },
 
   "install": {
+    group: "pagefunctionality",
     getDefault: function () {
       return Services.prefs.getBoolPref("xpinstall.whitelist.required") ?
                SitePermissions.BLOCK : SitePermissions.ALLOW;
     }
   },
 
   "geo": {
+    group: "systemaccess",
     exactHostMatch: true
   },
 
-  "indexedDB": {},
+  "indexedDB": {
+    group: "systemaccess",
+  },
 
   "pointerLock": {
+    group: "systemaccess",
     exactHostMatch: true
   },
 
   "push": {
+    group: "systemaccess",
     exactHostMatch: true
   }
 };
diff --git a/browser/modules/test/xpcshell/test_SitePermissions.js b/browser/modules/test/xpcshell/test_SitePermissions.js
new file mode 100644
--- /dev/null
+++ b/browser/modules/test/xpcshell/test_SitePermissions.js
@@ -0,0 +1,22 @@
+/* Any copyright is dedicated to the Public Domain.
+ * http://creativecommons.org/publicdomain/zero/1.0/
+ */
+"use strict";
+
+Components.utils.import("resource:///modules/SitePermissions.jsm");
+
+add_task(function* testPermissionsListing() {
+  Assert.deepEqual(SitePermissions.listPermissions().sort(),
+    ["camera","cookie","desktop-notification","geo","image",
+     "indexedDB","install","microphone","pointerLock","popup",
+     "push"],
+    "Correct list of all permissions");
+
+  Assert.deepEqual(SitePermissions.listPageFunctionalityPermissions().sort(),
+    ["cookie","desktop-notification","image","install","popup"],
+    "Correct list of 'page functionality' permissions");
+
+  Assert.deepEqual(SitePermissions.listSystemAccessPermissions().sort(),
+    ["camera","geo","indexedDB","microphone","pointerLock","push"],
+    "Correct list of 'page functionality' permissions");
+});
diff --git a/browser/modules/test/xpcshell/xpcshell.ini b/browser/modules/test/xpcshell/xpcshell.ini
--- a/browser/modules/test/xpcshell/xpcshell.ini
+++ b/browser/modules/test/xpcshell/xpcshell.ini
@@ -1,8 +1,9 @@
 [DEFAULT]
 head =
 tail =
 firefox-appdir = browser
 skip-if = toolkit == 'android' || toolkit == 'gonk'
 
 [test_DirectoryLinksProvider.js]
 [test_NewTabURL.js]
+[test_SitePermissions.js]
diff --git a/browser/themes/shared/controlcenter/panel.inc.css b/browser/themes/shared/controlcenter/panel.inc.css
--- a/browser/themes/shared/controlcenter/panel.inc.css
+++ b/browser/themes/shared/controlcenter/panel.inc.css
@@ -165,16 +165,21 @@
   margin: 0;
 }
 
 .identity-popup-headline {
   margin: 3px 0 4px;
   font-size: 150%;
 }
 
+.identity-popup-subheadline {
+  margin: 0;
+  font-weight: bold;
+}
+
 .identity-popup-warning-gray {
   -moz-padding-start: 24px;
   background: url(chrome://browser/skin/controlcenter/warning-gray.svg) no-repeat 0 50%;
 }
 
 .identity-popup-warning-yellow {
   -moz-padding-start: 24px;
   background: url(chrome://browser/skin/controlcenter/warning-yellow.svg) no-repeat 0 50%;
@@ -292,16 +297,22 @@ description#identity-popup-content-verif
   padding: 0.5em 1em;
 }
 
 #identity-popup-permission-list,
 #identity-popup-permission-subview-list {
   margin-top: 5px;
 }
 
+#permission-subview-list-page-functionality,
+#permission-subview-list-system-access {
+  margin: 3px 0;
+  -moz-margin-start: 3px;
+}
+
 #identity-popup-permission-list menulist.identity-popup-permission,
 #identity-popup-permission-subview-list menulist.identity-popup-permission {
   max-width: 10em;
 }
 
 .identity-popup-permission-label {
   -moz-margin-start: 0;
 }
