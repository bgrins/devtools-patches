# HG changeset patch
# User Girish Sharma <scrapmachines@gmail.com>
# Date 1395772376 -19800
#      Wed Mar 26 00:02:56 2014 +0530
# Node ID 4b387da1e4111df504577a08a829cd1206d629d2
# Parent  c354ec771e52d256bf5a241b6504cba191d35c8f
Bug 987870 - Fix multiple issue of cycling suggesting and pressing keys with modifiers in an empty inplace editor, r=bgrins

diff --git a/browser/devtools/shared/inplace-editor.js b/browser/devtools/shared/inplace-editor.js
--- a/browser/devtools/shared/inplace-editor.js
+++ b/browser/devtools/shared/inplace-editor.js
@@ -715,17 +715,18 @@ InplaceEditor.prototype = {
    *        true to select previous item from the popup.
    * @param {boolean} aNoSelect
    *        true to not select the text after selecting the newly selectedItem
    *        from the popup.
    */
   _cycleCSSSuggestion:
   function InplaceEditor_cycleCSSSuggestion(aReverse, aNoSelect)
   {
-    let {label, preLabel} = this.popup.selectedItem;
+    // selectedItem can be null when nothing is selected in an empty editor.
+    let {label, preLabel} = this.popup.selectedItem || {label: "", preLabel: ""};
     if (aReverse) {
       this.popup.selectPreviousItem();
     } else {
       this.popup.selectNextItem();
     }
     this._selectedIndex = this.popup.selectedIndex;
     let input = this.input;
     let pre = "";
@@ -867,17 +868,18 @@ InplaceEditor.prototype = {
 
     if (aEvent.keyCode === Ci.nsIDOMKeyEvent.DOM_VK_BACK_SPACE ||
         aEvent.keyCode === Ci.nsIDOMKeyEvent.DOM_VK_DELETE ||
         aEvent.keyCode === Ci.nsIDOMKeyEvent.DOM_VK_LEFT ||
         aEvent.keyCode === Ci.nsIDOMKeyEvent.DOM_VK_RIGHT) {
       if (this.popup && this.popup.isOpen) {
         this.popup.hidePopup();
       }
-    } else if (!cycling) {
+    } else if (!cycling && !aEvent.accelKey && !aEvent.altKey &&
+               !aEvent.ctrlKey) {
       this._maybeSuggestCompletion();
     }
 
     if (this.multiline &&
         aEvent.keyCode === Ci.nsIDOMKeyEvent.DOM_VK_RETURN &&
         aEvent.shiftKey) {
       prevent = false;
     } else if (aEvent.charCode in this._advanceCharCodes
diff --git a/browser/devtools/styleinspector/test/browser_bug894376_css_value_completion_new_property_value_pair.js b/browser/devtools/styleinspector/test/browser_bug894376_css_value_completion_new_property_value_pair.js
--- a/browser/devtools/styleinspector/test/browser_bug894376_css_value_completion_new_property_value_pair.js
+++ b/browser/devtools/styleinspector/test/browser_bug894376_css_value_completion_new_property_value_pair.js
@@ -16,19 +16,21 @@ let brace;
 //  [
 //    what key to press,
 //    modifers,
 //    expected input box value after keypress,
 //    selectedIndex of the popup,
 //    total items in the popup
 //  ]
 let testData = [
+  ["a", {accelKey: true, ctrlKey: true}, "", -1, 0],
   ["d", {}, "direction", 0, 3],
   ["VK_DOWN", {}, "display", 1, 3],
   ["VK_TAB", {}, "", -1, 10],
+  ["VK_DOWN", {}, "-moz-box", 0, 10],
   ["n", {}, "none", -1, 0],
   ["VK_TAB", {shiftKey: true}, "display", -1, 0],
   ["VK_BACK_SPACE", {}, "", -1, 0],
   ["c", {}, "caption-side", 0, 10],
   ["o", {}, "color", 0, 6],
   ["VK_TAB", {}, "none", -1, 0],
   ["r", {}, "red", 0, 5],
   ["VK_DOWN", {}, "rgb", 1, 5],
@@ -80,17 +82,18 @@ function checkStateAndMoveOn(index) {
   if (/tab/ig.test(key)) {
     info("waiting for the editor to get focused");
     waitForEditorFocus(brace.parentNode, function onNewElement(aEditor) {
       info("editor focused : " + aEditor.input);
       editor = aEditor;
       checkState();
     });
   }
-  else if (/(right|back_space|escape|return)/ig.test(key)) {
+  else if (/(right|back_space|escape|return)/ig.test(key) ||
+           (modifiers.accelKey || modifiers.ctrlKey)) {
     info("added event listener for right|escape|back_space|return keys");
     editor.input.addEventListener("keypress", function onKeypress() {
       if (editor.input) {
         editor.input.removeEventListener("keypress", onKeypress);
       }
       info("inside event listener");
       checkState();
     });
