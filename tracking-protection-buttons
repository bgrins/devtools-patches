# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  4201305112ff9a3efd9b8bfc48ac6802b885b663
Bug 1175239 - Replace tracking protection drop-down control with a button;r=MattN

diff --git a/browser/base/content/test/general/browser_trackingUI_1.js b/browser/base/content/test/general/browser_trackingUI_1.js
--- a/browser/base/content/test/general/browser_trackingUI_1.js
+++ b/browser/base/content/test/general/browser_trackingUI_1.js
@@ -22,44 +22,63 @@ registerCleanupFunction(function() {
 
 function hidden(sel) {
   let win = gBrowser.ownerGlobal;
   let el = win.document.querySelector(sel);
   let display = win.getComputedStyle(el).getPropertyValue("display", null);
   return display === "none";
 }
 
+function clickButton(sel) {
+  let win = gBrowser.ownerGlobal;
+  let evt = new win.Event("command");
+  let el = win.document.querySelector(sel);
+  el.dispatchEvent(evt);
+}
+
 function testBenignPage() {
   ok (!TrackingProtection.content.hasAttribute("block-disabled"), "blocking not disabled");
   ok (!TrackingProtection.content.hasAttribute("block-active"), "blocking is not active");
 
   // Make sure that the no tracking elements message appears
   ok (!hidden("#tracking-not-detected"), "labelNoTracking is visible");
   ok (hidden("#tracking-loaded"), "labelTrackingLoaded is hidden");
   ok (hidden("#tracking-blocked"), "labelTrackingBlocked is hidden");
+
+  // Check button visibility
+  ok (hidden("#tracking-action-block"), "blockButton is hidden");
+  ok (hidden("#tracking-action-unblock"), "unblockButton is hidden");
 }
 
 function testTrackingPage() {
   ok (!TrackingProtection.content.hasAttribute("block-disabled"), "blocking not disabled");
   ok (TrackingProtection.content.hasAttribute("block-active"), "blocking is active");
 
   // Make sure that the blocked tracking elements message appears
   ok (hidden("#tracking-not-detected"), "labelNoTracking is hidden");
   ok (hidden("#tracking-loaded"), "labelTrackingLoaded is hidden");
   ok (!hidden("#tracking-blocked"), "labelTrackingBlocked is visible");
+
+  // Check button visibility
+  ok (hidden("#tracking-action-block"), "blockButton is hidden");
+  ok (!hidden("#tracking-action-unblock"), "unblockButton is visible");
 }
 
 function testTrackingPageWhitelisted() {
   ok (TrackingProtection.content.hasAttribute("block-disabled"), "blocking is disabled");
   ok (!TrackingProtection.content.hasAttribute("block-active"), "blocking is not active");
 
   // Make sure that the blocked tracking elements message appears
   ok (hidden("#tracking-not-detected"), "labelNoTracking is hidden");
   ok (!hidden("#tracking-loaded"), "labelTrackingLoaded is visible");
   ok (hidden("#tracking-blocked"), "labelTrackingBlocked is hidden");
+
+  // Check button visibility
+  ok (!hidden("#tracking-action-block"), "blockButton is visible");
+  ok (hidden("#tracking-action-unblock"), "unblockButton is hidden");
 }
 
 add_task(function* () {
   yield updateTrackingProtectionDatabase();
 
   let tab = gBrowser.selectedTab = gBrowser.addTab();
 
   TrackingProtection = gBrowser.ownerGlobal.TrackingProtection;
@@ -77,25 +96,25 @@ add_task(function* () {
 
   info("Point tab to a test page containing tracking elements");
   yield promiseTabLoadEvent(tab, TRACKING_PAGE);
 
   info("Tracking content must be blocked");
   testTrackingPage();
 
   info("Disable Tracking Content Protection for the page (which reloads the page)");
-  TrackingProtection.disableForCurrentPage();
+  clickButton("#tracking-action-unblock");
 
   info("Wait for tab to reload following tracking-protection page white-listing");
   yield promiseTabLoadEvent(tab);
 
   info("Tracking content must be white-listed (NOT blocked)");
   testTrackingPageWhitelisted();
 
   info("Re-enable Tracking Content Protection for the page (which reloads the page)");
-  TrackingProtection.enableForCurrentPage();
+  clickButton("#tracking-action-block");
 
   info("Wait for tab to reload following tracking-protection page white-listing");
   yield promiseTabLoadEvent(tab);
 
   info("Tracking content must be blocked");
   testTrackingPage();
 });
diff --git a/browser/components/controlcenter/content/panel.inc.xul b/browser/components/controlcenter/content/panel.inc.xul
--- a/browser/components/controlcenter/content/panel.inc.xul
+++ b/browser/components/controlcenter/content/panel.inc.xul
@@ -48,32 +48,28 @@
                  crop="end">&trackingProtection.detectedBlocked;</label>
           <label id="tracking-loaded"
                  class="identity-popup-text"
                  crop="end">&trackingProtection.detectedNotBlocked;</label>
           <label id="tracking-not-detected"
                  class="identity-popup-text"
                  crop="end">&trackingProtection.notDetected;</label>
 
-          <button id="tracking-actions"
-            type="menu" label="&trackingContentBlocked.options;"
-            sizetopopup="none">
-            <menupopup>
-              <menuitem
-                id="tracking-action-unblock"
-                label="&trackingProtection.unblock.label;"
-                accesskey="&trackingProtection.unblock.accesskey;"
-                oncommand="TrackingProtection.disableForCurrentPage();"/>
-              <menuitem
-                id="tracking-action-block"
-                label="&trackingProtection.block.label;"
-                accesskey="&trackingProtection.block.accesskey;"
-                oncommand="TrackingProtection.enableForCurrentPage();"/>
-            </menupopup>
-          </button>
+          <button
+            label="&trackingProtection.unblock.label;"
+            class="identity-popup-button"
+            accesskey="&trackingProtection.unblock.accesskey;"
+            id="tracking-action-unblock"
+            oncommand="TrackingProtection.disableForCurrentPage();" />
+          <button
+            label="&trackingProtection.block.label;"
+            class="identity-popup-button"
+            accesskey="&trackingProtection.block.accesskey;"
+            id="tracking-action-block"
+            oncommand="TrackingProtection.enableForCurrentPage();" />
         </vbox>
       </hbox>
 
       <!-- Permissions Section -->
       <hbox id="identity-popup-permissions" class="identity-popup-section">
         <vbox id="identity-popup-permissions-content" flex="1">
           <label class="identity-popup-text identity-popup-headline"
                  value="&identity.permissions;"/>
diff --git a/browser/themes/shared/controlcenter/panel.inc.css b/browser/themes/shared/controlcenter/panel.inc.css
--- a/browser/themes/shared/controlcenter/panel.inc.css
+++ b/browser/themes/shared/controlcenter/panel.inc.css
@@ -67,16 +67,53 @@
 
 #identity-popup-securityView:-moz-locale-dir(rtl),
 #identity-popup-security-content:-moz-locale-dir(rtl),
 #identity-popup-permissions-content:-moz-locale-dir(rtl),
 #tracking-protection-content:-moz-locale-dir(rtl) {
   background-position: calc(100% - 1em) 1em;
 }
 
+/* IN-CONTENT-PREF STYLE BUTTONS */
+#identity-popup {
+  --button-text-color: #333;
+  --button-background: #fbfbfb;
+  --button-border-color: #c1c1c1;
+  --button-background-hover: #ebebeb;
+  --button-background-active: #dadada;
+}
+
+.identity-popup-button {
+  -moz-appearance: none;
+  margin: 5px 0;
+  height: 30px;
+  color: var(--button-text-color);
+  line-height: 20px;
+  border: 1px solid var(--button-border-color);
+  -moz-border-top-colors: none !important;
+  -moz-border-right-colors: none !important;
+  -moz-border-bottom-colors: none !important;
+  -moz-border-left-colors: none !important;
+  border-radius: 2px;
+  background-color: var(--button-background);
+}
+
+.identity-popup-button:not([disabled="true"]):hover {
+  background-color: var(--button-background-hover);
+}
+
+.identity-popup-button:not([disabled="true"]):hover:active {
+  background-color: var(--button-background-active);
+}
+
+.identity-popup-button[disabled="true"] {
+  cursor: not-allowed;
+  opacity: 0.5;
+}
+
 /* EXPAND BUTTON */
 
 .identity-popup-expander {
   margin: 0;
   padding: 4px 0;
   min-width: auto;
   width: 38px;
   border: 0 none;
@@ -206,30 +243,32 @@
 #tracking-protection-content {
   background-image: url("chrome://browser/skin/controlcenter/tracking-protection.svg");
 }
 
 #tracking-protection-content[block-disabled]  {
   background-image: url("chrome://browser/skin/controlcenter/tracking-protection-disabled.svg");
 }
 
-#tracking-actions {
+#tracking-action-block,
+#tracking-action-unblock {
   margin: 1em 0 0;
 }
 
 #tracking-protection-content[block-active] > #tracking-not-detected,
 #tracking-protection-content[block-disabled] > #tracking-not-detected,
 #tracking-protection-content:not([block-active]) > #tracking-blocked,
 #tracking-protection-content:not([block-active]) #tracking-action-unblock,
 #tracking-protection-content:not([block-disabled]) > #tracking-loaded,
 #tracking-protection-content:not([block-disabled]) #tracking-action-block,
 #tracking-protection-content:not([block-active]):not([block-disabled]) > #tracking-actions {
   display: none;
 }
 
+
 /* PERMISSIONS */
 
 #identity-popup-permissions-content {
   background-image: url(chrome://browser/skin/controlcenter/permissions.svg);
 }
 
 #identity-popup-permission-list {
   margin-top: 5px;
