# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  169f24de411f4f48c1a0c28a27f96beef7e63c59
Bug 1175239 - Replace tracking protection drop-down control with a button;r=MattN

diff --git a/browser/base/content/browser-trackingprotection.js b/browser/base/content/browser-trackingprotection.js
--- a/browser/base/content/browser-trackingprotection.js
+++ b/browser/base/content/browser-trackingprotection.js
@@ -17,17 +17,16 @@ let TrackingProtection = {
 
     let $ = selector => document.querySelector(selector);
     this.container = $("#tracking-protection-container");
     this.unblockButton = $("#tracking-action-unblock");
     this.blockButton = $("#tracking-action-block");
     this.labelTrackingBlocked = $("#tracking-blocked");
     this.labelTrackingLoaded = $("#tracking-loaded");
     this.labelNoTracking = $("#tracking-not-detected");
-    this.actions = $("#tracking-actions");
 
     this.resetUI();
   },
 
   getTelemetryHistogram: function() {
     return Services.telemetry.getHistogramById("TRACKING_PROTECTION_EVENTS");
   },
 
@@ -64,38 +63,35 @@ let TrackingProtection = {
 
   resetUI: function() {
     this.container.hidden = !this.enabled;
     this.container.removeAttribute("block-disabled");
     this.blockButton.hidden = true;
     this.unblockButton.hidden = true;
     this.labelTrackingBlocked.hidden = true;
     this.labelTrackingLoaded.hidden = true;
-    this.actions.hidden = true;
     this.labelNoTracking.hidden = true;
   },
 
   updateUI: function() {
     // Hide everything and then unhide any relevant controls.
     this.resetUI();
     if (!this.enabled) {
       return;
     }
 
     if (this.isTrackingBlocked) {
       this.unblockButton.hidden = false;
       this.labelTrackingBlocked.hidden = false;
-      this.actions.hidden = false;
     }
 
     if (this.isTrackingLoaded) {
       this.container.setAttribute("block-disabled", true);
       this.labelTrackingLoaded.hidden = false;
       this.blockButton.hidden = false;
-      this.actions.hidden = false;
     }
 
     if (this.isNoTracking) {
       this.labelNoTracking.hidden = false;
     }
   },
 
   disableForCurrentPage: function() {
diff --git a/browser/base/content/test/general/browser_trackingUI_1.js b/browser/base/content/test/general/browser_trackingUI_1.js
--- a/browser/base/content/test/general/browser_trackingUI_1.js
+++ b/browser/base/content/test/general/browser_trackingUI_1.js
@@ -20,32 +20,38 @@ registerCleanupFunction(function() {
   gBrowser.removeCurrentTab();
 });
 
 function testBenignPage() {
   // Make sure that the no tracking elements message appears
   ok (!TrackingProtection.labelNoTracking.hidden, "labelNoTracking is visible");
   ok (TrackingProtection.labelTrackingLoaded.hidden, "labelTrackingLoaded is hidden");
   ok (TrackingProtection.labelTrackingBlocked.hidden, "labelTrackingBlocked is hidden");
+  ok (TrackingProtection.blockButton.hidden, "blockButton is hidden");
+  ok (TrackingProtection.unblockButton.hidden, "unblockButton is hidden");
   ok (!TrackingProtection.container.hasAttribute("block-disabled"), "blocking not disabled");
 }
 
 function testTrackingPage() {
   // Make sure that the blocked tracking elements message appears
   ok (TrackingProtection.labelNoTracking.hidden, "labelNoTracking is hidden");
   ok (TrackingProtection.labelTrackingLoaded.hidden, "labelTrackingLoaded is hidden");
   ok (!TrackingProtection.labelTrackingBlocked.hidden, "labelTrackingBlocked is visible");
+  ok (TrackingProtection.blockButton.hidden, "blockButton is hidden");
+  ok (!TrackingProtection.unblockButton.hidden, "unblockButton is visible");
   ok (!TrackingProtection.container.hasAttribute("block-disabled"), "blocking not disabled");
 }
 
 function testTrackingPageWhitelisted() {
   // Make sure that the blocked tracking elements message appears
   ok (TrackingProtection.labelNoTracking.hidden, "labelNoTracking is hidden");
   ok (!TrackingProtection.labelTrackingLoaded.hidden, "labelTrackingLoaded is visible");
   ok (TrackingProtection.labelTrackingBlocked.hidden, "labelTrackingBlocked is hidden");
+  ok (!TrackingProtection.blockButton.hidden, "blockButton is visible");
+  ok (TrackingProtection.unblockButton.hidden, "unblockButton is hidden");
   ok (TrackingProtection.container.hasAttribute("block-disabled"), "blocking is disabled");
 }
 
 add_task(function* () {
   yield updateTrackingProtectionDatabase();
 
   let tab = gBrowser.selectedTab = gBrowser.addTab();
 
diff --git a/browser/components/controlcenter/content/panel.inc.xul b/browser/components/controlcenter/content/panel.inc.xul
--- a/browser/components/controlcenter/content/panel.inc.xul
+++ b/browser/components/controlcenter/content/panel.inc.xul
@@ -54,32 +54,30 @@
             &trackingProtection.detectedNotBlocked;
           </label>
           <label id="tracking-not-detected"
                  class="identity-popup-text tracking-protection-label"
                  crop="end">
             &trackingProtection.notDetected;
           </label>
 
-          <button id="tracking-actions"
-            type="menu" label="&trackingContentBlocked.options;"
-            sizetopopup="none">
-            <menupopup>
-              <menuitem
-                id="tracking-action-unblock"
-                label="&trackingProtection.unblock.label;"
-                accesskey="&trackingProtection.unblock.accesskey;"
-                oncommand="TrackingProtection.disableForCurrentPage();"/>
-              <menuitem
-                id="tracking-action-block"
-                label="&trackingProtection.block.label;"
-                accesskey="&trackingProtection.block.accesskey;"
-                oncommand="TrackingProtection.enableForCurrentPage();"/>
-            </menupopup>
-          </button>
+          <button
+            label="&trackingProtection.unblock.label;"
+            accesskey="&trackingProtection.unblock.accesskey;"
+            id="tracking-action-unblock"
+            hidden="true"
+            oncommand="TrackingProtection.disableForCurrentPage();"
+          />
+          <button
+            label="&trackingProtection.block.label;"
+            accesskey="&trackingProtection.block.accesskey;"
+            id="tracking-action-block"
+            hidden="true"
+            oncommand="TrackingProtection.enableForCurrentPage();"
+          />
         </vbox>
       </hbox>
 
       <!-- Permissions Section -->
       <hbox id="identity-popup-permissions" class="identity-popup-section">
         <vbox id="identity-popup-permissions-content" flex="1">
           <label class="identity-popup-text identity-popup-headline"
                  value="&identity.permissions;"/>
diff --git a/browser/themes/shared/controlcenter/panel.inc.css b/browser/themes/shared/controlcenter/panel.inc.css
--- a/browser/themes/shared/controlcenter/panel.inc.css
+++ b/browser/themes/shared/controlcenter/panel.inc.css
@@ -256,8 +256,31 @@
   white-space: normal;
   max-width: 260px;
   margin: 5px 0;
 }
 
 #tracking-actions {
   margin: 0;
 }
+/* Tracking protection buttons */
+/* XXX: This is copy/pasted from in-content prefs.. there's probably
+   a better button template to use */
+#tracking-protection-container {
+  --button-text-color: #333;
+  --button-background: #fbfbfb;
+  --button-border-color: #c1c1c1;
+}
+
+#tracking-protection-container button {
+  -moz-appearance: none;
+  margin: 5px 0;
+  height: 30px;
+  color: var(--button-text-color);
+  line-height: 20px;
+  border: 1px solid var(--button-border-color);
+  -moz-border-top-colors: none !important;
+  -moz-border-right-colors: none !important;
+  -moz-border-bottom-colors: none !important;
+  -moz-border-left-colors: none !important;
+  border-radius: 2px;
+  background-color: var(--button-background);
+}
