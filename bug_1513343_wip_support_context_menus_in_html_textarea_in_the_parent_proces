# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1551133551 28800
#      Mon Feb 25 14:25:51 2019 -0800
# Node ID d6c77bcf08cd1c7e35d8c58e5d81b0dc4acde426
# Parent  98c743692a8494dbd609abe2f96b8297f777cad6
Bug 1513343 - WIP Support context menus in html:textarea in the parent process

Differential Revision: https://phabricator.services.mozilla.com/D21092

diff --git a/security/manager/pki/resources/content/certViewer.xul b/security/manager/pki/resources/content/certViewer.xul
--- a/security/manager/pki/resources/content/certViewer.xul
+++ b/security/manager/pki/resources/content/certViewer.xul
@@ -16,16 +16,17 @@
   buttons="accept"
   onload="setWindowName();">
 
 
 <linkset>
   <html:link rel="localization" href="security/certificates/certManager.ftl"/>
 </linkset>
 
+<script type="application/javascript" src="chrome://global/content/globalOverlay.js"/>
 <script type="application/javascript" src="chrome://pippki/content/pippki.js"/>
 <script type="application/javascript"
         src="chrome://pippki/content/certViewer.js"/>
 <html:style>
   table {
     border-spacing: 0.5ch 2px;
   }
   td > textbox {
diff --git a/toolkit/content/globalOverlay.js b/toolkit/content/globalOverlay.js
--- a/toolkit/content/globalOverlay.js
+++ b/toolkit/content/globalOverlay.js
@@ -91,8 +91,63 @@ function goSetCommandEnabled(aID, aEnabl
 
   if (node) {
     if (aEnabled)
       node.removeAttribute("disabled");
     else
       node.setAttribute("disabled", "true");
   }
 }
+
+// Support context menus on html textareas in the parent process:
+window.addEventListener("contextmenu", (e) => {
+  if (e.target.ownerDocument != document || e.target.localName != "textarea") {
+    return;
+  }
+
+  let popup = document.getElementById("textbox-contextmenu");
+  if (!popup) {
+    let popupset = document.querySelector("popupset");
+    if (!popupset) {
+      popupset = document.createXULElement("popupset");
+      document.documentElement.appendChild(popupset);
+    }
+    MozXULElement.insertFTLIfNeeded("toolkit/main-window/editmenu.ftl");
+    popupset.appendChild(MozXULElement.parseXULToFragment(`
+      <menupopup id="textbox-contextmenu" class="textbox-contextmenu">
+        <menuitem data-l10n-id="editmenu-undo" cmd="cmd_undo"></menuitem>
+        <menuseparator></menuseparator>
+        <menuitem data-l10n-id="editmenu-cut" cmd="cmd_cut"></menuitem>
+        <menuitem data-l10n-id="editmenu-copy" cmd="cmd_copy"></menuitem>
+        <menuitem data-l10n-id="editmenu-paste" cmd="cmd_paste"></menuitem>
+        <menuitem data-l10n-id="editmenu-delete" cmd="cmd_delete"></menuitem>
+        <menuseparator></menuseparator>
+        <menuitem data-l10n-id="editmenu-select-all" cmd="cmd_selectAll"></menuitem>
+      </menupopup>
+    `));
+
+    popup = popupset.lastElementChild;
+    popup.addEventListener("popupshowing", (event) => {
+      let children = event.target.children;
+      for (let i = 0; i < children.length; i++) {
+        let command = children[i].getAttribute("cmd");
+        if (command) {
+          let controller = document.commandDispatcher.getControllerForCommand(command);
+          let enabled = controller.isCommandEnabled(command);
+          if (enabled)
+            children[i].removeAttribute("disabled");
+          else
+            children[i].setAttribute("disabled", "true");
+        }
+      }
+    });
+
+    popup.addEventListener("command", event => {
+      var cmd = event.originalTarget.getAttribute("cmd");
+      if (cmd) {
+        window.docShell.doCommand(cmd);
+        event.stopPropagation();
+      }
+    });
+  }
+
+  popup.openPopupAtScreen(e.screenX, e.screenY, true);
+});
