# HG changeset patch
# Parent 5b1dd5bc67645fdb9b2370f190f406896f4949fb
# User Brian Grinstead <bgrinstead@mozilla.com>
Bug 1115222 - Only call performTest once the appropriate load event is received for webconsole response header test;r=past

diff --git a/browser/devtools/webconsole/test/browser_webconsole_bug_599725_response_headers.js b/browser/devtools/webconsole/test/browser_webconsole_bug_599725_response_headers.js
--- a/browser/devtools/webconsole/test/browser_webconsole_bug_599725_response_headers.js
+++ b/browser/devtools/webconsole/test/browser_webconsole_bug_599725_response_headers.js
@@ -11,22 +11,16 @@
 const INIT_URI = "data:text/plain;charset=utf8,hello world";
 const TEST_URI = "http://example.com/browser/browser/devtools/webconsole/test/test-bug-599725-response-headers.sjs";
 
 let loads = 0;
 function performTest(aRequest, aConsole)
 {
   let deferred = promise.defer();
 
-  loads++;
-  ok(aRequest, "page load was logged");
-  if (loads != 2) {
-    return;
-  }
-
   let headers = null;
 
   function readHeader(aName)
   {
     for (let header of headers) {
       if (header.name == aName) {
         return header.value;
       }
@@ -59,16 +53,21 @@ function performTest(aRequest, aConsole)
   HUDService.lastFinishedRequest.callback = null;
 
   return deferred.promise;
 }
 
 function waitForRequest() {
   let deferred = promise.defer();
   HUDService.lastFinishedRequest.callback = (req, console) => {
+    loads++;
+    ok(req, "page load was logged");
+    if (loads != 2) {
+      return;
+    }
     performTest(req, console).then(deferred.resolve);
   };
   return deferred.promise;
 }
 
 let test = asyncTest(function* () {
   let { browser } = yield loadTab(INIT_URI);
 
