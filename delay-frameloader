# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  4262eaecb668c8e2cfb084d926bbb94e8f880e45

diff --git a/dom/base/nsIDocument.h b/dom/base/nsIDocument.h
--- a/dom/base/nsIDocument.h
+++ b/dom/base/nsIDocument.h
@@ -3687,16 +3687,17 @@ private:
   void ParseWidthAndHeightInMetaViewport(const nsAString& aWidthString,
                                          const nsAString& aHeightString,
                                          const nsAString& aScaleString);
 
   nsTArray<nsString> mL10nResources;
 
 public:
   bool IsThirdParty();
+  bool mDelayFrameLoaderInitialization: 1;
 
   bool IsScopedStyleEnabled();
 
   nsINode* GetServoRestyleRoot() const
   {
     return mServoRestyleRoot;
   }
 
@@ -4303,17 +4304,16 @@ protected:
   bool mDOMCompleteSet: 1;
   bool mAutoFocusFired: 1;
 
   bool mScrolledToRefAlready : 1;
   bool mChangeScrollPosWhenScrollingToRef : 1;
 
   bool mHasWarnedAboutBoxObjects: 1;
 
-  bool mDelayFrameLoaderInitialization: 1;
 
   bool mSynchronousDOMContentLoaded: 1;
 
   // Set to true when the document is possibly controlled by the ServiceWorker.
   // Used to prevent multiple requests to ServiceWorkerManager.
   bool mMaybeServiceWorkerControlled: 1;
 
   // These member variables cache information about the viewport so we don't
diff --git a/dom/xml/nsXMLContentSink.cpp b/dom/xml/nsXMLContentSink.cpp
--- a/dom/xml/nsXMLContentSink.cpp
+++ b/dom/xml/nsXMLContentSink.cpp
@@ -80,16 +80,17 @@ NS_NewXMLContentSink(nsIXMLContentSink**
                      nsIChannel* aChannel)
 {
   MOZ_ASSERT(nullptr != aResult, "null ptr");
   if (nullptr == aResult) {
     return NS_ERROR_NULL_POINTER;
   }
   RefPtr<nsXMLContentSink> it = new nsXMLContentSink();
 
+  aDoc->mDelayFrameLoaderInitialization = true;
   nsresult rv = it->Init(aDoc, aURI, aContainer, aChannel);
   NS_ENSURE_SUCCESS(rv, rv);
 
   it.forget(aResult);
   return NS_OK;
 }
 
 nsXMLContentSink::nsXMLContentSink()
@@ -325,16 +326,19 @@ nsXMLContentSink::DidBuildModel(bool aTe
         startLayout = false;
       }
     }
 
     if (startLayout) {
       StartLayout(false);
 
       ScrollToRef();
+
+      mDocument->mDelayFrameLoaderInitialization = false;
+
     }
 
     mDocument->RemoveObserver(this);
     mIsDocumentObserver = false;
 
     mDocument->EndLoad();
 
     DropParserAndPerfHint();
