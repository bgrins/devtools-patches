# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  9bc14f82bac8d239b67cf3f939629d933a3cba14
Bug XXX: Hide the bad content notification to test the animation

diff --git a/browser/base/content/browser-trackingprotection.js b/browser/base/content/browser-trackingprotection.js
--- a/browser/base/content/browser-trackingprotection.js
+++ b/browser/base/content/browser-trackingprotection.js
@@ -58,16 +58,20 @@ let TrackingProtection = {
   get enabledHistogram() {
     return Services.telemetry.getHistogramById("TRACKING_PROTECTION_ENABLED");
   },
 
   get eventsHistogram() {
     return Services.telemetry.getHistogramById("TRACKING_PROTECTION_EVENTS");
   },
 
+  get shieldHistogram() {
+    return Services.telemetry.getHistogramById("TRACKING_PROTECTION_SHIELD");
+  },
+
   onSecurityChange(state, isSimulated) {
     if (!this.enabled) {
       return;
     }
 
     // Only animate the shield if the event was not fired directly from
     // the tabbrowser (due to a browser change).
     if (isSimulated) {
@@ -94,16 +98,18 @@ let TrackingProtection = {
     } else if (isAllowing) {
       this.icon.setAttribute("tooltiptext", this.disabledTooltipText);
       this.icon.setAttribute("state", "loaded-tracking-content");
       this.content.setAttribute("state", "loaded-tracking-content");
     } else {
       this.icon.removeAttribute("tooltiptext");
       this.icon.removeAttribute("state");
       this.content.removeAttribute("state");
+      // We didn't show the shield
+      this.shieldHistogram.add(0);
     }
 
     // Telemetry for state change.
     this.eventsHistogram.add(0);
   },
 
   disableForCurrentPage() {
     // Convert document URI into the format used by
diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -6871,20 +6871,16 @@ var gIdentityHandler = {
     // - tracking content is blocked
     // - tracking content is not blocked
     if (state &
         (nsIWebProgressListener.STATE_BLOCKED_MIXED_ACTIVE_CONTENT |
          nsIWebProgressListener.STATE_LOADED_MIXED_ACTIVE_CONTENT  |
          nsIWebProgressListener.STATE_BLOCKED_TRACKING_CONTENT     |
          nsIWebProgressListener.STATE_LOADED_TRACKING_CONTENT)) {
       this.showBadContentDoorhanger(state);
-    } else if (TrackingProtection.enabled) {
-      // We didn't show the shield
-      Services.telemetry.getHistogramById("TRACKING_PROTECTION_SHIELD")
-        .add(0);
     }
   },
 
   showBadContentDoorhanger : function(state) {
     var currentNotification =
       PopupNotifications.getNotification("bad-content",
         gBrowser.selectedBrowser);
 
