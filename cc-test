# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  41a317361f33ef994d3835a4c3aa03a34ba53b44
Test work

diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -6815,16 +6815,18 @@ var gIdentityHandler = {
       // of the request to determine if it's loaded from the file system.
       let systemPrincipal = Services.scriptSecurityManager.getSystemPrincipal();
       let chanURI = Services.io.newChannelFromURI2(uri,
                                                    null,
                                                    systemPrincipal,
                                                    null,
                                                    Ci.nsILoadInfo.SEC_NORMAL,
                                                    Ci.nsIContentPolicy.TYPE_OTHER).URI;
+
+      console.log("Checking file for " + chanURI.spec);
       isFileURI = chanURI.schemeIs("file");
       isDataURI = chanURI.schemeIs("data");
     }
 
     if (isChromeUI) {
       this.setMode(this.IDENTITY_MODE_CHROMEUI);
     } else if (isFileURI) {
       this.setMode(this.IDENTITY_MODE_FILE_URI);
diff --git a/browser/base/content/test/general/browser_bug590206.js b/browser/base/content/test/general/browser_bug590206.js
--- a/browser/base/content/test/general/browser_bug590206.js
+++ b/browser/base/content/test/general/browser_bug590206.js
@@ -1,16 +1,33 @@
 /* Any copyright is dedicated to the Public Domain.
  * http://creativecommons.org/publicdomain/zero/1.0/
  */
 
 const DUMMY = "browser/browser/base/content/test/general/dummy_page.html";
 
 function loadNewTab(aURL, aCallback) {
-  BrowserTestUtils.openNewForegroundTab(gBrowser, aURL).then(aCallback);
+
+  gBrowser.selectedTab = gBrowser.addTab();
+  gBrowser.loadURI(aURL);
+
+  gBrowser.selectedBrowser.addEventListener("load", function() {
+    let spec = gBrowser.selectedBrowser.currentURI.spec;
+    if (spec != aURL &&
+        !spec.startsWith("file://")) {
+      return;
+    }
+
+    info ("Brian XXXXX: load recieved for " + aURL + " with spec: " + gBrowser.selectedBrowser.currentURI.spec);
+    gBrowser.selectedBrowser.removeEventListener("load", arguments.callee, true);
+
+    aCallback(gBrowser.selectedTab);
+  }, true);
+
+  // BrowserTestUtils.openNewForegroundTab(gBrowser, aURL).then(aCallback);
 }
 
 function getIdentityMode() {
   return document.getElementById("identity-box").className;
 }
 
 var TESTS = [
 function test_webpage() {
@@ -47,17 +64,23 @@ function test_blank() {
 
     runNextTest();
   });
 },
 
 function test_chrome() {
   let oldTab = gBrowser.selectedTab;
 
-  loadNewTab("chrome://mozapps/content/extensions/extensions.xul", function(aNewTab) {
+// var jar = getJar(croot);
+// if (jar) {
+//   var tmpdir = extractJarToTmp(jar);
+//   croot = 'file://' + tmpdir.path + '/';
+// }
+
+  loadNewTab("chrome://browser/content/browser.css", function(aNewTab) {
     is(getIdentityMode(), "fileURI", "Identity should be file");
 
     gBrowser.selectedTab = oldTab;
     is(getIdentityMode(), "unknownIdentity", "Identity should be unknown");
 
     gBrowser.selectedTab = aNewTab;
     is(getIdentityMode(), "fileURI", "Identity should be file");
 
