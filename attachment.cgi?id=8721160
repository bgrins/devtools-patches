# HG changeset patch
# User AJ Kerrigan <ajkerrigan@computer.org>
# Date 1455859977 18000
#      Fri Feb 19 00:32:57 2016 -0500
# Node ID f53d6f61b265ae80169b53badbaae3e97c50b37e
# Parent  d5daf10d3b74b04e8fa63c4e5429de8a0adf79f8
Bug 1099071 - Display error message in console for thrown empty string

diff --git a/devtools/client/webconsole/console-output.js b/devtools/client/webconsole/console-output.js
--- a/devtools/client/webconsole/console-output.js
+++ b/devtools/client/webconsole/console-output.js
@@ -1344,17 +1344,17 @@ Messages.Extended.prototype = Heritage.e
 Messages.JavaScriptEvalOutput = function(evalResponse, errorMessage)
 {
   let severity = "log", msg, quoteStrings = true;
 
   // Store also the response packet from the back end. It might
   // be useful to extensions customizing the console output.
   this.response = evalResponse;
 
-  if (errorMessage) {
+  if (typeof(errorMessage) !== "undefined") {
     severity = "error";
     msg = errorMessage;
     quoteStrings = false;
   } else {
     msg = evalResponse.result;
   }
 
   let options = {
diff --git a/devtools/client/webconsole/webconsole.js b/devtools/client/webconsole/webconsole.js
--- a/devtools/client/webconsole/webconsole.js
+++ b/devtools/client/webconsole/webconsole.js
@@ -3110,17 +3110,17 @@ JSTerm.prototype = {
     if (!this.hud) {
       return;
     }
     if (response.error) {
       Cu.reportError("Evaluation error " + response.error + ": " +
                      response.message);
       return;
     }
-    let errorMessage = response.exceptionMessage;
+    let errorMessage = typeof(response.exception) === "string" ? new Error(response.exceptionMessage).toString() : response.exceptionMessage;
     let result = response.result;
     let helperResult = response.helperResult;
     let helperHasRawOutput = !!(helperResult || {}).rawOutput;
 
     if (helperResult && helperResult.type) {
       switch (helperResult.type) {
         case "clearOutput":
           this.clearOutput();
