# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  014eb2cf45aa004415cd589512df570792e0a128
Bug XXX - Part 2 - Stop using document.persist

diff --git a/browser/base/content/browser-sidebar.js b/browser/base/content/browser-sidebar.js
--- a/browser/base/content/browser-sidebar.js
+++ b/browser/base/content/browser-sidebar.js
@@ -70,32 +70,32 @@ var SidebarUI = {
     this._inited = true;
   },
 
   uninit() {
     // If this is the last browser window, persist various values that should be
     // remembered for after a restart / reopening a browser window.
     let enumerator = Services.wm.getEnumerator("navigator:browser");
     if (!enumerator.hasMoreElements()) {
-      document.persist("sidebar-box", "sidebarcommand");
+      let xulStore = Services.xulStore;
+      xulStore.setValue(document.documentURI, "sidebar-box", "sidebarcommand");
 
-      let xulStore = Services.xulStore;
       if (this._box.hasAttribute("positionend")) {
-        document.persist("sidebar-box", "positionend");
+        xulStore.setValue(document.documentURI, "sidebar-box", "positionend");
       } else {
         xulStore.removeValue(document.documentURI, "sidebar-box", "positionend");
       }
       if (this._box.hasAttribute("checked")) {
-        document.persist("sidebar-box", "checked");
+        xulStore.setValue(document.documentURI, "sidebar-box", "checked");
       } else {
         xulStore.removeValue(document.documentURI, "sidebar-box", "checked");
       }
 
-      document.persist("sidebar-box", "width");
-      document.persist("sidebar-title", "value");
+      xulStore.setValue(document.documentURI, "sidebar-box", "width");
+      xulStore.setValue(document.documentURI, "sidebar-title", "value");
     }
   },
 
   /**
    * Opens the switcher panel if it's closed, or closes it if it's open.
    */
   toggleSwitcherPanel() {
     if (this._switcherPanel.state == "open" || this._switcherPanel.state == "showing") {
diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -5651,17 +5651,17 @@ function setToolbarVisibility(toolbar, i
       Services.prefs.setBoolPref("ui.key.menuAccessKeyFocuses", !isVisible);
     }
   } else {
     hidingAttribute = "collapsed";
   }
 
   toolbar.setAttribute(hidingAttribute, !isVisible);
   if (persist) {
-    document.persist(toolbar.id, hidingAttribute);
+    Services.xulStore.setValue(document.documentURI, toolbar.id, hidingAttribute);
   }
 
   let eventParams = {
     detail: {
       visible: isVisible
     },
     bubbles: true
   };
diff --git a/browser/components/customizableui/CustomizeMode.jsm b/browser/components/customizableui/CustomizeMode.jsm
--- a/browser/components/customizableui/CustomizeMode.jsm
+++ b/browser/components/customizableui/CustomizeMode.jsm
@@ -1069,17 +1069,17 @@ CustomizeMode.prototype = {
     let document = this.document;
     let toolbars = document.querySelectorAll("toolbar[customizable='true'][currentset]");
     for (let toolbar of toolbars) {
       if (aSetBeforePersisting) {
         let set = toolbar.currentSet;
         toolbar.setAttribute("currentset", set);
       }
       // Persist the currentset attribute directly on hardcoded toolbars.
-      document.persist(toolbar.id, "currentset");
+      Services.xulStore.setValue(document.documentURI, toolbar.id, "currentset");
     }
   },
 
   reset() {
     this.resetting = true;
     // Disable the reset button temporarily while resetting:
     let btn = this.$("customization-reset-button");
     btn.disabled = true;
diff --git a/browser/components/nsBrowserGlue.js b/browser/components/nsBrowserGlue.js
--- a/browser/components/nsBrowserGlue.js
+++ b/browser/components/nsBrowserGlue.js
@@ -7,17 +7,17 @@ const XULNS = "http://www.mozilla.org/ke
 ChromeUtils.import("resource://gre/modules/XPCOMUtils.jsm");
 ChromeUtils.import("resource://gre/modules/Services.jsm");
 ChromeUtils.import("resource://gre/modules/AppConstants.jsm");
 
 (function earlyBlankFirstPaint() {
   if (!Services.prefs.getBoolPref("browser.startup.blankWindow", false))
     return;
 
-  let store = Services.xulStore
+  let store = Services.xulStore;
   let getValue = attr =>
     store.getValue("chrome://browser/content/browser.xul", "main-window", attr);
   let width = getValue("width");
   let height = getValue("height");
 
   // The clean profile case isn't handled yet. Return early for now.
   if (!width || !height)
     return;
diff --git a/browser/components/shell/content/setDesktopBackground.js b/browser/components/shell/content/setDesktopBackground.js
--- a/browser/components/shell/content/setDesktopBackground.js
+++ b/browser/components/shell/content/setDesktopBackground.js
@@ -69,17 +69,17 @@ var gSetBackground = {
 
       document.getElementById("showDesktopPreferences").hidden = true;
     }
     this.updatePosition();
   },
 
   setDesktopBackground() {
     if (AppConstants.platform != "macosx") {
-      document.persist("menuPosition", "value");
+      Services.xulStore.setValue(document.documentURI, "menuPosition", "value");
       this._shell.desktopBackgroundColor = this._hexStringToLong(this._backgroundColor);
     } else {
       Services.obs.addObserver(this, "shell:desktop-background-changed");
 
       var bundle = document.getElementById("backgroundBundle");
       var setDesktopBackground = document.getElementById("setDesktopBackground");
       setDesktopBackground.disabled = true;
       setDesktopBackground.label = bundle.getString("DesktopBackgroundDownloading");
diff --git a/toolkit/components/xulstore/XULStore.js b/toolkit/components/xulstore/XULStore.js
--- a/toolkit/components/xulstore/XULStore.js
+++ b/toolkit/components/xulstore/XULStore.js
@@ -124,16 +124,25 @@ XULStore.prototype = {
 
     // Don't write the file more than once every 30 seconds.
     this._needsSaving = true;
     this._writeTimer.init(this, WRITE_DELAY_MS, Ci.nsITimer.TYPE_ONE_SHOT);
   },
 
   /* ---------- interface implementation ---------- */
 
+  persist(node, attr) {
+    if (!node.id) {
+      throw new Error("Node without ID passed into persist()");
+    }
+    const uri = node.ownerDocument.documentURI;
+    const value = node.getAttribute(attr);
+    this.setValue(uri, node.id, attr, value);
+  }
+
   setValue(docURI, id, attr, value) {
     this.log("Saving " + attr + "=" + value + " for id=" + id + ", doc=" + docURI);
 
     if (!this._saveAllowed) {
       Services.console.logStringMessage("XULStore: Changes after profile-before-change are ignored!");
       return;
     }
 
diff --git a/toolkit/components/xulstore/nsIXULStore.idl b/toolkit/components/xulstore/nsIXULStore.idl
--- a/toolkit/components/xulstore/nsIXULStore.idl
+++ b/toolkit/components/xulstore/nsIXULStore.idl
@@ -15,22 +15,20 @@ interface nsIStringEnumerator;
  */
 [scriptable, uuid(987c4b35-c426-4dd7-ad49-3c9fa4c65d20)]
 
 interface nsIXULStore: nsISupports
 {
   /**
    * Sets a value in the store.
    *
-   * @param doc - document URI
-   * @param id - identifier of the node
+   * @param node - DOM node
    * @param attr - attribute to store
-   * @param value - value of the attribute
    */
-  void setValue(in AString doc, in AString id, in AString attr, in AString value);
+  void persist(in Node aNode, in AString attr);
 
   /**
    * Returns true if the store contains a value for attr.
    *
    * @param doc - URI of the document
    * @param id - identifier of the node
    * @param attr - attribute
    */
diff --git a/toolkit/components/xulstore/tests/chrome/window_persistence.xul b/toolkit/components/xulstore/tests/chrome/window_persistence.xul
--- a/toolkit/components/xulstore/tests/chrome/window_persistence.xul
+++ b/toolkit/components/xulstore/tests/chrome/window_persistence.xul
@@ -24,20 +24,20 @@ function opened()
 function runTest()
 {
   var firstRun = window.arguments[0];
   if (firstRun) {
     document.getElementById("button1").setAttribute("value", "Pressed");
     document.getElementById("button2").removeAttribute("value");
 
     document.getElementById("button2").setAttribute("foo", "bar");
-    document.persist("button2", "foo");
+    XULStore.setValue(URI, "button2", "foo");
     is(XULStore.getValue(URI, "button2", "foo"), "bar", "attribute persisted")
     document.getElementById("button2").removeAttribute("foo");
-    document.persist("button2", "foo");
+    XULStore.setValue(URI, "button2", "foo");
     is(XULStore.hasValue(URI, "button2", "foo"), false, "attribute removed")
 
     window.close();
     window.opener.windowOpened();
   }
   else {
     is(document.getElementById("button1").getAttribute("value"), "Pressed",
        "Attribute set");
diff --git a/toolkit/mozapps/extensions/test/browser/browser_bug679604.js b/toolkit/mozapps/extensions/test/browser/browser_bug679604.js
--- a/toolkit/mozapps/extensions/test/browser/browser_bug679604.js
+++ b/toolkit/mozapps/extensions/test/browser/browser_bug679604.js
@@ -6,17 +6,17 @@
 // Firefox doesn't break the add-ons manager when that category doesn't exist
 
 async function test() {
   waitForExplicitFinish();
 
   let aWindow = await open_manager(null);
   var categories = aWindow.document.getElementById("categories");
   categories.setAttribute("last-selected", "foo");
-  aWindow.document.persist("categories", "last-selected");
+  Services.xulStore.setValue(document.documentURI, "categories", "last-selected");
 
   await close_manager(aWindow);
   Services.prefs.clearUserPref(PREF_UI_LASTCATEGORY);
 
   aWindow = await open_manager(null);
   is(new CategoryUtilities(aWindow).selectedCategory, "discover",
      "Should have loaded the right view");
 
