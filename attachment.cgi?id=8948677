# HG changeset patch
# User manikishan <manikishanghantasala@gmail.com>
# Date 1517637745 -19800
#      Sat Feb 03 11:32:25 2018 +0530
# Node ID eefdd71ac9e7735639d23a2a8b513d9fd5ed0c6c
# Parent  714a94df1a99b933a4eef2149819d2af319a1ed5
Bug 1431050 - Replace NS_ASSERT with conditional exceptions / console.assert and remove the debug.js module;r=mak

console.assert keeps the same semantics as NS_ASSERT in that it doesn't throw an exception,
but a lot of the places code was using it in a way that would be better served by throwing
an exception when the condition is false.

MozReview-Commit-ID: DEF5HSfYO36

diff --git a/browser/base/content/tabbrowser.js b/browser/base/content/tabbrowser.js
--- a/browser/base/content/tabbrowser.js
+++ b/browser/base/content/tabbrowser.js
@@ -2693,17 +2693,17 @@ class TabBrowser {
 
     aTab.style.maxWidth = ""; // ensure that fade-out transition happens
     aTab.removeAttribute("fadein");
     aTab.removeAttribute("bursting");
 
     setTimeout(function(tab, tabbrowser) {
       if (tab.parentNode &&
           window.getComputedStyle(tab).maxWidth == "0.1px") {
-        NS_ASSERT(false, "Giving up waiting for the tab closing animation to finish (bug 608589)");
+        console.assert(false, "Giving up waiting for the tab closing animation to finish (bug 608589)");
         tabbrowser._endRemoveTab(tab);
       }
     }, 3000, aTab, this);
   }
 
   _hasBeforeUnload(aTab) {
     let browser = aTab.linkedBrowser;
     return browser.isRemoteBrowser && browser.frameLoader &&
diff --git a/browser/base/content/test/performance/browser_startup_content.js b/browser/base/content/test/performance/browser_startup_content.js
--- a/browser/base/content/test/performance/browser_startup_content.js
+++ b/browser/base/content/test/performance/browser_startup_content.js
@@ -23,17 +23,16 @@ const blacklist = {
     "TelemetryStartup.js",
   ]),
   modules: new Set([
     "resource:///modules/ContentWebRTC.jsm",
     "resource://gre/modules/InlineSpellChecker.jsm",
     "resource://gre/modules/InlineSpellCheckerContent.jsm",
     "resource://gre/modules/Promise.jsm",
     "resource://gre/modules/Task.jsm",
-    "resource://gre/modules/debug.js",
     "resource://gre/modules/osfile.jsm",
   ]),
   services: new Set([
     "@mozilla.org/base/telemetry-startup;1",
     "@mozilla.org/push/Service;1",
   ])
 };
 
diff --git a/browser/components/feeds/FeedConverter.js b/browser/components/feeds/FeedConverter.js
--- a/browser/components/feeds/FeedConverter.js
+++ b/browser/components/feeds/FeedConverter.js
@@ -1,15 +1,14 @@
 /* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 ChromeUtils.import("resource://gre/modules/XPCOMUtils.jsm");
-ChromeUtils.import("resource://gre/modules/debug.js");
 ChromeUtils.import("resource://gre/modules/Services.jsm");
 
 function LOG(str) {
   dump("*** " + str + "\n");
 }
 
 const FS_CONTRACTID = "@mozilla.org/browser/feeds/result-service;1";
 const FPH_CONTRACTID = "@mozilla.org/network/protocol;1?name=feed";
@@ -386,42 +385,46 @@ FeedResultService.prototype = {
       break;
     }
   },
 
   /**
    * See nsIFeedResultService.idl
    */
   addFeedResult(feedResult) {
-    NS_ASSERT(feedResult.uri != null, "null URI!");
-    NS_ASSERT(feedResult.uri != null, "null feedResult!");
+    if (feedResult.uri == null)
+      throw new Error("null URI!");
+    if (feedResult.uri == null)
+      throw new Error("null feedResult!");
     let spec = feedResult.uri.spec;
     if (!this._results[spec])
       this._results[spec] = [];
     this._results[spec].push(feedResult);
   },
 
   /**
    * See nsIFeedResultService.idl
    */
   getFeedResult(uri) {
-    NS_ASSERT(uri != null, "null URI!");
+    if (uri == null)
+      throw new Error("null URI!");
     let resultList = this._results[uri.spec];
     for (let result of resultList) {
       if (result.uri == uri)
         return result;
     }
     return null;
   },
 
   /**
    * See nsIFeedResultService.idl
    */
   removeFeedResult(uri) {
-    NS_ASSERT(uri != null, "null URI!");
+    if (uri == null)
+      throw new Error("null URI!");
     let resultList = this._results[uri.spec];
     if (!resultList)
       return;
     let deletions = 0;
     for (let i = 0; i < resultList.length; ++i) {
       if (resultList[i].uri == uri) {
         delete resultList[i];
         ++deletions;
diff --git a/browser/components/places/content/bookmarkProperties.js b/browser/components/places/content/bookmarkProperties.js
--- a/browser/components/places/content/bookmarkProperties.js
+++ b/browser/components/places/content/bookmarkProperties.js
@@ -127,17 +127,18 @@ var BookmarkPropertiesPanel = {
   _getDialogTitle: function BPP__getDialogTitle() {
     if (this._action == ACTION_ADD) {
       if (this._itemType == BOOKMARK_ITEM)
         return this._strings.getString("dialogTitleAddBookmark");
       if (this._itemType == LIVEMARK_CONTAINER)
         return this._strings.getString("dialogTitleAddLivemark");
 
       // add folder
-      NS_ASSERT(this._itemType == BOOKMARK_FOLDER, "Unknown item type");
+      if (this._itemType != BOOKMARK_FOLDER)
+        throw new Error("Unknown item type");
       if (this._URIs.length)
         return this._strings.getString("dialogTitleAddMulti");
 
       return this._strings.getString("dialogTitleAddFolder");
     }
     if (this._action == ACTION_EDIT) {
       return this._strings.getFormattedString("dialogTitleEdit", [this._title]);
     }
@@ -147,17 +148,18 @@ var BookmarkPropertiesPanel = {
   /**
    * Determines the initial data for the item edited or added by this dialog
    */
   async _determineItemInfo() {
     let dialogInfo = window.arguments[0];
     this._action = dialogInfo.action == "add" ? ACTION_ADD : ACTION_EDIT;
     this._hiddenRows = dialogInfo.hiddenRows ? dialogInfo.hiddenRows : [];
     if (this._action == ACTION_ADD) {
-      NS_ASSERT("type" in dialogInfo, "missing type property for add action");
+      if (!("type" in dialogInfo))
+        throw new Error("missing type property for add action");
 
       if ("title" in dialogInfo)
         this._title = dialogInfo.title;
 
       if ("defaultInsertionPoint" in dialogInfo) {
         this._defaultInsertionPoint = dialogInfo.defaultInsertionPoint;
       } else {
         this._defaultInsertionPoint =
@@ -166,18 +168,18 @@ var BookmarkPropertiesPanel = {
             parentGuid: PlacesUtils.bookmarks.menuGuid
           });
       }
 
       switch (dialogInfo.type) {
         case "bookmark":
           this._itemType = BOOKMARK_ITEM;
           if ("uri" in dialogInfo) {
-            NS_ASSERT(dialogInfo.uri instanceof Ci.nsIURI,
-                      "uri property should be a uri object");
+            if (!(dialogInfo.uri instanceof Ci.nsIURI))
+              throw new Error("uri property should be a uri object");
             this._uri = dialogInfo.uri;
             if (typeof(this._title) != "string") {
               this._title = await PlacesUtils.history.fetch(this._uri) ||
                             this._uri.spec;
             }
           } else {
             this._uri = Services.io.newURI("about:blank");
             this._title = this._strings.getString("newBookmarkDefault");
diff --git a/browser/components/places/content/controller.js b/browser/components/places/content/controller.js
--- a/browser/components/places/content/controller.js
+++ b/browser/components/places/content/controller.js
@@ -659,25 +659,16 @@ PlacesController.prototype = {
 
     PlacesUIUtils.showBookmarkDialog({ action: "edit",
                                        node,
                                        hiddenRows: [ "folderPicker" ]
                                      }, window.top);
   },
 
   /**
-   * This method can be run on a URI parameter to ensure that it didn't
-   * receive a string instead of an nsIURI object.
-   */
-  _assertURINotString: function PC__assertURINotString(value) {
-    NS_ASSERT((typeof(value) == "object") && !(value instanceof String),
-           "This method should be passed a URI as a nsIURI object, not as a string.");
-  },
-
-  /**
    * Reloads the selected livemark if any.
    */
   reloadSelectedLivemark: function PC_reloadSelectedLivemark() {
     var selectedNode = this._view.selectedNode;
     if (selectedNode) {
       let itemId = selectedNode.itemId;
       PlacesUtils.livemarks.getLivemark({ id: itemId })
         .then(aLivemark => {
@@ -799,17 +790,18 @@ PlacesController.prototype = {
    *          An array of nodes to remove. Should all be adjacent.
    * @param   [out] transactions
    *          An array of transactions.
    * @param   [optional] removedFolders
    *          An array of folder nodes that have already been removed.
    * @return {Integer} The total number of items affected.
    */
   async _removeRange(range, transactions, removedFolders) {
-    NS_ASSERT(transactions instanceof Array, "Must pass a transactions array");
+    if (!(transactions instanceof Array))
+      throw new Error("Must pass a transactions array");
     if (!removedFolders)
       removedFolders = [];
 
     let bmGuidsToRemove = [];
     let totalItems = 0;
 
     for (var i = 0; i < range.length; ++i) {
       var node = range[i];
@@ -872,17 +864,17 @@ PlacesController.prototype = {
     return totalItems;
   },
 
   /**
    * Removes the set of selected ranges from bookmarks.
    * @param   txnName
    *          See |remove|.
    */
-  async _removeRowsFromBookmarks(txnName) {
+  async _removeRowsFromBookmarks() {
     let ranges = this._view.removableSelectionRanges;
     let transactions = [];
     let removedFolders = [];
     let totalItems = 0;
 
     for (let range of ranges) {
       totalItems += await this._removeRange(range, transactions, removedFolders);
     }
@@ -927,53 +919,48 @@ PlacesController.prototype = {
     if (PlacesUtils.nodeIsHost(aContainerNode)) {
       // Site container.
       PlacesUtils.history.removePagesFromHost(aContainerNode.title, true);
     } else if (PlacesUtils.nodeIsDay(aContainerNode)) {
       // Day container.
       let query = aContainerNode.getQueries()[0];
       let beginTime = query.beginTime;
       let endTime = query.endTime;
-      NS_ASSERT(query && beginTime && endTime,
-                "A valid date container query should exist!");
+      if (!query || !beginTime || !endTime)
+        throw new Error("A valid date container query should exist!");
       // We want to exclude beginTime from the removal because
       // removePagesByTimeframe includes both extremes, while date containers
       // exclude the lower extreme.  So, if we would not exclude it, we would
       // end up removing more history than requested.
       PlacesUtils.history.removePagesByTimeframe(beginTime + 1, endTime);
     }
   },
 
   /**
    * Removes the selection
-   * @param   aTxnName
-   *          A name for the transaction if this is being performed
-   *          as part of another operation.
    */
-  async remove(aTxnName) {
+  async remove() {
     if (!this._hasRemovableSelection())
       return;
 
-    NS_ASSERT(aTxnName !== undefined, "Must supply Transaction Name");
-
     var root = this._view.result.root;
 
     if (PlacesUtils.nodeIsFolder(root)) {
-      await this._removeRowsFromBookmarks(aTxnName);
+      await this._removeRowsFromBookmarks();
     } else if (PlacesUtils.nodeIsQuery(root)) {
       var queryType = PlacesUtils.asQuery(root).queryOptions.queryType;
       if (queryType == Ci.nsINavHistoryQueryOptions.QUERY_TYPE_BOOKMARKS) {
-        await this._removeRowsFromBookmarks(aTxnName);
+        await this._removeRowsFromBookmarks();
       } else if (queryType == Ci.nsINavHistoryQueryOptions.QUERY_TYPE_HISTORY) {
         this._removeRowsFromHistory();
       } else {
-        NS_ASSERT(false, "implement support for QUERY_TYPE_UNIFIED");
+        throw new Error("implement support for QUERY_TYPE_UNIFIED");
       }
     } else
-      NS_ASSERT(false, "unexpected root");
+      throw new Error("unexpected root");
   },
 
   /**
    * Fills a DataTransfer object with the content of the selection that can be
    * dropped elsewhere.
    * @param   aEvent
    *          The dragstart event.
    */
@@ -1492,17 +1479,18 @@ var PlacesControllerDragHelper = {
   /**
    * Checks if we can insert into a container.
    * @param   aContainer
    *          The container were we are want to drop
    * @param   aView
    *          The view generating the request
    */
   disallowInsertion(aContainer, aView) {
-    NS_ASSERT(aContainer, "empty container");
+    if (!aContainer)
+      throw new Error("empty container");
     // Allow dropping into Tag containers and editable folders.
     return !PlacesUtils.nodeIsTagQuery(aContainer) &&
            (!PlacesUtils.nodeIsFolder(aContainer) ||
             PlacesUIUtils.isFolderReadOnly(aContainer, aView));
   }
 };
 
 
diff --git a/browser/components/places/content/places.js b/browser/components/places/content/places.js
--- a/browser/components/places/content/places.js
+++ b/browser/components/places/content/places.js
@@ -997,31 +997,31 @@ var ViewMenu = {
    *          item only.
    *          Must be contained by popup. Can be null (in which case all
    *          items until the end of the popup will be removed). Ignored
    *          if startID is null.
    * @returns The element for the caller to insert new items before,
    *          null if the caller should just append to the popup.
    */
   _clean: function VM__clean(popup, startID, endID) {
-    if (endID)
-      NS_ASSERT(startID, "meaningless to have valid endID and null startID");
+    if (endID && !startID)
+      throw new Error("meaningless to have valid endID and null startID");
     if (startID) {
       var startElement = document.getElementById(startID);
-      NS_ASSERT(startElement.parentNode ==
-                popup, "startElement is not in popup");
-      NS_ASSERT(startElement,
-                "startID does not correspond to an existing element");
+      if (startElement.parentNode != popup)
+        throw new Error("startElement is not in popup");
+      if (!startElement)
+        throw new Error("startID does not correspond to an existing element");
       var endElement = null;
       if (endID) {
         endElement = document.getElementById(endID);
-        NS_ASSERT(endElement.parentNode == popup,
-                  "endElement is not in popup");
-        NS_ASSERT(endElement,
-                  "endID does not correspond to an existing element");
+        if (endElement.parentNode != popup)
+          throw new Error("endElement is not in popup");
+        if (!endElement)
+          throw new Error("endID does not correspond to an existing element");
       }
       while (startElement.nextSibling != endElement)
         popup.removeChild(startElement.nextSibling);
       return endElement;
     }
     while (popup.hasChildNodes()) {
       popup.firstChild.remove();
     }
diff --git a/browser/components/places/content/tree.xml b/browser/components/places/content/tree.xml
--- a/browser/components/places/content/tree.xml
+++ b/browser/components/places/content/tree.xml
@@ -204,17 +204,17 @@
 
             if (!wasOpen)
               container.containerOpen = false;
 
             return null;
           }
 
           var container = this.result.root;
-          NS_ASSERT(container, "No result, cannot select place URI!");
+          console.assert(container, "No result, cannot select place URI!");
           if (!container)
             return;
 
           var child = findNode(container, []);
           if (child)
             this.selectNode(child);
           else {
             // If the specified child could not be located, clear the selection
@@ -474,17 +474,17 @@
       <method name="_getInsertionPoint">
         <parameter name="index"/>
         <parameter name="orientation"/>
         <body><![CDATA[
           var result = this.result;
           var resultview = this.view;
           var container = result.root;
           var dropNearNode = null;
-          NS_ASSERT(container, "null container");
+          console.assert(container, "null container");
           // When there's no selection, assume the container is the container
           // the view is populated from (i.e. the result's itemId).
           if (index != -1) {
             var lastSelected = resultview.nodeForTreeIndex(index);
             if (resultview.isContainer(index) && orientation == Ci.nsITreeView.DROP_ON) {
               // If the last selected item is an open container, append _into_
               // it, rather than insert adjacent to it.
               container = lastSelected;
diff --git a/browser/components/places/content/treeView.js b/browser/components/places/content/treeView.js
--- a/browser/components/places/content/treeView.js
+++ b/browser/components/places/content/treeView.js
@@ -646,17 +646,18 @@ PlacesTreeView.prototype = {
       case Ci.nsINavHistoryQueryOptions.SORT_BY_TAGS_DESCENDING:
         return [this.COLUMN_TYPE_TAGS, true];
     }
     return [this.COLUMN_TYPE_UNKNOWN, false];
   },
 
   // nsINavHistoryResultObserver
   nodeInserted: function PTV_nodeInserted(aParentNode, aNode, aNewIndex) {
-    NS_ASSERT(this._result, "Got a notification but have no result!");
+    if (!this._result)
+      throw new Error("Got a notification but have no result!");
     if (!this._tree || !this._result)
       return;
 
     // Bail out for hidden separators.
     if (PlacesUtils.nodeIsSeparator(aNode) && this.isSorted())
       return;
 
     let parentRow;
@@ -720,17 +721,18 @@ PlacesTreeView.prototype = {
    * removed but the node it is collapsed with is not being removed (this then
    * just swap out the removee with its collapsing partner). The only time
    * when we really remove things is when deleting URIs, which will apply to
    * all collapsees. This function is called sometimes when resorting items.
    * However, we won't do this when sorted by date because dates will never
    * change for visits, and date sorting is the only time things are collapsed.
    */
   nodeRemoved: function PTV_nodeRemoved(aParentNode, aNode, aOldIndex) {
-    NS_ASSERT(this._result, "Got a notification but have no result!");
+    if (!this._result)
+      throw new Error("Got a notification but have no result!");
     if (!this._tree || !this._result)
       return;
 
     // XXX bug 517701: We don't know what to do when the root node is removed.
     if (aNode == this._rootNode)
       throw Cr.NS_ERROR_NOT_IMPLEMENTED;
 
     // Bail out for hidden separators.
@@ -775,17 +777,18 @@ PlacesTreeView.prototype = {
     // Restore selection.
     let rowToSelect = Math.min(oldRow, this._rows.length - 1);
     if (rowToSelect != -1)
       this.selection.rangedSelect(rowToSelect, rowToSelect, true);
   },
 
   nodeMoved:
   function PTV_nodeMoved(aNode, aOldParent, aOldIndex, aNewParent, aNewIndex) {
-    NS_ASSERT(this._result, "Got a notification but have no result!");
+    if (!this._result)
+      throw new Error("Got a notification but have no result!");
     if (!this._tree || !this._result)
       return;
 
     // Bail out for hidden separators.
     if (PlacesUtils.nodeIsSeparator(aNode) && this.isSorted())
       return;
 
     // Note that at this point the node has already been moved by the backend,
@@ -824,17 +827,18 @@ PlacesTreeView.prototype = {
     if (nodesToReselect.length > 0) {
       this._restoreSelection(nodesToReselect, aNewParent);
       this.selection.selectEventsSuppressed = false;
     }
   },
 
   _invalidateCellValue: function PTV__invalidateCellValue(aNode,
                                                           aColumnType) {
-    NS_ASSERT(this._result, "Got a notification but have no result!");
+    if (!this._result)
+      throw new Error("Got a notification but have no result!");
     if (!this._tree || !this._result)
       return;
 
     // Nothing to do for the root node.
     if (aNode == this._rootNode)
       return;
 
     let row = this._getRowForNode(aNode);
@@ -971,17 +975,18 @@ PlacesTreeView.prototype = {
               aLivemark.unregisterForUpdates(aNode);
             }
           }, () => undefined);
       }
     }
   },
 
   invalidateContainer: function PTV_invalidateContainer(aContainer) {
-    NS_ASSERT(this._result, "Need to have a result to update");
+    if (!this._result)
+      throw new Error("Need to have a result to update");
     if (!this._tree)
       return;
 
     // If we are currently editing, don't invalidate the container until we
     // finish.
     if (this._tree.element.getAttribute("editing")) {
       if (!this._editingObservers) {
         this._editingObservers = new Map();
diff --git a/browser/components/preferences/selectBookmark.js b/browser/components/preferences/selectBookmark.js
--- a/browser/components/preferences/selectBookmark.js
+++ b/browser/components/preferences/selectBookmark.js
@@ -53,18 +53,18 @@ var SelectBookmarkDialog = {
   },
 
   /**
    * User accepts their selection. Set all the selected URLs or the contents
    * of the selected folder as the list of homepages.
    */
   accept: function SBD_accept() {
     var bookmarks = document.getElementById("bookmarks");
-    NS_ASSERT(bookmarks.hasSelection,
-              "Should not be able to accept dialog if there is no selected URL!");
+    if (!bookmarks.hasSelection)
+      throw new Error("Should not be able to accept dialog if there is no selected URL!");
     var urls = [];
     var names = [];
     var selectedNode = bookmarks.selectedNode;
     if (PlacesUtils.nodeIsFolder(selectedNode)) {
       var contents = PlacesUtils.getFolderContents(selectedNode.itemId).root;
       var cc = contents.childCount;
       for (var i = 0; i < cc; ++i) {
         var node = contents.getChild(i);
diff --git a/toolkit/components/search/SearchSuggestionController.jsm b/toolkit/components/search/SearchSuggestionController.jsm
--- a/toolkit/components/search/SearchSuggestionController.jsm
+++ b/toolkit/components/search/SearchSuggestionController.jsm
@@ -4,17 +4,16 @@
 
 "use strict";
 
 var EXPORTED_SYMBOLS = ["SearchSuggestionController"];
 
 ChromeUtils.import("resource://gre/modules/XPCOMUtils.jsm");
 ChromeUtils.import("resource://gre/modules/Services.jsm");
 ChromeUtils.import("resource://gre/modules/PromiseUtils.jsm");
-ChromeUtils.defineModuleGetter(this, "NS_ASSERT", "resource://gre/modules/debug.js");
 
 Cu.importGlobalProperties(["XMLHttpRequest"]);
 
 const SEARCH_RESPONSE_SUGGESTION_JSON = "application/x-suggestions+json";
 const DEFAULT_FORM_HISTORY_PARAM      = "searchbar-history";
 const HTTP_OK            = 200;
 const BROWSER_SUGGEST_PREF = "browser.search.suggest.enabled";
 const REMOTE_TIMEOUT_PREF = "browser.search.suggest.timeout";
diff --git a/toolkit/components/search/nsSearchService.js b/toolkit/components/search/nsSearchService.js
--- a/toolkit/components/search/nsSearchService.js
+++ b/toolkit/components/search/nsSearchService.js
@@ -1,16 +1,15 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 ChromeUtils.import("resource://gre/modules/XPCOMUtils.jsm");
 ChromeUtils.import("resource://gre/modules/Services.jsm");
 ChromeUtils.import("resource://gre/modules/PromiseUtils.jsm");
-ChromeUtils.import("resource://gre/modules/debug.js");
 ChromeUtils.import("resource://gre/modules/AppConstants.jsm");
 
 XPCOMUtils.defineLazyModuleGetters(this, {
   AsyncShutdown: "resource://gre/modules/AsyncShutdown.jsm",
   DeferredTask: "resource://gre/modules/DeferredTask.jsm",
   OS: "resource://gre/modules/osfile.jsm",
   TelemetryStopwatch: "resource://gre/modules/TelemetryStopwatch.jsm",
   Deprecated: "resource://gre/modules/Deprecated.jsm",
@@ -211,17 +210,16 @@ if (AppConstants.DEBUG) {
  * Presents an assertion dialog in non-release builds and throws.
  * @param  message
  *         A message to display
  * @param  resultCode
  *         The NS_ERROR_* value to throw.
  * @throws resultCode
  */
 function ERROR(message, resultCode) {
-  NS_ASSERT(false, SEARCH_LOG_PREFIX + message);
   throw Components.Exception(message, resultCode);
 }
 
 /**
  * Logs the failure message (if browser.search.log is enabled) and throws.
  * @param  message
  *         A message to display
  * @param  resultCode
@@ -254,17 +252,16 @@ function limitURILength(str, len) {
  *         An assertion that must be met
  * @param  message
  *         A message to display if the assertion is not met
  * @param  resultCode
  *         The NS_ERROR_* value to throw if the assertion is not met
  * @throws resultCode
  */
 function ENSURE_WARN(assertion, message, resultCode) {
-  NS_ASSERT(assertion, SEARCH_LOG_PREFIX + message);
   if (!assertion)
     throw Components.Exception(message, resultCode);
 }
 
 function loadListener(aChannel, aEngine, aCallback) {
   this._channel = aChannel;
   this._bytes = [];
   this._engine = aEngine;
diff --git a/toolkit/content/globalOverlay.js b/toolkit/content/globalOverlay.js
--- a/toolkit/content/globalOverlay.js
+++ b/toolkit/content/globalOverlay.js
@@ -94,19 +94,8 @@ function goSetCommandEnabled(aID, aEnabl
 
   if (node) {
     if (aEnabled)
       node.removeAttribute("disabled");
     else
       node.setAttribute("disabled", "true");
   }
 }
-
-Object.defineProperty(this, "NS_ASSERT", {
-  configurable: true,
-  enumerable: true,
-  get() {
-    delete this.NS_ASSERT;
-    var tmpScope = {};
-    ChromeUtils.import("resource://gre/modules/debug.js", tmpScope);
-    return this.NS_ASSERT = tmpScope.NS_ASSERT;
-  },
-});
diff --git a/toolkit/modules/Console.jsm b/toolkit/modules/Console.jsm
--- a/toolkit/modules/Console.jsm
+++ b/toolkit/modules/Console.jsm
@@ -287,16 +287,17 @@ const LOG_LEVELS = {
   "all": Number.MIN_VALUE,
   "debug": 2,
   "log": 3,
   "info": 3,
   "clear": 3,
   "trace": 3,
   "timeEnd": 3,
   "time": 3,
+  "assert": 3,
   "group": 3,
   "groupEnd": 3,
   "profile": 3,
   "profileEnd": 3,
   "dir": 3,
   "dirxml": 3,
   "warn": 4,
   "error": 5,
@@ -638,16 +639,17 @@ ConsoleAPI.prototype = {
    * is used as a fallback if the pref doesn't exist or is removed.
    */
   _maxExplicitLogLevel: null,
   /**
    * The current log level via all methods of setting (pref or via the API).
    */
   _maxLogLevel: null,
   debug: createMultiLineDumper("debug"),
+  assert: createDumper("assert"),
   log: createDumper("log"),
   info: createDumper("info"),
   warn: createDumper("warn"),
   error: createMultiLineDumper("error"),
   exception: createMultiLineDumper("error"),
 
   trace: function Console_trace() {
     if (!shouldLog("trace", this.maxLogLevel)) {
diff --git a/toolkit/modules/debug.js b/toolkit/modules/debug.js
deleted file mode 100644
--- a/toolkit/modules/debug.js
+++ /dev/null
@@ -1,82 +0,0 @@
-/* vim:set ts=2 sw=2 sts=2 ci et: */
-/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-// This file contains functions that are useful for debugging purposes from
-// within JavaScript code.
-
-var EXPORTED_SYMBOLS = ["NS_ASSERT"];
-
-ChromeUtils.import("resource://gre/modules/XPCOMUtils.jsm");
-ChromeUtils.defineModuleGetter(this, "Services",
-                               "resource://gre/modules/Services.jsm");
-
-var gTraceOnAssert = false;
-
-/**
- * This function provides a simple assertion function for JavaScript.
- * If the condition is true, this function will do nothing.  If the
- * condition is false, then the message will be printed to the console
- * and an alert will appear showing a stack trace, so that the (alpha
- * or nightly) user can file a bug containing it.  For future enhancements,
- * see bugs 330077 and 330078.
- *
- * To suppress the dialogs, you can run with the environment variable
- * XUL_ASSERT_PROMPT set to 0 (if unset, this defaults to 1).
- *
- * @param condition represents the condition that we're asserting to be
- *                  true when we call this function--should be
- *                  something that can be evaluated as a boolean.
- * @param message   a string to be displayed upon failure of the assertion
- */
-
-function NS_ASSERT(condition, message) {
-  if (condition)
-    return;
-
-  var releaseBuild = true;
-  var defB = Services.prefs.getDefaultBranch(null);
-  try {
-    switch (defB.getCharPref("app.update.channel")) {
-      case "nightly":
-      case "aurora":
-      case "beta":
-      case "default":
-        releaseBuild = false;
-    }
-  } catch (ex) {}
-
-  var assertionText = "ASSERT: " + message + "\n";
-
-  // Report the error to the console
-  Cu.reportError(assertionText);
-
-  if (releaseBuild) {
-    return;
-  }
-
-  // dump the stack to stdout too in non-release builds
-  var stackText = "";
-  if (gTraceOnAssert) {
-    stackText = "Stack Trace: \n";
-    var count = 0;
-    // eslint-disable-next-line no-caller
-    var caller = arguments.callee.caller;
-    while (caller) {
-      stackText += count++ + ":" + caller.name + "(";
-      for (var i = 0; i < caller.arguments.length; ++i) {
-        var arg = caller.arguments[i];
-        stackText += arg;
-        if (i < caller.arguments.length - 1)
-          stackText += ",";
-      }
-      stackText += ")\n";
-      caller = caller.arguments.callee.caller;
-    }
-  }
-
-  dump(assertionText + stackText);
-}
diff --git a/toolkit/modules/moz.build b/toolkit/modules/moz.build
--- a/toolkit/modules/moz.build
+++ b/toolkit/modules/moz.build
@@ -182,17 +182,16 @@ EXTRA_JS_MODULES += [
     'CanonicalJSON.jsm',
     'CertUtils.jsm',
     'CharsetMenu.jsm',
     'ClientID.jsm',
     'Color.jsm',
     'Console.jsm',
     'css-selector.js',
     'DateTimePickerHelper.jsm',
-    'debug.js',
     'DeferredTask.jsm',
     'Deprecated.jsm',
     'E10SUtils.jsm',
     'EventEmitter.jsm',
     'FileUtils.jsm',
     'Finder.jsm',
     'FinderHighlighter.jsm',
     'FinderIterator.jsm',
diff --git a/tools/lint/eslint/modules.json b/tools/lint/eslint/modules.json
--- a/tools/lint/eslint/modules.json
+++ b/tools/lint/eslint/modules.json
@@ -37,17 +37,16 @@
   "ContentCrashHandlers.jsm": ["TabCrashHandler", "PluginCrashReporter", "UnsubmittedCrashHandler"],
   "ContentObservers.js": [],
   "ContentPrefUtils.jsm": ["ContentPref", "cbHandleResult", "cbHandleError", "cbHandleCompletion", "safeCallback", "_methodsCallableFromChild"],
   "cookies.js": ["Cookies"],
   "CoverageUtils.jsm": ["CoverageCollector"],
   "CrashManagerTest.jsm": ["configureLogging", "getManager", "sleep", "TestingCrashManager"],
   "dbg-client.jsm": ["DebuggerTransport", "DebuggerClient", "RootClient", "LongStringClient", "EnvironmentClient", "ObjectClient"],
   "dbg-server.jsm": ["DebuggerServer", "ActorPool", "OriginalLocation"],
-  "debug.js": ["NS_ASSERT"],
   "declined.js": ["DeclinedEngines"],
   "dispatcher.js": ["dispatcher"],
   "distribution.js": ["DistributionCustomizer"],
   "DNSTypes.jsm": ["DNS_QUERY_RESPONSE_CODES", "DNS_AUTHORITATIVE_ANSWER_CODES", "DNS_CLASS_CODES", "DNS_RECORD_TYPES"],
   "doctor.js": ["Doctor"],
   "DOMRequestHelper.jsm": ["DOMRequestIpcHelper"],
   "DownloadCore.jsm": ["Download", "DownloadSource", "DownloadTarget", "DownloadError", "DownloadSaver", "DownloadCopySaver", "DownloadLegacySaver", "DownloadPDFSaver"],
   "DownloadList.jsm": ["DownloadList", "DownloadCombinedList", "DownloadSummary"],
