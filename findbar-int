# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  b7f409bd51c8ae7260c1675785c698a9cb061244
Bug 1491484 - Don't updateBrowserWithState in findbar focus handler

This

diff --git a/toolkit/content/tests/browser/browser_findbar.js b/toolkit/content/tests/browser/browser_findbar.js
--- a/toolkit/content/tests/browser/browser_findbar.js
+++ b/toolkit/content/tests/browser/browser_findbar.js
@@ -1,16 +1,17 @@
 /* eslint-disable mozilla/no-arbitrary-setTimeout */
 ChromeUtils.import("resource://gre/modules/Timer.jsm", this);
 
 const TEST_PAGE_URI = "data:text/html;charset=utf-8,The letter s.";
 // Using 'javascript' schema to bypass E10SUtils.canLoadURIInProcess, because
 // it does not allow 'data:' URI to be loaded in the parent process.
 const E10S_PARENT_TEST_PAGE_URI = "javascript:document.write('The letter s.');";
 
+
 /**
  * Makes sure that the findbar hotkeys (' and /) event listeners
  * are added to the system event group and do not get blocked
  * by calling stopPropagation on a keypress event on a page.
  */
 add_task(async function test_hotkey_event_propagation() {
   info("Ensure hotkeys are not affected by stopPropagation.");
 
diff --git a/toolkit/content/widgets/findbar.js b/toolkit/content/widgets/findbar.js
--- a/toolkit/content/widgets/findbar.js
+++ b/toolkit/content/widgets/findbar.js
@@ -251,18 +251,19 @@ class MozFindbar extends XULElement {
       // if it matched an editable.
       this.browser.finder.enableSelection();
     });
 
     this._findField.addEventListener("focus", (event) => {
       if (/Mac/.test(navigator.platform)) {
         this._onFindFieldFocus();
       }
+      console.log("FOCUS HANDLER");
       this._updateBrowserWithState();
-    });
+    }, { mozSystemGroup: true });
 
     this._findField.addEventListener("compositionstart", (event) => {
       // Don't close the find toolbar while IME is composing.
       let findbar = this;
       findbar._isIMEComposing = true;
       if (findbar._quickFindTimeout) {
         clearTimeout(findbar._quickFindTimeout);
         findbar._quickFindTimeout = null;
@@ -797,21 +798,24 @@ class MozFindbar extends XULElement {
         this._onBrowserKeypress(aMessage.data);
         break;
     }
     return undefined;
   }
 
   _updateBrowserWithState() {
     if (this._browser && this._browser.messageManager) {
-      this._browser.messageManager.sendAsyncMessage("Findbar:UpdateState", {
+      var obj = {
         findMode: this._findMode,
         isOpenAndFocused: !this.hidden && document.activeElement == this._findField.inputField,
         hasQuickFindTimeout: !!this._quickFindTimeout,
-      });
+      };
+      console.log("Calling _updateBrowserWithState", obj);
+      console.trace();
+      this._browser.messageManager.sendAsyncMessage("Findbar:UpdateState", obj);
     }
   }
 
   _enableFindButtons(aEnable) {
     this.getElement("find-next").disabled =
       this.getElement("find-previous").disabled = !aEnable;
   }
 
