# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  ce32eb5f9931da0e01bb0be8e0fafb5e24b2d556
Bug 306344 - Use a UA Shadow Root for HTMLMarqueeElement

diff --git a/dom/html/HTMLMarqueeElement.cpp b/dom/html/HTMLMarqueeElement.cpp
--- a/dom/html/HTMLMarqueeElement.cpp
+++ b/dom/html/HTMLMarqueeElement.cpp
@@ -1,16 +1,19 @@
 /* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* vim: set ts=8 sts=2 et sw=2 tw=80: */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "HTMLMarqueeElement.h"
 #include "nsGenericHTMLElement.h"
+#include "mozilla/dom/HTMLSlotElement.h"
+#include "mozilla/dom/ShadowRoot.h"
+#include "nsTextNode.h"
 #include "nsStyleConsts.h"
 #include "nsMappedAttributes.h"
 #include "mozilla/dom/HTMLMarqueeElementBinding.h"
 #include "mozilla/dom/CustomEvent.h"
 
 NS_IMPL_NS_NEW_HTML_ELEMENT(Marquee)
 
 namespace mozilla {
@@ -44,16 +47,34 @@ static const nsAttrValue::EnumTable kDir
 static const nsAttrValue::EnumTable* kDefaultDirection = &kDirectionTable[0];
 
 JSObject*
 HTMLMarqueeElement::WrapNode(JSContext *aCx, JS::Handle<JSObject*> aGivenProto)
 {
   return dom::HTMLMarqueeElement_Binding::Wrap(aCx, this, aGivenProto);
 }
 
+nsresult
+HTMLMarqueeElement::BindToTree(nsIDocument* aDocument, nsIContent* aParent,
+                              nsIContent* aBindingParent)
+{
+
+  nsresult rv = nsGenericHTMLElement::BindToTree(aDocument, aParent,
+                                                 aBindingParent);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  return rv;
+}
+
+void
+HTMLMarqueeElement::UnbindFromTree(bool aDeep, bool aNullParent)
+{
+  nsGenericHTMLElement::UnbindFromTree(aDeep, aNullParent);
+}
+
 void
 HTMLMarqueeElement::GetBehavior(nsAString& aValue)
 {
   GetEnumAttr(nsGkAtoms::behavior, kDefaultBehavior->tag, aValue);
 }
 
 void
 HTMLMarqueeElement::GetDirection(nsAString& aValue)
diff --git a/dom/html/HTMLMarqueeElement.h b/dom/html/HTMLMarqueeElement.h
--- a/dom/html/HTMLMarqueeElement.h
+++ b/dom/html/HTMLMarqueeElement.h
@@ -4,28 +4,66 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 #ifndef HTMLMarqueeElement_h___
 #define HTMLMarqueeElement_h___
 
 #include "mozilla/Attributes.h"
 #include "nsGenericHTMLElement.h"
 #include "nsContentUtils.h"
+#include "mozilla/dom/HTMLSlotElement.h"
+#include "mozilla/dom/ShadowRoot.h"
+#include "nsTextNode.h"
 
 namespace mozilla {
 namespace dom {
 
 class HTMLMarqueeElement final : public nsGenericHTMLElement
 {
 public:
   explicit HTMLMarqueeElement(already_AddRefed<mozilla::dom::NodeInfo>&& aNodeInfo)
     : nsGenericHTMLElement(std::move(aNodeInfo))
   {
+    ErrorResult err;
+    RefPtr<ShadowRoot> shadowRoot =
+      AttachShadowWithoutNameChecks(ShadowRootMode::Closed);
+    shadowRoot->SetIsUAWidget();
+    printf("XXX: Attaching shadow root\n");
+
+    RefPtr<Element> style = OwnerDoc()->CreateHTMLElement(nsGkAtoms::style);
+    RefPtr<nsTextNode> textContent =
+      new nsTextNode(style->NodeInfo()->NodeInfoManager());
+    // @media print {
+    //   marquee > * > * {
+    //     margin: 0 !important;
+    //     padding: 0 !important;
+    //   } /* This hack is needed until bug 119078 gets fixed */
+    // }
+    textContent->SetText(NS_LITERAL_STRING(
+        ":host { display: inline-block; overflow: hidden;"
+        "text-align: initial; white-space: nowrap; background: red; }"
+        ":host([direction=\"up\"]), :host([direction=\"down\"]) { overflow: "
+        "initial; overflow-y: hidden; white-space: initial; }"
+        ":host > div { will-change: transform; }"
+    ), false);
+    style->AppendChildTo(textContent, false);
+    shadowRoot->AppendChild(*style, err);
+
+    RefPtr<Element> mover = OwnerDoc()->CreateHTMLElement(nsGkAtoms::div);
+    shadowRoot->AppendChild(*mover, err);
+
+    RefPtr<Element> slot = OwnerDoc()->CreateHTMLElement(nsGkAtoms::slot);
+    shadowRoot->AppendChild(*slot, err);
   }
 
+  virtual nsresult BindToTree(nsIDocument* aDocument, nsIContent* aParent,
+                              nsIContent* aBindingParent) override;
+  virtual void UnbindFromTree(bool aDeep = true,
+                              bool aNullParent = true) override;
+
   static const int kDefaultLoop = -1;
   static const int kDefaultScrollAmount = 6;
   static const int kDefaultScrollDelayMS = 85;
 
   void GetBehavior(nsAString& aValue);
   void SetBehavior(const nsAString& aValue, mozilla::ErrorResult& aError)
   {
     SetHTMLAttr(nsGkAtoms::behavior, aValue, aError);
diff --git a/layout/style/contenteditable.css b/layout/style/contenteditable.css
--- a/layout/style/contenteditable.css
+++ b/layout/style/contenteditable.css
@@ -76,21 +76,17 @@ input[contenteditable="true"][type="radi
 input[contenteditable="true"][type="file"] {
   -moz-user-select: all;
   -moz-user-input: none !important;
   -moz-user-focus: none !important;
 }
 
 /* emulation of non-standard HTML <marquee> tag */
 marquee:-moz-read-write {
-  -moz-binding: url('chrome://xbl-marquee/content/xbl-marquee.xml#marquee-horizontal-editable');
-}
-
-marquee[direction="up"]:-moz-read-write, marquee[direction="down"]:-moz-read-write {
-  -moz-binding: url('chrome://xbl-marquee/content/xbl-marquee.xml#marquee-vertical-editable');
+  -moz-binding: none;
 }
 
 *|*:-moz-read-write > input[type="hidden"],
 input[contenteditable="true"][type="hidden"] {
   border: 1px solid black !important;
   visibility: visible !important;
 }
 
diff --git a/layout/style/res/html.css b/layout/style/res/html.css
--- a/layout/style/res/html.css
+++ b/layout/style/res/html.css
@@ -838,21 +838,19 @@ dialog:not([open]) {
 }
 
 /* emulation of non-standard HTML <marquee> tag */
 marquee {
   inline-size: -moz-available;
   display: inline-block;
   vertical-align: text-bottom;
   text-align: start;
-  -moz-binding: url('chrome://xbl-marquee/content/xbl-marquee.xml#marquee-horizontal');
 }
 
 marquee[direction="up"], marquee[direction="down"] {
-  -moz-binding: url('chrome://xbl-marquee/content/xbl-marquee.xml#marquee-vertical');
   block-size: 200px;
 }
 
 /* PRINT ONLY rules follow */
 @media print {
 
   marquee { -moz-binding: none; }
 
diff --git a/layout/style/xbl-marquee/xbl-marquee.xml b/layout/style/xbl-marquee/xbl-marquee.xml
--- a/layout/style/xbl-marquee/xbl-marquee.xml
+++ b/layout/style/xbl-marquee/xbl-marquee.xml
@@ -64,21 +64,21 @@
         </getter>
         <setter>
           this._setEventListener("bounce", val, true);
           this.setAttribute("onbounce", val);
         </setter>
       </property>
 
       <property name="outerDiv"
-        onget="return document.getAnonymousNodes(this)[0]"
+        onget="console.log(this.shadowRoot); return  document.getAnonymousNodes(this)[0]"
       />
 
       <property name="innerDiv"
-        onget="return document.getAnonymousElementByAttribute(this, 'class', 'innerDiv');"
+        onget="console.log(this.shadowRoot); return document.getAnonymousElementByAttribute(this, 'class', 'innerDiv');"
       />
 
       <property name="scrollDelayWithTruespeed">
         <getter>
           <![CDATA[
           if (this.scrollDelay < 60 && !this.trueSpeed) {
             return 60;
           }
@@ -238,17 +238,17 @@
             }
           } //end if
 
           this.newPosition = this.newPosition + (this.dirsign * this.scrollAmount);
 
           if ((this.dirsign == 1 && this.newPosition > this.stopAt) ||
               (this.dirsign == -1 && this.newPosition < this.stopAt))
           {
-            switch (this.behavior) 
+            switch (this.behavior)
             {
               case 'alternate':
                 // lets start afresh
                 this.invalidateCache = true;
 
                 // swap direction
                 const swap = {left: "right", down: "up", up: "down", right: "left"};
                 this._currentDirection = swap[this._currentDirection] || "left";
@@ -419,43 +419,43 @@
   </binding>
 
   <binding id="marquee-horizontal" bindToUntrustedContent="true"
            extends="chrome://xbl-marquee/content/xbl-marquee.xml#marquee"
            inheritstyle="false">
 
     <!-- White-space isn't allowed because a marquee could be 
          inside 'white-space: pre' -->
-    <content>
+    <!-- <content>
       <html:div style="display: -moz-box; overflow: hidden; width: -moz-available;"
         ><html:div style="display: -moz-box;"
           ><html:div class="innerDiv" style="display: table; border-spacing: 0;"
             ><html:div
               ><children
             /></html:div
           ></html:div
         ></html:div
       ></html:div>
-    </content>
+    </content> -->
 
   </binding>
 
   <binding id="marquee-vertical" bindToUntrustedContent="true"
            extends="chrome://xbl-marquee/content/xbl-marquee.xml#marquee"
            inheritstyle="false">
 
     <!-- White-space isn't allowed because a marquee could be 
          inside 'white-space: pre' -->
-    <content>
+    <!-- <content>
       <html:div style="overflow: hidden; width: -moz-available;"
         ><html:div class="innerDiv"
           ><children
         /></html:div
       ></html:div>
-    </content>
+    </content> -->
 
   </binding>
 
   <binding id="marquee-horizontal-editable" bindToUntrustedContent="true"
            inheritstyle="false">
 
     <!-- White-space isn't allowed because a marquee could be 
          inside 'white-space: pre' -->
