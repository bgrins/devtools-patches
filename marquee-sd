# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  ce32eb5f9931da0e01bb0be8e0fafb5e24b2d556
Bug 306344 - Use a UA Shadow Root for HTMLMarqueeElement

diff --git a/dom/html/HTMLMarqueeElement.cpp b/dom/html/HTMLMarqueeElement.cpp
--- a/dom/html/HTMLMarqueeElement.cpp
+++ b/dom/html/HTMLMarqueeElement.cpp
@@ -1,16 +1,18 @@
 /* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* vim: set ts=8 sts=2 et sw=2 tw=80: */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "HTMLMarqueeElement.h"
 #include "nsGenericHTMLElement.h"
+#include "mozilla/dom/HTMLSlotElement.h"
+#include "mozilla/dom/ShadowRoot.h"
 #include "nsStyleConsts.h"
 #include "nsMappedAttributes.h"
 #include "mozilla/dom/HTMLMarqueeElementBinding.h"
 #include "mozilla/dom/CustomEvent.h"
 
 NS_IMPL_NS_NEW_HTML_ELEMENT(Marquee)
 
 namespace mozilla {
@@ -44,16 +46,42 @@ static const nsAttrValue::EnumTable kDir
 static const nsAttrValue::EnumTable* kDefaultDirection = &kDirectionTable[0];
 
 JSObject*
 HTMLMarqueeElement::WrapNode(JSContext *aCx, JS::Handle<JSObject*> aGivenProto)
 {
   return dom::HTMLMarqueeElement_Binding::Wrap(aCx, this, aGivenProto);
 }
 
+
+nsresult
+HTMLMarqueeElement::BindToTree(nsIDocument* aDocument, nsIContent* aParent,
+                              nsIContent* aBindingParent)
+{
+
+  RefPtr<ShadowRoot> shadowRoot =
+    AttachShadowWithoutNameChecks(ShadowRootMode::Closed);
+  shadowRoot->SetIsUAWidget();
+printf("Attaching shadow root\n");
+  // shadowRoot->AppendChild(*resultFragment, err);
+
+  nsresult rv = nsGenericHTMLElement::BindToTree(aDocument, aParent,
+                                                 aBindingParent);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  return rv;
+}
+
+void
+HTMLMarqueeElement::UnbindFromTree(bool aDeep, bool aNullParent)
+{
+  nsGenericHTMLElement::UnbindFromTree(aDeep, aNullParent);
+}
+
+
 void
 HTMLMarqueeElement::GetBehavior(nsAString& aValue)
 {
   GetEnumAttr(nsGkAtoms::behavior, kDefaultBehavior->tag, aValue);
 }
 
 void
 HTMLMarqueeElement::GetDirection(nsAString& aValue)
diff --git a/dom/html/HTMLMarqueeElement.h b/dom/html/HTMLMarqueeElement.h
--- a/dom/html/HTMLMarqueeElement.h
+++ b/dom/html/HTMLMarqueeElement.h
@@ -16,16 +16,22 @@ namespace dom {
 class HTMLMarqueeElement final : public nsGenericHTMLElement
 {
 public:
   explicit HTMLMarqueeElement(already_AddRefed<mozilla::dom::NodeInfo>&& aNodeInfo)
     : nsGenericHTMLElement(std::move(aNodeInfo))
   {
   }
 
+
+  virtual nsresult BindToTree(nsIDocument* aDocument, nsIContent* aParent,
+                              nsIContent* aBindingParent) override;
+  virtual void UnbindFromTree(bool aDeep = true,
+                              bool aNullParent = true) override;
+
   static const int kDefaultLoop = -1;
   static const int kDefaultScrollAmount = 6;
   static const int kDefaultScrollDelayMS = 85;
 
   void GetBehavior(nsAString& aValue);
   void SetBehavior(const nsAString& aValue, mozilla::ErrorResult& aError)
   {
     SetHTMLAttr(nsGkAtoms::behavior, aValue, aError);
diff --git a/layout/style/xbl-marquee/xbl-marquee.xml b/layout/style/xbl-marquee/xbl-marquee.xml
--- a/layout/style/xbl-marquee/xbl-marquee.xml
+++ b/layout/style/xbl-marquee/xbl-marquee.xml
@@ -238,17 +238,17 @@
             }
           } //end if
 
           this.newPosition = this.newPosition + (this.dirsign * this.scrollAmount);
 
           if ((this.dirsign == 1 && this.newPosition > this.stopAt) ||
               (this.dirsign == -1 && this.newPosition < this.stopAt))
           {
-            switch (this.behavior) 
+            switch (this.behavior)
             {
               case 'alternate':
                 // lets start afresh
                 this.invalidateCache = true;
 
                 // swap direction
                 const swap = {left: "right", down: "up", up: "down", right: "left"};
                 this._currentDirection = swap[this._currentDirection] || "left";
@@ -419,43 +419,43 @@
   </binding>
 
   <binding id="marquee-horizontal" bindToUntrustedContent="true"
            extends="chrome://xbl-marquee/content/xbl-marquee.xml#marquee"
            inheritstyle="false">
 
     <!-- White-space isn't allowed because a marquee could be 
          inside 'white-space: pre' -->
-    <content>
+    <!-- <content>
       <html:div style="display: -moz-box; overflow: hidden; width: -moz-available;"
         ><html:div style="display: -moz-box;"
           ><html:div class="innerDiv" style="display: table; border-spacing: 0;"
             ><html:div
               ><children
             /></html:div
           ></html:div
         ></html:div
       ></html:div>
-    </content>
+    </content> -->
 
   </binding>
 
   <binding id="marquee-vertical" bindToUntrustedContent="true"
            extends="chrome://xbl-marquee/content/xbl-marquee.xml#marquee"
            inheritstyle="false">
 
     <!-- White-space isn't allowed because a marquee could be 
          inside 'white-space: pre' -->
-    <content>
+    <!-- <content>
       <html:div style="overflow: hidden; width: -moz-available;"
         ><html:div class="innerDiv"
           ><children
         /></html:div
       ></html:div>
-    </content>
+    </content> -->
 
   </binding>
 
   <binding id="marquee-horizontal-editable" bindToUntrustedContent="true"
            inheritstyle="false">
 
     <!-- White-space isn't allowed because a marquee could be 
          inside 'white-space: pre' -->
