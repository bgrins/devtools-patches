# HG changeset patch
# User Julian Descottes <jdescottes@mozilla.com>
# Date 1453125536 -3600
#      Mon Jan 18 14:58:56 2016 +0100
# Node ID 7dfccde04d34fd68cb2fe901be6107f0f4f7cbd4
# Parent  b857500874d8967e9f5d66ac3de38371dab29ca9
focus test issues on linux x64 opt e10s

diff --git a/devtools/client/focusbug/moz.build b/devtools/client/focusbug/moz.build
new file mode 100644
--- /dev/null
+++ b/devtools/client/focusbug/moz.build
@@ -0,0 +1,6 @@
+# vim: set filetype=python:
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+BROWSER_CHROME_MANIFESTS += ['test/browser.ini']
diff --git a/devtools/client/focusbug/test/browser.ini b/devtools/client/focusbug/test/browser.ini
new file mode 100644
--- /dev/null
+++ b/devtools/client/focusbug/test/browser.ini
@@ -0,0 +1,6 @@
+[DEFAULT]
+support-files =
+  head.js
+
+[browser_focusbug_01.js]
+[browser_focusbug_02.js]
diff --git a/devtools/client/focusbug/test/browser_focusbug_01.js b/devtools/client/focusbug/test/browser_focusbug_01.js
new file mode 100644
--- /dev/null
+++ b/devtools/client/focusbug/test/browser_focusbug_01.js
@@ -0,0 +1,15 @@
+// Bug 1240368 : TEST 1
+function* spawnTest() {
+  let container = document.createElement("vbox");
+  gBrowser.selectedBrowser.parentNode.appendChild(container);
+
+  let deferred = Promise.defer();
+  container.addEventListener("mousedown", _ => deferred.resolve());
+  EventUtils.sendMouseEvent({ type: "mousedown" }, container);
+  yield deferred.promise;
+
+  ok(true, "Used EventUtils to send mousedown event");
+  
+  container.remove();
+  finish();
+}
diff --git a/devtools/client/focusbug/test/browser_focusbug_02.js b/devtools/client/focusbug/test/browser_focusbug_02.js
new file mode 100644
--- /dev/null
+++ b/devtools/client/focusbug/test/browser_focusbug_02.js
@@ -0,0 +1,14 @@
+// Bug 1240368 : TEST 2
+function* spawnTest() {
+  let container = document.createElement("vbox");
+  gBrowser.selectedBrowser.parentNode.appendChild(container);
+
+  // allow container to receive focus
+  container.style.MozUserFocus = "normal";
+
+  container.focus();
+  is(document.commandDispatcher.focusedElement, container, "The container is now focused.");
+
+  container.remove();
+  finish();
+}
diff --git a/devtools/client/focusbug/test/head.js b/devtools/client/focusbug/test/head.js
new file mode 100644
--- /dev/null
+++ b/devtools/client/focusbug/test/head.js
@@ -0,0 +1,19 @@
+"use strict";
+
+var { utils: Cu } = Components;
+
+var { Task } = Cu.import("resource://gre/modules/Task.jsm", {});
+var { require } = Cu.import("resource://devtools/shared/Loader.jsm", {});
+var Promise = require("promise");
+
+// All tests are asynchronous.
+waitForExplicitFinish();
+
+function handleError(aError) {
+  ok(false, "Got an error: " + aError.message + "\n" + aError.stack);
+  finish();
+}
+
+function test () {
+  Task.spawn(spawnTest).then(finish, handleError);
+}
\ No newline at end of file
diff --git a/devtools/client/moz.build b/devtools/client/moz.build
--- a/devtools/client/moz.build
+++ b/devtools/client/moz.build
@@ -8,16 +8,17 @@ include('../templates.mozbuild')
 
 DIRS += [
     'aboutdebugging',
     'animationinspector',
     'canvasdebugger',
     'commandline',
     'debugger',
     'eyedropper',
+    'focusbug',
     'framework',
     'inspector',
     'jsonview',
     'locales',
     'memory',
     'netmonitor',
     'performance',
     'preferences',
