# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  55b1d2253baeb936fde99c466a160826e878c289

diff --git a/devtools/client/inspector/markup/markup.js b/devtools/client/inspector/markup/markup.js
--- a/devtools/client/inspector/markup/markup.js
+++ b/devtools/client/inspector/markup/markup.js
@@ -1621,17 +1621,22 @@ MarkupView.prototype = {
       container.setExpanded(false);
       return promise.resolve(container);
     }
 
     // If we're not expanded (or asked to update anyway), we're done for
     // now.  Note that this will leave the childrenDirty flag set, so when
     // expanded we'll refresh the child list.
     if (!(container.expanded || expand)) {
+      console.log("Bailing out: ", expand, container.expanded);
+      console.trace();
       return promise.resolve(container);
+    } else {
+      console.log("Not bailing out: ", expand, container.expanded);
+      console.trace();
     }
 
     // We're going to issue a children request, make sure it includes the
     // centered node.
     let centered = this._checkSelectionVisible(container);
 
     // Children aren't updated yet, but clear the childrenDirty flag anyway.
     // If the dirty flag is re-set while we're fetching we'll need to fetch
diff --git a/devtools/client/inspector/markup/test/browser.ini b/devtools/client/inspector/markup/test/browser.ini
--- a/devtools/client/inspector/markup/test/browser.ini
+++ b/devtools/client/inspector/markup/test/browser.ini
@@ -33,16 +33,17 @@ support-files =
   doc_markup_search.html
   doc_markup_svg_attributes.html
   doc_markup_toggle.html
   doc_markup_tooltip.png
   doc_markup_void_elements.html
   doc_markup_void_elements.xhtml
   doc_markup_whitespace.html
   doc_markup_xul.xul
+  doc_markup_xbl.xml
   events_bundle.js
   events_bundle.js.map
   events_original.js
   head.js
   helper_attributes_test_runner.js
   helper_diff.js
   helper_events_test_runner.js
   helper_markup_accessibility_navigation.js
@@ -176,8 +177,9 @@ skip-if = e10s # Bug 1036409 - The last 
 [browser_markup_textcontent_edit_02.js]
 [browser_markup_toggle_01.js]
 [browser_markup_toggle_02.js]
 [browser_markup_toggle_03.js]
 [browser_markup_update-on-navigtion.js]
 [browser_markup_void_elements_html.js]
 [browser_markup_void_elements_xhtml.js]
 [browser_markup_whitespace.js]
+[browser_markup_xbl_inspection.js]
diff --git a/devtools/client/inspector/markup/test/browser_markup_xbl_inspection.js b/devtools/client/inspector/markup/test/browser_markup_xbl_inspection.js
new file mode 100644
--- /dev/null
+++ b/devtools/client/inspector/markup/test/browser_markup_xbl_inspection.js
@@ -0,0 +1,30 @@
+/* vim: set ts=2 et sw=2 tw=80: */
+/* Any copyright is dedicated to the Public Domain.
+ http://creativecommons.org/publicdomain/zero/1.0/ */
+
+"use strict";
+
+// Test confirms that XBL bindings can be inspected
+// See bug 1360072
+
+const TEST_URL = URL_ROOT + "doc_markup_xul.xul";
+
+add_task(function* () {
+  let {inspector, testActor} = yield openInspectorForURL(TEST_URL);
+
+  let panelFront = yield getNodeFront("#xbl-bound", inspector);
+  ok(panelFront.hasAttribute("id"),
+     "panelFront has id attribute in the beginning");
+
+  // info("Removing panel's id attribute");
+  // let onMutation = inspector.once("markupmutation");
+  // yield testActor.removeAttribute("#test", "id");
+
+  // info("Waiting for markupmutation");
+  // yield onMutation;
+
+  // is(panelFront.hasAttribute("id"), false,
+  //    "panelFront doesn't have id attribute anymore");
+
+  yield new Promise(r=>r);
+});
diff --git a/devtools/client/inspector/markup/test/doc_markup_xbl.xml b/devtools/client/inspector/markup/test/doc_markup_xbl.xml
new file mode 100644
--- /dev/null
+++ b/devtools/client/inspector/markup/test/doc_markup_xbl.xml
@@ -0,0 +1,15 @@
+<?xml version="1.0"?>
+<bindings
+          xmlns="http://www.mozilla.org/xbl"
+          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
+          xmlns:xbl="http://www.mozilla.org/xbl"
+          xmlns:svg="http://www.w3.org/2000/svg"
+          xmlns:html="http://www.w3.org/1999/xhtml">
+    <binding id="test">
+        <xbl:content xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" xmlns="http://www.w3.org/1999/xhtml">
+        <baz style="background: rgba(255, 0, 0, .2)">
+            <xbl:children/>
+        </baz>
+        </xbl:content>
+    </binding>
+</bindings>
\ No newline at end of file
diff --git a/devtools/client/inspector/markup/test/doc_markup_xul.xul b/devtools/client/inspector/markup/test/doc_markup_xul.xul
--- a/devtools/client/inspector/markup/test/doc_markup_xul.xul
+++ b/devtools/client/inspector/markup/test/doc_markup_xul.xul
@@ -1,9 +1,10 @@
 <?xml version="1.0" encoding="UTF-8"?>
 
 <xul:window xmlns="http://www.w3.org/1999/xhtml"
             xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
             title="Test Bug 984442">
 
   <xul:panel id="test"></xul:panel>
 
+  <foo id="xbl-bound" style='-moz-binding: url("doc_markup_xbl.xml#test")'><pre>123</pre></foo>
 </xul:window>
diff --git a/devtools/client/inspector/markup/views/markup-container.js b/devtools/client/inspector/markup/views/markup-container.js
--- a/devtools/client/inspector/markup/views/markup-container.js
+++ b/devtools/client/inspector/markup/views/markup-container.js
@@ -210,16 +210,17 @@ MarkupContainer.prototype = {
       doc.activeElement.blur();
     }
   },
 
   /**
    * True if the current node can be expanded.
    */
   get canExpand() {
+    console.log("Can expand?", this._hasChildren, this.node.inlineTextChild)
     return this._hasChildren && !this.node.inlineTextChild;
   },
 
   /**
    * True if this is the root <html> element and can't be collapsed.
    */
   get mustExpand() {
     return this.node._parent === this.markup.walker.rootNode;
