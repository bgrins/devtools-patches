# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  e29f533b05be1ec8681eeeab7c6a30c6f8e6eee4

diff --git a/toolkit/content/widgets/panel.js b/toolkit/content/widgets/panel.js
--- a/toolkit/content/widgets/panel.js
+++ b/toolkit/content/widgets/panel.js
@@ -7,77 +7,72 @@
 // This is loaded into all XUL windows. Wrap in a block to prevent
 // leaking to window scope.
 {
   class MozPanel extends MozElements.MozElementMixin(XULPopupElement) {
     constructor() {
       super();
 
       this._prevFocus = 0;
+      this._fadeTimer = null;
 
       this.addEventListener("popupshowing", this);
       this.addEventListener("popupshown", this);
       this.addEventListener("popuphiding", this);
       this.addEventListener("popuphidden", this);
       this.addEventListener("popuppositioned", this);
-
-      this.attachShadow({ mode: "open" });
     }
 
     connectedCallback() {
-      if (this.delayConnectedCallback()) {
+      if (!this.isArrowPanel || this.shadowRoot) {
         return;
       }
 
-      if (!this.isArrowPanel) {
-        this.shadowRoot.appendChild(document.createElement("slot"));
-        return;
-      }
+      // if (!this.isArrowPanel) {
+      //   this.shadowRoot.appendChild(document.createElement("slot"));
+      //   return;
+      // }
 
+      this.attachShadow({ mode: "open" });
       this.shadowRoot.appendChild(this.fragment);
 
       if (!this.hasAttribute("flip")) {
         this.setAttribute("flip", "both");
       }
       if (!this.hasAttribute("side")) {
         this.setAttribute("side", "top");
       }
       if (!this.hasAttribute("position")) {
         this.setAttribute("position", "bottomcenter topleft");
       }
       if (!this.hasAttribute("consumeoutsideclicks")) {
         this.setAttribute("consumeoutsideclicks", "false");
       }
-
-      this.initializeAttributeInheritance();
-
-      this._fadeTimer = null;
     }
 
     get fragment() {
       if (!this.constructor.hasOwnProperty("_fragment")) {
         this.constructor._fragment = MozXULElement.parseXULToFragment(`
         <html:link rel="stylesheet" href="chrome://global/skin/global.css"/>
+        <html:style>
+          :host([orient=vertical]) .panel-arrowcontent {
+            -moz-box-orient: vertical;
+          }
+        </html:style>
         <vbox class="panel-arrowcontainer" flex="1">
           <box class="panel-arrowbox" part="arrowbox">
             <image class="panel-arrow" part="arrow"/>
           </box>
           <box class="panel-arrowcontent" flex="1" part="arrowcontent"><html:slot/></box>
         </vbox>
       `);
       }
       return document.importNode(this.constructor._fragment, true);
     }
 
-    static get inheritedAttributes() {
-      return {
-        ".panel-arrowcontent": "side,align,dir,orient,pack",
-      };
-    }
-
     get isArrowPanel() {
       return this.getAttribute("type") == "arrow";
     }
 
     adjustArrowPosition() {
       if (!this.isArrowPanel) {
         return;
       }
