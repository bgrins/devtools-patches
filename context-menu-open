# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  67b334840bef3dd23aae4583928b4774870ad7f1
Bug 1493536 - Programatically open context menu

diff --git a/browser/components/search/content/search-one-offs.js b/browser/components/search/content/search-one-offs.js
--- a/browser/components/search/content/search-one-offs.js
+++ b/browser/components/search/content/search-one-offs.js
@@ -173,23 +173,24 @@ class MozSearchOneOffs extends MozXULEle
       if (!target.classList.contains("searchbar-engine-one-off-item") ||
           target.classList.contains("dummy")) {
         event.preventDefault();
         return;
       }
       this.querySelector("[anonid='search-one-offs-context-set-default']")
         .setAttribute("disabled", target.engine == Services.search.currentEngine);
 
+      this.contextMenuPopup.openPopupAtScreen(event.screenX, event.screenY, true);
+      event.preventDefault();
+
       this._contextEngine = target.engine;
     });
   }
 
   connectedCallback() {
-    this.setAttribute("context", "_child");
-
     this.appendChild(
       MozXULElement.parseXULToFragment(`
       <deck anonid="search-panel-one-offs-header" class="search-panel-header search-panel-current-input">
         <label anonid="searchbar-oneoffheader-search" value="&searchWithHeader.label;"></label>
         <hbox anonid="search-panel-searchforwith" class="search-panel-current-input">
           <label value="&searchFor.label;"></label>
           <label anonid="searchbar-oneoffheader-searchtext" class="search-panel-input-value" flex="1" crop="end"></label>
           <label flex="10000" value="&searchWith.label;"></label>
@@ -229,16 +230,18 @@ class MozSearchOneOffs extends MozXULEle
     this.header = this.querySelector("[anonid='search-panel-one-offs-header']");
 
     this.addEngines = this.querySelector(".search-add-engines");
 
     this.settingsButton = this.querySelector("[anonid='search-settings']");
 
     this.settingsButtonCompact = this.querySelector("[anonid='search-settings-compact']");
 
+    this.contextMenuPopup = this.querySelector("[anonid='search-one-offs-context-menu']");
+
     this._bundle = null;
 
     this._contextEngine = null;
 
     this._engines = null;
 
     this._addEngineMenuThreshold = 5;
 
@@ -249,25 +252,24 @@ class MozSearchOneOffs extends MozXULEle
     this._addEngineMenuShouldBeOpen = false;
 
     // Force the <deck> Custom Element to be constructed. This can be removed
     // once Bug 1470242 makes this happen behind the scenes.
     customElements.upgrade(this.header);
 
     // Prevent popup events from the context menu from reaching the autocomplete
     // binding (or other listeners).
-    let menu = this.querySelector("[anonid='search-one-offs-context-menu']");
     let listener = aEvent => aEvent.stopPropagation();
-    menu.addEventListener("popupshowing", listener);
-    menu.addEventListener("popuphiding", listener);
-    menu.addEventListener("popupshown", aEvent => {
+    this.contextMenuPopup.addEventListener("popupshowing", listener);
+    this.contextMenuPopup.addEventListener("popuphiding", listener);
+    this.contextMenuPopup.addEventListener("popupshown", aEvent => {
       this._ignoreMouseEvents = true;
       aEvent.stopPropagation();
     });
-    menu.addEventListener("popuphidden", aEvent => {
+    this.contextMenuPopup.addEventListener("popuphidden", aEvent => {
       this._ignoreMouseEvents = false;
       aEvent.stopPropagation();
     });
 
     // Add weak referenced observers to invalidate our cached list of engines.
     Services.prefs.addObserver("browser.search.hiddenOneOffs", this, true);
     Services.obs.addObserver(this, "browser-search-engine-modified", true);
     Services.obs.addObserver(this, "browser-search-service", true);
