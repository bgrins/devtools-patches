# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  5e5b14cd0b33c4832cfeb07cf28129e0778d813b
Try to detect a tab switch differently from a reload

diff --git a/browser/base/content/browser-trackingprotection.js b/browser/base/content/browser-trackingprotection.js
--- a/browser/base/content/browser-trackingprotection.js
+++ b/browser/base/content/browser-trackingprotection.js
@@ -47,25 +47,31 @@ let TrackingProtection = {
   get enabledHistogram() {
     return Services.telemetry.getHistogramById("TRACKING_PROTECTION_ENABLED");
   },
 
   get eventsHistogram() {
     return Services.telemetry.getHistogramById("TRACKING_PROTECTION_EVENTS");
   },
 
-  onSecurityChange(state) {
+  onSecurityChange(state, lastLocation, aRequest, aWebProgress) {
+    console.trace();
+    console.log(state, lastLocation, aRequest, aWebProgress);
     if (!this.enabled) {
       return;
     }
 
+
     let {
       STATE_BLOCKED_TRACKING_CONTENT, STATE_LOADED_TRACKING_CONTENT
     } = Ci.nsIWebProgressListener;
 
+    console.log("Blocked? ", state & STATE_BLOCKED_TRACKING_CONTENT);
+    console.log("Loaded? ", state & STATE_LOADED_TRACKING_CONTENT);
+
     for (let element of [this.icon, this.content]) {
       if (state & STATE_BLOCKED_TRACKING_CONTENT) {
         element.setAttribute("state", "blocked-tracking-content");
       } else if (state & STATE_LOADED_TRACKING_CONTENT) {
         element.setAttribute("state", "loaded-tracking-content");
       } else {
         element.removeAttribute("state");
       }
diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -4385,17 +4385,17 @@ var XULBrowserWindow = {
     // Make sure the "https" part of the URL is striked out or not,
     // depending on the current mixed active content blocking state.
     gURLBar.formatValue();
 
     try {
       uri = Services.uriFixup.createExposableURI(uri);
     } catch (e) {}
     gIdentityHandler.checkIdentity(this._state, uri);
-    TrackingProtection.onSecurityChange(this._state);
+    TrackingProtection.onSecurityChange(this._state, this._lastLocation, aRequest, aWebProgress);
   },
 
   // simulate all change notifications after switching tabs
   onUpdateCurrentBrowser: function XWB_onUpdateCurrentBrowser(aStateFlags, aStatus, aMessage, aTotalProgress) {
     if (FullZoom.updateBackgroundTabs)
       FullZoom.onLocationChange(gBrowser.currentURI, true);
     var nsIWebProgressListener = Components.interfaces.nsIWebProgressListener;
     var loadingDone = aStateFlags & nsIWebProgressListener.STATE_STOP;
