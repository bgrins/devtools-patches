# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  290f55953b7ca9a91551316d7f579426f800fdcb
Bug 1608278 - WIP - Stop passing null as a second parameter to ChromeUtils.import

These are some manual changes. Need to decide if this is something we want to do,
and then probably spin it out into its own bug if so.

diff --git a/browser/base/content/test/plugins/head.js b/browser/base/content/test/plugins/head.js
--- a/browser/base/content/test/plugins/head.js
+++ b/browser/base/content/test/plugins/head.js
@@ -260,23 +260,22 @@ let JSONBlocklistWrapper = {
    *       "vulnerabilityStatus": "1"
    *     }
    *   ],
    *   "blockID": "p9999"
    * }
    *
    */
   async loadBlocklistRawData(data) {
-    const bsPass = ChromeUtils.import(
-      "resource://gre/modules/Blocklist.jsm",
-      null
+    const { ExtensionBlocklistRS, PluginBlocklistRS } = ChromeUtils.import(
+      "resource://gre/modules/Blocklist.jsm"
     );
     const blocklistMapping = {
-      extensions: bsPass.ExtensionBlocklistRS,
-      plugins: bsPass.PluginBlocklistRS,
+      extensions: ExtensionBlocklistRS,
+      plugins: PluginBlocklistRS,
     };
 
     for (const [dataProp, blocklistObj] of Object.entries(blocklistMapping)) {
       let newData = data[dataProp];
       if (!newData) {
         continue;
       }
       if (!Array.isArray(newData)) {
diff --git a/browser/base/content/test/sync/browser_fxa_web_channel.js b/browser/base/content/test/sync/browser_fxa_web_channel.js
--- a/browser/base/content/test/sync/browser_fxa_web_channel.js
+++ b/browser/base/content/test/sync/browser_fxa_web_channel.js
@@ -7,21 +7,18 @@ XPCOMUtils.defineLazyGetter(this, "FxAcc
 });
 
 ChromeUtils.defineModuleGetter(
   this,
   "WebChannel",
   "resource://gre/modules/WebChannel.jsm"
 );
 
-// FxAccountsWebChannel isn't explicitly exported by FxAccountsWebChannel.jsm
-// but we can get it here via a backstage pass.
 var { FxAccountsWebChannel } = ChromeUtils.import(
-  "resource://gre/modules/FxAccountsWebChannel.jsm",
-  null
+  "resource://gre/modules/FxAccountsWebChannel.jsm"
 );
 
 const TEST_HTTP_PATH = "http://example.com";
 const TEST_BASE_URL =
   TEST_HTTP_PATH +
   "/browser/browser/base/content/test/sync/browser_fxa_web_channel.html";
 const TEST_CHANNEL_ID = "account_updates_test";
 
diff --git a/mobile/android/modules/FxAccountsWebChannel.jsm b/mobile/android/modules/FxAccountsWebChannel.jsm
--- a/mobile/android/modules/FxAccountsWebChannel.jsm
+++ b/mobile/android/modules/FxAccountsWebChannel.jsm
@@ -5,17 +5,17 @@
 "use strict";
 
 /**
  * Firefox Accounts Web Channel.
  *
  * Use the WebChannel component to receive messages about account
  * state changes.
  */
-var EXPORTED_SYMBOLS = ["EnsureFxAccountsWebChannel"];
+var EXPORTED_SYMBOLS = ["EnsureFxAccountsWebChannel", "FxAccountsWebChannel"];
 
 const { Accounts } = ChromeUtils.import("resource://gre/modules/Accounts.jsm");
 const { Services } = ChromeUtils.import("resource://gre/modules/Services.jsm");
 const { WebChannel } = ChromeUtils.import(
   "resource://gre/modules/WebChannel.jsm"
 );
 const { XPCOMUtils } = ChromeUtils.import(
   "resource://gre/modules/XPCOMUtils.jsm"
diff --git a/services/fxaccounts/FxAccountsWebChannel.jsm b/services/fxaccounts/FxAccountsWebChannel.jsm
--- a/services/fxaccounts/FxAccountsWebChannel.jsm
+++ b/services/fxaccounts/FxAccountsWebChannel.jsm
@@ -5,17 +5,21 @@
 
 /**
  * Firefox Accounts Web Channel.
  *
  * Uses the WebChannel component to receive messages
  * about account state changes.
  */
 
-var EXPORTED_SYMBOLS = ["EnsureFxAccountsWebChannel"];
+var EXPORTED_SYMBOLS = [
+  "EnsureFxAccountsWebChannel",
+  "FxAccountsWebChannel",
+  "FxAccountsWebChannelHelpers",
+];
 
 const { XPCOMUtils } = ChromeUtils.import(
   "resource://gre/modules/XPCOMUtils.jsm"
 );
 const {
   COMMAND_PROFILE_CHANGE,
   COMMAND_LOGIN,
   COMMAND_LOGOUT,
diff --git a/services/fxaccounts/tests/xpcshell/test_web_channel.js b/services/fxaccounts/tests/xpcshell/test_web_channel.js
--- a/services/fxaccounts/tests/xpcshell/test_web_channel.js
+++ b/services/fxaccounts/tests/xpcshell/test_web_channel.js
@@ -9,17 +9,17 @@ const {
   log,
 } = ChromeUtils.import("resource://gre/modules/FxAccountsCommon.js");
 const { CryptoUtils } = ChromeUtils.import(
   "resource://services-crypto/utils.js"
 );
 const {
   FxAccountsWebChannel,
   FxAccountsWebChannelHelpers,
-} = ChromeUtils.import("resource://gre/modules/FxAccountsWebChannel.jsm", null);
+} = ChromeUtils.import("resource://gre/modules/FxAccountsWebChannel.jsm");
 
 const URL_STRING = "https://example.com";
 
 const mockSendingContext = {
   browsingContext: { top: { embedderElement: {} } },
   principal: {},
   eventTarget: {},
 };
diff --git a/toolkit/components/mozintl/mozIntl.jsm b/toolkit/components/mozintl/mozIntl.jsm
--- a/toolkit/components/mozintl/mozIntl.jsm
+++ b/toolkit/components/mozintl/mozIntl.jsm
@@ -1,16 +1,15 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 const { Services } = ChromeUtils.import("resource://gre/modules/Services.jsm");
 const { Localization } = ChromeUtils.import(
-  "resource://gre/modules/Localization.jsm",
-  null
+  "resource://gre/modules/Localization.jsm"
 );
 
 const mozIntlHelper = Cc["@mozilla.org/mozintlhelper;1"].getService(
   Ci.mozIMozIntlHelper
 );
 const osPrefs = Cc["@mozilla.org/intl/ospreferences;1"].getService(
   Ci.mozIOSPreferences
 );
diff --git a/toolkit/mozapps/extensions/Blocklist.jsm b/toolkit/mozapps/extensions/Blocklist.jsm
--- a/toolkit/mozapps/extensions/Blocklist.jsm
+++ b/toolkit/mozapps/extensions/Blocklist.jsm
@@ -3,17 +3,21 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 "use strict";
 
 /* eslint "valid-jsdoc": [2, {requireReturn: false}] */
 
-var EXPORTED_SYMBOLS = ["Blocklist"];
+var EXPORTED_SYMBOLS = [
+  "Blocklist",
+  "ExtensionBlocklistRS",
+  "PluginBlocklistRS",
+];
 
 const { XPCOMUtils } = ChromeUtils.import(
   "resource://gre/modules/XPCOMUtils.jsm"
 );
 const { Services } = ChromeUtils.import("resource://gre/modules/Services.jsm");
 const { AppConstants } = ChromeUtils.import(
   "resource://gre/modules/AppConstants.jsm"
 );
