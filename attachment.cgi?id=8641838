# HG changeset patch
# User Lin Clark <lin.w.clark@gmail.com>
# Parent  4d0dbde34f3bca5331503777e60769339f1e747a
Bug 1154363 - Use variable in console. r=bgrins

diff --git a/browser/devtools/inspector/inspector-panel.js b/browser/devtools/inspector/inspector-panel.js
--- a/browser/devtools/inspector/inspector-panel.js
+++ b/browser/devtools/inspector/inspector-panel.js
@@ -972,16 +972,35 @@ InspectorPanel.prototype = {
       let jsterm = panel.hud.jsterm;
 
       jsterm.execute("inspect($0)");
       jsterm.inputNode.focus();
     });
   },
 
   /**
+   * Use in Command Line
+   */
+  useInCommandLine: function() {
+    this._toolbox.openSplitConsole().then(() => {
+      let panel = this._toolbox.getPanel("webconsole");
+      let jsterm = panel.hud.jsterm;
+
+      let evalString = "if (temp === undefined) var temp = []; temp.push($0)"
+      let options = {
+        selectedNodeActor: this.selection.nodeFront.actorID,
+      };
+      jsterm.requestEvaluation(evalString, options).then((res) => {
+        var i = res.result - 1;
+        jsterm.setInputValue(`temp[${i}]`);
+      });
+    });
+  },
+
+  /**
    * Clear any pseudo-class locks applied to the current hierarchy.
    */
   clearPseudoClasses: function() {
     if (!this.walker) {
       return;
     }
     return this.walker.clearPseudoClassLocks().then(null, console.error);
   },
diff --git a/browser/devtools/inspector/inspector.xul b/browser/devtools/inspector/inspector.xul
--- a/browser/devtools/inspector/inspector.xul
+++ b/browser/devtools/inspector/inspector.xul
@@ -50,16 +50,19 @@
         accesskey="&inspectorCopyUniqueSelector.accesskey;"
         oncommand="inspector.copyUniqueSelector()"/>
       <menuitem id="node-menu-copyimagedatauri"
         label="&inspectorCopyImageDataUri.label;"
         oncommand="inspector.copyImageDataUri()"/>
       <menuitem id="node-menu-showdomproperties"
         label="&inspectorShowDOMProperties.label;"
         oncommand="inspector.showDOMProperties()"/>
+      <menuitem id="node-menu-useincommandline"
+        label="&inspectorUseInCommandLine.label;"
+        oncommand="inspector.useInCommandLine()"/>
       <menuitem id="node-menu-expand"
         label="&inspectorExpandNode.label;"
         oncommand="inspector.expandNode()"/>
       <menuitem id="node-menu-collapse"
         label="&inspectorCollapseNode.label;"
         oncommand="inspector.collapseNode()"/>
       <menuseparator/>
       <menuitem id="node-menu-pasteinnerhtml"
diff --git a/browser/devtools/inspector/test/browser.ini b/browser/devtools/inspector/test/browser.ini
--- a/browser/devtools/inspector/test/browser.ini
+++ b/browser/devtools/inspector/test/browser.ini
@@ -77,17 +77,18 @@ skip-if = e10s # GCLI isn't e10s compati
 [browser_inspector_initialization.js]
 [browser_inspector_inspect-object-element.js]
 [browser_inspector_invalidate.js]
 [browser_inspector_keyboard-shortcuts-copy-outerhtml.js]
 [browser_inspector_keyboard-shortcuts.js]
 [browser_inspector_menu-01-sensitivity.js]
 [browser_inspector_menu-02-copy-items.js]
 [browser_inspector_menu-03-paste-items.js]
-[browser_inspector_menu-04-other.js]
+[browser_inspector_menu-04-use-in-command-line.js]
+[browser_inspector_menu-05-other.js]
 [browser_inspector_navigation.js]
 [browser_inspector_pane-toggle-01.js]
 [browser_inspector_pane-toggle-02.js]
 [browser_inspector_pane-toggle-03.js]
 [browser_inspector_picker-stop-on-destroy.js]
 [browser_inspector_picker-stop-on-tool-change.js]
 [browser_inspector_pseudoclass-lock.js]
 [browser_inspector_pseudoclass-menu.js]
diff --git a/browser/devtools/inspector/test/browser_inspector_menu-01-sensitivity.js b/browser/devtools/inspector/test/browser_inspector_menu-01-sensitivity.js
--- a/browser/devtools/inspector/test/browser_inspector_menu-01-sensitivity.js
+++ b/browser/devtools/inspector/test/browser_inspector_menu-01-sensitivity.js
@@ -11,46 +11,50 @@ const PASTE_MENU_ITEMS = [
   "node-menu-pasteinnerhtml",
   "node-menu-pasteouterhtml",
   "node-menu-pastebefore",
   "node-menu-pasteafter",
   "node-menu-pastefirstchild",
   "node-menu-pastelastchild",
 ];
 
+const ACTIVE_ON_DOCTYPE_ITEMS = [
+  "node-menu-showdomproperties",
+  "node-menu-useincommandline"
+];
+
 const ALL_MENU_ITEMS = [
   "node-menu-edithtml",
   "node-menu-copyinner",
   "node-menu-copyouter",
   "node-menu-copyuniqueselector",
   "node-menu-copyimagedatauri",
-  "node-menu-showdomproperties",
   "node-menu-delete",
   "node-menu-pseudo-hover",
   "node-menu-pseudo-active",
   "node-menu-pseudo-focus",
   "node-menu-scrollnodeintoview",
   "node-menu-screenshotnode"
-].concat(PASTE_MENU_ITEMS);
+].concat(PASTE_MENU_ITEMS, ACTIVE_ON_DOCTYPE_ITEMS);
 
-const ITEMS_WITHOUT_SHOWDOMPROPS =
-  ALL_MENU_ITEMS.filter(item => item != "node-menu-showdomproperties");
+const INACTIVE_ON_DOCTYPE_ITEMS =
+  ALL_MENU_ITEMS.filter(item => ACTIVE_ON_DOCTYPE_ITEMS.indexOf(item) === -1);
 
 const TEST_CASES = [
   {
     desc: "doctype node with empty clipboard",
     selector: null,
-    disabled: ITEMS_WITHOUT_SHOWDOMPROPS,
+    disabled: INACTIVE_ON_DOCTYPE_ITEMS,
   },
   {
     desc: "doctype node with html on clipboard",
     clipboardData: "<p>some text</p>",
     clipboardDataType: "html",
     selector: null,
-    disabled: ITEMS_WITHOUT_SHOWDOMPROPS,
+    disabled: INACTIVE_ON_DOCTYPE_ITEMS,
   },
   {
     desc: "element node HTML on the clipboard",
     clipboardData: "<p>some text</p>",
     clipboardDataType: "html",
     disabled: ["node-menu-copyimagedatauri"],
     selector: "#sensitivity",
   },
diff --git a/browser/devtools/inspector/test/browser_inspector_menu-04-use-in-command-line.js b/browser/devtools/inspector/test/browser_inspector_menu-04-use-in-command-line.js
new file mode 100644
--- /dev/null
+++ b/browser/devtools/inspector/test/browser_inspector_menu-04-use-in-command-line.js
@@ -0,0 +1,39 @@
+/* vim: set ts=2 et sw=2 tw=80: */
+/* Any copyright is dedicated to the Public Domain.
+http://creativecommons.org/publicdomain/zero/1.0/ */
+"use strict";
+
+// Tests "Use in Command Line" menu item
+
+const TEST_URL = TEST_URL_ROOT + "doc_inspector_menu.html";
+
+add_task(function* () {
+  let { inspector, toolbox } = yield openInspectorForURL(TEST_URL);
+
+  yield testUseInCommandLine();
+
+  function* testUseInCommandLine() {
+    info("Testing 'Use in Command Line' menu item.");
+    let useInCommandLineNode = inspector.panelDoc.getElementById("node-menu-useincommandline");
+    ok(useInCommandLineNode, "the popup menu has a use in command line item");
+
+    var consoleOpened = toolbox.once("webconsole-ready");
+
+    dispatchCommandEvent(useInCommandLineNode);
+    yield consoleOpened;
+
+    ok(toolbox.splitConsole, "Split console is shown.");
+
+    todo(false, "Verify that temp variable has been added and $0 pushed in.");
+
+    EventUtils.sendKey("ESCAPE", toolbox.frame.contentWindow);
+  }
+
+  function dispatchCommandEvent(node) {
+    info("Dispatching command event on " + node);
+    let commandEvent = document.createEvent("XULCommandEvent");
+    commandEvent.initCommandEvent("command", true, true, window, 0, false, false,
+                                  false, false, null);
+    node.dispatchEvent(commandEvent);
+  }
+});
diff --git a/browser/devtools/inspector/test/browser_inspector_menu-04-other.js b/browser/devtools/inspector/test/browser_inspector_menu-05-other.js
rename from browser/devtools/inspector/test/browser_inspector_menu-04-other.js
rename to browser/devtools/inspector/test/browser_inspector_menu-05-other.js
diff --git a/browser/locales/en-US/chrome/browser/devtools/inspector.dtd b/browser/locales/en-US/chrome/browser/devtools/inspector.dtd
--- a/browser/locales/en-US/chrome/browser/devtools/inspector.dtd
+++ b/browser/locales/en-US/chrome/browser/devtools/inspector.dtd
@@ -100,16 +100,22 @@
 <!ENTITY inspectorCopyImageDataUri.label       "Copy Image Data-URL">
 
 <!-- LOCALIZATION NOTE (inspectorShowDOMProperties.label): This is the label
      shown in the inspector contextual-menu for the item that lets users see
      the DOM properties of the current node. When triggered, this item
      opens the split Console and displays the properties in its side panel. -->
 <!ENTITY inspectorShowDOMProperties.label       "Show DOM Properties">
 
+<!-- LOCALIZATION NOTE (inspectorUseInCommandLine.label): This is the label
+     shown in the inspector contextual-menu for the item that outputs a
+     variable for the current node to the console. When triggered,
+     this item opens the split Console. -->
+<!ENTITY inspectorUseInCommandLine.label       "Use in Command Line">
+
 <!-- LOCALIZATION NOTE (inspectorExpandNode.label): This is the label
      shown in the inspector contextual-menu for recursively expanding
      mark-up elements -->
 <!ENTITY inspectorExpandNode.label       "Expand All">
 
 <!-- LOCALIZATION NOTE (inspectorCollapseNode.label): This is the label
      shown in the inspector contextual-menu for recursively collapsing
      mark-up elements -->
