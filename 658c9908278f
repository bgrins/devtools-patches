
# HG changeset patch
# User Brendan Dahl <bdahl@mozilla.com>
# Date 1539724667 25200
# Node ID 658c9908278f14d0f75a0e660d2e1fafa713efad
# Parent  32c15990b7a9b46336f576fc9f3d7254bf9df513
Delay XML layout.

diff --git a/browser/base/content/browser.xul b/browser/base/content/browser.xul
--- a/browser/base/content/browser.xul
+++ b/browser/base/content/browser.xul
@@ -102,38 +102,33 @@ xmlns="http://www.w3.org/1999/xhtml"
   window.onunload = gBrowserInit.onUnload.bind(gBrowserInit);
   window.onclose = WindowIsClosing;
 
 #ifdef BROWSER_XHTML
   window.addEventListener("readystatechange", () => {
     // We initially hide the window to prevent layouts during parse. This lets us
     // avoid accidental XBL construction and better match browser.xul (see Bug 1497975).
     gBrowserInit.onBeforeInitialXULLayout();
-    document.querySelector("#xul-namespace-wrapper").removeAttribute("hidden");
-  }, { once: true, capture: true });
-  window.addEventListener("DOMContentLoaded", () => {
-    gBrowserInit.onDOMContentLoaded();
   }, { once: true, capture: true });
 #else
   window.addEventListener("MozBeforeInitialXULLayout",
     gBrowserInit.onBeforeInitialXULLayout.bind(gBrowserInit), { once: true });
+#endif
   // The listener of DOMContentLoaded must be set on window, rather than
   // document, because the window can go away before the event is fired.
   // In that case, we don't want to initialize anything, otherwise we
   // may be leaking things because they will never be destroyed after.
   window.addEventListener("DOMContentLoaded",
     gBrowserInit.onDOMContentLoaded.bind(gBrowserInit), { once: true });
-#endif
 </script>
 
 #ifdef BROWSER_XHTML
 </head>
 <body>
 <vbox id="xul-namespace-wrapper"
-      hidden="true"
       xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
 #endif
 
 # All sets except for popupsets (commands, keys, and stringbundles)
 # *must* go into the browser-sets.inc file so that they can be shared with other
 # top level windows in macWindow.inc.xul.
 #include browser-sets.inc
 
diff --git a/dom/xml/nsXMLContentSink.cpp b/dom/xml/nsXMLContentSink.cpp
--- a/dom/xml/nsXMLContentSink.cpp
+++ b/dom/xml/nsXMLContentSink.cpp
@@ -1089,17 +1089,17 @@ nsXMLContentSink::HandleStartElement(con
           new nsDocElementCreatedNotificationRunner(mDocument));
 
       if (aInterruptable && NS_SUCCEEDED(result) && mParser && !mParser->IsParserEnabled()) {
         return NS_ERROR_HTMLPARSER_BLOCK;
       }
     } else if (!mCurrentHead) {
       // This isn't the root and we're not inside an XHTML <head>.
       // Might need to start layout
-      MaybeStartLayout(false);
+      // MaybeStartLayout(false);
     }
   }
 
   return aInterruptable && NS_SUCCEEDED(result) ? DidProcessATokenImpl() :
                                                   result;
 }
 
 NS_IMETHODIMP
@@ -1172,17 +1172,17 @@ nsXMLContentSink::HandleEndElement(const
   }
 
   if (mDocElement == content) {
     // XXXbz for roots that don't want to be appended on open, we
     // probably need to deal here.... (and stop appending them on open).
     mState = eXMLContentSinkState_InEpilog;
 
     // We might have had no occasion to start layout yet.  Do so now.
-    MaybeStartLayout(false);
+    // MaybeStartLayout(false);
   }
 
   DidAddContent();
 
   if (content->IsSVGElement(nsGkAtoms::svg)) {
     FlushTags();
     nsCOMPtr<nsIRunnable> event = new nsHtml5SVGLoadDispatcher(content);
     if (NS_FAILED(content->OwnerDoc()->Dispatch(TaskCategory::Other,
