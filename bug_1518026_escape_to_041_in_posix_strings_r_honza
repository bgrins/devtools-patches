# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Date 1547510278 28800
#      Mon Jan 14 15:57:58 2019 -0800
# Node ID c8412035af79344126ae08923bc313ae3717b25f
# Parent  3aa256c255f664c500714c34a3b9e353e545d196
Bug 1518026 - Escape '!' to '\041' in posix strings ($'...');r=Honza

Differential Revision: https://phabricator.services.mozilla.com/D16515

diff --git a/devtools/client/netmonitor/test/browser_net_curl-utils.js b/devtools/client/netmonitor/test/browser_net_curl-utils.js
--- a/devtools/client/netmonitor/test/browser_net_curl-utils.js
+++ b/devtools/client/netmonitor/test/browser_net_curl-utils.js
@@ -196,16 +196,20 @@ function testEscapeStringPosix() {
   is(CurlUtils.escapeStringPosix(surroundedWithQuotes), "'A simple string'",
     "The string should be surrounded with single quotes.");
 
   const singleQuotes = "It's unusual to put crickets in your coffee.";
   is(CurlUtils.escapeStringPosix(singleQuotes),
     "$'It\\'s unusual to put crickets in your coffee.'",
     "Single quotes should be escaped.");
 
+  const escapeChar = "\'!ls:q:gs|ls|;ping 8.8.8.8;|";
+  is(CurlUtils.escapeStringPosix(escapeChar), "$'\\'\\041ls:q:gs|ls|;ping 8.8.8.8;|'",
+    "'!' should be escaped.");
+
   const newLines = "Line 1\r\nLine 2\u000d\u000ALine3";
   is(CurlUtils.escapeStringPosix(newLines), "$'Line 1\\r\\nLine 2\\r\\nLine3'",
     "Newlines should be escaped.");
 
   const controlChars = "\u0007 \u0009 \u000C \u001B";
   is(CurlUtils.escapeStringPosix(controlChars), "$'\\x07 \\x09 \\x0c \\x1b'",
     "Control characters should be escaped.");
 
diff --git a/devtools/client/shared/curl.js b/devtools/client/shared/curl.js
--- a/devtools/client/shared/curl.js
+++ b/devtools/client/shared/curl.js
@@ -357,16 +357,17 @@ const CurlUtils = {
     }
 
     if (/[^\x20-\x7E]|\'/.test(str)) {
       // Use ANSI-C quoting syntax.
       return "$\'" + str.replace(/\\/g, "\\\\")
                         .replace(/\'/g, "\\\'")
                         .replace(/\n/g, "\\n")
                         .replace(/\r/g, "\\r")
+                        .replace(/!/g, "\\041")
                         .replace(/[^\x20-\x7E]/g, escapeCharacter) + "'";
     }
 
     // Use single quote syntax.
     return "'" + str + "'";
   },
 
   /**
