# HG changeset patch
# User Brian Grinstead <bgrinstead@mozilla.com>
# Parent  5d3dad5427ab1f72d530c8363cddb02b8bfa6d26
Bug 1364150 - Debounce message adding;r=Honza

diff --git a/devtools/client/webconsole/new-console-output/new-console-output-wrapper.js b/devtools/client/webconsole/new-console-output/new-console-output-wrapper.js
--- a/devtools/client/webconsole/new-console-output/new-console-output-wrapper.js
+++ b/devtools/client/webconsole/new-console-output/new-console-output-wrapper.js
@@ -13,17 +13,16 @@ const { createContextMenu } = require("d
 const { configureStore } = require("devtools/client/webconsole/new-console-output/store");
 
 const EventEmitter = require("devtools/shared/event-emitter");
 const ConsoleOutput = React.createFactory(require("devtools/client/webconsole/new-console-output/components/console-output"));
 const FilterBar = React.createFactory(require("devtools/client/webconsole/new-console-output/components/filter-bar"));
 
 const store = configureStore();
 let queuedActions = [];
-let throttledDispatchTimeout = false;
 
 function NewConsoleOutputWrapper(parentNode, jsterm, toolbox, owner, document) {
   EventEmitter.decorate(this);
 
   this.parentNode = parentNode;
   this.jsterm = jsterm;
   this.toolbox = toolbox;
   this.owner = owner;
@@ -192,21 +191,38 @@ NewConsoleOutputWrapper.prototype = {
   },
 
   // Should be used for test purpose only.
   getStore: function () {
     return store;
   }
 };
 
+function debounce(cb, wait, maxWait) {
+  let timeout, maxTimeout;
+  let doFunction = () => {
+    clearTimeout(timeout);
+    clearTimeout(maxTimeout);
+    timeout = maxTimeout = null;
+    cb();
+  };
+
+  return () => {
+    clearTimeout(timeout);
+    timeout = setTimeout(doFunction, wait);
+    if (!maxTimeout) {
+      maxTimeout = setTimeout(doFunction, maxWait);
+    }
+  };
+};
+
+let throttledAdd = debounce(function() {
+  store.dispatch(actions.batchActions(queuedActions));
+  queuedActions = [];
+}, 16, 500);
+
 function batchedMessageAdd(action) {
   queuedActions.push(action);
-  if (!throttledDispatchTimeout) {
-    throttledDispatchTimeout = setTimeout(() => {
-      store.dispatch(actions.batchActions(queuedActions));
-      queuedActions = [];
-      throttledDispatchTimeout = null;
-    }, 50);
-  }
+  throttledAdd();
 }
 
 // Exports from this module
 module.exports = NewConsoleOutputWrapper;
